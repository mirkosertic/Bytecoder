(module $bytecoder
    (type $t0 (func (param i32) (result i32)))
    (type $runtimetype (sub (struct)))
    (type $t2 (func (param i32) (param i32) (result i32)))
    (type $t3 (func (param i64) (param i64) (result i32)))
    (type $t4 (func (param f32) (param f32) (result i32)))
    (type $t5 (func (param f64) (param f64) (result i32)))
    (type $t6 (func))
    (type $t7 (array (mut i32)))
    (type $java$lang$Object (sub $runtimetype (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$lang$Class_rtt (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $java$lang$Object_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t11 (func (result (ref $java$lang$Object_rtt))))
    (type $java$nio$ByteOrder (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $name (mut (ref null $java$lang$Object))))))
    (type $java$nio$ByteOrder_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $BIG_ENDIAN (mut (ref null $java$lang$Object))) (field $LITTLE_ENDIAN (mut (ref null $java$lang$Object))) (field $NATIVE_ORDER (mut (ref null $java$lang$Object))))))
    (type $t14 (func (result (ref $java$nio$ByteOrder_rtt))))
    (type $jdk$internal$misc$VM (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $jdk$internal$misc$VM_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $lock (mut (ref null $java$lang$Object))) (field $directMemory (mut i64)) (field $initLevel (mut i32)) (field $savedProps (mut (ref null $java$lang$Object))))))
    (type $t17 (func (result (ref $jdk$internal$misc$VM_rtt))))
    (type $java$util$Dictionary (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$util$Dictionary_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t20 (func (result (ref $java$util$Dictionary_rtt))))
    (type $java$lang$Runnable (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$lang$Runnable_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t23 (func (result (ref $java$lang$Runnable_rtt))))
    (type $jdk$internal$access$JavaIOPrintStreamAccess (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $jdk$internal$access$JavaIOPrintStreamAccess_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t26 (func (result (ref $jdk$internal$access$JavaIOPrintStreamAccess_rtt))))
    (type $de$mirkosertic$bytecoder$api$OpaqueReferenceType (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $de$mirkosertic$bytecoder$api$OpaqueReferenceType_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t29 (func (result (ref $de$mirkosertic$bytecoder$api$OpaqueReferenceType_rtt))))
    (type $java$nio$charset$CharsetEncoder (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $malformedInputAction (mut (ref null $java$lang$Object))) (field $unmappableCharacterAction (mut (ref null $java$lang$Object))) (field $state (mut i32)) (field $cachedDecoder (mut (ref null $java$lang$Object))) (field $charset (mut (ref null $java$lang$Object))) (field $replacement (mut (ref null $java$lang$Object))) (field $averageBytesPerChar (mut f32)) (field $maxBytesPerChar (mut f32)))))
    (type $java$nio$charset$CharsetEncoder_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $$assertionsDisabled (mut i32)) (field $stateNames (mut (ref null $java$lang$Object))))))
    (type $t32 (func (result (ref $java$nio$charset$CharsetEncoder_rtt))))
    (type $de$mirkosertic$bytecoder$classlib$java$lang$TMath (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $de$mirkosertic$bytecoder$classlib$java$lang$TMath_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $$assertionsDisabled (mut i32)))))
    (type $t35 (func (result (ref $de$mirkosertic$bytecoder$classlib$java$lang$TMath_rtt))))
    (type $java$lang$ThreadGroup (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $name (mut (ref null $java$lang$Object))) (field $parent (mut (ref null $java$lang$Object))))))
    (type $java$lang$ThreadGroup_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $SYSTEM (mut (ref null $java$lang$Object))))))
    (type $t38 (func (result (ref $java$lang$ThreadGroup_rtt))))
    (type $java$lang$Readable (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$lang$Readable_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t41 (func (result (ref $java$lang$Readable_rtt))))
    (type $java$util$ImmutableCollections (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$util$ImmutableCollections_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $$assertionsDisabled (mut i32)) (field $SALT32L (mut i64)) (field $REVERSE (mut i32)) (field $archivedObjects (mut (ref null $java$lang$Object))) (field $EMPTY (mut (ref null $java$lang$Object))) (field $EMPTY_LIST (mut (ref null $java$lang$Object))) (field $EMPTY_LIST_NULLS (mut (ref null $java$lang$Object))) (field $EMPTY_SET (mut (ref null $java$lang$Object))) (field $EMPTY_MAP (mut (ref null $java$lang$Object))))))
    (type $t44 (func (result (ref $java$util$ImmutableCollections_rtt))))
    (type $java$lang$System (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$lang$System_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $PROPERTIES (mut (ref null $java$lang$Object))) (field $in (mut (ref null $java$lang$Object))) (field $out (mut (ref null $java$lang$Object))) (field $err (mut (ref null $java$lang$Object))))))
    (type $t47 (func (result (ref $java$lang$System_rtt))))
    (type $jdk$internal$foreign$MemorySessionImpl (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $jdk$internal$foreign$MemorySessionImpl_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t50 (func (result (ref $jdk$internal$foreign$MemorySessionImpl_rtt))))
    (type $java$lang$invoke$CallSite (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$lang$invoke$CallSite_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t53 (func (result (ref $java$lang$invoke$CallSite_rtt))))
    (type $java$util$Map (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$util$Map_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t56 (func (result (ref $java$util$Map_rtt))))
    (type $java$util$function$Supplier (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$util$function$Supplier_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t59 (func (result (ref $java$util$function$Supplier_rtt))))
    (type $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $name (mut (ref null $java$lang$Object))) (field $parent (mut (ref null $java$lang$Object))))))
    (type $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $SYSTEM (mut (ref null $java$lang$Object))))))
    (type $t62 (func (result (ref $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup_rtt))))
    (type $java$lang$AbstractStringBuilder (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$lang$AbstractStringBuilder_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t65 (func (result (ref $java$lang$AbstractStringBuilder_rtt))))
    (type $java$util$concurrent$locks$Lock (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$util$concurrent$locks$Lock_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t68 (func (result (ref $java$util$concurrent$locks$Lock_rtt))))
    (type $java$lang$Character (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$lang$Character_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t71 (func (result (ref $java$lang$Character_rtt))))
    (type $java$lang$ref$Reference (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $referent (mut (ref null $java$lang$Object))))))
    (type $java$lang$ref$Reference_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t74 (func (result (ref $java$lang$ref$Reference_rtt))))
    (type $de$mirkosertic$bytecoder$classlib$VM (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $de$mirkosertic$bytecoder$classlib$VM_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $SYSTEM_LOADER (mut (ref null $java$lang$Object))))))
    (type $t77 (func (result (ref $de$mirkosertic$bytecoder$classlib$VM_rtt))))
    (type $java$lang$invoke$MethodHandle (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$lang$invoke$MethodHandle_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t80 (func (result (ref $java$lang$invoke$MethodHandle_rtt))))
    (type $java$nio$charset$CodingErrorAction (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $name (mut (ref null $java$lang$Object))))))
    (type $java$nio$charset$CodingErrorAction_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $IGNORE (mut (ref null $java$lang$Object))) (field $REPLACE (mut (ref null $java$lang$Object))) (field $REPORT (mut (ref null $java$lang$Object))))))
    (type $t83 (func (result (ref $java$nio$charset$CodingErrorAction_rtt))))
    (type $java$util$Iterator (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$util$Iterator_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t86 (func (result (ref $java$util$Iterator_rtt))))
    (type $java$lang$Iterable (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$lang$Iterable_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t89 (func (result (ref $java$lang$Iterable_rtt))))
    (type $java$lang$Math (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$lang$Math_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $$assertionsDisabled (mut i32)))))
    (type $t92 (func (result (ref $java$lang$Math_rtt))))
    (type $jdk$internal$util$Preconditions (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $jdk$internal$util$Preconditions_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $SIOOBE_FORMATTER (mut (ref null $java$lang$Object))) (field $AIOOBE_FORMATTER (mut (ref null $java$lang$Object))) (field $IOOBE_FORMATTER (mut (ref null $java$lang$Object))))))
    (type $t95 (func (result (ref $jdk$internal$util$Preconditions_rtt))))
    (type $java$nio$Buffer (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $mark (mut i32)) (field $position (mut i32)) (field $capacity (mut i32)) (field $segment (mut (ref null $java$lang$Object))) (field $limit (mut i32)) (field $address (mut i64)))))
    (type $java$nio$Buffer_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $$assertionsDisabled (mut i32)) (field $UNSAFE (mut (ref null $java$lang$Object))) (field $SCOPED_MEMORY_ACCESS (mut (ref null $java$lang$Object))))))
    (type $t98 (func (result (ref $java$nio$Buffer_rtt))))
    (type $de$mirkosertic$bytecoder$classlib$java$lang$ref$TReference (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $referent (mut (ref null $java$lang$Object))))))
    (type $de$mirkosertic$bytecoder$classlib$java$lang$ref$TReference_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t101 (func (result (ref $de$mirkosertic$bytecoder$classlib$java$lang$ref$TReference_rtt))))
    (type $java$util$RandomAccess (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$util$RandomAccess_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t104 (func (result (ref $java$util$RandomAccess_rtt))))
    (type $java$io$FileDescriptor (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $fd (mut i32)))))
    (type $java$io$FileDescriptor_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $in (mut (ref null $java$lang$Object))) (field $out (mut (ref null $java$lang$Object))) (field $err (mut (ref null $java$lang$Object))))))
    (type $t107 (func (result (ref $java$io$FileDescriptor_rtt))))
    (type $java$io$Flushable (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$io$Flushable_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t110 (func (result (ref $java$io$Flushable_rtt))))
    (type $java$nio$charset$CharsetDecoder (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $malformedInputAction (mut (ref null $java$lang$Object))) (field $unmappableCharacterAction (mut (ref null $java$lang$Object))) (field $maxCharsPerByte (mut f32)) (field $state (mut i32)) (field $replacement (mut (ref null $java$lang$Object))) (field $charset (mut (ref null $java$lang$Object))) (field $averageCharsPerByte (mut f32)))))
    (type $java$nio$charset$CharsetDecoder_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $$assertionsDisabled (mut i32)) (field $stateNames (mut (ref null $java$lang$Object))))))
    (type $t113 (func (result (ref $java$nio$charset$CharsetDecoder_rtt))))
    (type $java$lang$CharSequence (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$lang$CharSequence_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t116 (func (result (ref $java$lang$CharSequence_rtt))))
    (type $java$lang$Class (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $t118 (func (result (ref $java$lang$Class_rtt))))
    (type $java$util$function$Function (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$util$function$Function_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t121 (func (result (ref $java$util$function$Function_rtt))))
    (type $java$util$Objects (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$util$Objects_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t124 (func (result (ref $java$util$Objects_rtt))))
    (type $de$mirkosertic$bytecoder$api$vue$Vue (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $de$mirkosertic$bytecoder$api$vue$Vue_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t127 (func (result (ref $de$mirkosertic$bytecoder$api$vue$Vue_rtt))))
    (type $java$nio$BufferMismatch (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$nio$BufferMismatch_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $SCOPED_MEMORY_ACCESS (mut (ref null $java$lang$Object))))))
    (type $t130 (func (result (ref $java$nio$BufferMismatch_rtt))))
    (type $java$nio$charset$CoderResult (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $type (mut i32)) (field $length (mut i32)))))
    (type $java$nio$charset$CoderResult_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $$assertionsDisabled (mut i32)) (field $names (mut (ref null $java$lang$Object))) (field $UNDERFLOW (mut (ref null $java$lang$Object))) (field $OVERFLOW (mut (ref null $java$lang$Object))) (field $malformed4 (mut (ref null $java$lang$Object))) (field $unmappable4 (mut (ref null $java$lang$Object))))))
    (type $t133 (func (result (ref $java$nio$charset$CoderResult_rtt))))
    (type $java$nio$charset$CoderResult$Cache (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $unmappable (mut (ref null $java$lang$Object))) (field $malformed (mut (ref null $java$lang$Object))))))
    (type $java$nio$charset$CoderResult$Cache_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $INSTANCE (mut (ref null $java$lang$Object))))))
    (type $t136 (func (result (ref $java$nio$charset$CoderResult$Cache_rtt))))
    (type $java$lang$Appendable (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$lang$Appendable_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t139 (func (result (ref $java$lang$Appendable_rtt))))
    (type $jdk$internal$access$SharedSecrets (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $jdk$internal$access$SharedSecrets_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $javaNioAccess (mut (ref null $java$lang$Object))) (field $javaIOPrintStreamAccess (mut (ref null $java$lang$Object))))))
    (type $t142 (func (result (ref $jdk$internal$access$SharedSecrets_rtt))))
    (type $java$util$Arrays (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$util$Arrays_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $$assertionsDisabled (mut i32)))))
    (type $t145 (func (result (ref $java$util$Arrays_rtt))))
    (type $java$lang$Void (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$lang$Void_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $TYPE (mut (ref null $java$lang$Object))))))
    (type $t148 (func (result (ref $java$lang$Void_rtt))))
    (type $de$mirkosertic$bytecoder$api$Callback (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $de$mirkosertic$bytecoder$api$Callback_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t151 (func (result (ref $de$mirkosertic$bytecoder$api$Callback_rtt))))
    (type $java$util$HashMap$HashIterator (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $this$0 (mut (ref null $java$lang$Object))) (field $expectedModCount (mut i32)) (field $next (mut (ref null $java$lang$Object))) (field $current (mut (ref null $java$lang$Object))) (field $index (mut i32)))))
    (type $java$util$HashMap$HashIterator_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t154 (func (result (ref $java$util$HashMap$HashIterator_rtt))))
    (type $de$mirkosertic$bytecoder$classlib$Array (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $de$mirkosertic$bytecoder$classlib$Array_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t157 (func (result (ref $de$mirkosertic$bytecoder$classlib$Array_rtt))))
    (type $jdk$internal$misc$ScopedMemoryAccess (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $jdk$internal$misc$ScopedMemoryAccess_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $UNSAFE (mut (ref null $java$lang$Object))) (field $theScopedMemoryAccess (mut (ref null $java$lang$Object))))))
    (type $t160 (func (result (ref $jdk$internal$misc$ScopedMemoryAccess_rtt))))
    (type $java$lang$Comparable (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$lang$Comparable_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t163 (func (result (ref $java$lang$Comparable_rtt))))
    (type $java$lang$reflect$Type (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$lang$reflect$Type_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t166 (func (result (ref $java$lang$reflect$Type_rtt))))
    (type $java$lang$AutoCloseable (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$lang$AutoCloseable_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t169 (func (result (ref $java$lang$AutoCloseable_rtt))))
    (type $java$io$Serializable (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$io$Serializable_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t172 (func (result (ref $java$io$Serializable_rtt))))
    (type $jdk$internal$util$ArraysSupport (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $jdk$internal$util$ArraysSupport_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $U (mut (ref null $java$lang$Object))) (field $BIG_ENDIAN (mut i32)) (field $LOG2_ARRAY_BOOLEAN_INDEX_SCALE (mut i32)) (field $LOG2_ARRAY_BYTE_INDEX_SCALE (mut i32)) (field $LOG2_ARRAY_CHAR_INDEX_SCALE (mut i32)) (field $LOG2_ARRAY_SHORT_INDEX_SCALE (mut i32)) (field $LOG2_ARRAY_INT_INDEX_SCALE (mut i32)) (field $LOG2_ARRAY_LONG_INDEX_SCALE (mut i32)) (field $LOG2_ARRAY_FLOAT_INDEX_SCALE (mut i32)) (field $LOG2_ARRAY_DOUBLE_INDEX_SCALE (mut i32)) (field $LOG2_BYTE_BIT_SIZE (mut i32)))))
    (type $t175 (func (result (ref $jdk$internal$util$ArraysSupport_rtt))))
    (type $jdk$internal$misc$InternalLock (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $lock (mut (ref null $java$lang$Object))))))
    (type $jdk$internal$misc$InternalLock_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $CAN_USE_INTERNAL_LOCK (mut i32)))))
    (type $t178 (func (result (ref $jdk$internal$misc$InternalLock_rtt))))
    (type $java$util$Map$Entry (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$util$Map$Entry_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t181 (func (result (ref $java$util$Map$Entry_rtt))))
    (type $de$mirkosertic$bytecoder$integrationtest$VueDemo (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $de$mirkosertic$bytecoder$integrationtest$VueDemo_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t184 (func (result (ref $de$mirkosertic$bytecoder$integrationtest$VueDemo_rtt))))
    (type $jdk$internal$misc$CDS (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $jdk$internal$misc$CDS_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $isDumpingClassList (mut i32)) (field $isDumpingArchive (mut i32)) (field $isSharingEnabled (mut i32)) (field $excludeFlags (mut (ref null $java$lang$Object))))))
    (type $t187 (func (result (ref $jdk$internal$misc$CDS_rtt))))
    (type $jdk$internal$misc$Unsafe (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $jdk$internal$misc$Unsafe_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $INSTANCE (mut (ref null $java$lang$Object))) (field $ARRAY_BOOLEAN_INDEX_SCALE (mut i32)) (field $ARRAY_BYTE_INDEX_SCALE (mut i32)) (field $ARRAY_CHAR_INDEX_SCALE (mut i32)) (field $ARRAY_SHORT_INDEX_SCALE (mut i32)) (field $ARRAY_INT_INDEX_SCALE (mut i32)) (field $ARRAY_LONG_INDEX_SCALE (mut i32)) (field $ARRAY_FLOAT_INDEX_SCALE (mut i32)) (field $ARRAY_DOUBLE_INDEX_SCALE (mut i32)))))
    (type $t190 (func (result (ref $jdk$internal$misc$Unsafe_rtt))))
    (type $java$util$function$BiFunction (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$util$function$BiFunction_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t193 (func (result (ref $java$util$function$BiFunction_rtt))))
    (type $java$lang$Throwable (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $message (mut (ref null $java$lang$Object))) (field $cause (mut (ref null $java$lang$Object))))))
    (type $java$lang$Throwable_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t196 (func (result (ref $java$lang$Throwable_rtt))))
    (type $java$util$Collections (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$util$Collections_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $EMPTY_SET (mut (ref null $java$lang$Object))) (field $EMPTY_LIST (mut (ref null $java$lang$Object))) (field $EMPTY_MAP (mut (ref null $java$lang$Object))))))
    (type $t199 (func (result (ref $java$util$Collections_rtt))))
    (type $java$lang$ClassLoader (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$lang$ClassLoader_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t202 (func (result (ref $java$lang$ClassLoader_rtt))))
    (type $java$lang$Cloneable (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$lang$Cloneable_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t205 (func (result (ref $java$lang$Cloneable_rtt))))
    (type $jdk$internal$access$JavaNioAccess (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $jdk$internal$access$JavaNioAccess_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t208 (func (result (ref $jdk$internal$access$JavaNioAccess_rtt))))
    (type $java$nio$CharBuffer (sub $java$nio$Buffer (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $mark (mut i32)) (field $position (mut i32)) (field $capacity (mut i32)) (field $segment (mut (ref null $java$lang$Object))) (field $limit (mut i32)) (field $address (mut i64)) (field $hb (mut (ref null $java$lang$Object))) (field $offset (mut i32)))))
    (type $java$nio$CharBuffer_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $$assertionsDisabled (mut i32)) (field $ARRAY_BASE_OFFSET (mut i64)))))
    (type $t211 (func (result (ref $java$nio$CharBuffer_rtt))))
    (type $jdk$internal$util$Preconditions$2 (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $jdk$internal$util$Preconditions$2_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t214 (func (result (ref $jdk$internal$util$Preconditions$2_rtt))))
    (type $java$nio$charset$Charset (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $canonicalName (mut (ref null $java$lang$Object))) (field $aliases (mut (ref null $java$lang$Object))))))
    (type $java$nio$charset$Charset_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $defaultCharset (mut (ref null $java$lang$Object))))))
    (type $t217 (func (result (ref $java$nio$charset$Charset_rtt))))
    (type $java$util$HashMap$EntryIterator (sub $java$util$HashMap$HashIterator (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $this$0 (mut (ref null $java$lang$Object))) (field $expectedModCount (mut i32)) (field $next (mut (ref null $java$lang$Object))) (field $current (mut (ref null $java$lang$Object))) (field $index (mut i32)))))
    (type $java$util$HashMap$EntryIterator_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t220 (func (result (ref $java$util$HashMap$EntryIterator_rtt))))
    (type $java$util$Collection (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$util$Collection_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t223 (func (result (ref $java$util$Collection_rtt))))
    (type $java$io$Closeable (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$io$Closeable_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t226 (func (result (ref $java$io$Closeable_rtt))))
    (type $java$util$ImmutableCollections$MapN$MapNIterator (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $this$0 (mut (ref null $java$lang$Object))) (field $remaining (mut i32)) (field $idx (mut i32)))))
    (type $java$util$ImmutableCollections$MapN$MapNIterator_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t229 (func (result (ref $java$util$ImmutableCollections$MapN$MapNIterator_rtt))))
    (type $java$lang$String (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$lang$String_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t232 (func (result (ref $java$lang$String_rtt))))
    (type $java$lang$Thread (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $threadGroup (mut (ref null $java$lang$Object))) (field $runnable (mut (ref null $java$lang$Object))) (field $name (mut (ref null $java$lang$Object))))))
    (type $java$lang$Thread_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $MAIN_THREAD (mut (ref null $java$lang$Object))))))
    (type $t235 (func (result (ref $java$lang$Thread_rtt))))
    (type $de$mirkosertic$bytecoder$api$vue$VueEventListener (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $de$mirkosertic$bytecoder$api$vue$VueEventListener_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t238 (func (result (ref $de$mirkosertic$bytecoder$api$vue$VueEventListener_rtt))))
    (type $jdk$internal$util$Preconditions$1 (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $jdk$internal$util$Preconditions$1_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t241 (func (result (ref $jdk$internal$util$Preconditions$1_rtt))))
    (type $de$mirkosertic$bytecoder$api$web$Event (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $de$mirkosertic$bytecoder$api$web$Event_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t244 (func (result (ref $de$mirkosertic$bytecoder$api$web$Event_rtt))))
    (type $java$io$PrintStream$1 (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$io$PrintStream$1_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t247 (func (result (ref $java$io$PrintStream$1_rtt))))
    (type $java$util$HashMap$Node (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $next (mut (ref null $java$lang$Object))) (field $hash (mut i32)) (field $key (mut (ref null $java$lang$Object))) (field $value (mut (ref null $java$lang$Object))))))
    (type $java$util$HashMap$Node_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t250 (func (result (ref $java$util$HashMap$Node_rtt))))
    (type $java$lang$StringBuilder (sub $java$lang$AbstractStringBuilder (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$lang$StringBuilder_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t253 (func (result (ref $java$lang$StringBuilder_rtt))))
    (type $java$util$AbstractMap (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$util$AbstractMap_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t256 (func (result (ref $java$util$AbstractMap_rtt))))
    (type $java$util$concurrent$ConcurrentMap (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$util$concurrent$ConcurrentMap_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t259 (func (result (ref $java$util$concurrent$ConcurrentMap_rtt))))
    (type $de$mirkosertic$bytecoder$api$vue$VueData (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $de$mirkosertic$bytecoder$api$vue$VueData_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t262 (func (result (ref $de$mirkosertic$bytecoder$api$vue$VueData_rtt))))
    (type $java$lang$Number (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$lang$Number_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t265 (func (result (ref $java$lang$Number_rtt))))
    (type $java$util$Collections$EmptyIterator (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$util$Collections$EmptyIterator_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $EMPTY_ITERATOR (mut (ref null $java$lang$Object))))))
    (type $t268 (func (result (ref $java$util$Collections$EmptyIterator_rtt))))
    (type $java$util$Hashtable (sub $java$util$Dictionary (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $modCount (mut i32)))))
    (type $java$util$Hashtable_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t271 (func (result (ref $java$util$Hashtable_rtt))))
    (type $java$lang$reflect$ParameterizedType (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$lang$reflect$ParameterizedType_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t274 (func (result (ref $java$lang$reflect$ParameterizedType_rtt))))
    (type $java$util$ImmutableCollections$SetN$SetNIterator (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $this$0 (mut (ref null $java$lang$Object))) (field $remaining (mut i32)) (field $idx (mut i32)))))
    (type $java$util$ImmutableCollections$SetN$SetNIterator_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t277 (func (result (ref $java$util$ImmutableCollections$SetN$SetNIterator_rtt))))
    (type $de$mirkosertic$bytecoder$classlib$VM$1 (sub $java$lang$ClassLoader (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $de$mirkosertic$bytecoder$classlib$VM$1_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t280 (func (result (ref $de$mirkosertic$bytecoder$classlib$VM$1_rtt))))
    (type $java$lang$ref$WeakReference (sub $java$lang$ref$Reference (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $referent (mut (ref null $java$lang$Object))))))
    (type $java$lang$ref$WeakReference_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t283 (func (result (ref $java$lang$ref$WeakReference_rtt))))
    (type $jdk$internal$util$Preconditions$4 (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $val$f (mut (ref null $java$lang$Object))))))
    (type $jdk$internal$util$Preconditions$4_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t286 (func (result (ref $jdk$internal$util$Preconditions$4_rtt))))
    (type $java$util$KeyValueHolder (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $key (mut (ref null $java$lang$Object))) (field $value (mut (ref null $java$lang$Object))))))
    (type $java$util$KeyValueHolder_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t289 (func (result (ref $java$util$KeyValueHolder_rtt))))
    (type $java$lang$Exception (sub $java$lang$Throwable (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $message (mut (ref null $java$lang$Object))) (field $cause (mut (ref null $java$lang$Object))))))
    (type $java$lang$Exception_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t292 (func (result (ref $java$lang$Exception_rtt))))
    (type $de$mirkosertic$bytecoder$classlib$BytecoderCharsetEncoder (sub $java$nio$charset$CharsetEncoder (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $malformedInputAction (mut (ref null $java$lang$Object))) (field $unmappableCharacterAction (mut (ref null $java$lang$Object))) (field $state (mut i32)) (field $cachedDecoder (mut (ref null $java$lang$Object))) (field $charset (mut (ref null $java$lang$Object))) (field $replacement (mut (ref null $java$lang$Object))) (field $averageBytesPerChar (mut f32)) (field $maxBytesPerChar (mut f32)))))
    (type $de$mirkosertic$bytecoder$classlib$BytecoderCharsetEncoder_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t295 (func (result (ref $de$mirkosertic$bytecoder$classlib$BytecoderCharsetEncoder_rtt))))
    (type $java$nio$Buffer$1 (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$nio$Buffer$1_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t298 (func (result (ref $java$nio$Buffer$1_rtt))))
    (type $jdk$internal$util$Preconditions$3 (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $jdk$internal$util$Preconditions$3_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t301 (func (result (ref $jdk$internal$util$Preconditions$3_rtt))))
    (type $de$mirkosertic$bytecoder$api$vue$VueBuilder (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $de$mirkosertic$bytecoder$api$vue$VueBuilder_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t304 (func (result (ref $de$mirkosertic$bytecoder$api$vue$VueBuilder_rtt))))
    (type $java$util$concurrent$locks$ReentrantLock (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$util$concurrent$locks$ReentrantLock_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t307 (func (result (ref $java$util$concurrent$locks$ReentrantLock_rtt))))
    (type $java$nio$ByteBuffer (sub $java$nio$Buffer (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $mark (mut i32)) (field $position (mut i32)) (field $capacity (mut i32)) (field $segment (mut (ref null $java$lang$Object))) (field $limit (mut i32)) (field $address (mut i64)) (field $bigEndian (mut i32)) (field $nativeByteOrder (mut i32)) (field $hb (mut (ref null $java$lang$Object))) (field $offset (mut i32)))))
    (type $java$nio$ByteBuffer_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $$assertionsDisabled (mut i32)) (field $ARRAY_BASE_OFFSET (mut i64)))))
    (type $t310 (func (result (ref $java$nio$ByteBuffer_rtt))))
    (type $java$util$AbstractList$Itr (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $this$0 (mut (ref null $java$lang$Object))) (field $cursor (mut i32)) (field $lastRet (mut i32)) (field $expectedModCount (mut i32)))))
    (type $java$util$AbstractList$Itr_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t313 (func (result (ref $java$util$AbstractList$Itr_rtt))))
    (type $de$mirkosertic$bytecoder$classlib$BytecoderCharsetDecoder (sub $java$nio$charset$CharsetDecoder (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $malformedInputAction (mut (ref null $java$lang$Object))) (field $unmappableCharacterAction (mut (ref null $java$lang$Object))) (field $maxCharsPerByte (mut f32)) (field $state (mut i32)) (field $replacement (mut (ref null $java$lang$Object))) (field $charset (mut (ref null $java$lang$Object))) (field $averageCharsPerByte (mut f32)))))
    (type $de$mirkosertic$bytecoder$classlib$BytecoderCharsetDecoder_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t316 (func (result (ref $de$mirkosertic$bytecoder$classlib$BytecoderCharsetDecoder_rtt))))
    (type $java$lang$Error (sub $java$lang$Throwable (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $message (mut (ref null $java$lang$Object))) (field $cause (mut (ref null $java$lang$Object))))))
    (type $java$lang$Error_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t319 (func (result (ref $java$lang$Error_rtt))))
    (type $java$util$ListIterator (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$util$ListIterator_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t322 (func (result (ref $java$util$ListIterator_rtt))))
    (type $java$io$Writer (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $lock (mut (ref null $java$lang$Object))))))
    (type $java$io$Writer_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t325 (func (result (ref $java$io$Writer_rtt))))
    (type $java$nio$HeapByteBuffer (sub $java$nio$ByteBuffer (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $mark (mut i32)) (field $position (mut i32)) (field $capacity (mut i32)) (field $segment (mut (ref null $java$lang$Object))) (field $limit (mut i32)) (field $address (mut i64)) (field $bigEndian (mut i32)) (field $nativeByteOrder (mut i32)) (field $hb (mut (ref null $java$lang$Object))) (field $offset (mut i32)))))
    (type $java$nio$HeapByteBuffer_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $$assertionsDisabled (mut i32)) (field $ARRAY_BASE_OFFSET (mut i64)) (field $ARRAY_INDEX_SCALE (mut i64)))))
    (type $t328 (func (result (ref $java$nio$HeapByteBuffer_rtt))))
    (type $java$util$concurrent$ConcurrentHashMap (sub $java$util$AbstractMap (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $delegate (mut (ref null $java$lang$Object))))))
    (type $java$util$concurrent$ConcurrentHashMap_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t331 (func (result (ref $java$util$concurrent$ConcurrentHashMap_rtt))))
    (type $java$util$ImmutableCollections$AbstractImmutableMap (sub $java$util$AbstractMap (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$util$ImmutableCollections$AbstractImmutableMap_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t334 (func (result (ref $java$util$ImmutableCollections$AbstractImmutableMap_rtt))))
    (type $java$util$Set (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$util$Set_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t337 (func (result (ref $java$util$Set_rtt))))
    (type $java$util$AbstractCollection (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$util$AbstractCollection_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t340 (func (result (ref $java$util$AbstractCollection_rtt))))
    (type $java$util$AbstractList$ListItr (sub $java$util$AbstractList$Itr (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $this$0 (mut (ref null $java$lang$Object))) (field $cursor (mut i32)) (field $lastRet (mut i32)) (field $expectedModCount (mut i32)) (field $this$0 (mut (ref null $java$lang$Object))))))
    (type $java$util$AbstractList$ListItr_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t343 (func (result (ref $java$util$AbstractList$ListItr_rtt))))
    (type $java$nio$charset$CoderMalfunctionError (sub $java$lang$Error (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $message (mut (ref null $java$lang$Object))) (field $cause (mut (ref null $java$lang$Object))))))
    (type $java$nio$charset$CoderMalfunctionError_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t346 (func (result (ref $java$nio$charset$CoderMalfunctionError_rtt))))
    (type $java$lang$Long (sub $java$lang$Number (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $value (mut i64)))))
    (type $java$lang$Long_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $TYPE (mut (ref null $java$lang$Object))))))
    (type $t349 (func (result (ref $java$lang$Long_rtt))))
    (type $de$mirkosertic$bytecoder$classlib$BytecoderCharset (sub $java$nio$charset$Charset (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $canonicalName (mut (ref null $java$lang$Object))) (field $aliases (mut (ref null $java$lang$Object))))))
    (type $de$mirkosertic$bytecoder$classlib$BytecoderCharset_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t352 (func (result (ref $de$mirkosertic$bytecoder$classlib$BytecoderCharset_rtt))))
    (type $java$nio$HeapCharBuffer (sub $java$nio$CharBuffer (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $mark (mut i32)) (field $position (mut i32)) (field $capacity (mut i32)) (field $segment (mut (ref null $java$lang$Object))) (field $limit (mut i32)) (field $address (mut i64)) (field $hb (mut (ref null $java$lang$Object))) (field $offset (mut i32)))))
    (type $java$nio$HeapCharBuffer_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $$assertionsDisabled (mut i32)) (field $ARRAY_BASE_OFFSET (mut i64)) (field $ARRAY_INDEX_SCALE (mut i64)))))
    (type $t355 (func (result (ref $java$nio$HeapCharBuffer_rtt))))
    (type $java$lang$Byte (sub $java$lang$Number (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $value (mut i32)))))
    (type $java$lang$Byte_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $TYPE (mut (ref null $java$lang$Object))))))
    (type $t358 (func (result (ref $java$lang$Byte_rtt))))
    (type $java$util$Properties (sub $java$util$Hashtable (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $modCount (mut i32)) (field $map (mut (ref null $java$lang$Object))) (field $defaults (mut (ref null $java$lang$Object))))))
    (type $java$util$Properties_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $UNSAFE (mut (ref null $java$lang$Object))))))
    (type $t361 (func (result (ref $java$util$Properties_rtt))))
    (type $java$lang$RuntimeException (sub $java$lang$Exception (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $message (mut (ref null $java$lang$Object))) (field $cause (mut (ref null $java$lang$Object))))))
    (type $java$lang$RuntimeException_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t364 (func (result (ref $java$lang$RuntimeException_rtt))))
    (type $java$lang$Float (sub $java$lang$Number (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $value (mut f32)))))
    (type $java$lang$Float_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $TYPE (mut (ref null $java$lang$Object))))))
    (type $t367 (func (result (ref $java$lang$Float_rtt))))
    (type $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError (sub $java$lang$Error (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $message (mut (ref null $java$lang$Object))) (field $cause (mut (ref null $java$lang$Object))) (field $runtimeExceptionSupplier (mut (ref null $java$lang$Object))))))
    (type $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t370 (func (result (ref $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError_rtt))))
    (type $java$util$Collections$SynchronizedCollection (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $c (mut (ref null $java$lang$Object))) (field $mutex (mut (ref null $java$lang$Object))))))
    (type $java$util$Collections$SynchronizedCollection_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t373 (func (result (ref $java$util$Collections$SynchronizedCollection_rtt))))
    (type $java$lang$VirtualMachineError (sub $java$lang$Error (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $message (mut (ref null $java$lang$Object))) (field $cause (mut (ref null $java$lang$Object))))))
    (type $java$lang$VirtualMachineError_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t376 (func (result (ref $java$lang$VirtualMachineError_rtt))))
    (type $java$lang$Integer (sub $java$lang$Number (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $value (mut i32)))))
    (type $java$lang$Integer_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $TYPE (mut (ref null $java$lang$Object))))))
    (type $t379 (func (result (ref $java$lang$Integer_rtt))))
    (type $java$lang$AssertionError (sub $java$lang$Error (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $message (mut (ref null $java$lang$Object))) (field $cause (mut (ref null $java$lang$Object))))))
    (type $java$lang$AssertionError_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t382 (func (result (ref $java$lang$AssertionError_rtt))))
    (type $java$util$ImmutableCollections$ListItr (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $list (mut (ref null $java$lang$Object))) (field $size (mut i32)) (field $cursor (mut i32)) (field $isListIterator (mut i32)))))
    (type $java$util$ImmutableCollections$ListItr_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t385 (func (result (ref $java$util$ImmutableCollections$ListItr_rtt))))
    (type $java$io$InputStream (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$io$InputStream_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t388 (func (result (ref $java$io$InputStream_rtt))))
    (type $java$io$OutputStream (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$io$OutputStream_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t391 (func (result (ref $java$io$OutputStream_rtt))))
    (type $de$mirkosertic$bytecoder$api$web$MouseEvent (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $de$mirkosertic$bytecoder$api$web$MouseEvent_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t394 (func (result (ref $de$mirkosertic$bytecoder$api$web$MouseEvent_rtt))))
    (type $java$util$Collections$EmptyListIterator (sub $java$util$Collections$EmptyIterator (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$util$Collections$EmptyListIterator_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $EMPTY_ITERATOR (mut (ref null $java$lang$Object))))))
    (type $t397 (func (result (ref $java$util$Collections$EmptyListIterator_rtt))))
    (type $java$util$LinkedHashMap$Entry (sub $java$util$HashMap$Node (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $next (mut (ref null $java$lang$Object))) (field $hash (mut i32)) (field $key (mut (ref null $java$lang$Object))) (field $value (mut (ref null $java$lang$Object))))))
    (type $java$util$LinkedHashMap$Entry_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t400 (func (result (ref $java$util$LinkedHashMap$Entry_rtt))))
    (type $java$util$HashMap (sub $java$util$AbstractMap (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $loadFactor (mut f32)) (field $threshold (mut i32)) (field $size (mut i32)) (field $table (mut (ref null $java$lang$Object))) (field $modCount (mut i32)) (field $entrySet (mut (ref null $java$lang$Object))))))
    (type $java$util$HashMap_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t403 (func (result (ref $java$util$HashMap_rtt))))
    (type $java$util$List (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$util$List_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t406 (func (result (ref $java$util$List_rtt))))
    (type $java$util$Collections$EmptyMap (sub $java$util$AbstractMap (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$util$Collections$EmptyMap_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t409 (func (result (ref $java$util$Collections$EmptyMap_rtt))))
    (type $de$mirkosertic$bytecoder$api$vue$VueInstance (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $de$mirkosertic$bytecoder$api$vue$VueInstance_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t412 (func (result (ref $de$mirkosertic$bytecoder$api$vue$VueInstance_rtt))))
    (type $java$lang$Short (sub $java$lang$Number (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $value (mut i32)))))
    (type $java$lang$Short_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $TYPE (mut (ref null $java$lang$Object))))))
    (type $t415 (func (result (ref $java$lang$Short_rtt))))
    (type $de$mirkosertic$bytecoder$integrationtest$VueDemo$1 (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $de$mirkosertic$bytecoder$integrationtest$VueDemo$1_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t418 (func (result (ref $de$mirkosertic$bytecoder$integrationtest$VueDemo$1_rtt))))
    (type $java$lang$Double (sub $java$lang$Number (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $value (mut f64)))))
    (type $java$lang$Double_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $TYPE (mut (ref null $java$lang$Object))))))
    (type $t421 (func (result (ref $java$lang$Double_rtt))))
    (type $java$lang$ClassCastException (sub $java$lang$RuntimeException (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $message (mut (ref null $java$lang$Object))) (field $cause (mut (ref null $java$lang$Object))))))
    (type $java$lang$ClassCastException_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t424 (func (result (ref $java$lang$ClassCastException_rtt))))
    (type $java$nio$BufferOverflowException (sub $java$lang$RuntimeException (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $message (mut (ref null $java$lang$Object))) (field $cause (mut (ref null $java$lang$Object))))))
    (type $java$nio$BufferOverflowException_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t427 (func (result (ref $java$nio$BufferOverflowException_rtt))))
    (type $java$lang$IllegalStateException (sub $java$lang$RuntimeException (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $message (mut (ref null $java$lang$Object))) (field $cause (mut (ref null $java$lang$Object))))))
    (type $java$lang$IllegalStateException_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t430 (func (result (ref $java$lang$IllegalStateException_rtt))))
    (type $java$util$ImmutableCollections$AbstractImmutableCollection (sub $java$util$AbstractCollection (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$util$ImmutableCollections$AbstractImmutableCollection_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t433 (func (result (ref $java$util$ImmutableCollections$AbstractImmutableCollection_rtt))))
    (type $java$util$AbstractList (sub $java$util$AbstractCollection (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $modCount (mut i32)))))
    (type $java$util$AbstractList_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t436 (func (result (ref $java$util$AbstractList_rtt))))
    (type $java$lang$IllegalArgumentException (sub $java$lang$RuntimeException (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $message (mut (ref null $java$lang$Object))) (field $cause (mut (ref null $java$lang$Object))))))
    (type $java$lang$IllegalArgumentException_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t439 (func (result (ref $java$lang$IllegalArgumentException_rtt))))
    (type $java$util$NoSuchElementException (sub $java$lang$RuntimeException (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $message (mut (ref null $java$lang$Object))) (field $cause (mut (ref null $java$lang$Object))))))
    (type $java$util$NoSuchElementException_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t442 (func (result (ref $java$util$NoSuchElementException_rtt))))
    (type $java$util$ConcurrentModificationException (sub $java$lang$RuntimeException (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $message (mut (ref null $java$lang$Object))) (field $cause (mut (ref null $java$lang$Object))))))
    (type $java$util$ConcurrentModificationException_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t445 (func (result (ref $java$util$ConcurrentModificationException_rtt))))
    (type $java$lang$UnsupportedOperationException (sub $java$lang$RuntimeException (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $message (mut (ref null $java$lang$Object))) (field $cause (mut (ref null $java$lang$Object))))))
    (type $java$lang$UnsupportedOperationException_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t448 (func (result (ref $java$lang$UnsupportedOperationException_rtt))))
    (type $de$mirkosertic$bytecoder$integrationtest$VueDemo$MyVueInstance (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $de$mirkosertic$bytecoder$integrationtest$VueDemo$MyVueInstance_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t451 (func (result (ref $de$mirkosertic$bytecoder$integrationtest$VueDemo$MyVueInstance_rtt))))
    (type $java$nio$BufferUnderflowException (sub $java$lang$RuntimeException (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $message (mut (ref null $java$lang$Object))) (field $cause (mut (ref null $java$lang$Object))))))
    (type $java$nio$BufferUnderflowException_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t454 (func (result (ref $java$nio$BufferUnderflowException_rtt))))
    (type $java$io$OutputStreamWriter (sub $java$io$Writer (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $lock (mut (ref null $java$lang$Object))) (field $se (mut (ref null $java$lang$Object))))))
    (type $java$io$OutputStreamWriter_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t457 (func (result (ref $java$io$OutputStreamWriter_rtt))))
    (type $java$io$FileInputStream (sub $java$io$InputStream (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $fd (mut (ref null $java$lang$Object))) (field $path (mut (ref null $java$lang$Object))))))
    (type $java$io$FileInputStream_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t460 (func (result (ref $java$io$FileInputStream_rtt))))
    (type $sun$nio$cs$StreamEncoder (sub $java$io$Writer (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $lock (mut (ref null $java$lang$Object))) (field $haveLeftoverChar (mut i32)) (field $lcb (mut (ref null $java$lang$Object))) (field $out (mut (ref null $java$lang$Object))) (field $ch (mut (ref null $java$lang$Object))) (field $cs (mut (ref null $java$lang$Object))) (field $encoder (mut (ref null $java$lang$Object))) (field $bb (mut (ref null $java$lang$Object))) (field $maxBufferCapacity (mut i32)))))
    (type $sun$nio$cs$StreamEncoder_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $$assertionsDisabled (mut i32)))))
    (type $t463 (func (result (ref $sun$nio$cs$StreamEncoder_rtt))))
    (type $java$util$HashMap$TreeNode (sub $java$util$LinkedHashMap$Entry (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $next (mut (ref null $java$lang$Object))) (field $hash (mut i32)) (field $key (mut (ref null $java$lang$Object))) (field $value (mut (ref null $java$lang$Object))) (field $prev (mut (ref null $java$lang$Object))) (field $right (mut (ref null $java$lang$Object))) (field $left (mut (ref null $java$lang$Object))) (field $parent (mut (ref null $java$lang$Object))) (field $red (mut i32)))))
    (type $java$util$HashMap$TreeNode_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))) (field $$assertionsDisabled (mut i32)))))
    (type $t466 (func (result (ref $java$util$HashMap$TreeNode_rtt))))
    (type $java$util$Properties$EntrySet (sub $java$lang$Object (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $entrySet (mut (ref null $java$lang$Object))))))
    (type $java$util$Properties$EntrySet_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t469 (func (result (ref $java$util$Properties$EntrySet_rtt))))
    (type $java$util$ImmutableCollections$MapN (sub $java$util$ImmutableCollections$AbstractImmutableMap (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $size (mut i32)) (field $table (mut (ref null $java$lang$Object))))))
    (type $java$util$ImmutableCollections$MapN_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t472 (func (result (ref $java$util$ImmutableCollections$MapN_rtt))))
    (type $java$lang$InternalError (sub $java$lang$VirtualMachineError (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $message (mut (ref null $java$lang$Object))) (field $cause (mut (ref null $java$lang$Object))))))
    (type $java$lang$InternalError_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t475 (func (result (ref $java$lang$InternalError_rtt))))
    (type $java$lang$NullPointerException (sub $java$lang$RuntimeException (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $message (mut (ref null $java$lang$Object))) (field $cause (mut (ref null $java$lang$Object))) (field $extendedMessageState (mut i32)) (field $extendedMessage (mut (ref null $java$lang$Object))))))
    (type $java$lang$NullPointerException_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t478 (func (result (ref $java$lang$NullPointerException_rtt))))
    (type $java$io$BufferedWriter (sub $java$io$Writer (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $lock (mut (ref null $java$lang$Object))) (field $out (mut (ref null $java$lang$Object))) (field $cb (mut (ref null $java$lang$Object))) (field $nChars (mut i32)) (field $maxChars (mut i32)))))
    (type $java$io$BufferedWriter_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t481 (func (result (ref $java$io$BufferedWriter_rtt))))
    (type $java$io$FileOutputStream (sub $java$io$OutputStream (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $fd (mut (ref null $java$lang$Object))) (field $path (mut (ref null $java$lang$Object))))))
    (type $java$io$FileOutputStream_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t484 (func (result (ref $java$io$FileOutputStream_rtt))))
    (type $java$util$AbstractSet (sub $java$util$AbstractCollection (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$util$AbstractSet_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t487 (func (result (ref $java$util$AbstractSet_rtt))))
    (type $java$util$Collections$SynchronizedSet (sub $java$util$Collections$SynchronizedCollection (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $c (mut (ref null $java$lang$Object))) (field $mutex (mut (ref null $java$lang$Object))))))
    (type $java$util$Collections$SynchronizedSet_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t490 (func (result (ref $java$util$Collections$SynchronizedSet_rtt))))
    (type $java$io$FilterOutputStream (sub $java$io$OutputStream (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $closeLock (mut (ref null $java$lang$Object))) (field $out (mut (ref null $java$lang$Object))))))
    (type $java$io$FilterOutputStream_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t493 (func (result (ref $java$io$FilterOutputStream_rtt))))
    (type $java$lang$IndexOutOfBoundsException (sub $java$lang$RuntimeException (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $message (mut (ref null $java$lang$Object))) (field $cause (mut (ref null $java$lang$Object))))))
    (type $java$lang$IndexOutOfBoundsException_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t496 (func (result (ref $java$lang$IndexOutOfBoundsException_rtt))))
    (type $java$util$ImmutableCollections$AbstractImmutableSet (sub $java$util$ImmutableCollections$AbstractImmutableCollection (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$util$ImmutableCollections$AbstractImmutableSet_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t499 (func (result (ref $java$util$ImmutableCollections$AbstractImmutableSet_rtt))))
    (type $java$lang$StringIndexOutOfBoundsException (sub $java$lang$IndexOutOfBoundsException (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $message (mut (ref null $java$lang$Object))) (field $cause (mut (ref null $java$lang$Object))))))
    (type $java$lang$StringIndexOutOfBoundsException_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t502 (func (result (ref $java$lang$StringIndexOutOfBoundsException_rtt))))
    (type $java$util$ImmutableCollections$MapN$1 (sub $java$util$AbstractSet (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $this$0 (mut (ref null $java$lang$Object))))))
    (type $java$util$ImmutableCollections$MapN$1_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t505 (func (result (ref $java$util$ImmutableCollections$MapN$1_rtt))))
    (type $java$util$HashMap$EntrySet (sub $java$util$AbstractSet (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $this$0 (mut (ref null $java$lang$Object))))))
    (type $java$util$HashMap$EntrySet_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t508 (func (result (ref $java$util$HashMap$EntrySet_rtt))))
    (type $java$lang$ArrayIndexOutOfBoundsException (sub $java$lang$IndexOutOfBoundsException (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $message (mut (ref null $java$lang$Object))) (field $cause (mut (ref null $java$lang$Object))))))
    (type $java$lang$ArrayIndexOutOfBoundsException_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t511 (func (result (ref $java$lang$ArrayIndexOutOfBoundsException_rtt))))
    (type $java$io$PrintStream (sub $java$io$FilterOutputStream (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $closeLock (mut (ref null $java$lang$Object))) (field $out (mut (ref null $java$lang$Object))) (field $trouble (mut i32)) (field $closing (mut i32)) (field $autoFlush (mut i32)) (field $charset (mut (ref null $java$lang$Object))) (field $charOut (mut (ref null $java$lang$Object))) (field $textOut (mut (ref null $java$lang$Object))) (field $lock (mut (ref null $java$lang$Object))))))
    (type $java$io$PrintStream_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t514 (func (result (ref $java$io$PrintStream_rtt))))
    (type $java$util$ImmutableCollections$AbstractImmutableList (sub $java$util$ImmutableCollections$AbstractImmutableCollection (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$util$ImmutableCollections$AbstractImmutableList_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t517 (func (result (ref $java$util$ImmutableCollections$AbstractImmutableList_rtt))))
    (type $java$nio$ReadOnlyBufferException (sub $java$lang$UnsupportedOperationException (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $message (mut (ref null $java$lang$Object))) (field $cause (mut (ref null $java$lang$Object))))))
    (type $java$nio$ReadOnlyBufferException_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t520 (func (result (ref $java$nio$ReadOnlyBufferException_rtt))))
    (type $java$util$Collections$EmptyList (sub $java$util$AbstractList (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $modCount (mut i32)))))
    (type $java$util$Collections$EmptyList_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t523 (func (result (ref $java$util$Collections$EmptyList_rtt))))
    (type $java$util$Collections$EmptySet (sub $java$util$AbstractSet (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $java$util$Collections$EmptySet_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t526 (func (result (ref $java$util$Collections$EmptySet_rtt))))
    (type $java$io$FileWriter (sub $java$io$OutputStreamWriter (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $lock (mut (ref null $java$lang$Object))) (field $se (mut (ref null $java$lang$Object))))))
    (type $java$io$FileWriter_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t529 (func (result (ref $java$io$FileWriter_rtt))))
    (type $java$util$ImmutableCollections$SetN (sub $java$util$ImmutableCollections$AbstractImmutableSet (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $size (mut i32)) (field $elements (mut (ref null $java$lang$Object))))))
    (type $java$util$ImmutableCollections$SetN_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t532 (func (result (ref $java$util$ImmutableCollections$SetN_rtt))))
    (type $java$util$ImmutableCollections$ListN (sub $java$util$ImmutableCollections$AbstractImmutableList (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $elements (mut (ref null $java$lang$Object))) (field $allowNulls (mut i32)))))
    (type $java$util$ImmutableCollections$ListN_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t535 (func (result (ref $java$util$ImmutableCollections$ListN_rtt))))
    (type $java$util$ImmutableCollections$List12 (sub $java$util$ImmutableCollections$AbstractImmutableList (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $e0 (mut (ref null $java$lang$Object))) (field $e1 (mut (ref null $java$lang$Object))))))
    (type $java$util$ImmutableCollections$List12_rtt (sub $java$lang$Class_rtt (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $typeId i32) (field $classImplTypes (ref null $t7)) (field $initStatus (mut i32)) (field $factoryFor (mut i32)) (field $$VALUES (mut (ref null $java$lang$Object))))))
    (type $t538 (func (result (ref $java$util$ImmutableCollections$List12_rtt))))
    (type $t539 (func (param (ref $java$lang$Object)) (result externref)))
    (type $t540 (func (param (ref $java$lang$Object)) (param externref)))
    (type $t541 (func (param (ref null $java$lang$Object))))
    (type $i32_array (sub $de$mirkosertic$bytecoder$classlib$Array (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $data (mut (ref $t7))))))
    (type $t543 (array (mut i64)))
    (type $i64_array (sub $de$mirkosertic$bytecoder$classlib$Array (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $data (mut (ref $t543))))))
    (type $t545 (array (mut f32)))
    (type $f32_array (sub $de$mirkosertic$bytecoder$classlib$Array (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $data (mut (ref $t545))))))
    (type $t547 (array (mut f64)))
    (type $f64_array (sub $de$mirkosertic$bytecoder$classlib$Array (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $data (mut (ref $t547))))))
    (type $t549 (array (mut (ref null $java$lang$Object))))
    (type $obj_array (sub $de$mirkosertic$bytecoder$classlib$Array (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)) (field $data (mut (ref $t549))))))
    (type $t551 (func (param (ref null $java$lang$Object)) (param i32) (result i32)))
    (type $t552 (func (param (ref null $java$lang$Object)) (result (ref $java$lang$Object))))
    (type $t553 (func (param (ref null $java$lang$Object)) (result (ref null $java$lang$Object))))
    (type $t554 (func (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (result i32)))
    (type $t555 (func (param (ref null $java$lang$Object)) (result i32)))
    (type $t556 (func (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object))))
    (type $t557 (func (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (param f32) (param f32)))
    (type $t558 (func (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (param f32) (param f32) (param (ref null $java$lang$Object))))
    (type $t559 (func (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (result (ref null $java$lang$Object))))
    (type $t560 (func (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object))))
    (type $t561 (func (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (result (ref null $java$lang$Object))))
    (type $t562 (func (param (ref null $java$lang$Object)) (result i64)))
    (type $t563 (func (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (param i32) (param (ref null $java$lang$Object)) (param i32) (param i32)))
    (type $t564 (func (param (ref null $java$lang$Object)) (param i32) (param i32) (result i32)))
    (type $t565 (func (param (ref null $java$lang$Object)) (param i32) (result (ref null $java$lang$Object))))
    (type $t566 (func (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (result i32)))
    (type $t567 (func (param (ref null $java$lang$Object)) (param i64) (result (ref null $java$lang$Object))))
    (type $t568 (func (param (ref null $java$lang$Object)) (param f32) (result (ref null $java$lang$Object))))
    (type $t569 (func (param (ref null $java$lang$Object)) (param i32) (param i32) (param i32) (param (ref null $java$lang$Object)) (result i32)))
    (type $t570 (func (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (param i32) (param i32) (param i32) (result (ref null $java$lang$Object))))
    (type $t571 (func (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (result (ref null $java$lang$Object))))
    (type $t572 (func (param (ref null $java$lang$Object)) (param i32) (param i32) (param (ref null $java$lang$Object)) (result i32)))
    (type $t573 (func (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (param i32) (param i32) (result (ref null $java$lang$Object))))
    (type $t574 (func (param (ref null $java$lang$Object)) (param i32) (param i32) (param i32) (param i32) (param (ref null $java$lang$Object))))
    (type $t575 (func (param (ref null $java$lang$Object)) (param i32)))
    (type $t576 (func (param (ref null $java$lang$Object)) (result f32)))
    (type $t577 (func (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (param i32) (result (ref null $java$lang$Object))))
    (type $java.util.function.Function$lambda$13 (sub $java$util$function$Function (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $t579 (func (param (ref null $java$lang$Object)) (param i32) (param i32)))
    (type $t580 (func (param (ref null $java$lang$Object)) (param i32) (param i32) (param i32) (result i32)))
    (type $t581 (func (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (param i32) (param (ref null $java$lang$Object)) (param i32) (param i32) (result i32)))
    (type $java.util.function.Function$lambda$15 (sub $java$util$function$Function (struct (field $typeId (mut i32)) (field $vt_resolver (ref null $t0)) (field $nativeObject (mut externref)) (field $implTypes (ref null $t7)))))
    (type $t583 (func (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (param i32) (result (ref null $java$lang$Object))))
    (type $t584 (func (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (param i32) (result i32)))
    (type $t585 (func (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (param i32) (param i32)))
    (type $t586 (func (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (param i64) (param (ref null $java$lang$Object)) (param i64) (param i32) (param i32) (result i32)))
    (type $t587 (func (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (param i64) (param (ref null $java$lang$Object)) (param i64) (param i64)))
    (type $t588 (func (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (param i64) (param (ref null $java$lang$Object)) (param i64) (param i64) (param i64)))
    (type $t589 (func (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (param i64) (param (ref null $java$lang$Object)) (param i64) (param i32) (param i32) (result i32)))
    (type $t590 (func (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (param i64) (result i64)))
    (type $t591 (func (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (param i64) (result i32)))
    (type $t592 (func (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (param i64) (param (ref null $java$lang$Object)) (param i64) (param i64)))
    (type $t593 (func (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (param i64) (param (ref null $java$lang$Object)) (param i64) (param i64) (param i64)))
    (type $t594 (func (param (ref null $java$lang$Object)) (param i32) (param i32) (param i32) (param i32) (param (ref null $java$lang$Object)) (param i32) (param (ref null $java$lang$Object))))
    (type $t595 (func (param (ref null $java$lang$Object)) (param i32) (param i32) (result (ref null $java$lang$Object))))
    (type $t596 (func (param (ref null $java$lang$Object)) (param i32) (param (ref null $java$lang$Object)) (param i32) (param i32) (result (ref null $java$lang$Object))))
    (type $t597 (func (param (ref null $java$lang$Object)) (param i32) (param i32) (param (ref null $java$lang$Object)) (param i32)))
    (type $t598 (func (param (ref null $java$lang$Object)) (param i32) (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object))))
    (type $t599 (func (param externref) (param externref) (param externref)))
    (type $t600 (func (param externref) (param externref)))
    (type $t601 (func (param externref) (result externref)))
    (type $t602 (func (param externref) (param externref) (param (ref null $java$lang$Object))))
    (type $t603 (func (param externref) (result externref)))
    (type $t604 (func (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (param i32) (param i32) (param (ref null $java$lang$Object))))
    (type $t605 (func (param (ref null $java$lang$Object)) (param i32) (param i32) (param (ref null $java$lang$Object))))
    (type $t606 (func (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (param i32)))
    (type $t607 (func (param (ref null $java$lang$Object)) (param i64)))
    (type $t608 (func (param (ref null $java$lang$Object)) (param i64) (param i64) (result i32)))
    (type $t609 (func (param (ref null $java$lang$Object)) (param i64) (result i32)))
    (type $t610 (func (param (ref null $java$lang$Object)) (param i64) (param i32) (result (ref null $java$lang$Object))))
    (type $t611 (func (param (ref null $java$lang$Object)) (param f32)))
    (type $t612 (func (param (ref null $java$lang$Object)) (param f32) (result i32)))
    (type $t613 (func (param (ref null $java$lang$Object)) (param f32) (param f32) (result i32)))
    (type $t614 (func (param (ref null $java$lang$Object)) (param i32) (param f32)))
    (type $t615 (func (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (result i32)))
    (type $t616 (func (param (ref null $java$lang$Object)) (param i32) (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (result (ref null $java$lang$Object))))
    (type $t617 (func (param (ref null $java$lang$Object)) (param i32) (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (param i32) (param i32) (result (ref null $java$lang$Object))))
    (type $t618 (func (param (ref null $java$lang$Object)) (param f64) (result (ref null $java$lang$Object))))
    (type $t619 (func (param (ref null $java$lang$Object)) (param f64)))
    (type $t620 (func (param (ref null $java$lang$Object)) (result f64)))
    (type $t621 (func (param (ref null $java$lang$Object)) (param f64) (param f64) (result i32)))
    (type $t622 (func (param externref) (param externref)))
    (type $t623 (func (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object))))
    (type $t624 (func (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (param i32) (param i32)))
    (type $t625 (func (param (ref null $java$lang$Object)) (param i32) (param (ref null $java$lang$Object)) (result (ref null $java$lang$Object))))
    (type $t626 (func (param (ref null $java$lang$Object)) (param i32) (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (result (ref null $java$lang$Object))))
    (type $t627 (func (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (param i32) (param (ref null $java$lang$Object)) (param (ref null $java$lang$Object)) (result (ref null $java$lang$Object))))
    (type $t628 (func (param (ref null $java$lang$Object)) (param i32) (param (ref null $java$lang$Object))))
    (type $t629 (func (param externref) (result (ref $java$lang$Object))))
    (type $t630 (func (param i32) (result externref)))
    (type $t631 (func (param (ref null $java$lang$Object)) (param externref)))
    (import "java.lang.System" "J$currentTimeMillis$$" (func $java$lang$System$J$currentTimeMillis$$ (type $t562)))
    (import "java.lang.Character" "Ljava$lang$String$$toString$C" (func $java$lang$Character$Ljava$lang$String$$toString$C (type $t565)))
    (import "java.lang.Math" "I$min$I$I" (func $java$lang$Math$I$min$I$I (type $t564)))
    (import "de.mirkosertic.bytecoder.api.vue.Vue" "Lde$mirkosertic$bytecoder$api$vue$VueBuilder$$builder$$" (func $de$mirkosertic$bytecoder$api$vue$Vue$Lde$mirkosertic$bytecoder$api$vue$VueBuilder$$builder$$ (type $t553)))
    (import "jdk.internal.misc.ScopedMemoryAccess" "V$registerNatives$$" (func $jdk$internal$misc$ScopedMemoryAccess$V$registerNatives$$ (type $t541)))
    (import "jdk.internal.misc.CDS" "Z$isDumpingClassList0$$" (func $jdk$internal$misc$CDS$Z$isDumpingClassList0$$ (type $t555)))
    (import "jdk.internal.misc.CDS" "Z$isDumpingArchive0$$" (func $jdk$internal$misc$CDS$Z$isDumpingArchive0$$ (type $t555)))
    (import "jdk.internal.misc.CDS" "Z$isSharingEnabled0$$" (func $jdk$internal$misc$CDS$Z$isSharingEnabled0$$ (type $t555)))
    (import "jdk.internal.misc.CDS" "J$getRandomSeedForDumping$$" (func $jdk$internal$misc$CDS$J$getRandomSeedForDumping$$ (type $t562)))
    (import "jdk.internal.misc.CDS" "V$initializeFromArchive$Ljava$lang$Class$" (func $jdk$internal$misc$CDS$V$initializeFromArchive$Ljava$lang$Class$ (type $t556)))
    (import "java.lang.String" "I$length$$" (func $java$lang$String$I$length$$ (type $t555)))
    (import "java.lang.String" "Z$equals0$Ljava$lang$String$" (func $java$lang$String$Z$equals0$Ljava$lang$String$ (type $t554)))
    (import "java.lang.String" "Ljava$lang$String$$format$Ljava$lang$String$$$Ljava$lang$Object$" (func $java$lang$String$Ljava$lang$String$$format$Ljava$lang$String$$$Ljava$lang$Object$ (type $t561)))
    (import "java.lang.String" "$B$getBytes$$" (func $java$lang$String$$B$getBytes$$ (type $t553)))
    (import "java.lang.String" "C$charAt$I" (func $java$lang$String$C$charAt$I (type $t551)))
    (import "java.lang.String" "$C$toCharArray$$" (func $java$lang$String$$C$toCharArray$$ (type $t553)))
    (import "java.lang.String" "V$getChars$I$I$$C$I" (func $java$lang$String$V$getChars$I$I$$C$I (type $t597)))
    (import "java.lang.String" "V$initializeWith$$C$I$I" (func $java$lang$String$V$initializeWith$$C$I$I (type $t585)))
    (import "java.lang.StringBuilder" "V$initializeWith$I" (func $java$lang$StringBuilder$V$initializeWith$I (type $t575)))
    (import "java.lang.StringBuilder" "Ljava$lang$StringBuilder$$append$Ljava$lang$String$" (func $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (type $t559)))
    (import "java.lang.StringBuilder" "Ljava$lang$String$$toString$$" (func $java$lang$StringBuilder$Ljava$lang$String$$toString$$ (type $t553)))
    (import "de.mirkosertic.bytecoder.api.vue.VueData_generated" "V$setProperty$Ljava$lang$String$$Ljava$lang$String$" (func $de$mirkosertic$bytecoder$api$vue$VueData$V$setProperty$Ljava$lang$String$$Ljava$lang$String$_delegate (type $t599)))
    (import "de.mirkosertic.bytecoder.api.vue.VueBuilder_generated" "V$bindToTemplateSelector$Ljava$lang$String$" (func $de$mirkosertic$bytecoder$api$vue$VueBuilder$V$bindToTemplateSelector$Ljava$lang$String$_delegate (type $t600)))
    (import "de.mirkosertic.bytecoder.api.vue.VueBuilder_generated" "Lde$mirkosertic$bytecoder$api$vue$VueData$$data$$" (func $de$mirkosertic$bytecoder$api$vue$VueBuilder$Lde$mirkosertic$bytecoder$api$vue$VueData$$data$$_delegate (type $t601)))
    (import "de.mirkosertic.bytecoder.api.vue.VueBuilder_generated" "V$addEventListener$Ljava$lang$String$$Lde$mirkosertic$bytecoder$api$vue$VueEventListener$" (func $de$mirkosertic$bytecoder$api$vue$VueBuilder$V$addEventListener$Ljava$lang$String$$Lde$mirkosertic$bytecoder$api$vue$VueEventListener$_delegate (type $t602)))
    (import "de.mirkosertic.bytecoder.api.vue.VueBuilder_generated" "Lde$mirkosertic$bytecoder$api$vue$VueInstance$$build$$" (func $de$mirkosertic$bytecoder$api$vue$VueBuilder$Lde$mirkosertic$bytecoder$api$vue$VueInstance$$build$$_delegate (type $t603)))
    (import "de.mirkosertic.bytecoder.classlib.BytecoderCharsetDecoder" "$C$decodeFromBytes$Ljava$lang$String$$$B" (func $de$mirkosertic$bytecoder$classlib$BytecoderCharsetDecoder$$C$decodeFromBytes$Ljava$lang$String$$$B (type $t561)))
    (import "java.lang.Long" "Ljava$lang$String$$toString$J$I" (func $java$lang$Long$Ljava$lang$String$$toString$J$I (type $t610)))
    (import "java.lang.Byte" "Ljava$lang$String$$toString$B$I" (func $java$lang$Byte$Ljava$lang$String$$toString$B$I (type $t595)))
    (import "java.lang.Float" "Z$isNaN$F" (func $java$lang$Float$Z$isNaN$F (type $t612)))
    (import "java.lang.Float" "Ljava$lang$String$$toString$F" (func $java$lang$Float$Ljava$lang$String$$toString$F (type $t568)))
    (import "java.lang.Integer" "Ljava$lang$String$$toString$I$I" (func $java$lang$Integer$Ljava$lang$String$$toString$I$I (type $t595)))
    (import "java.lang.Short" "Ljava$lang$String$$toString$S$I" (func $java$lang$Short$Ljava$lang$String$$toString$S$I (type $t595)))
    (import "java.lang.Double" "Ljava$lang$String$$toString$D" (func $java$lang$Double$Ljava$lang$String$$toString$D (type $t618)))
    (import "de.mirkosertic.bytecoder.integrationtest.VueDemo$MyVueInstance_generated" "V$welcomemessage$Ljava$lang$String$" (func $de$mirkosertic$bytecoder$integrationtest$VueDemo$MyVueInstance$V$welcomemessage$Ljava$lang$String$_delegate (type $t622)))
    (import "java.lang.NullPointerException" "Ljava$lang$String$$getExtendedNPEMessage$$" (func $java$lang$NullPointerException$Ljava$lang$String$$getExtendedNPEMessage$$ (type $t553)))
    (import "bytecoder" "resolveStringConstant" (func $resolveStringConstant (type $t630)))
    (global $java$lang$Object_cls (ref $java$lang$Object_rtt) (struct.new $java$lang$Object_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 0) (array.new_fixed $t7 (i32.const 0)) (i32.const 0) (i32.const 0) (ref.null none)))
    (global $java$nio$ByteOrder_cls (ref $java$nio$ByteOrder_rtt) (struct.new $java$nio$ByteOrder_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 1) (array.new_fixed $t7 (i32.const 1) (i32.const 0)) (i32.const 0) (i32.const 1) (ref.null none) (ref.null none) (ref.null none) (ref.null none)))
    (global $jdk$internal$misc$VM_cls (ref $jdk$internal$misc$VM_rtt) (struct.new $jdk$internal$misc$VM_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 2) (array.new_fixed $t7 (i32.const 2) (i32.const 0)) (i32.const 0) (i32.const 2) (ref.null none) (ref.null none) (i64.const 0) (i32.const 0) (ref.null none)))
    (global $java$util$Dictionary_cls (ref $java$util$Dictionary_rtt) (struct.new $java$util$Dictionary_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 3) (array.new_fixed $t7 (i32.const 3) (i32.const 0)) (i32.const 0) (i32.const 3) (ref.null none)))
    (global $java$lang$Runnable_cls (ref $java$lang$Runnable_rtt) (struct.new $java$lang$Runnable_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 4) (array.new_fixed $t7 (i32.const 4) (i32.const 0)) (i32.const 0) (i32.const 4) (ref.null none)))
    (global $jdk$internal$access$JavaIOPrintStreamAccess_cls (ref $jdk$internal$access$JavaIOPrintStreamAccess_rtt) (struct.new $jdk$internal$access$JavaIOPrintStreamAccess_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 5) (array.new_fixed $t7 (i32.const 0) (i32.const 5)) (i32.const 0) (i32.const 5) (ref.null none)))
    (global $de$mirkosertic$bytecoder$api$OpaqueReferenceType_cls (ref $de$mirkosertic$bytecoder$api$OpaqueReferenceType_rtt) (struct.new $de$mirkosertic$bytecoder$api$OpaqueReferenceType_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 6) (array.new_fixed $t7 (i32.const 0) (i32.const 6)) (i32.const 0) (i32.const 6) (ref.null none)))
    (global $java$nio$charset$CharsetEncoder_cls (ref $java$nio$charset$CharsetEncoder_rtt) (struct.new $java$nio$charset$CharsetEncoder_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 7) (array.new_fixed $t7 (i32.const 7) (i32.const 0)) (i32.const 0) (i32.const 7) (ref.null none) (i32.const 0) (ref.null none)))
    (global $de$mirkosertic$bytecoder$classlib$java$lang$TMath_cls (ref $de$mirkosertic$bytecoder$classlib$java$lang$TMath_rtt) (struct.new $de$mirkosertic$bytecoder$classlib$java$lang$TMath_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 8) (array.new_fixed $t7 (i32.const 8) (i32.const 0)) (i32.const 0) (i32.const 8) (ref.null none) (i32.const 0)))
    (global $java$lang$ThreadGroup_cls (ref $java$lang$ThreadGroup_rtt) (struct.new $java$lang$ThreadGroup_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 9) (array.new_fixed $t7 (i32.const 9) (i32.const 0)) (i32.const 0) (i32.const 9) (ref.null none) (ref.null none)))
    (global $java$lang$Readable_cls (ref $java$lang$Readable_rtt) (struct.new $java$lang$Readable_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 10) (array.new_fixed $t7 (i32.const 10) (i32.const 0)) (i32.const 0) (i32.const 10) (ref.null none)))
    (global $java$util$ImmutableCollections_cls (ref $java$util$ImmutableCollections_rtt) (struct.new $java$util$ImmutableCollections_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 11) (array.new_fixed $t7 (i32.const 11) (i32.const 0)) (i32.const 0) (i32.const 11) (ref.null none) (i32.const 0) (i64.const 0) (i32.const 0) (ref.null none) (ref.null none) (ref.null none) (ref.null none) (ref.null none) (ref.null none)))
    (global $java$lang$System_cls (ref $java$lang$System_rtt) (struct.new $java$lang$System_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 12) (array.new_fixed $t7 (i32.const 12) (i32.const 0)) (i32.const 0) (i32.const 12) (ref.null none) (ref.null none) (ref.null none) (ref.null none) (ref.null none)))
    (global $jdk$internal$foreign$MemorySessionImpl_cls (ref $jdk$internal$foreign$MemorySessionImpl_rtt) (struct.new $jdk$internal$foreign$MemorySessionImpl_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 13) (array.new_fixed $t7 (i32.const 13) (i32.const 0)) (i32.const 0) (i32.const 13) (ref.null none)))
    (global $java$lang$invoke$CallSite_cls (ref $java$lang$invoke$CallSite_rtt) (struct.new $java$lang$invoke$CallSite_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 14) (array.new_fixed $t7 (i32.const 14) (i32.const 0)) (i32.const 0) (i32.const 14) (ref.null none)))
    (global $java$util$Map_cls (ref $java$util$Map_rtt) (struct.new $java$util$Map_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 15) (array.new_fixed $t7 (i32.const 15) (i32.const 0)) (i32.const 0) (i32.const 15) (ref.null none)))
    (global $java$util$function$Supplier_cls (ref $java$util$function$Supplier_rtt) (struct.new $java$util$function$Supplier_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 16) (array.new_fixed $t7 (i32.const 16) (i32.const 0)) (i32.const 0) (i32.const 16) (ref.null none)))
    (global $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup_cls (ref $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup_rtt) (struct.new $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 17) (array.new_fixed $t7 (i32.const 17) (i32.const 0)) (i32.const 0) (i32.const 17) (ref.null none) (ref.null none)))
    (global $java$lang$AbstractStringBuilder_cls (ref $java$lang$AbstractStringBuilder_rtt) (struct.new $java$lang$AbstractStringBuilder_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 18) (array.new_fixed $t7 (i32.const 18) (i32.const 0)) (i32.const 0) (i32.const 18) (ref.null none)))
    (global $java$util$concurrent$locks$Lock_cls (ref $java$util$concurrent$locks$Lock_rtt) (struct.new $java$util$concurrent$locks$Lock_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 19) (array.new_fixed $t7 (i32.const 19) (i32.const 0)) (i32.const 0) (i32.const 19) (ref.null none)))
    (global $java$lang$Character_cls (ref $java$lang$Character_rtt) (struct.new $java$lang$Character_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 20) (array.new_fixed $t7 (i32.const 20) (i32.const 0)) (i32.const 0) (i32.const 20) (ref.null none)))
    (global $java$lang$ref$Reference_cls (ref $java$lang$ref$Reference_rtt) (struct.new $java$lang$ref$Reference_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 21) (array.new_fixed $t7 (i32.const 0) (i32.const 21)) (i32.const 0) (i32.const 21) (ref.null none)))
    (global $de$mirkosertic$bytecoder$classlib$VM_cls (ref $de$mirkosertic$bytecoder$classlib$VM_rtt) (struct.new $de$mirkosertic$bytecoder$classlib$VM_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 22) (array.new_fixed $t7 (i32.const 22) (i32.const 0)) (i32.const 0) (i32.const 22) (ref.null none) (ref.null none)))
    (global $java$lang$invoke$MethodHandle_cls (ref $java$lang$invoke$MethodHandle_rtt) (struct.new $java$lang$invoke$MethodHandle_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 23) (array.new_fixed $t7 (i32.const 23) (i32.const 0)) (i32.const 0) (i32.const 23) (ref.null none)))
    (global $java$nio$charset$CodingErrorAction_cls (ref $java$nio$charset$CodingErrorAction_rtt) (struct.new $java$nio$charset$CodingErrorAction_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 24) (array.new_fixed $t7 (i32.const 0) (i32.const 24)) (i32.const 0) (i32.const 24) (ref.null none) (ref.null none) (ref.null none) (ref.null none)))
    (global $java$util$Iterator_cls (ref $java$util$Iterator_rtt) (struct.new $java$util$Iterator_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 25) (array.new_fixed $t7 (i32.const 25) (i32.const 0)) (i32.const 0) (i32.const 25) (ref.null none)))
    (global $java$lang$Iterable_cls (ref $java$lang$Iterable_rtt) (struct.new $java$lang$Iterable_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 26) (array.new_fixed $t7 (i32.const 26) (i32.const 0)) (i32.const 0) (i32.const 26) (ref.null none)))
    (global $java$lang$Math_cls (ref $java$lang$Math_rtt) (struct.new $java$lang$Math_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 27) (array.new_fixed $t7 (i32.const 27) (i32.const 0)) (i32.const 0) (i32.const 27) (ref.null none) (i32.const 0)))
    (global $jdk$internal$util$Preconditions_cls (ref $jdk$internal$util$Preconditions_rtt) (struct.new $jdk$internal$util$Preconditions_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 28) (array.new_fixed $t7 (i32.const 28) (i32.const 0)) (i32.const 0) (i32.const 28) (ref.null none) (ref.null none) (ref.null none) (ref.null none)))
    (global $java$nio$Buffer_cls (ref $java$nio$Buffer_rtt) (struct.new $java$nio$Buffer_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 29) (array.new_fixed $t7 (i32.const 29) (i32.const 0)) (i32.const 0) (i32.const 29) (ref.null none) (i32.const 0) (ref.null none) (ref.null none)))
    (global $de$mirkosertic$bytecoder$classlib$java$lang$ref$TReference_cls (ref $de$mirkosertic$bytecoder$classlib$java$lang$ref$TReference_rtt) (struct.new $de$mirkosertic$bytecoder$classlib$java$lang$ref$TReference_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 30) (array.new_fixed $t7 (i32.const 30) (i32.const 0)) (i32.const 0) (i32.const 30) (ref.null none)))
    (global $java$util$RandomAccess_cls (ref $java$util$RandomAccess_rtt) (struct.new $java$util$RandomAccess_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 31) (array.new_fixed $t7 (i32.const 0) (i32.const 31)) (i32.const 0) (i32.const 31) (ref.null none)))
    (global $java$io$FileDescriptor_cls (ref $java$io$FileDescriptor_rtt) (struct.new $java$io$FileDescriptor_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 32) (array.new_fixed $t7 (i32.const 0) (i32.const 32)) (i32.const 0) (i32.const 32) (ref.null none) (ref.null none) (ref.null none) (ref.null none)))
    (global $java$io$Flushable_cls (ref $java$io$Flushable_rtt) (struct.new $java$io$Flushable_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 33) (array.new_fixed $t7 (i32.const 0) (i32.const 33)) (i32.const 0) (i32.const 33) (ref.null none)))
    (global $java$nio$charset$CharsetDecoder_cls (ref $java$nio$charset$CharsetDecoder_rtt) (struct.new $java$nio$charset$CharsetDecoder_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 34) (array.new_fixed $t7 (i32.const 34) (i32.const 0)) (i32.const 0) (i32.const 34) (ref.null none) (i32.const 0) (ref.null none)))
    (global $java$lang$CharSequence_cls (ref $java$lang$CharSequence_rtt) (struct.new $java$lang$CharSequence_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 35) (array.new_fixed $t7 (i32.const 35) (i32.const 0)) (i32.const 0) (i32.const 35) (ref.null none)))
    (global $java$lang$Class_cls (ref $java$lang$Class_rtt) (struct.new $java$lang$Class_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 36) (array.new_fixed $t7 (i32.const 36) (i32.const 0)) (i32.const 0) (i32.const 36) (ref.null none)))
    (global $java$util$function$Function_cls (ref $java$util$function$Function_rtt) (struct.new $java$util$function$Function_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 37) (array.new_fixed $t7 (i32.const 37) (i32.const 0)) (i32.const 0) (i32.const 37) (ref.null none)))
    (global $java$util$Objects_cls (ref $java$util$Objects_rtt) (struct.new $java$util$Objects_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 38) (array.new_fixed $t7 (i32.const 38) (i32.const 0)) (i32.const 0) (i32.const 38) (ref.null none)))
    (global $de$mirkosertic$bytecoder$api$vue$Vue_cls (ref $de$mirkosertic$bytecoder$api$vue$Vue_rtt) (struct.new $de$mirkosertic$bytecoder$api$vue$Vue_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 39) (array.new_fixed $t7 (i32.const 39) (i32.const 0)) (i32.const 0) (i32.const 39) (ref.null none)))
    (global $java$nio$BufferMismatch_cls (ref $java$nio$BufferMismatch_rtt) (struct.new $java$nio$BufferMismatch_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 40) (array.new_fixed $t7 (i32.const 40) (i32.const 0)) (i32.const 0) (i32.const 40) (ref.null none) (ref.null none)))
    (global $java$nio$charset$CoderResult_cls (ref $java$nio$charset$CoderResult_rtt) (struct.new $java$nio$charset$CoderResult_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 41) (array.new_fixed $t7 (i32.const 0) (i32.const 41)) (i32.const 0) (i32.const 41) (ref.null none) (i32.const 0) (ref.null none) (ref.null none) (ref.null none) (ref.null none) (ref.null none)))
    (global $java$nio$charset$CoderResult$Cache_cls (ref $java$nio$charset$CoderResult$Cache_rtt) (struct.new $java$nio$charset$CoderResult$Cache_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 42) (array.new_fixed $t7 (i32.const 0) (i32.const 42)) (i32.const 0) (i32.const 42) (ref.null none) (ref.null none)))
    (global $java$lang$Appendable_cls (ref $java$lang$Appendable_rtt) (struct.new $java$lang$Appendable_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 43) (array.new_fixed $t7 (i32.const 43) (i32.const 0)) (i32.const 0) (i32.const 43) (ref.null none)))
    (global $jdk$internal$access$SharedSecrets_cls (ref $jdk$internal$access$SharedSecrets_rtt) (struct.new $jdk$internal$access$SharedSecrets_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 44) (array.new_fixed $t7 (i32.const 44) (i32.const 0)) (i32.const 0) (i32.const 44) (ref.null none) (ref.null none) (ref.null none)))
    (global $java$util$Arrays_cls (ref $java$util$Arrays_rtt) (struct.new $java$util$Arrays_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 45) (array.new_fixed $t7 (i32.const 0) (i32.const 45)) (i32.const 0) (i32.const 45) (ref.null none) (i32.const 0)))
    (global $java$lang$Void_cls (ref $java$lang$Void_rtt) (struct.new $java$lang$Void_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 46) (array.new_fixed $t7 (i32.const 0) (i32.const 46)) (i32.const 0) (i32.const 46) (ref.null none) (ref.null none)))
    (global $de$mirkosertic$bytecoder$api$Callback_cls (ref $de$mirkosertic$bytecoder$api$Callback_rtt) (struct.new $de$mirkosertic$bytecoder$api$Callback_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 47) (array.new_fixed $t7 (i32.const 47) (i32.const 0)) (i32.const 0) (i32.const 47) (ref.null none)))
    (global $java$util$HashMap$HashIterator_cls (ref $java$util$HashMap$HashIterator_rtt) (struct.new $java$util$HashMap$HashIterator_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 48) (array.new_fixed $t7 (i32.const 48) (i32.const 0)) (i32.const 0) (i32.const 48) (ref.null none)))
    (global $de$mirkosertic$bytecoder$classlib$Array_cls (ref $de$mirkosertic$bytecoder$classlib$Array_rtt) (struct.new $de$mirkosertic$bytecoder$classlib$Array_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 49) (array.new_fixed $t7 (i32.const 49) (i32.const 0)) (i32.const 0) (i32.const 49) (ref.null none)))
    (global $jdk$internal$misc$ScopedMemoryAccess_cls (ref $jdk$internal$misc$ScopedMemoryAccess_rtt) (struct.new $jdk$internal$misc$ScopedMemoryAccess_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 50) (array.new_fixed $t7 (i32.const 50) (i32.const 0)) (i32.const 0) (i32.const 50) (ref.null none) (ref.null none) (ref.null none)))
    (global $java$lang$Comparable_cls (ref $java$lang$Comparable_rtt) (struct.new $java$lang$Comparable_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 51) (array.new_fixed $t7 (i32.const 51) (i32.const 0)) (i32.const 0) (i32.const 51) (ref.null none)))
    (global $java$lang$reflect$Type_cls (ref $java$lang$reflect$Type_rtt) (struct.new $java$lang$reflect$Type_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 52) (array.new_fixed $t7 (i32.const 52) (i32.const 0)) (i32.const 0) (i32.const 52) (ref.null none)))
    (global $java$lang$AutoCloseable_cls (ref $java$lang$AutoCloseable_rtt) (struct.new $java$lang$AutoCloseable_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 53) (array.new_fixed $t7 (i32.const 53) (i32.const 0)) (i32.const 0) (i32.const 53) (ref.null none)))
    (global $java$io$Serializable_cls (ref $java$io$Serializable_rtt) (struct.new $java$io$Serializable_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 54) (array.new_fixed $t7 (i32.const 54) (i32.const 0)) (i32.const 0) (i32.const 54) (ref.null none)))
    (global $jdk$internal$util$ArraysSupport_cls (ref $jdk$internal$util$ArraysSupport_rtt) (struct.new $jdk$internal$util$ArraysSupport_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 55) (array.new_fixed $t7 (i32.const 0) (i32.const 55)) (i32.const 0) (i32.const 55) (ref.null none) (ref.null none) (i32.const 0) (i32.const 0) (i32.const 0) (i32.const 0) (i32.const 0) (i32.const 0) (i32.const 0) (i32.const 0) (i32.const 0) (i32.const 0)))
    (global $jdk$internal$misc$InternalLock_cls (ref $jdk$internal$misc$InternalLock_rtt) (struct.new $jdk$internal$misc$InternalLock_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 56) (array.new_fixed $t7 (i32.const 56) (i32.const 0)) (i32.const 0) (i32.const 56) (ref.null none) (i32.const 0)))
    (global $java$util$Map$Entry_cls (ref $java$util$Map$Entry_rtt) (struct.new $java$util$Map$Entry_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 57) (array.new_fixed $t7 (i32.const 57) (i32.const 0)) (i32.const 0) (i32.const 57) (ref.null none)))
    (global $de$mirkosertic$bytecoder$integrationtest$VueDemo_cls (ref $de$mirkosertic$bytecoder$integrationtest$VueDemo_rtt) (struct.new $de$mirkosertic$bytecoder$integrationtest$VueDemo_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 58) (array.new_fixed $t7 (i32.const 0) (i32.const 58)) (i32.const 0) (i32.const 58) (ref.null none)))
    (global $jdk$internal$misc$CDS_cls (ref $jdk$internal$misc$CDS_rtt) (struct.new $jdk$internal$misc$CDS_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 59) (array.new_fixed $t7 (i32.const 59) (i32.const 0)) (i32.const 0) (i32.const 59) (ref.null none) (i32.const 0) (i32.const 0) (i32.const 0) (ref.null none)))
    (global $jdk$internal$misc$Unsafe_cls (ref $jdk$internal$misc$Unsafe_rtt) (struct.new $jdk$internal$misc$Unsafe_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 60) (array.new_fixed $t7 (i32.const 60) (i32.const 0)) (i32.const 0) (i32.const 60) (ref.null none) (ref.null none) (i32.const 0) (i32.const 0) (i32.const 0) (i32.const 0) (i32.const 0) (i32.const 0) (i32.const 0) (i32.const 0)))
    (global $java$util$function$BiFunction_cls (ref $java$util$function$BiFunction_rtt) (struct.new $java$util$function$BiFunction_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 61) (array.new_fixed $t7 (i32.const 0) (i32.const 61)) (i32.const 0) (i32.const 61) (ref.null none)))
    (global $java$lang$Throwable_cls (ref $java$lang$Throwable_rtt) (struct.new $java$lang$Throwable_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 62) (array.new_fixed $t7 (i32.const 0) (i32.const 62)) (i32.const 0) (i32.const 62) (ref.null none)))
    (global $java$util$Collections_cls (ref $java$util$Collections_rtt) (struct.new $java$util$Collections_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 63) (array.new_fixed $t7 (i32.const 63) (i32.const 0)) (i32.const 0) (i32.const 63) (ref.null none) (ref.null none) (ref.null none) (ref.null none)))
    (global $java$lang$ClassLoader_cls (ref $java$lang$ClassLoader_rtt) (struct.new $java$lang$ClassLoader_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 64) (array.new_fixed $t7 (i32.const 64) (i32.const 0)) (i32.const 0) (i32.const 64) (ref.null none)))
    (global $java$lang$Cloneable_cls (ref $java$lang$Cloneable_rtt) (struct.new $java$lang$Cloneable_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 65) (array.new_fixed $t7 (i32.const 65) (i32.const 0)) (i32.const 0) (i32.const 65) (ref.null none)))
    (global $jdk$internal$access$JavaNioAccess_cls (ref $jdk$internal$access$JavaNioAccess_rtt) (struct.new $jdk$internal$access$JavaNioAccess_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 66) (array.new_fixed $t7 (i32.const 66) (i32.const 0)) (i32.const 0) (i32.const 66) (ref.null none)))
    (global $java$nio$CharBuffer_cls (ref $java$nio$CharBuffer_rtt) (struct.new $java$nio$CharBuffer_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 67) (array.new_fixed $t7 (i32.const 51) (i32.const 10) (i32.const 67) (i32.const 35) (i32.const 43) (i32.const 29) (i32.const 0)) (i32.const 0) (i32.const 67) (ref.null none) (i32.const 0) (i64.const 0)))
    (global $jdk$internal$util$Preconditions$2_cls (ref $jdk$internal$util$Preconditions$2_rtt) (struct.new $jdk$internal$util$Preconditions$2_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 68) (array.new_fixed $t7 (i32.const 68) (i32.const 37) (i32.const 0)) (i32.const 0) (i32.const 68) (ref.null none)))
    (global $java$nio$charset$Charset_cls (ref $java$nio$charset$Charset_rtt) (struct.new $java$nio$charset$Charset_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 69) (array.new_fixed $t7 (i32.const 51) (i32.const 69) (i32.const 0)) (i32.const 0) (i32.const 69) (ref.null none) (ref.null none)))
    (global $java$util$HashMap$EntryIterator_cls (ref $java$util$HashMap$EntryIterator_rtt) (struct.new $java$util$HashMap$EntryIterator_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 70) (array.new_fixed $t7 (i32.const 25) (i32.const 48) (i32.const 0) (i32.const 70)) (i32.const 0) (i32.const 70) (ref.null none)))
    (global $java$util$Collection_cls (ref $java$util$Collection_rtt) (struct.new $java$util$Collection_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 71) (array.new_fixed $t7 (i32.const 26) (i32.const 71) (i32.const 0)) (i32.const 0) (i32.const 71) (ref.null none)))
    (global $java$io$Closeable_cls (ref $java$io$Closeable_rtt) (struct.new $java$io$Closeable_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 72) (array.new_fixed $t7 (i32.const 72) (i32.const 53) (i32.const 0)) (i32.const 0) (i32.const 72) (ref.null none)))
    (global $java$util$ImmutableCollections$MapN$MapNIterator_cls (ref $java$util$ImmutableCollections$MapN$MapNIterator_rtt) (struct.new $java$util$ImmutableCollections$MapN$MapNIterator_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 73) (array.new_fixed $t7 (i32.const 25) (i32.const 73) (i32.const 0)) (i32.const 0) (i32.const 73) (ref.null none)))
    (global $java$lang$String_cls (ref $java$lang$String_rtt) (struct.new $java$lang$String_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 74) (array.new_fixed $t7 (i32.const 51) (i32.const 35) (i32.const 74) (i32.const 0)) (i32.const 0) (i32.const 74) (ref.null none)))
    (global $java$lang$Thread_cls (ref $java$lang$Thread_rtt) (struct.new $java$lang$Thread_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 75) (array.new_fixed $t7 (i32.const 75) (i32.const 4) (i32.const 0)) (i32.const 0) (i32.const 75) (ref.null none) (ref.null none)))
    (global $de$mirkosertic$bytecoder$api$vue$VueEventListener_cls (ref $de$mirkosertic$bytecoder$api$vue$VueEventListener_rtt) (struct.new $de$mirkosertic$bytecoder$api$vue$VueEventListener_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 76) (array.new_fixed $t7 (i32.const 47) (i32.const 76) (i32.const 0)) (i32.const 0) (i32.const 76) (ref.null none)))
    (global $jdk$internal$util$Preconditions$1_cls (ref $jdk$internal$util$Preconditions$1_rtt) (struct.new $jdk$internal$util$Preconditions$1_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 77) (array.new_fixed $t7 (i32.const 77) (i32.const 37) (i32.const 0)) (i32.const 0) (i32.const 77) (ref.null none)))
    (global $de$mirkosertic$bytecoder$api$web$Event_cls (ref $de$mirkosertic$bytecoder$api$web$Event_rtt) (struct.new $de$mirkosertic$bytecoder$api$web$Event_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 78) (array.new_fixed $t7 (i32.const 78) (i32.const 0) (i32.const 6)) (i32.const 0) (i32.const 78) (ref.null none)))
    (global $java$io$PrintStream$1_cls (ref $java$io$PrintStream$1_rtt) (struct.new $java$io$PrintStream$1_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 79) (array.new_fixed $t7 (i32.const 0) (i32.const 79) (i32.const 5)) (i32.const 0) (i32.const 79) (ref.null none)))
    (global $java$util$HashMap$Node_cls (ref $java$util$HashMap$Node_rtt) (struct.new $java$util$HashMap$Node_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 80) (array.new_fixed $t7 (i32.const 80) (i32.const 57) (i32.const 0)) (i32.const 0) (i32.const 80) (ref.null none)))
    (global $java$lang$StringBuilder_cls (ref $java$lang$StringBuilder_rtt) (struct.new $java$lang$StringBuilder_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 81) (array.new_fixed $t7 (i32.const 35) (i32.const 18) (i32.const 81) (i32.const 0)) (i32.const 0) (i32.const 81) (ref.null none)))
    (global $java$util$AbstractMap_cls (ref $java$util$AbstractMap_rtt) (struct.new $java$util$AbstractMap_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 82) (array.new_fixed $t7 (i32.const 15) (i32.const 0) (i32.const 82)) (i32.const 0) (i32.const 82) (ref.null none)))
    (global $java$util$concurrent$ConcurrentMap_cls (ref $java$util$concurrent$ConcurrentMap_rtt) (struct.new $java$util$concurrent$ConcurrentMap_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 83) (array.new_fixed $t7 (i32.const 83) (i32.const 15) (i32.const 0)) (i32.const 0) (i32.const 83) (ref.null none)))
    (global $de$mirkosertic$bytecoder$api$vue$VueData_cls (ref $de$mirkosertic$bytecoder$api$vue$VueData_rtt) (struct.new $de$mirkosertic$bytecoder$api$vue$VueData_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 84) (array.new_fixed $t7 (i32.const 84) (i32.const 0) (i32.const 6)) (i32.const 0) (i32.const 84) (ref.null none)))
    (global $java$lang$Number_cls (ref $java$lang$Number_rtt) (struct.new $java$lang$Number_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 85) (array.new_fixed $t7 (i32.const 54) (i32.const 0) (i32.const 85)) (i32.const 0) (i32.const 85) (ref.null none)))
    (global $java$util$Collections$EmptyIterator_cls (ref $java$util$Collections$EmptyIterator_rtt) (struct.new $java$util$Collections$EmptyIterator_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 86) (array.new_fixed $t7 (i32.const 25) (i32.const 86) (i32.const 0)) (i32.const 0) (i32.const 86) (ref.null none) (ref.null none)))
    (global $java$util$Hashtable_cls (ref $java$util$Hashtable_rtt) (struct.new $java$util$Hashtable_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 87) (array.new_fixed $t7 (i32.const 65) (i32.const 3) (i32.const 15) (i32.const 54) (i32.const 87) (i32.const 0)) (i32.const 0) (i32.const 87) (ref.null none)))
    (global $java$lang$reflect$ParameterizedType_cls (ref $java$lang$reflect$ParameterizedType_rtt) (struct.new $java$lang$reflect$ParameterizedType_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 88) (array.new_fixed $t7 (i32.const 52) (i32.const 88) (i32.const 0)) (i32.const 0) (i32.const 88) (ref.null none)))
    (global $java$util$ImmutableCollections$SetN$SetNIterator_cls (ref $java$util$ImmutableCollections$SetN$SetNIterator_rtt) (struct.new $java$util$ImmutableCollections$SetN$SetNIterator_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 89) (array.new_fixed $t7 (i32.const 25) (i32.const 89) (i32.const 0)) (i32.const 0) (i32.const 89) (ref.null none)))
    (global $de$mirkosertic$bytecoder$classlib$VM$1_cls (ref $de$mirkosertic$bytecoder$classlib$VM$1_rtt) (struct.new $de$mirkosertic$bytecoder$classlib$VM$1_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 90) (array.new_fixed $t7 (i32.const 64) (i32.const 90) (i32.const 0)) (i32.const 0) (i32.const 90) (ref.null none)))
    (global $java$lang$ref$WeakReference_cls (ref $java$lang$ref$WeakReference_rtt) (struct.new $java$lang$ref$WeakReference_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 91) (array.new_fixed $t7 (i32.const 0) (i32.const 91) (i32.const 21)) (i32.const 0) (i32.const 91) (ref.null none)))
    (global $jdk$internal$util$Preconditions$4_cls (ref $jdk$internal$util$Preconditions$4_rtt) (struct.new $jdk$internal$util$Preconditions$4_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 92) (array.new_fixed $t7 (i32.const 92) (i32.const 0) (i32.const 61)) (i32.const 0) (i32.const 92) (ref.null none)))
    (global $java$util$KeyValueHolder_cls (ref $java$util$KeyValueHolder_rtt) (struct.new $java$util$KeyValueHolder_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 93) (array.new_fixed $t7 (i32.const 93) (i32.const 57) (i32.const 0)) (i32.const 0) (i32.const 93) (ref.null none)))
    (global $java$lang$Exception_cls (ref $java$lang$Exception_rtt) (struct.new $java$lang$Exception_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 94) (array.new_fixed $t7 (i32.const 94) (i32.const 0) (i32.const 62)) (i32.const 0) (i32.const 94) (ref.null none)))
    (global $de$mirkosertic$bytecoder$classlib$BytecoderCharsetEncoder_cls (ref $de$mirkosertic$bytecoder$classlib$BytecoderCharsetEncoder_rtt) (struct.new $de$mirkosertic$bytecoder$classlib$BytecoderCharsetEncoder_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 95) (array.new_fixed $t7 (i32.const 95) (i32.const 7) (i32.const 0)) (i32.const 0) (i32.const 95) (ref.null none)))
    (global $java$nio$Buffer$1_cls (ref $java$nio$Buffer$1_rtt) (struct.new $java$nio$Buffer$1_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 96) (array.new_fixed $t7 (i32.const 96) (i32.const 66) (i32.const 0)) (i32.const 0) (i32.const 96) (ref.null none)))
    (global $jdk$internal$util$Preconditions$3_cls (ref $jdk$internal$util$Preconditions$3_rtt) (struct.new $jdk$internal$util$Preconditions$3_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 97) (array.new_fixed $t7 (i32.const 37) (i32.const 97) (i32.const 0)) (i32.const 0) (i32.const 97) (ref.null none)))
    (global $de$mirkosertic$bytecoder$api$vue$VueBuilder_cls (ref $de$mirkosertic$bytecoder$api$vue$VueBuilder_rtt) (struct.new $de$mirkosertic$bytecoder$api$vue$VueBuilder_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 98) (array.new_fixed $t7 (i32.const 98) (i32.const 0) (i32.const 6)) (i32.const 0) (i32.const 98) (ref.null none)))
    (global $java$util$concurrent$locks$ReentrantLock_cls (ref $java$util$concurrent$locks$ReentrantLock_rtt) (struct.new $java$util$concurrent$locks$ReentrantLock_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 99) (array.new_fixed $t7 (i32.const 19) (i32.const 99) (i32.const 0)) (i32.const 0) (i32.const 99) (ref.null none)))
    (global $java$nio$ByteBuffer_cls (ref $java$nio$ByteBuffer_rtt) (struct.new $java$nio$ByteBuffer_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 100) (array.new_fixed $t7 (i32.const 51) (i32.const 100) (i32.const 29) (i32.const 0)) (i32.const 0) (i32.const 100) (ref.null none) (i32.const 0) (i64.const 0)))
    (global $java$util$AbstractList$Itr_cls (ref $java$util$AbstractList$Itr_rtt) (struct.new $java$util$AbstractList$Itr_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 101) (array.new_fixed $t7 (i32.const 25) (i32.const 101) (i32.const 0)) (i32.const 0) (i32.const 101) (ref.null none)))
    (global $de$mirkosertic$bytecoder$classlib$BytecoderCharsetDecoder_cls (ref $de$mirkosertic$bytecoder$classlib$BytecoderCharsetDecoder_rtt) (struct.new $de$mirkosertic$bytecoder$classlib$BytecoderCharsetDecoder_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 102) (array.new_fixed $t7 (i32.const 34) (i32.const 0) (i32.const 102)) (i32.const 0) (i32.const 102) (ref.null none)))
    (global $java$lang$Error_cls (ref $java$lang$Error_rtt) (struct.new $java$lang$Error_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 103) (array.new_fixed $t7 (i32.const 0) (i32.const 103) (i32.const 62)) (i32.const 0) (i32.const 103) (ref.null none)))
    (global $java$util$ListIterator_cls (ref $java$util$ListIterator_rtt) (struct.new $java$util$ListIterator_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 104) (array.new_fixed $t7 (i32.const 25) (i32.const 104) (i32.const 0)) (i32.const 0) (i32.const 104) (ref.null none)))
    (global $java$io$Writer_cls (ref $java$io$Writer_rtt) (struct.new $java$io$Writer_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 105) (array.new_fixed $t7 (i32.const 105) (i32.const 72) (i32.const 53) (i32.const 43) (i32.const 0) (i32.const 33)) (i32.const 0) (i32.const 105) (ref.null none)))
    (global $java$nio$HeapByteBuffer_cls (ref $java$nio$HeapByteBuffer_rtt) (struct.new $java$nio$HeapByteBuffer_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 106) (array.new_fixed $t7 (i32.const 51) (i32.const 100) (i32.const 29) (i32.const 0) (i32.const 106)) (i32.const 0) (i32.const 106) (ref.null none) (i32.const 0) (i64.const 0) (i64.const 0)))
    (global $java$util$concurrent$ConcurrentHashMap_cls (ref $java$util$concurrent$ConcurrentHashMap_rtt) (struct.new $java$util$concurrent$ConcurrentHashMap_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 107) (array.new_fixed $t7 (i32.const 107) (i32.const 83) (i32.const 15) (i32.const 54) (i32.const 0) (i32.const 82)) (i32.const 0) (i32.const 107) (ref.null none)))
    (global $java$util$ImmutableCollections$AbstractImmutableMap_cls (ref $java$util$ImmutableCollections$AbstractImmutableMap_rtt) (struct.new $java$util$ImmutableCollections$AbstractImmutableMap_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 108) (array.new_fixed $t7 (i32.const 108) (i32.const 54) (i32.const 15) (i32.const 0) (i32.const 82)) (i32.const 0) (i32.const 108) (ref.null none)))
    (global $java$util$Set_cls (ref $java$util$Set_rtt) (struct.new $java$util$Set_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 109) (array.new_fixed $t7 (i32.const 26) (i32.const 109) (i32.const 71) (i32.const 0)) (i32.const 0) (i32.const 109) (ref.null none)))
    (global $java$util$AbstractCollection_cls (ref $java$util$AbstractCollection_rtt) (struct.new $java$util$AbstractCollection_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 110) (array.new_fixed $t7 (i32.const 26) (i32.const 110) (i32.const 71) (i32.const 0)) (i32.const 0) (i32.const 110) (ref.null none)))
    (global $java$util$AbstractList$ListItr_cls (ref $java$util$AbstractList$ListItr_rtt) (struct.new $java$util$AbstractList$ListItr_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 111) (array.new_fixed $t7 (i32.const 25) (i32.const 104) (i32.const 101) (i32.const 0) (i32.const 111)) (i32.const 0) (i32.const 111) (ref.null none)))
    (global $java$nio$charset$CoderMalfunctionError_cls (ref $java$nio$charset$CoderMalfunctionError_rtt) (struct.new $java$nio$charset$CoderMalfunctionError_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 112) (array.new_fixed $t7 (i32.const 112) (i32.const 0) (i32.const 103) (i32.const 62)) (i32.const 0) (i32.const 112) (ref.null none)))
    (global $java$lang$Long_cls (ref $java$lang$Long_rtt) (struct.new $java$lang$Long_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 113) (array.new_fixed $t7 (i32.const 51) (i32.const 113) (i32.const 54) (i32.const 0) (i32.const 85)) (i32.const 0) (i32.const 113) (ref.null none) (ref.null none)))
    (global $de$mirkosertic$bytecoder$classlib$BytecoderCharset_cls (ref $de$mirkosertic$bytecoder$classlib$BytecoderCharset_rtt) (struct.new $de$mirkosertic$bytecoder$classlib$BytecoderCharset_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 114) (array.new_fixed $t7 (i32.const 51) (i32.const 114) (i32.const 69) (i32.const 0)) (i32.const 0) (i32.const 114) (ref.null none)))
    (global $java$nio$HeapCharBuffer_cls (ref $java$nio$HeapCharBuffer_rtt) (struct.new $java$nio$HeapCharBuffer_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 115) (array.new_fixed $t7 (i32.const 51) (i32.const 10) (i32.const 67) (i32.const 35) (i32.const 43) (i32.const 115) (i32.const 29) (i32.const 0)) (i32.const 0) (i32.const 115) (ref.null none) (i32.const 0) (i64.const 0) (i64.const 0)))
    (global $java$lang$Byte_cls (ref $java$lang$Byte_rtt) (struct.new $java$lang$Byte_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 116) (array.new_fixed $t7 (i32.const 51) (i32.const 54) (i32.const 0) (i32.const 116) (i32.const 85)) (i32.const 0) (i32.const 116) (ref.null none) (ref.null none)))
    (global $java$util$Properties_cls (ref $java$util$Properties_rtt) (struct.new $java$util$Properties_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 117) (array.new_fixed $t7 (i32.const 65) (i32.const 3) (i32.const 15) (i32.const 54) (i32.const 117) (i32.const 87) (i32.const 0)) (i32.const 0) (i32.const 117) (ref.null none) (ref.null none)))
    (global $java$lang$RuntimeException_cls (ref $java$lang$RuntimeException_rtt) (struct.new $java$lang$RuntimeException_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 118) (array.new_fixed $t7 (i32.const 94) (i32.const 118) (i32.const 0) (i32.const 62)) (i32.const 0) (i32.const 118) (ref.null none)))
    (global $java$lang$Float_cls (ref $java$lang$Float_rtt) (struct.new $java$lang$Float_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 119) (array.new_fixed $t7 (i32.const 119) (i32.const 51) (i32.const 54) (i32.const 0) (i32.const 85)) (i32.const 0) (i32.const 119) (ref.null none) (ref.null none)))
    (global $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError_cls (ref $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError_rtt) (struct.new $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 120) (array.new_fixed $t7 (i32.const 120) (i32.const 0) (i32.const 103) (i32.const 62)) (i32.const 0) (i32.const 120) (ref.null none)))
    (global $java$util$Collections$SynchronizedCollection_cls (ref $java$util$Collections$SynchronizedCollection_rtt) (struct.new $java$util$Collections$SynchronizedCollection_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 121) (array.new_fixed $t7 (i32.const 26) (i32.const 121) (i32.const 71) (i32.const 54) (i32.const 0)) (i32.const 0) (i32.const 121) (ref.null none)))
    (global $java$lang$VirtualMachineError_cls (ref $java$lang$VirtualMachineError_rtt) (struct.new $java$lang$VirtualMachineError_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 122) (array.new_fixed $t7 (i32.const 122) (i32.const 0) (i32.const 103) (i32.const 62)) (i32.const 0) (i32.const 122) (ref.null none)))
    (global $java$lang$Integer_cls (ref $java$lang$Integer_rtt) (struct.new $java$lang$Integer_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 123) (array.new_fixed $t7 (i32.const 51) (i32.const 54) (i32.const 123) (i32.const 0) (i32.const 85)) (i32.const 0) (i32.const 123) (ref.null none) (ref.null none)))
    (global $java$lang$AssertionError_cls (ref $java$lang$AssertionError_rtt) (struct.new $java$lang$AssertionError_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 124) (array.new_fixed $t7 (i32.const 0) (i32.const 124) (i32.const 103) (i32.const 62)) (i32.const 0) (i32.const 124) (ref.null none)))
    (global $java$util$ImmutableCollections$ListItr_cls (ref $java$util$ImmutableCollections$ListItr_rtt) (struct.new $java$util$ImmutableCollections$ListItr_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 125) (array.new_fixed $t7 (i32.const 25) (i32.const 104) (i32.const 125) (i32.const 0)) (i32.const 0) (i32.const 125) (ref.null none)))
    (global $java$io$InputStream_cls (ref $java$io$InputStream_rtt) (struct.new $java$io$InputStream_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 126) (array.new_fixed $t7 (i32.const 72) (i32.const 53) (i32.const 126) (i32.const 0)) (i32.const 0) (i32.const 126) (ref.null none)))
    (global $java$io$OutputStream_cls (ref $java$io$OutputStream_rtt) (struct.new $java$io$OutputStream_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 127) (array.new_fixed $t7 (i32.const 72) (i32.const 53) (i32.const 127) (i32.const 0) (i32.const 33)) (i32.const 0) (i32.const 127) (ref.null none)))
    (global $de$mirkosertic$bytecoder$api$web$MouseEvent_cls (ref $de$mirkosertic$bytecoder$api$web$MouseEvent_rtt) (struct.new $de$mirkosertic$bytecoder$api$web$MouseEvent_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 128) (array.new_fixed $t7 (i32.const 78) (i32.const 0) (i32.const 128) (i32.const 6)) (i32.const 0) (i32.const 128) (ref.null none)))
    (global $java$util$Collections$EmptyListIterator_cls (ref $java$util$Collections$EmptyListIterator_rtt) (struct.new $java$util$Collections$EmptyListIterator_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 129) (array.new_fixed $t7 (i32.const 25) (i32.const 104) (i32.const 86) (i32.const 0) (i32.const 129)) (i32.const 0) (i32.const 129) (ref.null none) (ref.null none)))
    (global $java$util$LinkedHashMap$Entry_cls (ref $java$util$LinkedHashMap$Entry_rtt) (struct.new $java$util$LinkedHashMap$Entry_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 130) (array.new_fixed $t7 (i32.const 80) (i32.const 57) (i32.const 0) (i32.const 130)) (i32.const 0) (i32.const 130) (ref.null none)))
    (global $java$util$HashMap_cls (ref $java$util$HashMap_rtt) (struct.new $java$util$HashMap_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 131) (array.new_fixed $t7 (i32.const 131) (i32.const 65) (i32.const 15) (i32.const 54) (i32.const 0) (i32.const 82)) (i32.const 0) (i32.const 131) (ref.null none)))
    (global $java$util$List_cls (ref $java$util$List_rtt) (struct.new $java$util$List_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 132) (array.new_fixed $t7 (i32.const 132) (i32.const 26) (i32.const 71) (i32.const 0)) (i32.const 0) (i32.const 132) (ref.null none)))
    (global $java$util$Collections$EmptyMap_cls (ref $java$util$Collections$EmptyMap_rtt) (struct.new $java$util$Collections$EmptyMap_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 133) (array.new_fixed $t7 (i32.const 133) (i32.const 54) (i32.const 15) (i32.const 0) (i32.const 82)) (i32.const 0) (i32.const 133) (ref.null none)))
    (global $de$mirkosertic$bytecoder$api$vue$VueInstance_cls (ref $de$mirkosertic$bytecoder$api$vue$VueInstance_rtt) (struct.new $de$mirkosertic$bytecoder$api$vue$VueInstance_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 134) (array.new_fixed $t7 (i32.const 134) (i32.const 0) (i32.const 84) (i32.const 6)) (i32.const 0) (i32.const 134) (ref.null none)))
    (global $java$lang$Short_cls (ref $java$lang$Short_rtt) (struct.new $java$lang$Short_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 135) (array.new_fixed $t7 (i32.const 135) (i32.const 51) (i32.const 54) (i32.const 0) (i32.const 85)) (i32.const 0) (i32.const 135) (ref.null none) (ref.null none)))
    (global $de$mirkosertic$bytecoder$integrationtest$VueDemo$1_cls (ref $de$mirkosertic$bytecoder$integrationtest$VueDemo$1_rtt) (struct.new $de$mirkosertic$bytecoder$integrationtest$VueDemo$1_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 136) (array.new_fixed $t7 (i32.const 47) (i32.const 76) (i32.const 136) (i32.const 0)) (i32.const 0) (i32.const 136) (ref.null none)))
    (global $java$lang$Double_cls (ref $java$lang$Double_rtt) (struct.new $java$lang$Double_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 137) (array.new_fixed $t7 (i32.const 51) (i32.const 54) (i32.const 137) (i32.const 0) (i32.const 85)) (i32.const 0) (i32.const 137) (ref.null none) (ref.null none)))
    (global $java$lang$ClassCastException_cls (ref $java$lang$ClassCastException_rtt) (struct.new $java$lang$ClassCastException_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 138) (array.new_fixed $t7 (i32.const 94) (i32.const 138) (i32.const 118) (i32.const 0) (i32.const 62)) (i32.const 0) (i32.const 138) (ref.null none)))
    (global $java$nio$BufferOverflowException_cls (ref $java$nio$BufferOverflowException_rtt) (struct.new $java$nio$BufferOverflowException_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 139) (array.new_fixed $t7 (i32.const 94) (i32.const 139) (i32.const 118) (i32.const 0) (i32.const 62)) (i32.const 0) (i32.const 139) (ref.null none)))
    (global $java$lang$IllegalStateException_cls (ref $java$lang$IllegalStateException_rtt) (struct.new $java$lang$IllegalStateException_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 140) (array.new_fixed $t7 (i32.const 94) (i32.const 140) (i32.const 118) (i32.const 0) (i32.const 62)) (i32.const 0) (i32.const 140) (ref.null none)))
    (global $java$util$ImmutableCollections$AbstractImmutableCollection_cls (ref $java$util$ImmutableCollections$AbstractImmutableCollection_rtt) (struct.new $java$util$ImmutableCollections$AbstractImmutableCollection_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 141) (array.new_fixed $t7 (i32.const 26) (i32.const 141) (i32.const 110) (i32.const 71) (i32.const 0)) (i32.const 0) (i32.const 141) (ref.null none)))
    (global $java$util$AbstractList_cls (ref $java$util$AbstractList_rtt) (struct.new $java$util$AbstractList_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 142) (array.new_fixed $t7 (i32.const 132) (i32.const 26) (i32.const 142) (i32.const 71) (i32.const 110) (i32.const 0)) (i32.const 0) (i32.const 142) (ref.null none)))
    (global $java$lang$IllegalArgumentException_cls (ref $java$lang$IllegalArgumentException_rtt) (struct.new $java$lang$IllegalArgumentException_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 143) (array.new_fixed $t7 (i32.const 94) (i32.const 143) (i32.const 118) (i32.const 0) (i32.const 62)) (i32.const 0) (i32.const 143) (ref.null none)))
    (global $java$util$NoSuchElementException_cls (ref $java$util$NoSuchElementException_rtt) (struct.new $java$util$NoSuchElementException_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 144) (array.new_fixed $t7 (i32.const 94) (i32.const 144) (i32.const 118) (i32.const 0) (i32.const 62)) (i32.const 0) (i32.const 144) (ref.null none)))
    (global $java$util$ConcurrentModificationException_cls (ref $java$util$ConcurrentModificationException_rtt) (struct.new $java$util$ConcurrentModificationException_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 145) (array.new_fixed $t7 (i32.const 94) (i32.const 145) (i32.const 118) (i32.const 0) (i32.const 62)) (i32.const 0) (i32.const 145) (ref.null none)))
    (global $java$lang$UnsupportedOperationException_cls (ref $java$lang$UnsupportedOperationException_rtt) (struct.new $java$lang$UnsupportedOperationException_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 146) (array.new_fixed $t7 (i32.const 94) (i32.const 146) (i32.const 118) (i32.const 0) (i32.const 62)) (i32.const 0) (i32.const 146) (ref.null none)))
    (global $de$mirkosertic$bytecoder$integrationtest$VueDemo$MyVueInstance_cls (ref $de$mirkosertic$bytecoder$integrationtest$VueDemo$MyVueInstance_rtt) (struct.new $de$mirkosertic$bytecoder$integrationtest$VueDemo$MyVueInstance_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 147) (array.new_fixed $t7 (i32.const 147) (i32.const 134) (i32.const 0) (i32.const 84) (i32.const 6)) (i32.const 0) (i32.const 147) (ref.null none)))
    (global $java$nio$BufferUnderflowException_cls (ref $java$nio$BufferUnderflowException_rtt) (struct.new $java$nio$BufferUnderflowException_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 148) (array.new_fixed $t7 (i32.const 94) (i32.const 148) (i32.const 118) (i32.const 0) (i32.const 62)) (i32.const 0) (i32.const 148) (ref.null none)))
    (global $java$io$OutputStreamWriter_cls (ref $java$io$OutputStreamWriter_rtt) (struct.new $java$io$OutputStreamWriter_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 149) (array.new_fixed $t7 (i32.const 105) (i32.const 72) (i32.const 53) (i32.const 43) (i32.const 149) (i32.const 0) (i32.const 33)) (i32.const 0) (i32.const 149) (ref.null none)))
    (global $java$io$FileInputStream_cls (ref $java$io$FileInputStream_rtt) (struct.new $java$io$FileInputStream_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 150) (array.new_fixed $t7 (i32.const 72) (i32.const 53) (i32.const 150) (i32.const 126) (i32.const 0)) (i32.const 0) (i32.const 150) (ref.null none)))
    (global $sun$nio$cs$StreamEncoder_cls (ref $sun$nio$cs$StreamEncoder_rtt) (struct.new $sun$nio$cs$StreamEncoder_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 151) (array.new_fixed $t7 (i32.const 105) (i32.const 72) (i32.const 151) (i32.const 53) (i32.const 43) (i32.const 0) (i32.const 33)) (i32.const 0) (i32.const 151) (ref.null none) (i32.const 0)))
    (global $java$util$HashMap$TreeNode_cls (ref $java$util$HashMap$TreeNode_rtt) (struct.new $java$util$HashMap$TreeNode_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 152) (array.new_fixed $t7 (i32.const 80) (i32.const 57) (i32.const 152) (i32.const 0) (i32.const 130)) (i32.const 0) (i32.const 152) (ref.null none) (i32.const 0)))
    (global $java$util$Properties$EntrySet_cls (ref $java$util$Properties$EntrySet_rtt) (struct.new $java$util$Properties$EntrySet_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 153) (array.new_fixed $t7 (i32.const 26) (i32.const 109) (i32.const 71) (i32.const 153) (i32.const 0)) (i32.const 0) (i32.const 153) (ref.null none)))
    (global $java$util$ImmutableCollections$MapN_cls (ref $java$util$ImmutableCollections$MapN_rtt) (struct.new $java$util$ImmutableCollections$MapN_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 154) (array.new_fixed $t7 (i32.const 154) (i32.const 108) (i32.const 54) (i32.const 15) (i32.const 0) (i32.const 82)) (i32.const 0) (i32.const 154) (ref.null none)))
    (global $java$lang$InternalError_cls (ref $java$lang$InternalError_rtt) (struct.new $java$lang$InternalError_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 155) (array.new_fixed $t7 (i32.const 155) (i32.const 122) (i32.const 0) (i32.const 103) (i32.const 62)) (i32.const 0) (i32.const 155) (ref.null none)))
    (global $java$lang$NullPointerException_cls (ref $java$lang$NullPointerException_rtt) (struct.new $java$lang$NullPointerException_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 156) (array.new_fixed $t7 (i32.const 94) (i32.const 156) (i32.const 118) (i32.const 0) (i32.const 62)) (i32.const 0) (i32.const 156) (ref.null none)))
    (global $java$io$BufferedWriter_cls (ref $java$io$BufferedWriter_rtt) (struct.new $java$io$BufferedWriter_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 157) (array.new_fixed $t7 (i32.const 105) (i32.const 72) (i32.const 157) (i32.const 53) (i32.const 43) (i32.const 0) (i32.const 33)) (i32.const 0) (i32.const 157) (ref.null none)))
    (global $java$io$FileOutputStream_cls (ref $java$io$FileOutputStream_rtt) (struct.new $java$io$FileOutputStream_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 158) (array.new_fixed $t7 (i32.const 72) (i32.const 158) (i32.const 53) (i32.const 127) (i32.const 0) (i32.const 33)) (i32.const 0) (i32.const 158) (ref.null none)))
    (global $java$util$AbstractSet_cls (ref $java$util$AbstractSet_rtt) (struct.new $java$util$AbstractSet_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 159) (array.new_fixed $t7 (i32.const 26) (i32.const 159) (i32.const 109) (i32.const 71) (i32.const 110) (i32.const 0)) (i32.const 0) (i32.const 159) (ref.null none)))
    (global $java$util$Collections$SynchronizedSet_cls (ref $java$util$Collections$SynchronizedSet_rtt) (struct.new $java$util$Collections$SynchronizedSet_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 160) (array.new_fixed $t7 (i32.const 26) (i32.const 160) (i32.const 109) (i32.const 71) (i32.const 121) (i32.const 54) (i32.const 0)) (i32.const 0) (i32.const 160) (ref.null none)))
    (global $java$io$FilterOutputStream_cls (ref $java$io$FilterOutputStream_rtt) (struct.new $java$io$FilterOutputStream_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 161) (array.new_fixed $t7 (i32.const 72) (i32.const 53) (i32.const 161) (i32.const 127) (i32.const 0) (i32.const 33)) (i32.const 0) (i32.const 161) (ref.null none)))
    (global $java$lang$IndexOutOfBoundsException_cls (ref $java$lang$IndexOutOfBoundsException_rtt) (struct.new $java$lang$IndexOutOfBoundsException_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 162) (array.new_fixed $t7 (i32.const 94) (i32.const 162) (i32.const 118) (i32.const 0) (i32.const 62)) (i32.const 0) (i32.const 162) (ref.null none)))
    (global $java$util$ImmutableCollections$AbstractImmutableSet_cls (ref $java$util$ImmutableCollections$AbstractImmutableSet_rtt) (struct.new $java$util$ImmutableCollections$AbstractImmutableSet_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 163) (array.new_fixed $t7 (i32.const 26) (i32.const 163) (i32.const 141) (i32.const 109) (i32.const 71) (i32.const 110) (i32.const 0)) (i32.const 0) (i32.const 163) (ref.null none)))
    (global $java$lang$StringIndexOutOfBoundsException_cls (ref $java$lang$StringIndexOutOfBoundsException_rtt) (struct.new $java$lang$StringIndexOutOfBoundsException_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 164) (array.new_fixed $t7 (i32.const 94) (i32.const 164) (i32.const 162) (i32.const 118) (i32.const 0) (i32.const 62)) (i32.const 0) (i32.const 164) (ref.null none)))
    (global $java$util$ImmutableCollections$MapN$1_cls (ref $java$util$ImmutableCollections$MapN$1_rtt) (struct.new $java$util$ImmutableCollections$MapN$1_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 165) (array.new_fixed $t7 (i32.const 26) (i32.const 159) (i32.const 109) (i32.const 71) (i32.const 110) (i32.const 165) (i32.const 0)) (i32.const 0) (i32.const 165) (ref.null none)))
    (global $java$util$HashMap$EntrySet_cls (ref $java$util$HashMap$EntrySet_rtt) (struct.new $java$util$HashMap$EntrySet_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 166) (array.new_fixed $t7 (i32.const 26) (i32.const 166) (i32.const 159) (i32.const 109) (i32.const 71) (i32.const 110) (i32.const 0)) (i32.const 0) (i32.const 166) (ref.null none)))
    (global $java$lang$ArrayIndexOutOfBoundsException_cls (ref $java$lang$ArrayIndexOutOfBoundsException_rtt) (struct.new $java$lang$ArrayIndexOutOfBoundsException_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 167) (array.new_fixed $t7 (i32.const 94) (i32.const 162) (i32.const 118) (i32.const 0) (i32.const 167) (i32.const 62)) (i32.const 0) (i32.const 167) (ref.null none)))
    (global $java$io$PrintStream_cls (ref $java$io$PrintStream_rtt) (struct.new $java$io$PrintStream_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 168) (array.new_fixed $t7 (i32.const 72) (i32.const 53) (i32.const 43) (i32.const 161) (i32.const 168) (i32.const 0) (i32.const 127) (i32.const 33)) (i32.const 0) (i32.const 168) (ref.null none)))
    (global $java$util$ImmutableCollections$AbstractImmutableList_cls (ref $java$util$ImmutableCollections$AbstractImmutableList_rtt) (struct.new $java$util$ImmutableCollections$AbstractImmutableList_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 169) (array.new_fixed $t7 (i32.const 132) (i32.const 26) (i32.const 141) (i32.const 71) (i32.const 110) (i32.const 169) (i32.const 0) (i32.const 31)) (i32.const 0) (i32.const 169) (ref.null none)))
    (global $java$nio$ReadOnlyBufferException_cls (ref $java$nio$ReadOnlyBufferException_rtt) (struct.new $java$nio$ReadOnlyBufferException_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 170) (array.new_fixed $t7 (i32.const 94) (i32.const 146) (i32.const 118) (i32.const 0) (i32.const 170) (i32.const 62)) (i32.const 0) (i32.const 170) (ref.null none)))
    (global $java$util$Collections$EmptyList_cls (ref $java$util$Collections$EmptyList_rtt) (struct.new $java$util$Collections$EmptyList_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 171) (array.new_fixed $t7 (i32.const 132) (i32.const 26) (i32.const 142) (i32.const 54) (i32.const 71) (i32.const 110) (i32.const 0) (i32.const 31) (i32.const 171)) (i32.const 0) (i32.const 171) (ref.null none)))
    (global $java$util$Collections$EmptySet_cls (ref $java$util$Collections$EmptySet_rtt) (struct.new $java$util$Collections$EmptySet_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 172) (array.new_fixed $t7 (i32.const 26) (i32.const 172) (i32.const 159) (i32.const 109) (i32.const 54) (i32.const 71) (i32.const 110) (i32.const 0)) (i32.const 0) (i32.const 172) (ref.null none)))
    (global $java$io$FileWriter_cls (ref $java$io$FileWriter_rtt) (struct.new $java$io$FileWriter_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 173) (array.new_fixed $t7 (i32.const 105) (i32.const 72) (i32.const 53) (i32.const 43) (i32.const 149) (i32.const 173) (i32.const 0) (i32.const 33)) (i32.const 0) (i32.const 173) (ref.null none)))
    (global $java$util$ImmutableCollections$SetN_cls (ref $java$util$ImmutableCollections$SetN_rtt) (struct.new $java$util$ImmutableCollections$SetN_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 174) (array.new_fixed $t7 (i32.const 26) (i32.const 174) (i32.const 163) (i32.const 141) (i32.const 109) (i32.const 54) (i32.const 71) (i32.const 110) (i32.const 0)) (i32.const 0) (i32.const 174) (ref.null none)))
    (global $java$util$ImmutableCollections$ListN_cls (ref $java$util$ImmutableCollections$ListN_rtt) (struct.new $java$util$ImmutableCollections$ListN_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 175) (array.new_fixed $t7 (i32.const 132) (i32.const 26) (i32.const 141) (i32.const 54) (i32.const 71) (i32.const 110) (i32.const 175) (i32.const 169) (i32.const 0) (i32.const 31)) (i32.const 0) (i32.const 175) (ref.null none)))
    (global $java$util$ImmutableCollections$List12_cls (ref $java$util$ImmutableCollections$List12_rtt) (struct.new $java$util$ImmutableCollections$List12_rtt (i32.const -1) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none) (i32.const 176) (array.new_fixed $t7 (i32.const 132) (i32.const 26) (i32.const 141) (i32.const 176) (i32.const 54) (i32.const 71) (i32.const 110) (i32.const 169) (i32.const 0) (i32.const 31)) (i32.const 0) (i32.const 176) (ref.null none)))
    (global $primitive_boolean (ref $java$lang$Object) (struct.new $java$lang$Object (i32.const -10) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none)))
    (global $primitive_byte (ref $java$lang$Object) (struct.new $java$lang$Object (i32.const -20) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none)))
    (global $primitive_char (ref $java$lang$Object) (struct.new $java$lang$Object (i32.const -21) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none)))
    (global $primitive_short (ref $java$lang$Object) (struct.new $java$lang$Object (i32.const -22) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none)))
    (global $primitive_int (ref $java$lang$Object) (struct.new $java$lang$Object (i32.const -23) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none)))
    (global $primitive_long (ref $java$lang$Object) (struct.new $java$lang$Object (i32.const -24) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none)))
    (global $primitive_float (ref $java$lang$Object) (struct.new $java$lang$Object (i32.const -25) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none)))
    (global $primitive_double (ref $java$lang$Object) (struct.new $java$lang$Object (i32.const -26) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none)))
    (global $primitive_void (ref $java$lang$Object) (struct.new $java$lang$Object (i32.const -27) (ref.func $java$lang$Class_vt) (ref.null noextern) (ref.null none)))
    (global $stringpool_0 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_1 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_2 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_3 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_4 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_5 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_6 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_7 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_8 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_9 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_10 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_11 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_12 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_13 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_14 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_15 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_16 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_17 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_18 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_19 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_20 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_21 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_22 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_23 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_24 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_25 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_26 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_27 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_28 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_29 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_30 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_31 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_32 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_33 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_34 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_35 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_36 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_37 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_38 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_39 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_40 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_41 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_42 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_43 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_44 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_45 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_46 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_47 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_48 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_49 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_50 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_51 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_52 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_53 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_54 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_55 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_56 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_57 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_58 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_59 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_60 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_61 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_62 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_63 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_64 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_65 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_66 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_67 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_68 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_69 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_70 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_71 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_72 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_73 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_74 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_75 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_76 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_77 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_78 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_79 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_80 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_81 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_82 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_83 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_84 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_85 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_86 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_87 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_88 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_89 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_90 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_91 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_92 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_93 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_94 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_95 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_96 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_97 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_98 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_99 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_100 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_101 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_102 (mut (ref null $java$lang$String)) (ref.null none))
    (global $stringpool_103 (mut (ref null $java$lang$String)) (ref.null none))
    (global $lastcaughtexception (mut (ref null $java$lang$Object)) (ref.null none))
    (tag $javaexception (param (ref null $java$lang$Object)))
    (table 728 funcref)
    (elem (i32.const 0) $java$lang$Object_vt)
    (elem (i32.const 1) $java$nio$ByteOrder_vt)
    (elem (i32.const 2) $jdk$internal$misc$VM_vt)
    (elem (i32.const 3) $java$util$Dictionary_vt)
    (elem (i32.const 4) $java$lang$Runnable_vt)
    (elem (i32.const 5) $jdk$internal$access$JavaIOPrintStreamAccess_vt)
    (elem (i32.const 6) $de$mirkosertic$bytecoder$api$OpaqueReferenceType_vt)
    (elem (i32.const 7) $java$nio$charset$CharsetEncoder_vt)
    (elem (i32.const 8) $de$mirkosertic$bytecoder$classlib$java$lang$TMath_vt)
    (elem (i32.const 9) $java$lang$ThreadGroup_vt)
    (elem (i32.const 10) $java$lang$Readable_vt)
    (elem (i32.const 11) $java$util$ImmutableCollections_vt)
    (elem (i32.const 12) $java$lang$System_vt)
    (elem (i32.const 13) $jdk$internal$foreign$MemorySessionImpl_vt)
    (elem (i32.const 14) $java$lang$invoke$CallSite_vt)
    (elem (i32.const 15) $java$util$Map_vt)
    (elem (i32.const 16) $java$util$function$Supplier_vt)
    (elem (i32.const 17) $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup_vt)
    (elem (i32.const 18) $java$lang$AbstractStringBuilder_vt)
    (elem (i32.const 19) $java$util$concurrent$locks$Lock_vt)
    (elem (i32.const 20) $java$lang$Character_vt)
    (elem (i32.const 21) $java$lang$ref$Reference_vt)
    (elem (i32.const 22) $de$mirkosertic$bytecoder$classlib$VM_vt)
    (elem (i32.const 23) $java$lang$invoke$MethodHandle_vt)
    (elem (i32.const 24) $java$nio$charset$CodingErrorAction_vt)
    (elem (i32.const 25) $java$util$Iterator_vt)
    (elem (i32.const 26) $java$lang$Iterable_vt)
    (elem (i32.const 27) $java$lang$Math_vt)
    (elem (i32.const 28) $jdk$internal$util$Preconditions_vt)
    (elem (i32.const 29) $java$nio$Buffer_vt)
    (elem (i32.const 30) $de$mirkosertic$bytecoder$classlib$java$lang$ref$TReference_vt)
    (elem (i32.const 31) $java$util$RandomAccess_vt)
    (elem (i32.const 32) $java$io$FileDescriptor_vt)
    (elem (i32.const 33) $java$io$Flushable_vt)
    (elem (i32.const 34) $java$nio$charset$CharsetDecoder_vt)
    (elem (i32.const 35) $java$lang$CharSequence_vt)
    (elem (i32.const 36) $java$lang$Class_vt)
    (elem (i32.const 37) $java$util$function$Function_vt)
    (elem (i32.const 38) $java$util$Objects_vt)
    (elem (i32.const 39) $de$mirkosertic$bytecoder$api$vue$Vue_vt)
    (elem (i32.const 40) $java$nio$BufferMismatch_vt)
    (elem (i32.const 41) $java$nio$charset$CoderResult_vt)
    (elem (i32.const 42) $java$nio$charset$CoderResult$Cache_vt)
    (elem (i32.const 43) $java$lang$Appendable_vt)
    (elem (i32.const 44) $jdk$internal$access$SharedSecrets_vt)
    (elem (i32.const 45) $java$util$Arrays_vt)
    (elem (i32.const 46) $java$lang$Void_vt)
    (elem (i32.const 47) $de$mirkosertic$bytecoder$api$Callback_vt)
    (elem (i32.const 48) $java$util$HashMap$HashIterator_vt)
    (elem (i32.const 49) $de$mirkosertic$bytecoder$classlib$Array_vt)
    (elem (i32.const 50) $jdk$internal$misc$ScopedMemoryAccess_vt)
    (elem (i32.const 51) $java$lang$Comparable_vt)
    (elem (i32.const 52) $java$lang$reflect$Type_vt)
    (elem (i32.const 53) $java$lang$AutoCloseable_vt)
    (elem (i32.const 54) $java$io$Serializable_vt)
    (elem (i32.const 55) $jdk$internal$util$ArraysSupport_vt)
    (elem (i32.const 56) $jdk$internal$misc$InternalLock_vt)
    (elem (i32.const 57) $java$util$Map$Entry_vt)
    (elem (i32.const 58) $de$mirkosertic$bytecoder$integrationtest$VueDemo_vt)
    (elem (i32.const 59) $jdk$internal$misc$CDS_vt)
    (elem (i32.const 60) $jdk$internal$misc$Unsafe_vt)
    (elem (i32.const 61) $java$util$function$BiFunction_vt)
    (elem (i32.const 62) $java$lang$Throwable_vt)
    (elem (i32.const 63) $java$util$Collections_vt)
    (elem (i32.const 64) $java$lang$ClassLoader_vt)
    (elem (i32.const 65) $java$lang$Cloneable_vt)
    (elem (i32.const 66) $jdk$internal$access$JavaNioAccess_vt)
    (elem (i32.const 67) $java$nio$CharBuffer_vt)
    (elem (i32.const 68) $jdk$internal$util$Preconditions$2_vt)
    (elem (i32.const 69) $java$nio$charset$Charset_vt)
    (elem (i32.const 70) $java$util$HashMap$EntryIterator_vt)
    (elem (i32.const 71) $java$util$Collection_vt)
    (elem (i32.const 72) $java$io$Closeable_vt)
    (elem (i32.const 73) $java$util$ImmutableCollections$MapN$MapNIterator_vt)
    (elem (i32.const 74) $java$lang$String_vt)
    (elem (i32.const 75) $java$lang$Thread_vt)
    (elem (i32.const 76) $de$mirkosertic$bytecoder$api$vue$VueEventListener_vt)
    (elem (i32.const 77) $jdk$internal$util$Preconditions$1_vt)
    (elem (i32.const 78) $de$mirkosertic$bytecoder$api$web$Event_vt)
    (elem (i32.const 79) $java$io$PrintStream$1_vt)
    (elem (i32.const 80) $java$util$HashMap$Node_vt)
    (elem (i32.const 81) $java$lang$StringBuilder_vt)
    (elem (i32.const 82) $java$util$AbstractMap_vt)
    (elem (i32.const 83) $java$util$concurrent$ConcurrentMap_vt)
    (elem (i32.const 84) $de$mirkosertic$bytecoder$api$vue$VueData_vt)
    (elem (i32.const 85) $java$lang$Number_vt)
    (elem (i32.const 86) $java$util$Collections$EmptyIterator_vt)
    (elem (i32.const 87) $java$util$Hashtable_vt)
    (elem (i32.const 88) $java$lang$reflect$ParameterizedType_vt)
    (elem (i32.const 89) $java$util$ImmutableCollections$SetN$SetNIterator_vt)
    (elem (i32.const 90) $de$mirkosertic$bytecoder$classlib$VM$1_vt)
    (elem (i32.const 91) $java$lang$ref$WeakReference_vt)
    (elem (i32.const 92) $jdk$internal$util$Preconditions$4_vt)
    (elem (i32.const 93) $java$util$KeyValueHolder_vt)
    (elem (i32.const 94) $java$lang$Exception_vt)
    (elem (i32.const 95) $de$mirkosertic$bytecoder$classlib$BytecoderCharsetEncoder_vt)
    (elem (i32.const 96) $java$nio$Buffer$1_vt)
    (elem (i32.const 97) $jdk$internal$util$Preconditions$3_vt)
    (elem (i32.const 98) $de$mirkosertic$bytecoder$api$vue$VueBuilder_vt)
    (elem (i32.const 99) $java$util$concurrent$locks$ReentrantLock_vt)
    (elem (i32.const 100) $java$nio$ByteBuffer_vt)
    (elem (i32.const 101) $java$util$AbstractList$Itr_vt)
    (elem (i32.const 102) $de$mirkosertic$bytecoder$classlib$BytecoderCharsetDecoder_vt)
    (elem (i32.const 103) $java$lang$Error_vt)
    (elem (i32.const 104) $java$util$ListIterator_vt)
    (elem (i32.const 105) $java$io$Writer_vt)
    (elem (i32.const 106) $java$nio$HeapByteBuffer_vt)
    (elem (i32.const 107) $java$util$concurrent$ConcurrentHashMap_vt)
    (elem (i32.const 108) $java$util$ImmutableCollections$AbstractImmutableMap_vt)
    (elem (i32.const 109) $java$util$Set_vt)
    (elem (i32.const 110) $java$util$AbstractCollection_vt)
    (elem (i32.const 111) $java$util$AbstractList$ListItr_vt)
    (elem (i32.const 112) $java$nio$charset$CoderMalfunctionError_vt)
    (elem (i32.const 113) $java$lang$Long_vt)
    (elem (i32.const 114) $de$mirkosertic$bytecoder$classlib$BytecoderCharset_vt)
    (elem (i32.const 115) $java$nio$HeapCharBuffer_vt)
    (elem (i32.const 116) $java$lang$Byte_vt)
    (elem (i32.const 117) $java$util$Properties_vt)
    (elem (i32.const 118) $java$lang$RuntimeException_vt)
    (elem (i32.const 119) $java$lang$Float_vt)
    (elem (i32.const 120) $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError_vt)
    (elem (i32.const 121) $java$util$Collections$SynchronizedCollection_vt)
    (elem (i32.const 122) $java$lang$VirtualMachineError_vt)
    (elem (i32.const 123) $java$lang$Integer_vt)
    (elem (i32.const 124) $java$lang$AssertionError_vt)
    (elem (i32.const 125) $java$util$ImmutableCollections$ListItr_vt)
    (elem (i32.const 126) $java$io$InputStream_vt)
    (elem (i32.const 127) $java$io$OutputStream_vt)
    (elem (i32.const 128) $de$mirkosertic$bytecoder$api$web$MouseEvent_vt)
    (elem (i32.const 129) $java$util$Collections$EmptyListIterator_vt)
    (elem (i32.const 130) $java$util$LinkedHashMap$Entry_vt)
    (elem (i32.const 131) $java$util$HashMap_vt)
    (elem (i32.const 132) $java$util$List_vt)
    (elem (i32.const 133) $java$util$Collections$EmptyMap_vt)
    (elem (i32.const 134) $de$mirkosertic$bytecoder$api$vue$VueInstance_vt)
    (elem (i32.const 135) $java$lang$Short_vt)
    (elem (i32.const 136) $de$mirkosertic$bytecoder$integrationtest$VueDemo$1_vt)
    (elem (i32.const 137) $java$lang$Double_vt)
    (elem (i32.const 138) $java$lang$ClassCastException_vt)
    (elem (i32.const 139) $java$nio$BufferOverflowException_vt)
    (elem (i32.const 140) $java$lang$IllegalStateException_vt)
    (elem (i32.const 141) $java$util$ImmutableCollections$AbstractImmutableCollection_vt)
    (elem (i32.const 142) $java$util$AbstractList_vt)
    (elem (i32.const 143) $java$lang$IllegalArgumentException_vt)
    (elem (i32.const 144) $java$util$NoSuchElementException_vt)
    (elem (i32.const 145) $java$util$ConcurrentModificationException_vt)
    (elem (i32.const 146) $java$lang$UnsupportedOperationException_vt)
    (elem (i32.const 147) $de$mirkosertic$bytecoder$integrationtest$VueDemo$MyVueInstance_vt)
    (elem (i32.const 148) $java$nio$BufferUnderflowException_vt)
    (elem (i32.const 149) $java$io$OutputStreamWriter_vt)
    (elem (i32.const 150) $java$io$FileInputStream_vt)
    (elem (i32.const 151) $sun$nio$cs$StreamEncoder_vt)
    (elem (i32.const 152) $java$util$HashMap$TreeNode_vt)
    (elem (i32.const 153) $java$util$Properties$EntrySet_vt)
    (elem (i32.const 154) $java$util$ImmutableCollections$MapN_vt)
    (elem (i32.const 155) $java$lang$InternalError_vt)
    (elem (i32.const 156) $java$lang$NullPointerException_vt)
    (elem (i32.const 157) $java$io$BufferedWriter_vt)
    (elem (i32.const 158) $java$io$FileOutputStream_vt)
    (elem (i32.const 159) $java$util$AbstractSet_vt)
    (elem (i32.const 160) $java$util$Collections$SynchronizedSet_vt)
    (elem (i32.const 161) $java$io$FilterOutputStream_vt)
    (elem (i32.const 162) $java$lang$IndexOutOfBoundsException_vt)
    (elem (i32.const 163) $java$util$ImmutableCollections$AbstractImmutableSet_vt)
    (elem (i32.const 164) $java$lang$StringIndexOutOfBoundsException_vt)
    (elem (i32.const 165) $java$util$ImmutableCollections$MapN$1_vt)
    (elem (i32.const 166) $java$util$HashMap$EntrySet_vt)
    (elem (i32.const 167) $java$lang$ArrayIndexOutOfBoundsException_vt)
    (elem (i32.const 168) $java$io$PrintStream_vt)
    (elem (i32.const 169) $java$util$ImmutableCollections$AbstractImmutableList_vt)
    (elem (i32.const 170) $java$nio$ReadOnlyBufferException_vt)
    (elem (i32.const 171) $java$util$Collections$EmptyList_vt)
    (elem (i32.const 172) $java$util$Collections$EmptySet_vt)
    (elem (i32.const 173) $java$io$FileWriter_vt)
    (elem (i32.const 174) $java$util$ImmutableCollections$SetN_vt)
    (elem (i32.const 175) $java$util$ImmutableCollections$ListN_vt)
    (elem (i32.const 176) $java$util$ImmutableCollections$List12_vt)
    (elem (i32.const 177) $java$lang$Object$Ljava$lang$String$$toString$$)
    (elem (i32.const 178) $java$lang$Object$Z$equals$Ljava$lang$Object$)
    (elem (i32.const 179) $java$lang$Object$V$$init$$$)
    (elem (i32.const 180) $java$lang$Object$I$hashCode$$)
    (elem (i32.const 181) $java$nio$ByteOrder$V$$init$$Ljava$lang$String$)
    (elem (i32.const 182) $java$nio$ByteOrder$Ljava$lang$String$$toString$$)
    (elem (i32.const 183) $jdk$internal$misc$VM$V$$init$$$)
    (elem (i32.const 184) $java$util$Dictionary$V$$init$$$)
    (elem (i32.const 185) $java$nio$charset$CharsetEncoder$V$$init$$Ljava$nio$charset$Charset$$F$F)
    (elem (i32.const 186) $java$nio$charset$CharsetEncoder$V$$init$$Ljava$nio$charset$Charset$$F$F$$B)
    (elem (i32.const 187) $java$nio$charset$CharsetEncoder$Ljava$nio$charset$CharsetEncoder$$replaceWith$$B)
    (elem (i32.const 188) $java$nio$charset$CharsetEncoder$Z$isLegalReplacement$$B)
    (elem (i32.const 189) $java$nio$charset$CharsetEncoder$Ljava$nio$charset$Charset$$charset$$)
    (elem (i32.const 190) $java$nio$charset$CharsetEncoder$Ljava$nio$charset$CharsetEncoder$$onMalformedInput$Ljava$nio$charset$CodingErrorAction$)
    (elem (i32.const 191) $java$nio$charset$CharsetEncoder$V$implOnMalformedInput$Ljava$nio$charset$CodingErrorAction$)
    (elem (i32.const 192) $java$nio$charset$CharsetEncoder$Ljava$nio$charset$CharsetEncoder$$onUnmappableCharacter$Ljava$nio$charset$CodingErrorAction$)
    (elem (i32.const 193) $java$nio$charset$CharsetEncoder$V$implOnUnmappableCharacter$Ljava$nio$charset$CodingErrorAction$)
    (elem (i32.const 194) $java$nio$charset$CharsetEncoder$V$implReplaceWith$$B)
    (elem (i32.const 195) $de$mirkosertic$bytecoder$classlib$java$lang$TMath$V$$init$$$)
    (elem (i32.const 196) $java$lang$ThreadGroup$V$$init$$$)
    (elem (i32.const 197) $java$lang$ThreadGroup$V$$init$$Ljava$lang$ThreadGroup$$Ljava$lang$String$)
    (elem (i32.const 198) $java$util$ImmutableCollections$V$$init$$$)
    (elem (i32.const 199) $java$lang$System$V$$init$$$)
    (elem (i32.const 200) $jdk$internal$foreign$MemorySessionImpl$V$checkValidStateRaw$$)
    (elem (i32.const 201) $jdk$internal$foreign$MemorySessionImpl$V$$init$$$)
    (elem (i32.const 202) $java$lang$invoke$CallSite$V$$init$$$)
    (elem (i32.const 203) $java$util$Map$Ljava$lang$Object$$computeIfAbsent$Ljava$lang$Object$$Ljava$util$function$Function$)
    (elem (i32.const 204) $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup$V$$init$$$)
    (elem (i32.const 205) $java$lang$ref$Reference$Ljava$lang$Object$$get$$)
    (elem (i32.const 206) $de$mirkosertic$bytecoder$classlib$VM$V$$init$$$)
    (elem (i32.const 207) $java$lang$invoke$MethodHandle$V$$init$$$)
    (elem (i32.const 208) $java$nio$charset$CodingErrorAction$V$$init$$Ljava$lang$String$)
    (elem (i32.const 209) $java$nio$charset$CodingErrorAction$Ljava$lang$String$$toString$$)
    (elem (i32.const 210) $java$lang$Math$V$$init$$$)
    (elem (i32.const 211) $jdk$internal$util$Preconditions$V$$init$$$)
    (elem (i32.const 212) $java$nio$Buffer$V$$init$$I$I$I$I$Ljava$lang$foreign$MemorySegment$)
    (elem (i32.const 213) $java$nio$Buffer$Ljava$nio$Buffer$$limit$I)
    (elem (i32.const 214) $java$nio$Buffer$Ljava$lang$IllegalArgumentException$$createLimitException$I)
    (elem (i32.const 215) $java$nio$Buffer$Ljava$nio$Buffer$$position$I)
    (elem (i32.const 216) $java$nio$Buffer$Ljava$lang$IllegalArgumentException$$createPositionException$I)
    (elem (i32.const 217) $java$nio$Buffer$I$remaining$$)
    (elem (i32.const 218) $java$nio$Buffer$Z$hasRemaining$$)
    (elem (i32.const 219) $java$nio$Buffer$I$position$$)
    (elem (i32.const 220) $java$nio$Buffer$V$checkSession$$)
    (elem (i32.const 221) $java$nio$Buffer$I$limit$$)
    (elem (i32.const 222) $java$nio$Buffer$I$nextPutIndex$$)
    (elem (i32.const 223) $java$nio$Buffer$Ljdk$internal$foreign$MemorySessionImpl$$session$$)
    (elem (i32.const 224) $java$nio$Buffer$I$capacity$$)
    (elem (i32.const 225) $java$nio$Buffer$I$checkIndex$I)
    (elem (i32.const 226) $de$mirkosertic$bytecoder$classlib$java$lang$ref$TReference$V$$init$$Ljava$lang$Object$)
    (elem (i32.const 227) $java$io$FileDescriptor$I$getFileDescriptorHandle$$)
    (elem (i32.const 228) $java$io$FileDescriptor$V$setFileDescriptorHandle$I)
    (elem (i32.const 229) $java$io$FileDescriptor$V$$init$$I)
    (elem (i32.const 230) $java$io$FileDescriptor$V$$init$$$)
    (elem (i32.const 231) $java$nio$charset$CharsetDecoder$Ljava$nio$charset$CharsetDecoder$$onMalformedInput$Ljava$nio$charset$CodingErrorAction$)
    (elem (i32.const 232) $java$nio$charset$CharsetDecoder$V$implOnMalformedInput$Ljava$nio$charset$CodingErrorAction$)
    (elem (i32.const 233) $java$nio$charset$CharsetDecoder$Ljava$nio$charset$CharsetDecoder$$onUnmappableCharacter$Ljava$nio$charset$CodingErrorAction$)
    (elem (i32.const 234) $java$nio$charset$CharsetDecoder$V$implOnUnmappableCharacter$Ljava$nio$charset$CodingErrorAction$)
    (elem (i32.const 235) $java$nio$charset$CharsetDecoder$F$maxCharsPerByte$$)
    (elem (i32.const 236) $lambda12)
    (elem (i32.const 237) $java.util.function.Function$lambda$13_vt)
    (elem (i32.const 238) $java$nio$charset$CharsetDecoder$Ljava$nio$charset$CoderResult$$decode$Ljava$nio$ByteBuffer$$Ljava$nio$CharBuffer$$Z)
    (elem (i32.const 239) $java$nio$charset$CharsetDecoder$V$throwIllegalStateException$I$I)
    (elem (i32.const 240) $java$nio$charset$CharsetDecoder$Ljava$nio$charset$CharsetDecoder$$reset$$)
    (elem (i32.const 241) $java$nio$charset$CharsetDecoder$V$implReset$$)
    (elem (i32.const 242) $java$nio$charset$CharsetDecoder$V$$init$$Ljava$nio$charset$Charset$$F$F)
    (elem (i32.const 243) $java$nio$charset$CharsetDecoder$V$$init$$Ljava$nio$charset$Charset$$F$F$Ljava$lang$String$)
    (elem (i32.const 244) $java$nio$charset$CharsetDecoder$Ljava$nio$charset$CharsetDecoder$$replaceWith$Ljava$lang$String$)
    (elem (i32.const 245) $java$nio$charset$CharsetDecoder$V$implReplaceWith$Ljava$lang$String$)
    (elem (i32.const 246) $java$nio$charset$CharsetDecoder$Ljava$nio$charset$Charset$$charset$$)
    (elem (i32.const 247) $java$lang$CharSequence$Z$isEmpty$$)
    (elem (i32.const 248) $java$lang$Class$Z$desiredAssertionStatus$$)
    (elem (i32.const 249) $java$lang$Class$$Ljava$lang$reflect$Type$$getGenericInterfaces$$)
    (elem (i32.const 250) $java$lang$Class$Ljava$lang$String$$getName$$)
    (elem (i32.const 251) $java$lang$Class$V$$init$$$)
    (elem (i32.const 252) $java$lang$Class$I$hashCode$$)
    (elem (i32.const 253) $java$util$Objects$V$$init$$$)
    (elem (i32.const 254) $de$mirkosertic$bytecoder$api$vue$Vue$V$$init$$$)
    (elem (i32.const 255) $java$nio$BufferMismatch$V$$init$$$)
    (elem (i32.const 256) $java$nio$charset$CoderResult$V$$init$$I$I)
    (elem (i32.const 257) $java$nio$charset$CoderResult$Z$isOverflow$$)
    (elem (i32.const 258) $java$nio$charset$CoderResult$Z$isUnderflow$$)
    (elem (i32.const 259) $lambda14)
    (elem (i32.const 260) $java.util.function.Function$lambda$15_vt)
    (elem (i32.const 261) $java$nio$charset$CoderResult$Z$isMalformed$$)
    (elem (i32.const 262) $java$nio$charset$CoderResult$I$length$$)
    (elem (i32.const 263) $java$nio$charset$CoderResult$Z$isError$$)
    (elem (i32.const 264) $java$nio$charset$CoderResult$Z$isUnmappable$$)
    (elem (i32.const 265) $java$nio$charset$CoderResult$Ljava$lang$String$$toString$$)
    (elem (i32.const 266) $java$nio$charset$CoderResult$Cache$V$$init$$$)
    (elem (i32.const 267) $jdk$internal$access$SharedSecrets$V$$init$$$)
    (elem (i32.const 268) $java$util$Arrays$V$$init$$$)
    (elem (i32.const 269) $java$lang$Void$V$$init$$$)
    (elem (i32.const 270) $java$util$HashMap$HashIterator$V$$init$$Ljava$util$HashMap$)
    (elem (i32.const 271) $java$util$HashMap$HashIterator$Z$hasNext$$)
    (elem (i32.const 272) $java$util$HashMap$HashIterator$Ljava$util$HashMap$Node$$nextNode$$)
    (elem (i32.const 273) $de$mirkosertic$bytecoder$classlib$Array$V$$init$$$)
    (elem (i32.const 274) $jdk$internal$misc$ScopedMemoryAccess$V$$init$$$)
    (elem (i32.const 275) $jdk$internal$misc$ScopedMemoryAccess$I$vectorizedMismatch$Ljdk$internal$foreign$MemorySessionImpl$$Ljdk$internal$foreign$MemorySessionImpl$$Ljava$lang$Object$$J$Ljava$lang$Object$$J$I$I)
    (elem (i32.const 276) $jdk$internal$misc$ScopedMemoryAccess$I$vectorizedMismatchInternal$Ljdk$internal$foreign$MemorySessionImpl$$Ljdk$internal$foreign$MemorySessionImpl$$Ljava$lang$Object$$J$Ljava$lang$Object$$J$I$I)
    (elem (i32.const 277) $jdk$internal$misc$ScopedMemoryAccess$V$copyMemory$Ljdk$internal$foreign$MemorySessionImpl$$Ljdk$internal$foreign$MemorySessionImpl$$Ljava$lang$Object$$J$Ljava$lang$Object$$J$J)
    (elem (i32.const 278) $jdk$internal$misc$ScopedMemoryAccess$V$copyMemoryInternal$Ljdk$internal$foreign$MemorySessionImpl$$Ljdk$internal$foreign$MemorySessionImpl$$Ljava$lang$Object$$J$Ljava$lang$Object$$J$J)
    (elem (i32.const 279) $jdk$internal$misc$ScopedMemoryAccess$V$copySwapMemory$Ljdk$internal$foreign$MemorySessionImpl$$Ljdk$internal$foreign$MemorySessionImpl$$Ljava$lang$Object$$J$Ljava$lang$Object$$J$J$J)
    (elem (i32.const 280) $jdk$internal$misc$ScopedMemoryAccess$V$copySwapMemoryInternal$Ljdk$internal$foreign$MemorySessionImpl$$Ljdk$internal$foreign$MemorySessionImpl$$Ljava$lang$Object$$J$Ljava$lang$Object$$J$J$J)
    (elem (i32.const 281) $jdk$internal$util$ArraysSupport$V$$init$$$)
    (elem (i32.const 282) $jdk$internal$misc$InternalLock$V$$init$$$)
    (elem (i32.const 283) $de$mirkosertic$bytecoder$integrationtest$VueDemo$V$$init$$$)
    (elem (i32.const 284) $jdk$internal$misc$CDS$V$$init$$$)
    (elem (i32.const 285) $jdk$internal$misc$Unsafe$V$$init$$$)
    (elem (i32.const 286) $jdk$internal$misc$Unsafe$I$arrayBaseOffset$Ljava$lang$Class$)
    (elem (i32.const 287) $jdk$internal$misc$Unsafe$I$arrayIndexScale$Ljava$lang$Class$)
    (elem (i32.const 288) $jdk$internal$misc$Unsafe$Z$isBigEndian$$)
    (elem (i32.const 289) $jdk$internal$misc$Unsafe$V$storeFence$$)
    (elem (i32.const 290) $jdk$internal$misc$Unsafe$J$getLongUnaligned$Ljava$lang$Object$$J)
    (elem (i32.const 291) $jdk$internal$misc$Unsafe$I$getIntUnaligned$Ljava$lang$Object$$J)
    (elem (i32.const 292) $jdk$internal$misc$Unsafe$V$copyMemory$Ljava$lang$Object$$J$Ljava$lang$Object$$J$J)
    (elem (i32.const 293) $jdk$internal$misc$Unsafe$V$copySwapMemory$Ljava$lang$Object$$J$Ljava$lang$Object$$J$J$J)
    (elem (i32.const 294) $java$lang$Throwable$Ljava$lang$String$$getMessage$$)
    (elem (i32.const 295) $java$lang$Throwable$V$$init$$Ljava$lang$String$)
    (elem (i32.const 296) $java$lang$Throwable$V$$init$$$)
    (elem (i32.const 297) $java$lang$Throwable$Ljava$lang$Throwable$$initCause$Ljava$lang$Throwable$)
    (elem (i32.const 298) $java$lang$Throwable$V$$init$$Ljava$lang$Throwable$)
    (elem (i32.const 299) $java$util$Collections$V$$init$$$)
    (elem (i32.const 300) $java$lang$ClassLoader$V$$init$$$)
    (elem (i32.const 301) $java$nio$CharBuffer$V$$init$$I$I$I$I$$C$I$Ljava$lang$foreign$MemorySegment$)
    (elem (i32.const 302) $java$nio$CharBuffer$Ljava$nio$CharBuffer$$put$Ljava$lang$String$)
    (elem (i32.const 303) $java$nio$CharBuffer$Ljava$nio$CharBuffer$$put$Ljava$lang$String$$I$I)
    (elem (i32.const 304) $java$nio$CharBuffer$Z$isEmpty$$)
    (elem (i32.const 305) $java$nio$CharBuffer$I$length$$)
    (elem (i32.const 306) $java$nio$CharBuffer$V$$init$$I$I$I$I$Ljava$lang$foreign$MemorySegment$)
    (elem (i32.const 307) $java$nio$CharBuffer$Ljava$nio$Buffer$$limit$I)
    (elem (i32.const 308) $java$nio$CharBuffer$Ljava$nio$CharBuffer$$limit$I)
    (elem (i32.const 309) $java$nio$CharBuffer$Ljava$nio$Buffer$$position$I)
    (elem (i32.const 310) $java$nio$CharBuffer$Ljava$nio$CharBuffer$$position$I)
    (elem (i32.const 311) $java$nio$CharBuffer$I$compareTo$Ljava$lang$Object$)
    (elem (i32.const 312) $java$nio$CharBuffer$I$compareTo$Ljava$nio$CharBuffer$)
    (elem (i32.const 313) $java$nio$CharBuffer$Ljava$lang$Object$$base$$)
    (elem (i32.const 314) $java$nio$CharBuffer$Ljava$lang$String$$toString$$)
    (elem (i32.const 315) $java$nio$CharBuffer$Z$equals$Ljava$lang$Object$)
    (elem (i32.const 316) $java$nio$CharBuffer$I$hashCode$$)
    (elem (i32.const 317) $java$nio$CharBuffer$Ljava$nio$CharBuffer$$put$$C)
    (elem (i32.const 318) $java$nio$CharBuffer$Ljava$nio$CharBuffer$$put$$C$I$I)
    (elem (i32.const 319) $java$nio$CharBuffer$Ljava$nio$CharBuffer$$putArray$I$$C$I$I)
    (elem (i32.const 320) $java$nio$CharBuffer$Z$isAddressable$$)
    (elem (i32.const 321) $jdk$internal$util$Preconditions$2$V$$init$$$)
    (elem (i32.const 322) $jdk$internal$util$Preconditions$2$Ljava$lang$Object$$apply$Ljava$lang$Object$)
    (elem (i32.const 323) $jdk$internal$util$Preconditions$2$Ljava$lang$ArrayIndexOutOfBoundsException$$apply$Ljava$lang$String$)
    (elem (i32.const 324) $java$nio$charset$Charset$V$$init$$Ljava$lang$String$$$Ljava$lang$String$)
    (elem (i32.const 325) $java$nio$charset$Charset$Ljava$lang$String$$name$$)
    (elem (i32.const 326) $java$util$HashMap$EntryIterator$V$$init$$Ljava$util$HashMap$)
    (elem (i32.const 327) $java$util$HashMap$EntryIterator$Ljava$lang$Object$$next$$)
    (elem (i32.const 328) $java$util$HashMap$EntryIterator$Ljava$util$Map$Entry$$next$$)
    (elem (i32.const 329) $java$util$ImmutableCollections$MapN$MapNIterator$V$$init$$Ljava$util$ImmutableCollections$MapN$)
    (elem (i32.const 330) $java$util$ImmutableCollections$MapN$MapNIterator$Z$hasNext$$)
    (elem (i32.const 331) $java$util$ImmutableCollections$MapN$MapNIterator$Ljava$lang$Object$$next$$)
    (elem (i32.const 332) $java$util$ImmutableCollections$MapN$MapNIterator$Ljava$util$Map$Entry$$next$$)
    (elem (i32.const 333) $java$util$ImmutableCollections$MapN$MapNIterator$I$nextIndex$$)
    (elem (i32.const 334) $java$lang$String$V$$init$$$)
    (elem (i32.const 335) $java$lang$String$I$length$$)
    (elem (i32.const 336) $java$lang$String$Z$equals$Ljava$lang$Object$)
    (elem (i32.const 337) $java$lang$String$Z$equals0$Ljava$lang$String$)
    (elem (i32.const 338) $java$lang$String$I$hashCode$$)
    (elem (i32.const 339) $java$lang$String$$B$getBytes$$)
    (elem (i32.const 340) $java$lang$String$C$charAt$I)
    (elem (i32.const 341) $java$lang$String$I$compareTo$Ljava$lang$String$)
    (elem (i32.const 342) $java$lang$String$$C$toCharArray$$)
    (elem (i32.const 343) $java$lang$String$V$getChars$I$I$$C$I)
    (elem (i32.const 344) $java$lang$String$I$compareTo$Ljava$lang$Object$)
    (elem (i32.const 345) $java$lang$String$Ljava$lang$String$$toString$$)
    (elem (i32.const 346) $java$lang$String$V$$init$$$C$I$I)
    (elem (i32.const 347) $java$lang$String$V$initializeWith$$C$I$I)
    (elem (i32.const 348) $java$lang$Thread$V$$init$$Ljava$lang$ThreadGroup$$Ljava$lang$String$)
    (elem (i32.const 349) $java$lang$Thread$Z$isVirtual$$)
    (elem (i32.const 350) $java$lang$Thread$V$$init$$$)
    (elem (i32.const 351) $jdk$internal$util$Preconditions$1$V$$init$$$)
    (elem (i32.const 352) $jdk$internal$util$Preconditions$1$Ljava$lang$Object$$apply$Ljava$lang$Object$)
    (elem (i32.const 353) $jdk$internal$util$Preconditions$1$Ljava$lang$StringIndexOutOfBoundsException$$apply$Ljava$lang$String$)
    (elem (i32.const 354) $java$io$PrintStream$1$V$$init$$$)
    (elem (i32.const 355) $java$util$HashMap$Node$V$$init$$I$Ljava$lang$Object$$Ljava$lang$Object$$Ljava$util$HashMap$Node$)
    (elem (i32.const 356) $java$util$HashMap$Node$Ljava$lang$String$$toString$$)
    (elem (i32.const 357) $java$util$HashMap$Node$Z$equals$Ljava$lang$Object$)
    (elem (i32.const 358) $java$util$HashMap$Node$I$hashCode$$)
    (elem (i32.const 359) $java$util$HashMap$Node$Ljava$lang$Object$$getKey$$)
    (elem (i32.const 360) $java$util$HashMap$Node$Ljava$lang$Object$$getValue$$)
    (elem (i32.const 361) $java$lang$StringBuilder$V$$init$$$)
    (elem (i32.const 362) $java$lang$StringBuilder$V$$init$$I)
    (elem (i32.const 363) $java$lang$StringBuilder$V$initializeWith$I)
    (elem (i32.const 364) $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$)
    (elem (i32.const 365) $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$I)
    (elem (i32.const 366) $java$lang$StringBuilder$Ljava$lang$String$$toString$$)
    (elem (i32.const 367) $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$F)
    (elem (i32.const 368) $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$Object$)
    (elem (i32.const 369) $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$C)
    (elem (i32.const 370) $java$util$AbstractMap$V$$init$$$)
    (elem (i32.const 371) $java$util$AbstractMap$Ljava$lang$String$$toString$$)
    (elem (i32.const 372) $java$util$AbstractMap$Z$equals$Ljava$lang$Object$)
    (elem (i32.const 373) $java$util$AbstractMap$I$size$$)
    (elem (i32.const 374) $java$util$AbstractMap$I$hashCode$$)
    (elem (i32.const 375) $java$util$AbstractMap$Ljava$lang$Object$$put$Ljava$lang$Object$$Ljava$lang$Object$)
    (elem (i32.const 376) $de$mirkosertic$bytecoder$api$vue$VueData$V$setProperty$Ljava$lang$String$$Ljava$lang$String$)
    (elem (i32.const 377) $java$lang$Number$V$$init$$$)
    (elem (i32.const 378) $java$lang$Number$S$shortValue$$)
    (elem (i32.const 379) $java$lang$Number$B$byteValue$$)
    (elem (i32.const 380) $java$util$Collections$EmptyIterator$V$$init$$$)
    (elem (i32.const 381) $java$util$Collections$EmptyIterator$Z$hasNext$$)
    (elem (i32.const 382) $java$util$Collections$EmptyIterator$Ljava$lang$Object$$next$$)
    (elem (i32.const 383) $java$util$Hashtable$V$$init$$Ljava$lang$Void$)
    (elem (i32.const 384) $java$util$ImmutableCollections$SetN$SetNIterator$V$$init$$Ljava$util$ImmutableCollections$SetN$)
    (elem (i32.const 385) $java$util$ImmutableCollections$SetN$SetNIterator$Z$hasNext$$)
    (elem (i32.const 386) $java$util$ImmutableCollections$SetN$SetNIterator$Ljava$lang$Object$$next$$)
    (elem (i32.const 387) $de$mirkosertic$bytecoder$classlib$VM$1$V$$init$$$)
    (elem (i32.const 388) $java$lang$ref$WeakReference$V$$init$$Ljava$lang$Object$)
    (elem (i32.const 389) $jdk$internal$util$Preconditions$4$V$$init$$Ljava$util$function$Function$)
    (elem (i32.const 390) $jdk$internal$util$Preconditions$4$Ljava$lang$Object$$apply$Ljava$lang$Object$$Ljava$lang$Object$)
    (elem (i32.const 391) $jdk$internal$util$Preconditions$4$Ljava$lang$RuntimeException$$apply$Ljava$lang$String$$Ljava$util$List$)
    (elem (i32.const 392) $java$util$KeyValueHolder$V$$init$$Ljava$lang$Object$$Ljava$lang$Object$)
    (elem (i32.const 393) $java$util$KeyValueHolder$Ljava$lang$String$$toString$$)
    (elem (i32.const 394) $java$util$KeyValueHolder$Z$equals$Ljava$lang$Object$)
    (elem (i32.const 395) $java$util$KeyValueHolder$I$hashCode$$)
    (elem (i32.const 396) $java$util$KeyValueHolder$Ljava$lang$Object$$getKey$$)
    (elem (i32.const 397) $java$util$KeyValueHolder$Ljava$lang$Object$$getValue$$)
    (elem (i32.const 398) $java$lang$Exception$V$$init$$Ljava$lang$String$)
    (elem (i32.const 399) $java$lang$Exception$V$$init$$$)
    (elem (i32.const 400) $java$lang$Exception$V$$init$$Ljava$lang$Throwable$)
    (elem (i32.const 401) $de$mirkosertic$bytecoder$classlib$BytecoderCharsetEncoder$V$$init$$Ljava$nio$charset$Charset$)
    (elem (i32.const 402) $java$nio$Buffer$1$V$$init$$$)
    (elem (i32.const 403) $jdk$internal$util$Preconditions$3$V$$init$$$)
    (elem (i32.const 404) $jdk$internal$util$Preconditions$3$Ljava$lang$Object$$apply$Ljava$lang$Object$)
    (elem (i32.const 405) $jdk$internal$util$Preconditions$3$Ljava$lang$IndexOutOfBoundsException$$apply$Ljava$lang$String$)
    (elem (i32.const 406) $de$mirkosertic$bytecoder$api$vue$VueBuilder$V$bindToTemplateSelector$Ljava$lang$String$)
    (elem (i32.const 407) $de$mirkosertic$bytecoder$api$vue$VueBuilder$Lde$mirkosertic$bytecoder$api$vue$VueData$$data$$)
    (elem (i32.const 408) $de$mirkosertic$bytecoder$api$vue$VueBuilder$V$addEventListener$Ljava$lang$String$$Lde$mirkosertic$bytecoder$api$vue$VueEventListener$)
    (elem (i32.const 409) $de$mirkosertic$bytecoder$api$vue$VueBuilder$Lde$mirkosertic$bytecoder$api$vue$VueInstance$$build$$)
    (elem (i32.const 410) $java$util$concurrent$locks$ReentrantLock$V$$init$$$)
    (elem (i32.const 411) $java$nio$ByteBuffer$V$$init$$I$I$I$I$$B$I$Ljava$lang$foreign$MemorySegment$)
    (elem (i32.const 412) $java$nio$ByteBuffer$Ljava$nio$ByteBuffer$$position$I)
    (elem (i32.const 413) $java$nio$ByteBuffer$V$$init$$I$I$I$I$Ljava$lang$foreign$MemorySegment$)
    (elem (i32.const 414) $java$nio$ByteBuffer$Ljava$nio$Buffer$$limit$I)
    (elem (i32.const 415) $java$nio$ByteBuffer$Ljava$nio$ByteBuffer$$limit$I)
    (elem (i32.const 416) $java$nio$ByteBuffer$Ljava$nio$Buffer$$position$I)
    (elem (i32.const 417) $java$nio$ByteBuffer$I$compareTo$Ljava$lang$Object$)
    (elem (i32.const 418) $java$nio$ByteBuffer$I$compareTo$Ljava$nio$ByteBuffer$)
    (elem (i32.const 419) $java$nio$ByteBuffer$Ljava$lang$Object$$base$$)
    (elem (i32.const 420) $java$nio$ByteBuffer$Ljava$lang$String$$toString$$)
    (elem (i32.const 421) $java$nio$ByteBuffer$Z$equals$Ljava$lang$Object$)
    (elem (i32.const 422) $java$nio$ByteBuffer$I$hashCode$$)
    (elem (i32.const 423) $java$nio$ByteBuffer$Ljava$nio$ByteBuffer$$get$$B$I$I)
    (elem (i32.const 424) $java$nio$ByteBuffer$Ljava$nio$ByteBuffer$$getArray$I$$B$I$I)
    (elem (i32.const 425) $java$util$AbstractList$Itr$V$$init$$Ljava$util$AbstractList$)
    (elem (i32.const 426) $java$util$AbstractList$Itr$Z$hasNext$$)
    (elem (i32.const 427) $java$util$AbstractList$Itr$Ljava$lang$Object$$next$$)
    (elem (i32.const 428) $java$util$AbstractList$Itr$V$checkForComodification$$)
    (elem (i32.const 429) $de$mirkosertic$bytecoder$classlib$BytecoderCharsetDecoder$V$$init$$Ljava$nio$charset$Charset$)
    (elem (i32.const 430) $de$mirkosertic$bytecoder$classlib$BytecoderCharsetDecoder$Ljava$nio$charset$CoderResult$$decodeLoop$Ljava$nio$ByteBuffer$$Ljava$nio$CharBuffer$)
    (elem (i32.const 431) $de$mirkosertic$bytecoder$classlib$BytecoderCharsetDecoder$$C$decodeFromBytes$Ljava$lang$String$$$B)
    (elem (i32.const 432) $java$lang$Error$V$$init$$Ljava$lang$String$)
    (elem (i32.const 433) $java$lang$Error$V$$init$$Ljava$lang$Throwable$)
    (elem (i32.const 434) $java$lang$Error$V$$init$$$)
    (elem (i32.const 435) $java$io$Writer$V$$init$$Ljava$lang$Object$)
    (elem (i32.const 436) $java$io$Writer$V$$init$$Ljava$io$Writer$)
    (elem (i32.const 437) $java$io$Writer$V$$init$$$)
    (elem (i32.const 438) $java$nio$HeapByteBuffer$V$$init$$$B$I$I$Ljava$lang$foreign$MemorySegment$)
    (elem (i32.const 439) $java$nio$HeapByteBuffer$V$$init$$I$I$Ljava$lang$foreign$MemorySegment$)
    (elem (i32.const 440) $java$nio$HeapByteBuffer$Z$isReadOnly$$)
    (elem (i32.const 441) $java$nio$HeapByteBuffer$B$get$I)
    (elem (i32.const 442) $java$nio$HeapByteBuffer$I$ix$I)
    (elem (i32.const 443) $java$nio$HeapByteBuffer$Ljava$nio$ByteBuffer$$get$$B$I$I)
    (elem (i32.const 444) $java$util$concurrent$ConcurrentHashMap$V$$init$$$)
    (elem (i32.const 445) $java$util$concurrent$ConcurrentHashMap$V$$init$$I)
    (elem (i32.const 446) $java$util$concurrent$ConcurrentHashMap$Ljava$lang$Object$$put$Ljava$lang$Object$$Ljava$lang$Object$)
    (elem (i32.const 447) $java$util$concurrent$ConcurrentHashMap$Ljava$lang$Object$$get$Ljava$lang$Object$)
    (elem (i32.const 448) $java$util$concurrent$ConcurrentHashMap$Ljava$lang$Object$$computeIfAbsent$Ljava$lang$Object$$Ljava$util$function$Function$)
    (elem (i32.const 449) $java$util$concurrent$ConcurrentHashMap$Ljava$lang$String$$toString$$)
    (elem (i32.const 450) $java$util$concurrent$ConcurrentHashMap$Z$equals$Ljava$lang$Object$)
    (elem (i32.const 451) $java$util$concurrent$ConcurrentHashMap$I$hashCode$$)
    (elem (i32.const 452) $java$util$concurrent$ConcurrentHashMap$I$size$$)
    (elem (i32.const 453) $java$util$concurrent$ConcurrentHashMap$Z$containsKey$Ljava$lang$Object$)
    (elem (i32.const 454) $java$util$concurrent$ConcurrentHashMap$Ljava$util$Set$$entrySet$$)
    (elem (i32.const 455) $java$util$concurrent$ConcurrentHashMap$Z$isEmpty$$)
    (elem (i32.const 456) $java$util$ImmutableCollections$AbstractImmutableMap$V$$init$$$)
    (elem (i32.const 457) $java$util$ImmutableCollections$AbstractImmutableMap$Ljava$lang$Object$$computeIfAbsent$Ljava$lang$Object$$Ljava$util$function$Function$)
    (elem (i32.const 458) $java$util$ImmutableCollections$AbstractImmutableMap$Ljava$lang$Object$$put$Ljava$lang$Object$$Ljava$lang$Object$)
    (elem (i32.const 459) $java$util$AbstractCollection$V$$init$$$)
    (elem (i32.const 460) $java$util$AbstractCollection$Ljava$lang$String$$toString$$)
    (elem (i32.const 461) $java$util$AbstractCollection$Z$contains$Ljava$lang$Object$)
    (elem (i32.const 462) $java$util$AbstractCollection$Z$containsAll$Ljava$util$Collection$)
    (elem (i32.const 463) $java$util$AbstractCollection$Z$isEmpty$$)
    (elem (i32.const 464) $java$util$AbstractList$ListItr$V$$init$$Ljava$util$AbstractList$$I)
    (elem (i32.const 465) $java$util$AbstractList$ListItr$I$previousIndex$$)
    (elem (i32.const 466) $java$nio$charset$CoderMalfunctionError$V$$init$$Ljava$lang$Exception$)
    (elem (i32.const 467) $java$lang$Long$V$$init$$J)
    (elem (i32.const 468) $java$lang$Long$I$compareTo$Ljava$lang$Object$)
    (elem (i32.const 469) $java$lang$Long$I$compareTo$Ljava$lang$Long$)
    (elem (i32.const 470) $java$lang$Long$J$longValue$$)
    (elem (i32.const 471) $java$lang$Long$I$intValue$$)
    (elem (i32.const 472) $java$lang$Long$Ljava$lang$String$$toString$$)
    (elem (i32.const 473) $java$lang$Long$Z$equals$Ljava$lang$Object$)
    (elem (i32.const 474) $java$lang$Long$I$hashCode$$)
    (elem (i32.const 475) $de$mirkosertic$bytecoder$classlib$BytecoderCharset$V$$init$$Ljava$lang$String$$$Ljava$lang$String$)
    (elem (i32.const 476) $de$mirkosertic$bytecoder$classlib$BytecoderCharset$Ljava$nio$charset$CharsetDecoder$$newDecoder$$)
    (elem (i32.const 477) $de$mirkosertic$bytecoder$classlib$BytecoderCharset$Ljava$nio$charset$CharsetEncoder$$newEncoder$$)
    (elem (i32.const 478) $java$nio$HeapCharBuffer$V$$init$$I$I$Ljava$lang$foreign$MemorySegment$)
    (elem (i32.const 479) $java$nio$HeapCharBuffer$Z$isReadOnly$$)
    (elem (i32.const 480) $java$nio$HeapCharBuffer$Ljava$nio$CharBuffer$$put$Ljava$lang$String$$I$I)
    (elem (i32.const 481) $java$nio$HeapCharBuffer$I$ix$I)
    (elem (i32.const 482) $java$nio$HeapCharBuffer$Ljava$nio$CharBuffer$$put$C)
    (elem (i32.const 483) $java$nio$HeapCharBuffer$Ljava$nio$ByteOrder$$charRegionOrder$$)
    (elem (i32.const 484) $java$nio$HeapCharBuffer$Ljava$nio$ByteOrder$$order$$)
    (elem (i32.const 485) $java$nio$HeapCharBuffer$C$get$I)
    (elem (i32.const 486) $java$nio$HeapCharBuffer$Ljava$lang$String$$toString$I$I)
    (elem (i32.const 487) $java$nio$HeapCharBuffer$Ljava$nio$CharBuffer$$put$$C$I$I)
    (elem (i32.const 488) $java$nio$HeapCharBuffer$Ljava$nio$CharBuffer$$put$I$C)
    (elem (i32.const 489) $java$lang$Byte$V$$init$$B)
    (elem (i32.const 490) $java$lang$Byte$I$compareTo$Ljava$lang$Object$)
    (elem (i32.const 491) $java$lang$Byte$I$compareTo$Ljava$lang$Byte$)
    (elem (i32.const 492) $java$lang$Byte$I$intValue$$)
    (elem (i32.const 493) $java$lang$Byte$Ljava$lang$String$$toString$$)
    (elem (i32.const 494) $java$lang$Byte$Z$equals$Ljava$lang$Object$)
    (elem (i32.const 495) $java$lang$Byte$I$hashCode$$)
    (elem (i32.const 496) $java$util$Properties$V$$init$$$)
    (elem (i32.const 497) $java$util$Properties$V$$init$$Ljava$util$Properties$$I)
    (elem (i32.const 498) $java$util$Properties$Ljava$lang$Object$$setProperty$Ljava$lang$String$$Ljava$lang$String$)
    (elem (i32.const 499) $java$util$Properties$Ljava$lang$Object$$put$Ljava$lang$Object$$Ljava$lang$Object$)
    (elem (i32.const 500) $java$util$Properties$Ljava$lang$String$$getProperty$Ljava$lang$String$)
    (elem (i32.const 501) $java$util$Properties$Ljava$lang$Object$$computeIfAbsent$Ljava$lang$Object$$Ljava$util$function$Function$)
    (elem (i32.const 502) $java$util$Properties$Ljava$lang$Object$$get$Ljava$lang$Object$)
    (elem (i32.const 503) $java$util$Properties$Ljava$lang$String$$toString$$)
    (elem (i32.const 504) $java$util$Properties$Z$equals$Ljava$lang$Object$)
    (elem (i32.const 505) $java$util$Properties$I$hashCode$$)
    (elem (i32.const 506) $java$util$Properties$I$size$$)
    (elem (i32.const 507) $java$util$Properties$Z$containsKey$Ljava$lang$Object$)
    (elem (i32.const 508) $java$util$Properties$Ljava$util$Set$$entrySet$$)
    (elem (i32.const 509) $java$util$Properties$Z$isEmpty$$)
    (elem (i32.const 510) $java$lang$RuntimeException$V$$init$$Ljava$lang$String$)
    (elem (i32.const 511) $java$lang$RuntimeException$V$$init$$$)
    (elem (i32.const 512) $java$lang$RuntimeException$V$$init$$Ljava$lang$Throwable$)
    (elem (i32.const 513) $java$lang$Float$V$$init$$F)
    (elem (i32.const 514) $java$lang$Float$I$compareTo$Ljava$lang$Object$)
    (elem (i32.const 515) $java$lang$Float$I$compareTo$Ljava$lang$Float$)
    (elem (i32.const 516) $java$lang$Float$F$floatValue$$)
    (elem (i32.const 517) $java$lang$Float$I$intValue$$)
    (elem (i32.const 518) $java$lang$Float$Ljava$lang$String$$toString$$)
    (elem (i32.const 519) $java$lang$Float$Z$equals$Ljava$lang$Object$)
    (elem (i32.const 520) $java$lang$Float$I$hashCode$$)
    (elem (i32.const 521) $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError$Ljava$lang$RuntimeException$$newRuntimeException$$)
    (elem (i32.const 522) $java$util$Collections$SynchronizedCollection$V$$init$$Ljava$util$Collection$$Ljava$lang$Object$)
    (elem (i32.const 523) $java$util$Collections$SynchronizedCollection$Ljava$util$Iterator$$iterator$$)
    (elem (i32.const 524) $java$util$Collections$SynchronizedCollection$I$size$$)
    (elem (i32.const 525) $java$util$Collections$SynchronizedCollection$Z$isEmpty$$)
    (elem (i32.const 526) $java$util$Collections$SynchronizedCollection$Ljava$lang$String$$toString$$)
    (elem (i32.const 527) $java$lang$VirtualMachineError$V$$init$$Ljava$lang$String$)
    (elem (i32.const 528) $java$lang$VirtualMachineError$V$$init$$$)
    (elem (i32.const 529) $java$lang$VirtualMachineError$V$$init$$Ljava$lang$Throwable$)
    (elem (i32.const 530) $java$lang$Integer$V$$init$$I)
    (elem (i32.const 531) $java$lang$Integer$I$intValue$$)
    (elem (i32.const 532) $java$lang$Integer$I$compareTo$Ljava$lang$Object$)
    (elem (i32.const 533) $java$lang$Integer$I$compareTo$Ljava$lang$Integer$)
    (elem (i32.const 534) $java$lang$Integer$Ljava$lang$String$$toString$$)
    (elem (i32.const 535) $java$lang$Integer$Z$equals$Ljava$lang$Object$)
    (elem (i32.const 536) $java$lang$Integer$I$hashCode$$)
    (elem (i32.const 537) $java$lang$AssertionError$V$$init$$Ljava$lang$Object$)
    (elem (i32.const 538) $java$lang$AssertionError$V$$init$$Ljava$lang$String$)
    (elem (i32.const 539) $java$lang$AssertionError$V$$init$$$)
    (elem (i32.const 540) $java$util$ImmutableCollections$ListItr$V$$init$$Ljava$util$List$$I)
    (elem (i32.const 541) $java$util$ImmutableCollections$ListItr$Z$hasNext$$)
    (elem (i32.const 542) $java$util$ImmutableCollections$ListItr$Ljava$lang$Object$$next$$)
    (elem (i32.const 543) $java$util$ImmutableCollections$ListItr$I$previousIndex$$)
    (elem (i32.const 544) $java$io$InputStream$V$$init$$$)
    (elem (i32.const 545) $java$io$OutputStream$V$$init$$$)
    (elem (i32.const 546) $java$util$Collections$EmptyListIterator$V$$init$$$)
    (elem (i32.const 547) $java$util$Collections$EmptyListIterator$I$previousIndex$$)
    (elem (i32.const 548) $java$util$LinkedHashMap$Entry$V$$init$$I$Ljava$lang$Object$$Ljava$lang$Object$$Ljava$util$HashMap$Node$)
    (elem (i32.const 549) $java$util$HashMap$V$$init$$$)
    (elem (i32.const 550) $java$util$HashMap$V$$init$$I)
    (elem (i32.const 551) $java$util$HashMap$V$$init$$I$F)
    (elem (i32.const 552) $java$util$HashMap$Ljava$lang$Object$$computeIfAbsent$Ljava$lang$Object$$Ljava$util$function$Function$)
    (elem (i32.const 553) $java$util$HashMap$$Ljava$util$HashMap$Node$$resize$$)
    (elem (i32.const 554) $java$util$HashMap$Ljava$util$HashMap$Node$$replacementNode$Ljava$util$HashMap$Node$$Ljava$util$HashMap$Node$)
    (elem (i32.const 555) $java$util$HashMap$V$afterNodeAccess$Ljava$util$HashMap$Node$)
    (elem (i32.const 556) $java$util$HashMap$Ljava$util$HashMap$TreeNode$$newTreeNode$I$Ljava$lang$Object$$Ljava$lang$Object$$Ljava$util$HashMap$Node$)
    (elem (i32.const 557) $java$util$HashMap$V$afterNodeInsertion$Z)
    (elem (i32.const 558) $java$util$HashMap$Ljava$util$HashMap$Node$$newNode$I$Ljava$lang$Object$$Ljava$lang$Object$$Ljava$util$HashMap$Node$)
    (elem (i32.const 559) $java$util$HashMap$V$treeifyBin$$Ljava$util$HashMap$Node$$I)
    (elem (i32.const 560) $java$util$HashMap$Ljava$util$HashMap$TreeNode$$replacementTreeNode$Ljava$util$HashMap$Node$$Ljava$util$HashMap$Node$)
    (elem (i32.const 561) $java$util$HashMap$Ljava$lang$Object$$get$Ljava$lang$Object$)
    (elem (i32.const 562) $java$util$HashMap$Ljava$util$HashMap$Node$$getNode$Ljava$lang$Object$)
    (elem (i32.const 563) $java$util$HashMap$Ljava$lang$Object$$put$Ljava$lang$Object$$Ljava$lang$Object$)
    (elem (i32.const 564) $java$util$HashMap$Ljava$lang$Object$$putVal$I$Ljava$lang$Object$$Ljava$lang$Object$$Z$Z)
    (elem (i32.const 565) $java$util$HashMap$I$size$$)
    (elem (i32.const 566) $java$util$HashMap$Z$containsKey$Ljava$lang$Object$)
    (elem (i32.const 567) $java$util$HashMap$Ljava$util$Set$$entrySet$$)
    (elem (i32.const 568) $java$util$HashMap$Z$isEmpty$$)
    (elem (i32.const 569) $java$util$Collections$EmptyMap$V$$init$$$)
    (elem (i32.const 570) $java$util$Collections$EmptyMap$Ljava$util$Set$$entrySet$$)
    (elem (i32.const 571) $java$util$Collections$EmptyMap$Z$equals$Ljava$lang$Object$)
    (elem (i32.const 572) $java$util$Collections$EmptyMap$I$size$$)
    (elem (i32.const 573) $java$util$Collections$EmptyMap$I$hashCode$$)
    (elem (i32.const 574) $java$util$Collections$EmptyMap$Ljava$lang$Object$$computeIfAbsent$Ljava$lang$Object$$Ljava$util$function$Function$)
    (elem (i32.const 575) $java$util$Collections$EmptyMap$Ljava$lang$Object$$get$Ljava$lang$Object$)
    (elem (i32.const 576) $java$util$Collections$EmptyMap$Z$containsKey$Ljava$lang$Object$)
    (elem (i32.const 577) $java$util$Collections$EmptyMap$Z$isEmpty$$)
    (elem (i32.const 578) $java$lang$Short$V$$init$$S)
    (elem (i32.const 579) $java$lang$Short$I$compareTo$Ljava$lang$Object$)
    (elem (i32.const 580) $java$lang$Short$I$compareTo$Ljava$lang$Short$)
    (elem (i32.const 581) $java$lang$Short$I$intValue$$)
    (elem (i32.const 582) $java$lang$Short$Ljava$lang$String$$toString$$)
    (elem (i32.const 583) $java$lang$Short$Z$equals$Ljava$lang$Object$)
    (elem (i32.const 584) $java$lang$Short$I$hashCode$$)
    (elem (i32.const 585) $de$mirkosertic$bytecoder$integrationtest$VueDemo$1$V$$init$$$)
    (elem (i32.const 586) $de$mirkosertic$bytecoder$integrationtest$VueDemo$1$V$handle$Lde$mirkosertic$bytecoder$integrationtest$VueDemo$MyVueInstance$$Lde$mirkosertic$bytecoder$api$web$MouseEvent$)
    (elem (i32.const 587) $de$mirkosertic$bytecoder$integrationtest$VueDemo$1$V$handle$Lde$mirkosertic$bytecoder$api$vue$VueInstance$$Lde$mirkosertic$bytecoder$api$web$Event$)
    (elem (i32.const 588) $java$lang$Double$V$$init$$D)
    (elem (i32.const 589) $java$lang$Double$I$compareTo$Ljava$lang$Object$)
    (elem (i32.const 590) $java$lang$Double$I$compareTo$Ljava$lang$Double$)
    (elem (i32.const 591) $java$lang$Double$D$doubleValue$$)
    (elem (i32.const 592) $java$lang$Double$I$intValue$$)
    (elem (i32.const 593) $java$lang$Double$Ljava$lang$String$$toString$$)
    (elem (i32.const 594) $java$lang$Double$Z$equals$Ljava$lang$Object$)
    (elem (i32.const 595) $java$lang$Double$I$hashCode$$)
    (elem (i32.const 596) $java$lang$ClassCastException$V$$init$$Ljava$lang$String$)
    (elem (i32.const 597) $java$lang$ClassCastException$V$$init$$$)
    (elem (i32.const 598) $java$nio$BufferOverflowException$V$$init$$$)
    (elem (i32.const 599) $java$lang$IllegalStateException$V$$init$$Ljava$lang$String$)
    (elem (i32.const 600) $java$lang$IllegalStateException$V$$init$$$)
    (elem (i32.const 601) $java$lang$IllegalStateException$V$$init$$Ljava$lang$Throwable$)
    (elem (i32.const 602) $java$util$ImmutableCollections$AbstractImmutableCollection$V$$init$$$)
    (elem (i32.const 603) $java$util$AbstractList$V$$init$$$)
    (elem (i32.const 604) $java$util$AbstractList$I$indexOf$Ljava$lang$Object$)
    (elem (i32.const 605) $java$util$AbstractList$Ljava$util$ListIterator$$listIterator$$)
    (elem (i32.const 606) $java$util$AbstractList$Ljava$util$ListIterator$$listIterator$I)
    (elem (i32.const 607) $java$util$AbstractList$V$rangeCheckForAdd$I)
    (elem (i32.const 608) $java$util$AbstractList$Ljava$lang$String$$outOfBoundsMsg$I)
    (elem (i32.const 609) $java$lang$IllegalArgumentException$V$$init$$Ljava$lang$String$)
    (elem (i32.const 610) $java$lang$IllegalArgumentException$V$$init$$$)
    (elem (i32.const 611) $java$lang$IllegalArgumentException$V$$init$$Ljava$lang$Throwable$)
    (elem (i32.const 612) $java$util$NoSuchElementException$V$$init$$$)
    (elem (i32.const 613) $java$util$NoSuchElementException$V$$init$$Ljava$lang$String$)
    (elem (i32.const 614) $java$util$NoSuchElementException$V$$init$$Ljava$lang$Throwable$)
    (elem (i32.const 615) $java$util$ConcurrentModificationException$V$$init$$$)
    (elem (i32.const 616) $java$util$ConcurrentModificationException$V$$init$$Ljava$lang$String$)
    (elem (i32.const 617) $java$util$ConcurrentModificationException$V$$init$$Ljava$lang$Throwable$)
    (elem (i32.const 618) $java$lang$UnsupportedOperationException$V$$init$$$)
    (elem (i32.const 619) $java$lang$UnsupportedOperationException$V$$init$$Ljava$lang$String$)
    (elem (i32.const 620) $java$lang$UnsupportedOperationException$V$$init$$Ljava$lang$Throwable$)
    (elem (i32.const 621) $de$mirkosertic$bytecoder$integrationtest$VueDemo$MyVueInstance$V$welcomemessage$Ljava$lang$String$)
    (elem (i32.const 622) $java$nio$BufferUnderflowException$V$$init$$$)
    (elem (i32.const 623) $java$io$OutputStreamWriter$V$$init$$Ljava$io$OutputStream$$Ljava$nio$charset$Charset$)
    (elem (i32.const 624) $java$io$FileInputStream$V$$init$$Ljava$io$FileDescriptor$)
    (elem (i32.const 625) $sun$nio$cs$StreamEncoder$V$$init$$Ljava$io$OutputStream$$Ljava$lang$Object$$Ljava$nio$charset$Charset$)
    (elem (i32.const 626) $sun$nio$cs$StreamEncoder$V$$init$$Ljava$io$OutputStream$$Ljava$lang$Object$$Ljava$nio$charset$CharsetEncoder$)
    (elem (i32.const 627) $java$util$HashMap$TreeNode$V$split$Ljava$util$HashMap$$$Ljava$util$HashMap$Node$$I$I)
    (elem (i32.const 628) $java$util$HashMap$TreeNode$Ljava$util$HashMap$Node$$untreeify$Ljava$util$HashMap$)
    (elem (i32.const 629) $java$util$HashMap$TreeNode$V$treeify$$Ljava$util$HashMap$Node$)
    (elem (i32.const 630) $java$util$HashMap$TreeNode$Ljava$util$HashMap$TreeNode$$getTreeNode$I$Ljava$lang$Object$)
    (elem (i32.const 631) $java$util$HashMap$TreeNode$Ljava$util$HashMap$TreeNode$$root$$)
    (elem (i32.const 632) $java$util$HashMap$TreeNode$Ljava$util$HashMap$TreeNode$$find$I$Ljava$lang$Object$$Ljava$lang$Class$)
    (elem (i32.const 633) $java$util$HashMap$TreeNode$Ljava$util$HashMap$TreeNode$$putTreeVal$Ljava$util$HashMap$$$Ljava$util$HashMap$Node$$I$Ljava$lang$Object$$Ljava$lang$Object$)
    (elem (i32.const 634) $java$util$HashMap$TreeNode$V$$init$$I$Ljava$lang$Object$$Ljava$lang$Object$$Ljava$util$HashMap$Node$)
    (elem (i32.const 635) $java$util$Properties$EntrySet$V$$init$$Ljava$util$Set$)
    (elem (i32.const 636) $java$util$Properties$EntrySet$Ljava$util$Iterator$$iterator$$)
    (elem (i32.const 637) $java$util$Properties$EntrySet$I$size$$)
    (elem (i32.const 638) $java$util$Properties$EntrySet$Z$isEmpty$$)
    (elem (i32.const 639) $java$util$Properties$EntrySet$Ljava$lang$String$$toString$$)
    (elem (i32.const 640) $java$util$Properties$EntrySet$Z$equals$Ljava$lang$Object$)
    (elem (i32.const 641) $java$util$Properties$EntrySet$I$hashCode$$)
    (elem (i32.const 642) $java$util$ImmutableCollections$MapN$V$$init$$$Ljava$lang$Object$)
    (elem (i32.const 643) $java$util$ImmutableCollections$MapN$I$probe$Ljava$lang$Object$)
    (elem (i32.const 644) $java$util$ImmutableCollections$MapN$Ljava$lang$Object$$get$Ljava$lang$Object$)
    (elem (i32.const 645) $java$util$ImmutableCollections$MapN$I$hashCode$$)
    (elem (i32.const 646) $java$util$ImmutableCollections$MapN$I$size$$)
    (elem (i32.const 647) $java$util$ImmutableCollections$MapN$Z$containsKey$Ljava$lang$Object$)
    (elem (i32.const 648) $java$util$ImmutableCollections$MapN$Ljava$util$Set$$entrySet$$)
    (elem (i32.const 649) $java$util$ImmutableCollections$MapN$Z$isEmpty$$)
    (elem (i32.const 650) $java$lang$InternalError$V$$init$$Ljava$lang$String$)
    (elem (i32.const 651) $java$lang$InternalError$V$$init$$$)
    (elem (i32.const 652) $java$lang$InternalError$V$$init$$Ljava$lang$Throwable$)
    (elem (i32.const 653) $java$lang$NullPointerException$V$$init$$$)
    (elem (i32.const 654) $java$lang$NullPointerException$V$$init$$Ljava$lang$String$)
    (elem (i32.const 655) $java$lang$NullPointerException$Ljava$lang$String$$getMessage$$)
    (elem (i32.const 656) $java$lang$NullPointerException$Ljava$lang$String$$getExtendedNPEMessage$$)
    (elem (i32.const 657) $java$io$BufferedWriter$V$$init$$Ljava$io$Writer$)
    (elem (i32.const 658) $java$io$BufferedWriter$V$$init$$Ljava$io$Writer$$I$I)
    (elem (i32.const 659) $java$io$FileOutputStream$V$$init$$Ljava$io$FileDescriptor$)
    (elem (i32.const 660) $java$util$AbstractSet$V$$init$$$)
    (elem (i32.const 661) $java$util$AbstractSet$Z$equals$Ljava$lang$Object$)
    (elem (i32.const 662) $java$util$AbstractSet$I$hashCode$$)
    (elem (i32.const 663) $java$util$Collections$SynchronizedSet$V$$init$$Ljava$util$Set$$Ljava$lang$Object$)
    (elem (i32.const 664) $java$util$Collections$SynchronizedSet$Z$equals$Ljava$lang$Object$)
    (elem (i32.const 665) $java$util$Collections$SynchronizedSet$I$hashCode$$)
    (elem (i32.const 666) $java$io$FilterOutputStream$V$$init$$Ljava$io$OutputStream$)
    (elem (i32.const 667) $java$lang$IndexOutOfBoundsException$V$$init$$$)
    (elem (i32.const 668) $java$lang$IndexOutOfBoundsException$V$$init$$Ljava$lang$String$)
    (elem (i32.const 669) $java$util$ImmutableCollections$AbstractImmutableSet$V$$init$$$)
    (elem (i32.const 670) $java$util$ImmutableCollections$AbstractImmutableSet$Z$equals$Ljava$lang$Object$)
    (elem (i32.const 671) $java$lang$StringIndexOutOfBoundsException$V$$init$$Ljava$lang$String$)
    (elem (i32.const 672) $java$lang$StringIndexOutOfBoundsException$V$$init$$$)
    (elem (i32.const 673) $java$util$ImmutableCollections$MapN$1$V$$init$$Ljava$util$ImmutableCollections$MapN$)
    (elem (i32.const 674) $java$util$ImmutableCollections$MapN$1$Ljava$util$Iterator$$iterator$$)
    (elem (i32.const 675) $java$util$ImmutableCollections$MapN$1$I$size$$)
    (elem (i32.const 676) $java$util$HashMap$EntrySet$V$$init$$Ljava$util$HashMap$)
    (elem (i32.const 677) $java$util$HashMap$EntrySet$Ljava$util$Iterator$$iterator$$)
    (elem (i32.const 678) $java$util$HashMap$EntrySet$I$size$$)
    (elem (i32.const 679) $java$util$HashMap$EntrySet$Z$contains$Ljava$lang$Object$)
    (elem (i32.const 680) $java$lang$ArrayIndexOutOfBoundsException$V$$init$$Ljava$lang$String$)
    (elem (i32.const 681) $java$lang$ArrayIndexOutOfBoundsException$V$$init$$$)
    (elem (i32.const 682) $java$io$PrintStream$V$$init$$Ljava$io$OutputStream$)
    (elem (i32.const 683) $java$io$PrintStream$V$$init$$Ljava$io$OutputStream$$Z)
    (elem (i32.const 684) $java$io$PrintStream$V$$init$$Z$Ljava$io$OutputStream$)
    (elem (i32.const 685) $java$io$PrintStream$Ljava$nio$charset$Charset$$charset$$)
    (elem (i32.const 686) $java$util$ImmutableCollections$AbstractImmutableList$V$$init$$$)
    (elem (i32.const 687) $java$util$ImmutableCollections$AbstractImmutableList$Ljava$lang$IndexOutOfBoundsException$$outOfBounds$I)
    (elem (i32.const 688) $java$util$ImmutableCollections$AbstractImmutableList$Z$equals$Ljava$lang$Object$)
    (elem (i32.const 689) $java$util$ImmutableCollections$AbstractImmutableList$I$hashCode$$)
    (elem (i32.const 690) $java$util$ImmutableCollections$AbstractImmutableList$Ljava$util$Iterator$$iterator$$)
    (elem (i32.const 691) $java$util$ImmutableCollections$AbstractImmutableList$Z$contains$Ljava$lang$Object$)
    (elem (i32.const 692) $java$nio$ReadOnlyBufferException$V$$init$$$)
    (elem (i32.const 693) $java$util$Collections$EmptyList$V$$init$$$)
    (elem (i32.const 694) $java$util$Collections$EmptyList$I$size$$)
    (elem (i32.const 695) $java$util$Collections$EmptyList$Ljava$util$Iterator$$iterator$$)
    (elem (i32.const 696) $java$util$Collections$EmptyList$Z$contains$Ljava$lang$Object$)
    (elem (i32.const 697) $java$util$Collections$EmptyList$Z$containsAll$Ljava$util$Collection$)
    (elem (i32.const 698) $java$util$Collections$EmptyList$Ljava$lang$Object$$get$I)
    (elem (i32.const 699) $java$util$Collections$EmptyList$Z$isEmpty$$)
    (elem (i32.const 700) $java$util$Collections$EmptyList$Z$equals$Ljava$lang$Object$)
    (elem (i32.const 701) $java$util$Collections$EmptyList$I$hashCode$$)
    (elem (i32.const 702) $java$util$Collections$EmptyList$Ljava$util$ListIterator$$listIterator$$)
    (elem (i32.const 703) $java$util$Collections$EmptySet$V$$init$$$)
    (elem (i32.const 704) $java$util$Collections$EmptySet$Ljava$util$Iterator$$iterator$$)
    (elem (i32.const 705) $java$util$Collections$EmptySet$I$size$$)
    (elem (i32.const 706) $java$util$Collections$EmptySet$Z$contains$Ljava$lang$Object$)
    (elem (i32.const 707) $java$util$Collections$EmptySet$Z$containsAll$Ljava$util$Collection$)
    (elem (i32.const 708) $java$util$Collections$EmptySet$Z$isEmpty$$)
    (elem (i32.const 709) $java$util$Collections$EmptySet$I$hashCode$$)
    (elem (i32.const 710) $java$util$ImmutableCollections$SetN$V$$init$$$Ljava$lang$Object$)
    (elem (i32.const 711) $java$util$ImmutableCollections$SetN$I$probe$Ljava$lang$Object$)
    (elem (i32.const 712) $java$util$ImmutableCollections$SetN$I$hashCode$$)
    (elem (i32.const 713) $java$util$ImmutableCollections$SetN$Ljava$util$Iterator$$iterator$$)
    (elem (i32.const 714) $java$util$ImmutableCollections$SetN$I$size$$)
    (elem (i32.const 715) $java$util$ImmutableCollections$SetN$Z$contains$Ljava$lang$Object$)
    (elem (i32.const 716) $java$util$ImmutableCollections$SetN$Z$isEmpty$$)
    (elem (i32.const 717) $java$util$ImmutableCollections$ListN$V$$init$$$Ljava$lang$Object$$Z)
    (elem (i32.const 718) $java$util$ImmutableCollections$ListN$I$size$$)
    (elem (i32.const 719) $java$util$ImmutableCollections$ListN$Ljava$lang$Object$$get$I)
    (elem (i32.const 720) $java$util$ImmutableCollections$ListN$I$indexOf$Ljava$lang$Object$)
    (elem (i32.const 721) $java$util$ImmutableCollections$ListN$Z$isEmpty$$)
    (elem (i32.const 722) $java$util$ImmutableCollections$List12$V$$init$$Ljava$lang$Object$$Ljava$lang$Object$)
    (elem (i32.const 723) $java$util$ImmutableCollections$List12$V$$init$$Ljava$lang$Object$)
    (elem (i32.const 724) $java$util$ImmutableCollections$List12$I$size$$)
    (elem (i32.const 725) $java$util$ImmutableCollections$List12$Ljava$lang$Object$$get$I)
    (elem (i32.const 726) $java$util$ImmutableCollections$List12$I$indexOf$Ljava$lang$Object$)
    (elem (i32.const 727) $java$util$ImmutableCollections$List12$Z$isEmpty$$)
    (func $compare_i32 (type $t2) (param $a i32) (param $b i32) (result i32)
        (if $gt (i32.gt_s (local.get $a) (local.get $b))
            (then
                (return (i32.const 1))
                ))
        (if $gt (i32.lt_s (local.get $a) (local.get $b))
            (then
                (return (i32.const -1))
                ))
        (return (i32.const 0))
        )
    (func $compare_i64 (type $t3) (param $a i64) (param $b i64) (result i32)
        (if $gt (i64.gt_s (local.get $a) (local.get $b))
            (then
                (return (i32.const 1))
                ))
        (if $gt (i64.lt_s (local.get $a) (local.get $b))
            (then
                (return (i32.const -1))
                ))
        (return (i32.const 0))
        )
    (func $compare_f32 (type $t4) (param $a f32) (param $b f32) (result i32)
        (if $gt (f32.gt (local.get $a) (local.get $b))
            (then
                (return (i32.const 1))
                ))
        (if $gt (f32.lt (local.get $a) (local.get $b))
            (then
                (return (i32.const -1))
                ))
        (return (i32.const 0))
        )
    (func $compare_f64 (type $t5) (param $a f64) (param $b f64) (result i32)
        (if $gt (f64.gt (local.get $a) (local.get $b))
            (then
                (return (i32.const 1))
                ))
        (if $gt (f64.lt (local.get $a) (local.get $b))
            (then
                (return (i32.const -1))
                ))
        (return (i32.const 0))
        )
    (func $bootstrap (type $t6)
        (global.set $stringpool_0 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 0)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_1 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 1)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_2 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 2)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_3 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 3)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_4 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 4)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_5 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 5)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_6 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 6)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_7 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 7)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_8 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 8)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_9 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 9)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_10 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 10)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_11 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 11)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_12 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 12)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_13 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 13)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_14 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 14)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_15 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 15)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_16 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 16)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_17 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 17)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_18 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 18)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_19 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 19)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_20 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 20)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_21 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 21)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_22 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 22)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_23 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 23)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_24 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 24)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_25 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 25)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_26 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 26)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_27 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 27)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_28 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 28)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_29 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 29)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_30 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 30)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_31 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 31)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_32 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 32)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_33 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 33)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_34 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 34)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_35 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 35)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_36 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 36)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_37 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 37)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_38 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 38)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_39 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 39)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_40 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 40)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_41 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 41)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_42 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 42)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_43 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 43)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_44 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 44)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_45 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 45)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_46 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 46)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_47 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 47)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_48 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 48)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_49 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 49)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_50 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 50)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_51 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 51)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_52 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 52)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_53 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 53)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_54 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 54)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_55 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 55)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_56 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 56)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_57 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 57)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_58 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 58)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_59 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 59)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_60 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 60)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_61 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 61)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_62 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 62)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_63 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 63)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_64 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 64)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_65 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 65)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_66 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 66)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_67 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 67)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_68 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 68)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_69 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 69)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_70 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 70)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_71 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 71)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_72 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 72)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_73 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 73)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_74 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 74)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_75 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 75)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_76 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 76)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_77 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 77)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_78 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 78)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_79 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 79)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_80 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 80)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_81 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 81)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_82 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 82)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_83 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 83)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_84 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 84)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_85 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 85)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_86 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 86)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_87 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 87)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_88 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 88)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_89 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 89)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_90 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 90)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_91 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 91)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_92 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 92)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_93 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 93)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_94 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 94)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_95 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 95)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_96 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 96)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_97 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 97)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_98 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 98)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_99 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 99)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_100 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 100)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_101 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 101)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_102 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 102)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        (global.set $stringpool_103 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (call $resolveStringConstant (i32.const 103)) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        )
    (func $java$lang$Object_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$lang$Object_i (type $t11) (result (ref $java$lang$Object_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$Object_rtt $initStatus (global.get $java$lang$Object_cls)))
            (then
                (struct.set $java$lang$Object_rtt $initStatus (global.get $java$lang$Object_cls) (i32.const 1))
                (br $check)
                ))
        (return (global.get $java$lang$Object_cls))
        )
    (func $java$nio$ByteOrder_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 182))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$nio$ByteOrder_i (type $t14) (result (ref $java$nio$ByteOrder_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$nio$ByteOrder_rtt $initStatus (global.get $java$nio$ByteOrder_cls)))
            (then
                (struct.set $java$nio$ByteOrder_rtt $initStatus (global.get $java$nio$ByteOrder_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (call $java$nio$ByteOrder$V$$clinit$$$ (ref.null none))
                (br $check)
                ))
        (return (global.get $java$nio$ByteOrder_cls))
        )
    (func $jdk$internal$misc$VM_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $jdk$internal$misc$VM_i (type $t17) (result (ref $jdk$internal$misc$VM_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $jdk$internal$misc$VM_rtt $initStatus (global.get $jdk$internal$misc$VM_cls)))
            (then
                (struct.set $jdk$internal$misc$VM_rtt $initStatus (global.get $jdk$internal$misc$VM_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (call $jdk$internal$misc$VM$V$$clinit$$$ (ref.null none))
                (br $check)
                ))
        (return (global.get $jdk$internal$misc$VM_cls))
        )
    (func $java$util$Dictionary_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$util$Dictionary_i (type $t20) (result (ref $java$util$Dictionary_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$Dictionary_rtt $initStatus (global.get $java$util$Dictionary_cls)))
            (then
                (struct.set $java$util$Dictionary_rtt $initStatus (global.get $java$util$Dictionary_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$util$Dictionary_cls))
        )
    (func $java$lang$Runnable_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$lang$Runnable_i (type $t23) (result (ref $java$lang$Runnable_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$Runnable_rtt $initStatus (global.get $java$lang$Runnable_cls)))
            (then
                (struct.set $java$lang$Runnable_rtt $initStatus (global.get $java$lang$Runnable_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$lang$Runnable_cls))
        )
    (func $jdk$internal$access$JavaIOPrintStreamAccess_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $jdk$internal$access$JavaIOPrintStreamAccess_i (type $t26) (result (ref $jdk$internal$access$JavaIOPrintStreamAccess_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $jdk$internal$access$JavaIOPrintStreamAccess_rtt $initStatus (global.get $jdk$internal$access$JavaIOPrintStreamAccess_cls)))
            (then
                (struct.set $jdk$internal$access$JavaIOPrintStreamAccess_rtt $initStatus (global.get $jdk$internal$access$JavaIOPrintStreamAccess_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $jdk$internal$access$JavaIOPrintStreamAccess_cls))
        )
    (func $de$mirkosertic$bytecoder$api$OpaqueReferenceType_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $de$mirkosertic$bytecoder$api$OpaqueReferenceType_i (type $t29) (result (ref $de$mirkosertic$bytecoder$api$OpaqueReferenceType_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $de$mirkosertic$bytecoder$api$OpaqueReferenceType_rtt $initStatus (global.get $de$mirkosertic$bytecoder$api$OpaqueReferenceType_cls)))
            (then
                (struct.set $de$mirkosertic$bytecoder$api$OpaqueReferenceType_rtt $initStatus (global.get $de$mirkosertic$bytecoder$api$OpaqueReferenceType_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $de$mirkosertic$bytecoder$api$OpaqueReferenceType_cls))
        )
    (func $java$nio$charset$CharsetEncoder_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (if $check_3 (i32.eq (i32.const 3) (local.get $methodid))
            (then
                (return (i32.const 187))
                ))
        (if $check_4 (i32.eq (i32.const 4) (local.get $methodid))
            (then
                (return (i32.const 188))
                ))
        (if $check_5 (i32.eq (i32.const 5) (local.get $methodid))
            (then
                (return (i32.const 189))
                ))
        (if $check_6 (i32.eq (i32.const 6) (local.get $methodid))
            (then
                (return (i32.const 190))
                ))
        (if $check_7 (i32.eq (i32.const 7) (local.get $methodid))
            (then
                (return (i32.const 191))
                ))
        (if $check_8 (i32.eq (i32.const 8) (local.get $methodid))
            (then
                (return (i32.const 192))
                ))
        (if $check_9 (i32.eq (i32.const 9) (local.get $methodid))
            (then
                (return (i32.const 193))
                ))
        (if $check_10 (i32.eq (i32.const 10) (local.get $methodid))
            (then
                (return (i32.const 194))
                ))
        (unreachable))
    (func $java$nio$charset$CharsetEncoder_i (type $t32) (result (ref $java$nio$charset$CharsetEncoder_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$nio$charset$CharsetEncoder_rtt $initStatus (global.get $java$nio$charset$CharsetEncoder_cls)))
            (then
                (struct.set $java$nio$charset$CharsetEncoder_rtt $initStatus (global.get $java$nio$charset$CharsetEncoder_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (call $java$nio$charset$CharsetEncoder$V$$clinit$$$ (ref.null none))
                (br $check)
                ))
        (return (global.get $java$nio$charset$CharsetEncoder_cls))
        )
    (func $de$mirkosertic$bytecoder$classlib$java$lang$TMath_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $de$mirkosertic$bytecoder$classlib$java$lang$TMath_i (type $t35) (result (ref $de$mirkosertic$bytecoder$classlib$java$lang$TMath_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $de$mirkosertic$bytecoder$classlib$java$lang$TMath_rtt $initStatus (global.get $de$mirkosertic$bytecoder$classlib$java$lang$TMath_cls)))
            (then
                (struct.set $de$mirkosertic$bytecoder$classlib$java$lang$TMath_rtt $initStatus (global.get $de$mirkosertic$bytecoder$classlib$java$lang$TMath_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (call $de$mirkosertic$bytecoder$classlib$java$lang$TMath$V$$clinit$$$ (ref.null none))
                (br $check)
                ))
        (return (global.get $de$mirkosertic$bytecoder$classlib$java$lang$TMath_cls))
        )
    (func $java$lang$ThreadGroup_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$lang$ThreadGroup_i (type $t38) (result (ref $java$lang$ThreadGroup_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$ThreadGroup_rtt $initStatus (global.get $java$lang$ThreadGroup_cls)))
            (then
                (struct.set $java$lang$ThreadGroup_rtt $initStatus (global.get $java$lang$ThreadGroup_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (call $java$lang$ThreadGroup$V$$clinit$$$ (ref.null none))
                (br $check)
                ))
        (return (global.get $java$lang$ThreadGroup_cls))
        )
    (func $java$lang$Readable_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$lang$Readable_i (type $t41) (result (ref $java$lang$Readable_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$Readable_rtt $initStatus (global.get $java$lang$Readable_cls)))
            (then
                (struct.set $java$lang$Readable_rtt $initStatus (global.get $java$lang$Readable_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$lang$Readable_cls))
        )
    (func $java$util$ImmutableCollections_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$util$ImmutableCollections_i (type $t44) (result (ref $java$util$ImmutableCollections_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$ImmutableCollections_rtt $initStatus (global.get $java$util$ImmutableCollections_cls)))
            (then
                (struct.set $java$util$ImmutableCollections_rtt $initStatus (global.get $java$util$ImmutableCollections_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (call $java$util$ImmutableCollections$V$$clinit$$$ (ref.null none))
                (br $check)
                ))
        (return (global.get $java$util$ImmutableCollections_cls))
        )
    (func $java$lang$System_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$lang$System_i (type $t47) (result (ref $java$lang$System_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$System_rtt $initStatus (global.get $java$lang$System_cls)))
            (then
                (struct.set $java$lang$System_rtt $initStatus (global.get $java$lang$System_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (call $java$lang$System$V$$clinit$$$ (ref.null none))
                (br $check)
                ))
        (return (global.get $java$lang$System_cls))
        )
    (func $jdk$internal$foreign$MemorySessionImpl_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (if $check_11 (i32.eq (i32.const 11) (local.get $methodid))
            (then
                (return (i32.const 200))
                ))
        (unreachable))
    (func $jdk$internal$foreign$MemorySessionImpl_i (type $t50) (result (ref $jdk$internal$foreign$MemorySessionImpl_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $jdk$internal$foreign$MemorySessionImpl_rtt $initStatus (global.get $jdk$internal$foreign$MemorySessionImpl_cls)))
            (then
                (struct.set $jdk$internal$foreign$MemorySessionImpl_rtt $initStatus (global.get $jdk$internal$foreign$MemorySessionImpl_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $jdk$internal$foreign$MemorySessionImpl_cls))
        )
    (func $java$lang$invoke$CallSite_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$lang$invoke$CallSite_i (type $t53) (result (ref $java$lang$invoke$CallSite_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$invoke$CallSite_rtt $initStatus (global.get $java$lang$invoke$CallSite_cls)))
            (then
                (struct.set $java$lang$invoke$CallSite_rtt $initStatus (global.get $java$lang$invoke$CallSite_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$lang$invoke$CallSite_cls))
        )
    (func $java$util$Map_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (if $check_12 (i32.eq (i32.const 12) (local.get $methodid))
            (then
                (return (i32.const 203))
                ))
        (unreachable))
    (func $java$util$Map_i (type $t56) (result (ref $java$util$Map_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$Map_rtt $initStatus (global.get $java$util$Map_cls)))
            (then
                (struct.set $java$util$Map_rtt $initStatus (global.get $java$util$Map_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$util$Map_cls))
        )
    (func $java$util$function$Supplier_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$util$function$Supplier_i (type $t59) (result (ref $java$util$function$Supplier_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$function$Supplier_rtt $initStatus (global.get $java$util$function$Supplier_cls)))
            (then
                (struct.set $java$util$function$Supplier_rtt $initStatus (global.get $java$util$function$Supplier_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$util$function$Supplier_cls))
        )
    (func $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup_i (type $t62) (result (ref $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup_rtt $initStatus (global.get $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup_cls)))
            (then
                (struct.set $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup_rtt $initStatus (global.get $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (call $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup$V$$clinit$$$ (ref.null none))
                (br $check)
                ))
        (return (global.get $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup_cls))
        )
    (func $java$lang$AbstractStringBuilder_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$lang$AbstractStringBuilder_i (type $t65) (result (ref $java$lang$AbstractStringBuilder_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$AbstractStringBuilder_rtt $initStatus (global.get $java$lang$AbstractStringBuilder_cls)))
            (then
                (struct.set $java$lang$AbstractStringBuilder_rtt $initStatus (global.get $java$lang$AbstractStringBuilder_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$lang$AbstractStringBuilder_cls))
        )
    (func $java$util$concurrent$locks$Lock_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$util$concurrent$locks$Lock_i (type $t68) (result (ref $java$util$concurrent$locks$Lock_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$concurrent$locks$Lock_rtt $initStatus (global.get $java$util$concurrent$locks$Lock_cls)))
            (then
                (struct.set $java$util$concurrent$locks$Lock_rtt $initStatus (global.get $java$util$concurrent$locks$Lock_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$util$concurrent$locks$Lock_cls))
        )
    (func $java$lang$Character_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$lang$Character_i (type $t71) (result (ref $java$lang$Character_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$Character_rtt $initStatus (global.get $java$lang$Character_cls)))
            (then
                (struct.set $java$lang$Character_rtt $initStatus (global.get $java$lang$Character_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$lang$Character_cls))
        )
    (func $java$lang$ref$Reference_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (if $check_13 (i32.eq (i32.const 13) (local.get $methodid))
            (then
                (return (i32.const 205))
                ))
        (unreachable))
    (func $java$lang$ref$Reference_i (type $t74) (result (ref $java$lang$ref$Reference_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$ref$Reference_rtt $initStatus (global.get $java$lang$ref$Reference_cls)))
            (then
                (struct.set $java$lang$ref$Reference_rtt $initStatus (global.get $java$lang$ref$Reference_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$lang$ref$Reference_cls))
        )
    (func $de$mirkosertic$bytecoder$classlib$VM_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $de$mirkosertic$bytecoder$classlib$VM_i (type $t77) (result (ref $de$mirkosertic$bytecoder$classlib$VM_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $de$mirkosertic$bytecoder$classlib$VM_rtt $initStatus (global.get $de$mirkosertic$bytecoder$classlib$VM_cls)))
            (then
                (struct.set $de$mirkosertic$bytecoder$classlib$VM_rtt $initStatus (global.get $de$mirkosertic$bytecoder$classlib$VM_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (call $de$mirkosertic$bytecoder$classlib$VM$V$$clinit$$$ (ref.null none))
                (br $check)
                ))
        (return (global.get $de$mirkosertic$bytecoder$classlib$VM_cls))
        )
    (func $java$lang$invoke$MethodHandle_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$lang$invoke$MethodHandle_i (type $t80) (result (ref $java$lang$invoke$MethodHandle_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$invoke$MethodHandle_rtt $initStatus (global.get $java$lang$invoke$MethodHandle_cls)))
            (then
                (struct.set $java$lang$invoke$MethodHandle_rtt $initStatus (global.get $java$lang$invoke$MethodHandle_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$lang$invoke$MethodHandle_cls))
        )
    (func $java$nio$charset$CodingErrorAction_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 209))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$nio$charset$CodingErrorAction_i (type $t83) (result (ref $java$nio$charset$CodingErrorAction_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$nio$charset$CodingErrorAction_rtt $initStatus (global.get $java$nio$charset$CodingErrorAction_cls)))
            (then
                (struct.set $java$nio$charset$CodingErrorAction_rtt $initStatus (global.get $java$nio$charset$CodingErrorAction_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (call $java$nio$charset$CodingErrorAction$V$$clinit$$$ (ref.null none))
                (br $check)
                ))
        (return (global.get $java$nio$charset$CodingErrorAction_cls))
        )
    (func $java$util$Iterator_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$util$Iterator_i (type $t86) (result (ref $java$util$Iterator_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$Iterator_rtt $initStatus (global.get $java$util$Iterator_cls)))
            (then
                (struct.set $java$util$Iterator_rtt $initStatus (global.get $java$util$Iterator_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$util$Iterator_cls))
        )
    (func $java$lang$Iterable_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$lang$Iterable_i (type $t89) (result (ref $java$lang$Iterable_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$Iterable_rtt $initStatus (global.get $java$lang$Iterable_cls)))
            (then
                (struct.set $java$lang$Iterable_rtt $initStatus (global.get $java$lang$Iterable_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$lang$Iterable_cls))
        )
    (func $java$lang$Math_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$lang$Math_i (type $t92) (result (ref $java$lang$Math_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$Math_rtt $initStatus (global.get $java$lang$Math_cls)))
            (then
                (struct.set $java$lang$Math_rtt $initStatus (global.get $java$lang$Math_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (call $java$lang$Math$V$$clinit$$$ (ref.null none))
                (br $check)
                ))
        (return (global.get $java$lang$Math_cls))
        )
    (func $jdk$internal$util$Preconditions_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $jdk$internal$util$Preconditions_i (type $t95) (result (ref $jdk$internal$util$Preconditions_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $jdk$internal$util$Preconditions_rtt $initStatus (global.get $jdk$internal$util$Preconditions_cls)))
            (then
                (struct.set $jdk$internal$util$Preconditions_rtt $initStatus (global.get $jdk$internal$util$Preconditions_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (call $jdk$internal$util$Preconditions$V$$clinit$$$ (ref.null none))
                (br $check)
                ))
        (return (global.get $jdk$internal$util$Preconditions_cls))
        )
    (func $java$nio$Buffer_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (if $check_14 (i32.eq (i32.const 14) (local.get $methodid))
            (then
                (return (i32.const 213))
                ))
        (if $check_15 (i32.eq (i32.const 15) (local.get $methodid))
            (then
                (return (i32.const 214))
                ))
        (if $check_16 (i32.eq (i32.const 16) (local.get $methodid))
            (then
                (return (i32.const 215))
                ))
        (if $check_17 (i32.eq (i32.const 17) (local.get $methodid))
            (then
                (return (i32.const 216))
                ))
        (if $check_18 (i32.eq (i32.const 18) (local.get $methodid))
            (then
                (return (i32.const 217))
                ))
        (if $check_19 (i32.eq (i32.const 19) (local.get $methodid))
            (then
                (return (i32.const 218))
                ))
        (if $check_20 (i32.eq (i32.const 20) (local.get $methodid))
            (then
                (return (i32.const 219))
                ))
        (if $check_21 (i32.eq (i32.const 21) (local.get $methodid))
            (then
                (return (i32.const 220))
                ))
        (if $check_22 (i32.eq (i32.const 22) (local.get $methodid))
            (then
                (return (i32.const 221))
                ))
        (if $check_23 (i32.eq (i32.const 23) (local.get $methodid))
            (then
                (return (i32.const 222))
                ))
        (if $check_24 (i32.eq (i32.const 24) (local.get $methodid))
            (then
                (return (i32.const 223))
                ))
        (if $check_25 (i32.eq (i32.const 25) (local.get $methodid))
            (then
                (return (i32.const 224))
                ))
        (if $check_26 (i32.eq (i32.const 26) (local.get $methodid))
            (then
                (return (i32.const 225))
                ))
        (unreachable))
    (func $java$nio$Buffer_i (type $t98) (result (ref $java$nio$Buffer_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$nio$Buffer_rtt $initStatus (global.get $java$nio$Buffer_cls)))
            (then
                (struct.set $java$nio$Buffer_rtt $initStatus (global.get $java$nio$Buffer_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (call $java$nio$Buffer$V$$clinit$$$ (ref.null none))
                (br $check)
                ))
        (return (global.get $java$nio$Buffer_cls))
        )
    (func $de$mirkosertic$bytecoder$classlib$java$lang$ref$TReference_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $de$mirkosertic$bytecoder$classlib$java$lang$ref$TReference_i (type $t101) (result (ref $de$mirkosertic$bytecoder$classlib$java$lang$ref$TReference_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $de$mirkosertic$bytecoder$classlib$java$lang$ref$TReference_rtt $initStatus (global.get $de$mirkosertic$bytecoder$classlib$java$lang$ref$TReference_cls)))
            (then
                (struct.set $de$mirkosertic$bytecoder$classlib$java$lang$ref$TReference_rtt $initStatus (global.get $de$mirkosertic$bytecoder$classlib$java$lang$ref$TReference_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $de$mirkosertic$bytecoder$classlib$java$lang$ref$TReference_cls))
        )
    (func $java$util$RandomAccess_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$util$RandomAccess_i (type $t104) (result (ref $java$util$RandomAccess_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$RandomAccess_rtt $initStatus (global.get $java$util$RandomAccess_cls)))
            (then
                (struct.set $java$util$RandomAccess_rtt $initStatus (global.get $java$util$RandomAccess_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$util$RandomAccess_cls))
        )
    (func $java$io$FileDescriptor_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (if $check_27 (i32.eq (i32.const 27) (local.get $methodid))
            (then
                (return (i32.const 227))
                ))
        (if $check_28 (i32.eq (i32.const 28) (local.get $methodid))
            (then
                (return (i32.const 228))
                ))
        (unreachable))
    (func $java$io$FileDescriptor_i (type $t107) (result (ref $java$io$FileDescriptor_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$io$FileDescriptor_rtt $initStatus (global.get $java$io$FileDescriptor_cls)))
            (then
                (struct.set $java$io$FileDescriptor_rtt $initStatus (global.get $java$io$FileDescriptor_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (call $java$io$FileDescriptor$V$$clinit$$$ (ref.null none))
                (br $check)
                ))
        (return (global.get $java$io$FileDescriptor_cls))
        )
    (func $java$io$Flushable_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$io$Flushable_i (type $t110) (result (ref $java$io$Flushable_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$io$Flushable_rtt $initStatus (global.get $java$io$Flushable_cls)))
            (then
                (struct.set $java$io$Flushable_rtt $initStatus (global.get $java$io$Flushable_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$io$Flushable_cls))
        )
    (func $java$nio$charset$CharsetDecoder_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_32 (i32.eq (i32.const 32) (local.get $methodid))
            (then
                (return (i32.const 238))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_33 (i32.eq (i32.const 33) (local.get $methodid))
            (then
                (return (i32.const 239))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (if $check_34 (i32.eq (i32.const 34) (local.get $methodid))
            (then
                (return (i32.const 240))
                ))
        (if $check_35 (i32.eq (i32.const 35) (local.get $methodid))
            (then
                (return (i32.const 241))
                ))
        (if $check_36 (i32.eq (i32.const 36) (local.get $methodid))
            (then
                (return (i32.const 244))
                ))
        (if $check_37 (i32.eq (i32.const 37) (local.get $methodid))
            (then
                (return (i32.const 245))
                ))
        (if $check_5 (i32.eq (i32.const 5) (local.get $methodid))
            (then
                (return (i32.const 246))
                ))
        (if $check_7 (i32.eq (i32.const 7) (local.get $methodid))
            (then
                (return (i32.const 232))
                ))
        (if $check_9 (i32.eq (i32.const 9) (local.get $methodid))
            (then
                (return (i32.const 234))
                ))
        (if $check_29 (i32.eq (i32.const 29) (local.get $methodid))
            (then
                (return (i32.const 231))
                ))
        (if $check_30 (i32.eq (i32.const 30) (local.get $methodid))
            (then
                (return (i32.const 233))
                ))
        (if $check_31 (i32.eq (i32.const 31) (local.get $methodid))
            (then
                (return (i32.const 235))
                ))
        (unreachable))
    (func $java$nio$charset$CharsetDecoder_i (type $t113) (result (ref $java$nio$charset$CharsetDecoder_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$nio$charset$CharsetDecoder_rtt $initStatus (global.get $java$nio$charset$CharsetDecoder_cls)))
            (then
                (struct.set $java$nio$charset$CharsetDecoder_rtt $initStatus (global.get $java$nio$charset$CharsetDecoder_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (call $java$nio$charset$CharsetDecoder$V$$clinit$$$ (ref.null none))
                (br $check)
                ))
        (return (global.get $java$nio$charset$CharsetDecoder_cls))
        )
    (func $java$lang$CharSequence_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (if $check_38 (i32.eq (i32.const 38) (local.get $methodid))
            (then
                (return (i32.const 247))
                ))
        (unreachable))
    (func $java$lang$CharSequence_i (type $t116) (result (ref $java$lang$CharSequence_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$CharSequence_rtt $initStatus (global.get $java$lang$CharSequence_cls)))
            (then
                (struct.set $java$lang$CharSequence_rtt $initStatus (global.get $java$lang$CharSequence_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$lang$CharSequence_cls))
        )
    (func $java$lang$Class_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 252))
                ))
        (if $check_39 (i32.eq (i32.const 39) (local.get $methodid))
            (then
                (return (i32.const 248))
                ))
        (if $check_40 (i32.eq (i32.const 40) (local.get $methodid))
            (then
                (return (i32.const 249))
                ))
        (if $check_41 (i32.eq (i32.const 41) (local.get $methodid))
            (then
                (return (i32.const 250))
                ))
        (unreachable))
    (func $java$lang$Class_i (type $t118) (result (ref $java$lang$Class_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$Class_rtt $initStatus (global.get $java$lang$Class_cls)))
            (then
                (struct.set $java$lang$Class_rtt $initStatus (global.get $java$lang$Class_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$lang$Class_cls))
        )
    (func $java$util$function$Function_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$util$function$Function_i (type $t121) (result (ref $java$util$function$Function_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$function$Function_rtt $initStatus (global.get $java$util$function$Function_cls)))
            (then
                (struct.set $java$util$function$Function_rtt $initStatus (global.get $java$util$function$Function_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$util$function$Function_cls))
        )
    (func $java$util$Objects_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$util$Objects_i (type $t124) (result (ref $java$util$Objects_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$Objects_rtt $initStatus (global.get $java$util$Objects_cls)))
            (then
                (struct.set $java$util$Objects_rtt $initStatus (global.get $java$util$Objects_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$util$Objects_cls))
        )
    (func $de$mirkosertic$bytecoder$api$vue$Vue_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $de$mirkosertic$bytecoder$api$vue$Vue_i (type $t127) (result (ref $de$mirkosertic$bytecoder$api$vue$Vue_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $de$mirkosertic$bytecoder$api$vue$Vue_rtt $initStatus (global.get $de$mirkosertic$bytecoder$api$vue$Vue_cls)))
            (then
                (struct.set $de$mirkosertic$bytecoder$api$vue$Vue_rtt $initStatus (global.get $de$mirkosertic$bytecoder$api$vue$Vue_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $de$mirkosertic$bytecoder$api$vue$Vue_cls))
        )
    (func $java$nio$BufferMismatch_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$nio$BufferMismatch_i (type $t130) (result (ref $java$nio$BufferMismatch_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$nio$BufferMismatch_rtt $initStatus (global.get $java$nio$BufferMismatch_cls)))
            (then
                (struct.set $java$nio$BufferMismatch_rtt $initStatus (global.get $java$nio$BufferMismatch_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (call $java$nio$BufferMismatch$V$$clinit$$$ (ref.null none))
                (br $check)
                ))
        (return (global.get $java$nio$BufferMismatch_cls))
        )
    (func $java$nio$charset$CoderResult_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 265))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (if $check_42 (i32.eq (i32.const 42) (local.get $methodid))
            (then
                (return (i32.const 257))
                ))
        (if $check_43 (i32.eq (i32.const 43) (local.get $methodid))
            (then
                (return (i32.const 258))
                ))
        (if $check_44 (i32.eq (i32.const 44) (local.get $methodid))
            (then
                (return (i32.const 261))
                ))
        (if $check_45 (i32.eq (i32.const 45) (local.get $methodid))
            (then
                (return (i32.const 262))
                ))
        (if $check_46 (i32.eq (i32.const 46) (local.get $methodid))
            (then
                (return (i32.const 263))
                ))
        (if $check_47 (i32.eq (i32.const 47) (local.get $methodid))
            (then
                (return (i32.const 264))
                ))
        (unreachable))
    (func $java$nio$charset$CoderResult_i (type $t133) (result (ref $java$nio$charset$CoderResult_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$nio$charset$CoderResult_rtt $initStatus (global.get $java$nio$charset$CoderResult_cls)))
            (then
                (struct.set $java$nio$charset$CoderResult_rtt $initStatus (global.get $java$nio$charset$CoderResult_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (call $java$nio$charset$CoderResult$V$$clinit$$$ (ref.null none))
                (br $check)
                ))
        (return (global.get $java$nio$charset$CoderResult_cls))
        )
    (func $java$nio$charset$CoderResult$Cache_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$nio$charset$CoderResult$Cache_i (type $t136) (result (ref $java$nio$charset$CoderResult$Cache_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$nio$charset$CoderResult$Cache_rtt $initStatus (global.get $java$nio$charset$CoderResult$Cache_cls)))
            (then
                (struct.set $java$nio$charset$CoderResult$Cache_rtt $initStatus (global.get $java$nio$charset$CoderResult$Cache_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (call $java$nio$charset$CoderResult$Cache$V$$clinit$$$ (ref.null none))
                (br $check)
                ))
        (return (global.get $java$nio$charset$CoderResult$Cache_cls))
        )
    (func $java$lang$Appendable_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$lang$Appendable_i (type $t139) (result (ref $java$lang$Appendable_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$Appendable_rtt $initStatus (global.get $java$lang$Appendable_cls)))
            (then
                (struct.set $java$lang$Appendable_rtt $initStatus (global.get $java$lang$Appendable_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$lang$Appendable_cls))
        )
    (func $jdk$internal$access$SharedSecrets_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $jdk$internal$access$SharedSecrets_i (type $t142) (result (ref $jdk$internal$access$SharedSecrets_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $jdk$internal$access$SharedSecrets_rtt $initStatus (global.get $jdk$internal$access$SharedSecrets_cls)))
            (then
                (struct.set $jdk$internal$access$SharedSecrets_rtt $initStatus (global.get $jdk$internal$access$SharedSecrets_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $jdk$internal$access$SharedSecrets_cls))
        )
    (func $java$util$Arrays_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$util$Arrays_i (type $t145) (result (ref $java$util$Arrays_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$Arrays_rtt $initStatus (global.get $java$util$Arrays_cls)))
            (then
                (struct.set $java$util$Arrays_rtt $initStatus (global.get $java$util$Arrays_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (call $java$util$Arrays$V$$clinit$$$ (ref.null none))
                (br $check)
                ))
        (return (global.get $java$util$Arrays_cls))
        )
    (func $java$lang$Void_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$lang$Void_i (type $t148) (result (ref $java$lang$Void_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$Void_rtt $initStatus (global.get $java$lang$Void_cls)))
            (then
                (struct.set $java$lang$Void_rtt $initStatus (global.get $java$lang$Void_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (call $java$lang$Void$V$$clinit$$$ (ref.null none))
                (br $check)
                ))
        (return (global.get $java$lang$Void_cls))
        )
    (func $de$mirkosertic$bytecoder$api$Callback_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $de$mirkosertic$bytecoder$api$Callback_i (type $t151) (result (ref $de$mirkosertic$bytecoder$api$Callback_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $de$mirkosertic$bytecoder$api$Callback_rtt $initStatus (global.get $de$mirkosertic$bytecoder$api$Callback_cls)))
            (then
                (struct.set $de$mirkosertic$bytecoder$api$Callback_rtt $initStatus (global.get $de$mirkosertic$bytecoder$api$Callback_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $de$mirkosertic$bytecoder$api$Callback_cls))
        )
    (func $java$util$HashMap$HashIterator_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_48 (i32.eq (i32.const 48) (local.get $methodid))
            (then
                (return (i32.const 271))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_49 (i32.eq (i32.const 49) (local.get $methodid))
            (then
                (return (i32.const 272))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$util$HashMap$HashIterator_i (type $t154) (result (ref $java$util$HashMap$HashIterator_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$HashMap$HashIterator_rtt $initStatus (global.get $java$util$HashMap$HashIterator_cls)))
            (then
                (struct.set $java$util$HashMap$HashIterator_rtt $initStatus (global.get $java$util$HashMap$HashIterator_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$util$HashMap$HashIterator_cls))
        )
    (func $de$mirkosertic$bytecoder$classlib$Array_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $de$mirkosertic$bytecoder$classlib$Array_i (type $t157) (result (ref $de$mirkosertic$bytecoder$classlib$Array_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $initStatus (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)))
            (then
                (struct.set $de$mirkosertic$bytecoder$classlib$Array_rtt $initStatus (global.get $de$mirkosertic$bytecoder$classlib$Array_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $de$mirkosertic$bytecoder$classlib$Array_cls))
        )
    (func $jdk$internal$misc$ScopedMemoryAccess_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (if $check_50 (i32.eq (i32.const 50) (local.get $methodid))
            (then
                (return (i32.const 275))
                ))
        (if $check_51 (i32.eq (i32.const 51) (local.get $methodid))
            (then
                (return (i32.const 276))
                ))
        (if $check_52 (i32.eq (i32.const 52) (local.get $methodid))
            (then
                (return (i32.const 277))
                ))
        (if $check_53 (i32.eq (i32.const 53) (local.get $methodid))
            (then
                (return (i32.const 278))
                ))
        (if $check_54 (i32.eq (i32.const 54) (local.get $methodid))
            (then
                (return (i32.const 279))
                ))
        (if $check_55 (i32.eq (i32.const 55) (local.get $methodid))
            (then
                (return (i32.const 280))
                ))
        (unreachable))
    (func $jdk$internal$misc$ScopedMemoryAccess_i (type $t160) (result (ref $jdk$internal$misc$ScopedMemoryAccess_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $jdk$internal$misc$ScopedMemoryAccess_rtt $initStatus (global.get $jdk$internal$misc$ScopedMemoryAccess_cls)))
            (then
                (struct.set $jdk$internal$misc$ScopedMemoryAccess_rtt $initStatus (global.get $jdk$internal$misc$ScopedMemoryAccess_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (call $jdk$internal$misc$ScopedMemoryAccess$V$$clinit$$$ (ref.null none))
                (br $check)
                ))
        (return (global.get $jdk$internal$misc$ScopedMemoryAccess_cls))
        )
    (func $java$lang$Comparable_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$lang$Comparable_i (type $t163) (result (ref $java$lang$Comparable_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$Comparable_rtt $initStatus (global.get $java$lang$Comparable_cls)))
            (then
                (struct.set $java$lang$Comparable_rtt $initStatus (global.get $java$lang$Comparable_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$lang$Comparable_cls))
        )
    (func $java$lang$reflect$Type_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$lang$reflect$Type_i (type $t166) (result (ref $java$lang$reflect$Type_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$reflect$Type_rtt $initStatus (global.get $java$lang$reflect$Type_cls)))
            (then
                (struct.set $java$lang$reflect$Type_rtt $initStatus (global.get $java$lang$reflect$Type_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$lang$reflect$Type_cls))
        )
    (func $java$lang$AutoCloseable_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$lang$AutoCloseable_i (type $t169) (result (ref $java$lang$AutoCloseable_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$AutoCloseable_rtt $initStatus (global.get $java$lang$AutoCloseable_cls)))
            (then
                (struct.set $java$lang$AutoCloseable_rtt $initStatus (global.get $java$lang$AutoCloseable_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$lang$AutoCloseable_cls))
        )
    (func $java$io$Serializable_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$io$Serializable_i (type $t172) (result (ref $java$io$Serializable_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$io$Serializable_rtt $initStatus (global.get $java$io$Serializable_cls)))
            (then
                (struct.set $java$io$Serializable_rtt $initStatus (global.get $java$io$Serializable_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$io$Serializable_cls))
        )
    (func $jdk$internal$util$ArraysSupport_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $jdk$internal$util$ArraysSupport_i (type $t175) (result (ref $jdk$internal$util$ArraysSupport_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $jdk$internal$util$ArraysSupport_rtt $initStatus (global.get $jdk$internal$util$ArraysSupport_cls)))
            (then
                (struct.set $jdk$internal$util$ArraysSupport_rtt $initStatus (global.get $jdk$internal$util$ArraysSupport_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (call $jdk$internal$util$ArraysSupport$V$$clinit$$$ (ref.null none))
                (br $check)
                ))
        (return (global.get $jdk$internal$util$ArraysSupport_cls))
        )
    (func $jdk$internal$misc$InternalLock_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $jdk$internal$misc$InternalLock_i (type $t178) (result (ref $jdk$internal$misc$InternalLock_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $jdk$internal$misc$InternalLock_rtt $initStatus (global.get $jdk$internal$misc$InternalLock_cls)))
            (then
                (struct.set $jdk$internal$misc$InternalLock_rtt $initStatus (global.get $jdk$internal$misc$InternalLock_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (call $jdk$internal$misc$InternalLock$V$$clinit$$$ (ref.null none))
                (br $check)
                ))
        (return (global.get $jdk$internal$misc$InternalLock_cls))
        )
    (func $java$util$Map$Entry_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$util$Map$Entry_i (type $t181) (result (ref $java$util$Map$Entry_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$Map$Entry_rtt $initStatus (global.get $java$util$Map$Entry_cls)))
            (then
                (struct.set $java$util$Map$Entry_rtt $initStatus (global.get $java$util$Map$Entry_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$util$Map$Entry_cls))
        )
    (func $de$mirkosertic$bytecoder$integrationtest$VueDemo_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $de$mirkosertic$bytecoder$integrationtest$VueDemo_i (type $t184) (result (ref $de$mirkosertic$bytecoder$integrationtest$VueDemo_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $de$mirkosertic$bytecoder$integrationtest$VueDemo_rtt $initStatus (global.get $de$mirkosertic$bytecoder$integrationtest$VueDemo_cls)))
            (then
                (struct.set $de$mirkosertic$bytecoder$integrationtest$VueDemo_rtt $initStatus (global.get $de$mirkosertic$bytecoder$integrationtest$VueDemo_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $de$mirkosertic$bytecoder$integrationtest$VueDemo_cls))
        )
    (func $jdk$internal$misc$CDS_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $jdk$internal$misc$CDS_i (type $t187) (result (ref $jdk$internal$misc$CDS_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $jdk$internal$misc$CDS_rtt $initStatus (global.get $jdk$internal$misc$CDS_cls)))
            (then
                (struct.set $jdk$internal$misc$CDS_rtt $initStatus (global.get $jdk$internal$misc$CDS_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (call $jdk$internal$misc$CDS$V$$clinit$$$ (ref.null none))
                (br $check)
                ))
        (return (global.get $jdk$internal$misc$CDS_cls))
        )
    (func $jdk$internal$misc$Unsafe_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (if $check_56 (i32.eq (i32.const 56) (local.get $methodid))
            (then
                (return (i32.const 286))
                ))
        (if $check_57 (i32.eq (i32.const 57) (local.get $methodid))
            (then
                (return (i32.const 287))
                ))
        (if $check_58 (i32.eq (i32.const 58) (local.get $methodid))
            (then
                (return (i32.const 288))
                ))
        (if $check_59 (i32.eq (i32.const 59) (local.get $methodid))
            (then
                (return (i32.const 289))
                ))
        (if $check_60 (i32.eq (i32.const 60) (local.get $methodid))
            (then
                (return (i32.const 290))
                ))
        (if $check_61 (i32.eq (i32.const 61) (local.get $methodid))
            (then
                (return (i32.const 291))
                ))
        (if $check_62 (i32.eq (i32.const 62) (local.get $methodid))
            (then
                (return (i32.const 292))
                ))
        (if $check_63 (i32.eq (i32.const 63) (local.get $methodid))
            (then
                (return (i32.const 293))
                ))
        (unreachable))
    (func $jdk$internal$misc$Unsafe_i (type $t190) (result (ref $jdk$internal$misc$Unsafe_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $jdk$internal$misc$Unsafe_rtt $initStatus (global.get $jdk$internal$misc$Unsafe_cls)))
            (then
                (struct.set $jdk$internal$misc$Unsafe_rtt $initStatus (global.get $jdk$internal$misc$Unsafe_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (call $jdk$internal$misc$Unsafe$V$$clinit$$$ (ref.null none))
                (br $check)
                ))
        (return (global.get $jdk$internal$misc$Unsafe_cls))
        )
    (func $java$util$function$BiFunction_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$util$function$BiFunction_i (type $t193) (result (ref $java$util$function$BiFunction_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$function$BiFunction_rtt $initStatus (global.get $java$util$function$BiFunction_cls)))
            (then
                (struct.set $java$util$function$BiFunction_rtt $initStatus (global.get $java$util$function$BiFunction_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$util$function$BiFunction_cls))
        )
    (func $java$lang$Throwable_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_64 (i32.eq (i32.const 64) (local.get $methodid))
            (then
                (return (i32.const 294))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_65 (i32.eq (i32.const 65) (local.get $methodid))
            (then
                (return (i32.const 297))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$lang$Throwable_i (type $t196) (result (ref $java$lang$Throwable_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$Throwable_rtt $initStatus (global.get $java$lang$Throwable_cls)))
            (then
                (struct.set $java$lang$Throwable_rtt $initStatus (global.get $java$lang$Throwable_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$lang$Throwable_cls))
        )
    (func $java$util$Collections_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$util$Collections_i (type $t199) (result (ref $java$util$Collections_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$Collections_rtt $initStatus (global.get $java$util$Collections_cls)))
            (then
                (struct.set $java$util$Collections_rtt $initStatus (global.get $java$util$Collections_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (call $java$util$Collections$V$$clinit$$$ (ref.null none))
                (br $check)
                ))
        (return (global.get $java$util$Collections_cls))
        )
    (func $java$lang$ClassLoader_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$lang$ClassLoader_i (type $t202) (result (ref $java$lang$ClassLoader_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$ClassLoader_rtt $initStatus (global.get $java$lang$ClassLoader_cls)))
            (then
                (struct.set $java$lang$ClassLoader_rtt $initStatus (global.get $java$lang$ClassLoader_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$lang$ClassLoader_cls))
        )
    (func $java$lang$Cloneable_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$lang$Cloneable_i (type $t205) (result (ref $java$lang$Cloneable_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$Cloneable_rtt $initStatus (global.get $java$lang$Cloneable_cls)))
            (then
                (struct.set $java$lang$Cloneable_rtt $initStatus (global.get $java$lang$Cloneable_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$lang$Cloneable_cls))
        )
    (func $jdk$internal$access$JavaNioAccess_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $jdk$internal$access$JavaNioAccess_i (type $t208) (result (ref $jdk$internal$access$JavaNioAccess_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $jdk$internal$access$JavaNioAccess_rtt $initStatus (global.get $jdk$internal$access$JavaNioAccess_cls)))
            (then
                (struct.set $jdk$internal$access$JavaNioAccess_rtt $initStatus (global.get $jdk$internal$access$JavaNioAccess_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $jdk$internal$access$JavaNioAccess_cls))
        )
    (func $java$nio$CharBuffer_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 314))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 315))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 316))
                ))
        (if $check_66 (i32.eq (i32.const 66) (local.get $methodid))
            (then
                (return (i32.const 302))
                ))
        (if $check_67 (i32.eq (i32.const 67) (local.get $methodid))
            (then
                (return (i32.const 303))
                ))
        (if $check_68 (i32.eq (i32.const 68) (local.get $methodid))
            (then
                (return (i32.const 308))
                ))
        (if $check_69 (i32.eq (i32.const 69) (local.get $methodid))
            (then
                (return (i32.const 310))
                ))
        (if $check_70 (i32.eq (i32.const 70) (local.get $methodid))
            (then
                (return (i32.const 311))
                ))
        (if $check_71 (i32.eq (i32.const 71) (local.get $methodid))
            (then
                (return (i32.const 312))
                ))
        (if $check_72 (i32.eq (i32.const 72) (local.get $methodid))
            (then
                (return (i32.const 313))
                ))
        (if $check_73 (i32.eq (i32.const 73) (local.get $methodid))
            (then
                (return (i32.const 317))
                ))
        (if $check_74 (i32.eq (i32.const 74) (local.get $methodid))
            (then
                (return (i32.const 318))
                ))
        (if $check_75 (i32.eq (i32.const 75) (local.get $methodid))
            (then
                (return (i32.const 319))
                ))
        (if $check_76 (i32.eq (i32.const 76) (local.get $methodid))
            (then
                (return (i32.const 320))
                ))
        (if $check_14 (i32.eq (i32.const 14) (local.get $methodid))
            (then
                (return (i32.const 307))
                ))
        (if $check_15 (i32.eq (i32.const 15) (local.get $methodid))
            (then
                (return (i32.const 214))
                ))
        (if $check_16 (i32.eq (i32.const 16) (local.get $methodid))
            (then
                (return (i32.const 309))
                ))
        (if $check_17 (i32.eq (i32.const 17) (local.get $methodid))
            (then
                (return (i32.const 216))
                ))
        (if $check_18 (i32.eq (i32.const 18) (local.get $methodid))
            (then
                (return (i32.const 217))
                ))
        (if $check_19 (i32.eq (i32.const 19) (local.get $methodid))
            (then
                (return (i32.const 218))
                ))
        (if $check_20 (i32.eq (i32.const 20) (local.get $methodid))
            (then
                (return (i32.const 219))
                ))
        (if $check_21 (i32.eq (i32.const 21) (local.get $methodid))
            (then
                (return (i32.const 220))
                ))
        (if $check_22 (i32.eq (i32.const 22) (local.get $methodid))
            (then
                (return (i32.const 221))
                ))
        (if $check_23 (i32.eq (i32.const 23) (local.get $methodid))
            (then
                (return (i32.const 222))
                ))
        (if $check_24 (i32.eq (i32.const 24) (local.get $methodid))
            (then
                (return (i32.const 223))
                ))
        (if $check_25 (i32.eq (i32.const 25) (local.get $methodid))
            (then
                (return (i32.const 224))
                ))
        (if $check_26 (i32.eq (i32.const 26) (local.get $methodid))
            (then
                (return (i32.const 225))
                ))
        (if $check_38 (i32.eq (i32.const 38) (local.get $methodid))
            (then
                (return (i32.const 304))
                ))
        (if $check_45 (i32.eq (i32.const 45) (local.get $methodid))
            (then
                (return (i32.const 305))
                ))
        (unreachable))
    (func $java$nio$CharBuffer_i (type $t211) (result (ref $java$nio$CharBuffer_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$nio$CharBuffer_rtt $initStatus (global.get $java$nio$CharBuffer_cls)))
            (then
                (struct.set $java$nio$CharBuffer_rtt $initStatus (global.get $java$nio$CharBuffer_cls) (i32.const 1))
                (drop (call $java$nio$Buffer_i))
                (call $java$nio$CharBuffer$V$$clinit$$$ (ref.null none))
                (br $check)
                ))
        (return (global.get $java$nio$CharBuffer_cls))
        )
    (func $jdk$internal$util$Preconditions$2_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (if $check_77 (i32.eq (i32.const 77) (local.get $methodid))
            (then
                (return (i32.const 322))
                ))
        (if $check_78 (i32.eq (i32.const 78) (local.get $methodid))
            (then
                (return (i32.const 323))
                ))
        (unreachable))
    (func $jdk$internal$util$Preconditions$2_i (type $t214) (result (ref $jdk$internal$util$Preconditions$2_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $jdk$internal$util$Preconditions$2_rtt $initStatus (global.get $jdk$internal$util$Preconditions$2_cls)))
            (then
                (struct.set $jdk$internal$util$Preconditions$2_rtt $initStatus (global.get $jdk$internal$util$Preconditions$2_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $jdk$internal$util$Preconditions$2_cls))
        )
    (func $java$nio$charset$Charset_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (if $check_79 (i32.eq (i32.const 79) (local.get $methodid))
            (then
                (return (i32.const 325))
                ))
        (unreachable))
    (func $java$nio$charset$Charset_i (type $t217) (result (ref $java$nio$charset$Charset_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$nio$charset$Charset_rtt $initStatus (global.get $java$nio$charset$Charset_cls)))
            (then
                (struct.set $java$nio$charset$Charset_rtt $initStatus (global.get $java$nio$charset$Charset_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$nio$charset$Charset_cls))
        )
    (func $java$util$HashMap$EntryIterator_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_48 (i32.eq (i32.const 48) (local.get $methodid))
            (then
                (return (i32.const 271))
                ))
        (if $check_80 (i32.eq (i32.const 80) (local.get $methodid))
            (then
                (return (i32.const 327))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_49 (i32.eq (i32.const 49) (local.get $methodid))
            (then
                (return (i32.const 272))
                ))
        (if $check_81 (i32.eq (i32.const 81) (local.get $methodid))
            (then
                (return (i32.const 328))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$util$HashMap$EntryIterator_i (type $t220) (result (ref $java$util$HashMap$EntryIterator_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$HashMap$EntryIterator_rtt $initStatus (global.get $java$util$HashMap$EntryIterator_cls)))
            (then
                (struct.set $java$util$HashMap$EntryIterator_rtt $initStatus (global.get $java$util$HashMap$EntryIterator_cls) (i32.const 1))
                (drop (call $java$util$HashMap$HashIterator_i))
                (br $check)
                ))
        (return (global.get $java$util$HashMap$EntryIterator_cls))
        )
    (func $java$util$Collection_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$util$Collection_i (type $t223) (result (ref $java$util$Collection_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$Collection_rtt $initStatus (global.get $java$util$Collection_cls)))
            (then
                (struct.set $java$util$Collection_rtt $initStatus (global.get $java$util$Collection_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$util$Collection_cls))
        )
    (func $java$io$Closeable_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$io$Closeable_i (type $t226) (result (ref $java$io$Closeable_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$io$Closeable_rtt $initStatus (global.get $java$io$Closeable_cls)))
            (then
                (struct.set $java$io$Closeable_rtt $initStatus (global.get $java$io$Closeable_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$io$Closeable_cls))
        )
    (func $java$util$ImmutableCollections$MapN$MapNIterator_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_48 (i32.eq (i32.const 48) (local.get $methodid))
            (then
                (return (i32.const 330))
                ))
        (if $check_80 (i32.eq (i32.const 80) (local.get $methodid))
            (then
                (return (i32.const 331))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_81 (i32.eq (i32.const 81) (local.get $methodid))
            (then
                (return (i32.const 332))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (if $check_82 (i32.eq (i32.const 82) (local.get $methodid))
            (then
                (return (i32.const 333))
                ))
        (unreachable))
    (func $java$util$ImmutableCollections$MapN$MapNIterator_i (type $t229) (result (ref $java$util$ImmutableCollections$MapN$MapNIterator_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$ImmutableCollections$MapN$MapNIterator_rtt $initStatus (global.get $java$util$ImmutableCollections$MapN$MapNIterator_cls)))
            (then
                (struct.set $java$util$ImmutableCollections$MapN$MapNIterator_rtt $initStatus (global.get $java$util$ImmutableCollections$MapN$MapNIterator_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$util$ImmutableCollections$MapN$MapNIterator_cls))
        )
    (func $java$lang$String_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 345))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 336))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 338))
                ))
        (if $check_38 (i32.eq (i32.const 38) (local.get $methodid))
            (then
                (return (i32.const 247))
                ))
        (if $check_70 (i32.eq (i32.const 70) (local.get $methodid))
            (then
                (return (i32.const 344))
                ))
        (if $check_45 (i32.eq (i32.const 45) (local.get $methodid))
            (then
                (return (i32.const 335))
                ))
        (if $check_83 (i32.eq (i32.const 83) (local.get $methodid))
            (then
                (return (i32.const 337))
                ))
        (if $check_84 (i32.eq (i32.const 84) (local.get $methodid))
            (then
                (return (i32.const 339))
                ))
        (if $check_85 (i32.eq (i32.const 85) (local.get $methodid))
            (then
                (return (i32.const 340))
                ))
        (if $check_86 (i32.eq (i32.const 86) (local.get $methodid))
            (then
                (return (i32.const 341))
                ))
        (if $check_87 (i32.eq (i32.const 87) (local.get $methodid))
            (then
                (return (i32.const 342))
                ))
        (if $check_88 (i32.eq (i32.const 88) (local.get $methodid))
            (then
                (return (i32.const 343))
                ))
        (if $check_89 (i32.eq (i32.const 89) (local.get $methodid))
            (then
                (return (i32.const 347))
                ))
        (unreachable))
    (func $java$lang$String_i (type $t232) (result (ref $java$lang$String_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$String_rtt $initStatus (global.get $java$lang$String_cls)))
            (then
                (struct.set $java$lang$String_rtt $initStatus (global.get $java$lang$String_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$lang$String_cls))
        )
    (func $java$lang$Thread_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (if $check_90 (i32.eq (i32.const 90) (local.get $methodid))
            (then
                (return (i32.const 349))
                ))
        (unreachable))
    (func $java$lang$Thread_i (type $t235) (result (ref $java$lang$Thread_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$Thread_rtt $initStatus (global.get $java$lang$Thread_cls)))
            (then
                (struct.set $java$lang$Thread_rtt $initStatus (global.get $java$lang$Thread_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$lang$Thread_cls))
        )
    (func $de$mirkosertic$bytecoder$api$vue$VueEventListener_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $de$mirkosertic$bytecoder$api$vue$VueEventListener_i (type $t238) (result (ref $de$mirkosertic$bytecoder$api$vue$VueEventListener_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $de$mirkosertic$bytecoder$api$vue$VueEventListener_rtt $initStatus (global.get $de$mirkosertic$bytecoder$api$vue$VueEventListener_cls)))
            (then
                (struct.set $de$mirkosertic$bytecoder$api$vue$VueEventListener_rtt $initStatus (global.get $de$mirkosertic$bytecoder$api$vue$VueEventListener_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $de$mirkosertic$bytecoder$api$vue$VueEventListener_cls))
        )
    (func $jdk$internal$util$Preconditions$1_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (if $check_91 (i32.eq (i32.const 91) (local.get $methodid))
            (then
                (return (i32.const 353))
                ))
        (if $check_77 (i32.eq (i32.const 77) (local.get $methodid))
            (then
                (return (i32.const 352))
                ))
        (unreachable))
    (func $jdk$internal$util$Preconditions$1_i (type $t241) (result (ref $jdk$internal$util$Preconditions$1_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $jdk$internal$util$Preconditions$1_rtt $initStatus (global.get $jdk$internal$util$Preconditions$1_cls)))
            (then
                (struct.set $jdk$internal$util$Preconditions$1_rtt $initStatus (global.get $jdk$internal$util$Preconditions$1_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $jdk$internal$util$Preconditions$1_cls))
        )
    (func $de$mirkosertic$bytecoder$api$web$Event_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $de$mirkosertic$bytecoder$api$web$Event_i (type $t244) (result (ref $de$mirkosertic$bytecoder$api$web$Event_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $de$mirkosertic$bytecoder$api$web$Event_rtt $initStatus (global.get $de$mirkosertic$bytecoder$api$web$Event_cls)))
            (then
                (struct.set $de$mirkosertic$bytecoder$api$web$Event_rtt $initStatus (global.get $de$mirkosertic$bytecoder$api$web$Event_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $de$mirkosertic$bytecoder$api$web$Event_cls))
        )
    (func $java$io$PrintStream$1_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$io$PrintStream$1_i (type $t247) (result (ref $java$io$PrintStream$1_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$io$PrintStream$1_rtt $initStatus (global.get $java$io$PrintStream$1_cls)))
            (then
                (struct.set $java$io$PrintStream$1_rtt $initStatus (global.get $java$io$PrintStream$1_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$io$PrintStream$1_cls))
        )
    (func $java$util$HashMap$Node_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 356))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 357))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 358))
                ))
        (if $check_92 (i32.eq (i32.const 92) (local.get $methodid))
            (then
                (return (i32.const 359))
                ))
        (if $check_93 (i32.eq (i32.const 93) (local.get $methodid))
            (then
                (return (i32.const 360))
                ))
        (unreachable))
    (func $java$util$HashMap$Node_i (type $t250) (result (ref $java$util$HashMap$Node_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$HashMap$Node_rtt $initStatus (global.get $java$util$HashMap$Node_cls)))
            (then
                (struct.set $java$util$HashMap$Node_rtt $initStatus (global.get $java$util$HashMap$Node_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$util$HashMap$Node_cls))
        )
    (func $java$lang$StringBuilder_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 366))
                ))
        (if $check_96 (i32.eq (i32.const 96) (local.get $methodid))
            (then
                (return (i32.const 365))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_97 (i32.eq (i32.const 97) (local.get $methodid))
            (then
                (return (i32.const 367))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (if $check_98 (i32.eq (i32.const 98) (local.get $methodid))
            (then
                (return (i32.const 368))
                ))
        (if $check_99 (i32.eq (i32.const 99) (local.get $methodid))
            (then
                (return (i32.const 369))
                ))
        (if $check_38 (i32.eq (i32.const 38) (local.get $methodid))
            (then
                (return (i32.const 247))
                ))
        (if $check_94 (i32.eq (i32.const 94) (local.get $methodid))
            (then
                (return (i32.const 363))
                ))
        (if $check_95 (i32.eq (i32.const 95) (local.get $methodid))
            (then
                (return (i32.const 364))
                ))
        (unreachable))
    (func $java$lang$StringBuilder_i (type $t253) (result (ref $java$lang$StringBuilder_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$StringBuilder_rtt $initStatus (global.get $java$lang$StringBuilder_cls)))
            (then
                (struct.set $java$lang$StringBuilder_rtt $initStatus (global.get $java$lang$StringBuilder_cls) (i32.const 1))
                (drop (call $java$lang$AbstractStringBuilder_i))
                (br $check)
                ))
        (return (global.get $java$lang$StringBuilder_cls))
        )
    (func $java$util$AbstractMap_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 371))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 372))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 374))
                ))
        (if $check_100 (i32.eq (i32.const 100) (local.get $methodid))
            (then
                (return (i32.const 373))
                ))
        (if $check_101 (i32.eq (i32.const 101) (local.get $methodid))
            (then
                (return (i32.const 375))
                ))
        (if $check_12 (i32.eq (i32.const 12) (local.get $methodid))
            (then
                (return (i32.const 203))
                ))
        (unreachable))
    (func $java$util$AbstractMap_i (type $t256) (result (ref $java$util$AbstractMap_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$AbstractMap_rtt $initStatus (global.get $java$util$AbstractMap_cls)))
            (then
                (struct.set $java$util$AbstractMap_rtt $initStatus (global.get $java$util$AbstractMap_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$util$AbstractMap_cls))
        )
    (func $java$util$concurrent$ConcurrentMap_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (if $check_12 (i32.eq (i32.const 12) (local.get $methodid))
            (then
                (return (i32.const 203))
                ))
        (unreachable))
    (func $java$util$concurrent$ConcurrentMap_i (type $t259) (result (ref $java$util$concurrent$ConcurrentMap_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$concurrent$ConcurrentMap_rtt $initStatus (global.get $java$util$concurrent$ConcurrentMap_cls)))
            (then
                (struct.set $java$util$concurrent$ConcurrentMap_rtt $initStatus (global.get $java$util$concurrent$ConcurrentMap_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$util$concurrent$ConcurrentMap_cls))
        )
    (func $de$mirkosertic$bytecoder$api$vue$VueData_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (if $check_102 (i32.eq (i32.const 102) (local.get $methodid))
            (then
                (return (i32.const 376))
                ))
        (unreachable))
    (func $de$mirkosertic$bytecoder$api$vue$VueData_i (type $t262) (result (ref $de$mirkosertic$bytecoder$api$vue$VueData_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $de$mirkosertic$bytecoder$api$vue$VueData_rtt $initStatus (global.get $de$mirkosertic$bytecoder$api$vue$VueData_cls)))
            (then
                (struct.set $de$mirkosertic$bytecoder$api$vue$VueData_rtt $initStatus (global.get $de$mirkosertic$bytecoder$api$vue$VueData_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $de$mirkosertic$bytecoder$api$vue$VueData_cls))
        )
    (func $java$lang$Number_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (if $check_103 (i32.eq (i32.const 103) (local.get $methodid))
            (then
                (return (i32.const 378))
                ))
        (if $check_104 (i32.eq (i32.const 104) (local.get $methodid))
            (then
                (return (i32.const 379))
                ))
        (unreachable))
    (func $java$lang$Number_i (type $t265) (result (ref $java$lang$Number_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$Number_rtt $initStatus (global.get $java$lang$Number_cls)))
            (then
                (struct.set $java$lang$Number_rtt $initStatus (global.get $java$lang$Number_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$lang$Number_cls))
        )
    (func $java$util$Collections$EmptyIterator_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_48 (i32.eq (i32.const 48) (local.get $methodid))
            (then
                (return (i32.const 381))
                ))
        (if $check_80 (i32.eq (i32.const 80) (local.get $methodid))
            (then
                (return (i32.const 382))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$util$Collections$EmptyIterator_i (type $t268) (result (ref $java$util$Collections$EmptyIterator_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$Collections$EmptyIterator_rtt $initStatus (global.get $java$util$Collections$EmptyIterator_cls)))
            (then
                (struct.set $java$util$Collections$EmptyIterator_rtt $initStatus (global.get $java$util$Collections$EmptyIterator_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (call $java$util$Collections$EmptyIterator$V$$clinit$$$ (ref.null none))
                (br $check)
                ))
        (return (global.get $java$util$Collections$EmptyIterator_cls))
        )
    (func $java$util$Hashtable_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (if $check_12 (i32.eq (i32.const 12) (local.get $methodid))
            (then
                (return (i32.const 203))
                ))
        (unreachable))
    (func $java$util$Hashtable_i (type $t271) (result (ref $java$util$Hashtable_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$Hashtable_rtt $initStatus (global.get $java$util$Hashtable_cls)))
            (then
                (struct.set $java$util$Hashtable_rtt $initStatus (global.get $java$util$Hashtable_cls) (i32.const 1))
                (drop (call $java$util$Dictionary_i))
                (br $check)
                ))
        (return (global.get $java$util$Hashtable_cls))
        )
    (func $java$lang$reflect$ParameterizedType_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$lang$reflect$ParameterizedType_i (type $t274) (result (ref $java$lang$reflect$ParameterizedType_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$reflect$ParameterizedType_rtt $initStatus (global.get $java$lang$reflect$ParameterizedType_cls)))
            (then
                (struct.set $java$lang$reflect$ParameterizedType_rtt $initStatus (global.get $java$lang$reflect$ParameterizedType_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$lang$reflect$ParameterizedType_cls))
        )
    (func $java$util$ImmutableCollections$SetN$SetNIterator_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_48 (i32.eq (i32.const 48) (local.get $methodid))
            (then
                (return (i32.const 385))
                ))
        (if $check_80 (i32.eq (i32.const 80) (local.get $methodid))
            (then
                (return (i32.const 386))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$util$ImmutableCollections$SetN$SetNIterator_i (type $t277) (result (ref $java$util$ImmutableCollections$SetN$SetNIterator_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$ImmutableCollections$SetN$SetNIterator_rtt $initStatus (global.get $java$util$ImmutableCollections$SetN$SetNIterator_cls)))
            (then
                (struct.set $java$util$ImmutableCollections$SetN$SetNIterator_rtt $initStatus (global.get $java$util$ImmutableCollections$SetN$SetNIterator_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$util$ImmutableCollections$SetN$SetNIterator_cls))
        )
    (func $de$mirkosertic$bytecoder$classlib$VM$1_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $de$mirkosertic$bytecoder$classlib$VM$1_i (type $t280) (result (ref $de$mirkosertic$bytecoder$classlib$VM$1_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $de$mirkosertic$bytecoder$classlib$VM$1_rtt $initStatus (global.get $de$mirkosertic$bytecoder$classlib$VM$1_cls)))
            (then
                (struct.set $de$mirkosertic$bytecoder$classlib$VM$1_rtt $initStatus (global.get $de$mirkosertic$bytecoder$classlib$VM$1_cls) (i32.const 1))
                (drop (call $java$lang$ClassLoader_i))
                (br $check)
                ))
        (return (global.get $de$mirkosertic$bytecoder$classlib$VM$1_cls))
        )
    (func $java$lang$ref$WeakReference_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (if $check_13 (i32.eq (i32.const 13) (local.get $methodid))
            (then
                (return (i32.const 205))
                ))
        (unreachable))
    (func $java$lang$ref$WeakReference_i (type $t283) (result (ref $java$lang$ref$WeakReference_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$ref$WeakReference_rtt $initStatus (global.get $java$lang$ref$WeakReference_cls)))
            (then
                (struct.set $java$lang$ref$WeakReference_rtt $initStatus (global.get $java$lang$ref$WeakReference_cls) (i32.const 1))
                (drop (call $java$lang$ref$Reference_i))
                (br $check)
                ))
        (return (global.get $java$lang$ref$WeakReference_cls))
        )
    (func $jdk$internal$util$Preconditions$4_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (if $check_105 (i32.eq (i32.const 105) (local.get $methodid))
            (then
                (return (i32.const 390))
                ))
        (if $check_106 (i32.eq (i32.const 106) (local.get $methodid))
            (then
                (return (i32.const 391))
                ))
        (unreachable))
    (func $jdk$internal$util$Preconditions$4_i (type $t286) (result (ref $jdk$internal$util$Preconditions$4_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $jdk$internal$util$Preconditions$4_rtt $initStatus (global.get $jdk$internal$util$Preconditions$4_cls)))
            (then
                (struct.set $jdk$internal$util$Preconditions$4_rtt $initStatus (global.get $jdk$internal$util$Preconditions$4_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $jdk$internal$util$Preconditions$4_cls))
        )
    (func $java$util$KeyValueHolder_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 393))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 394))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 395))
                ))
        (if $check_92 (i32.eq (i32.const 92) (local.get $methodid))
            (then
                (return (i32.const 396))
                ))
        (if $check_93 (i32.eq (i32.const 93) (local.get $methodid))
            (then
                (return (i32.const 397))
                ))
        (unreachable))
    (func $java$util$KeyValueHolder_i (type $t289) (result (ref $java$util$KeyValueHolder_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$KeyValueHolder_rtt $initStatus (global.get $java$util$KeyValueHolder_cls)))
            (then
                (struct.set $java$util$KeyValueHolder_rtt $initStatus (global.get $java$util$KeyValueHolder_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$util$KeyValueHolder_cls))
        )
    (func $java$lang$Exception_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_64 (i32.eq (i32.const 64) (local.get $methodid))
            (then
                (return (i32.const 294))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_65 (i32.eq (i32.const 65) (local.get $methodid))
            (then
                (return (i32.const 297))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$lang$Exception_i (type $t292) (result (ref $java$lang$Exception_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$Exception_rtt $initStatus (global.get $java$lang$Exception_cls)))
            (then
                (struct.set $java$lang$Exception_rtt $initStatus (global.get $java$lang$Exception_cls) (i32.const 1))
                (drop (call $java$lang$Throwable_i))
                (br $check)
                ))
        (return (global.get $java$lang$Exception_cls))
        )
    (func $de$mirkosertic$bytecoder$classlib$BytecoderCharsetEncoder_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (if $check_3 (i32.eq (i32.const 3) (local.get $methodid))
            (then
                (return (i32.const 187))
                ))
        (if $check_4 (i32.eq (i32.const 4) (local.get $methodid))
            (then
                (return (i32.const 188))
                ))
        (if $check_5 (i32.eq (i32.const 5) (local.get $methodid))
            (then
                (return (i32.const 189))
                ))
        (if $check_6 (i32.eq (i32.const 6) (local.get $methodid))
            (then
                (return (i32.const 190))
                ))
        (if $check_7 (i32.eq (i32.const 7) (local.get $methodid))
            (then
                (return (i32.const 191))
                ))
        (if $check_8 (i32.eq (i32.const 8) (local.get $methodid))
            (then
                (return (i32.const 192))
                ))
        (if $check_9 (i32.eq (i32.const 9) (local.get $methodid))
            (then
                (return (i32.const 193))
                ))
        (if $check_10 (i32.eq (i32.const 10) (local.get $methodid))
            (then
                (return (i32.const 194))
                ))
        (unreachable))
    (func $de$mirkosertic$bytecoder$classlib$BytecoderCharsetEncoder_i (type $t295) (result (ref $de$mirkosertic$bytecoder$classlib$BytecoderCharsetEncoder_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $de$mirkosertic$bytecoder$classlib$BytecoderCharsetEncoder_rtt $initStatus (global.get $de$mirkosertic$bytecoder$classlib$BytecoderCharsetEncoder_cls)))
            (then
                (struct.set $de$mirkosertic$bytecoder$classlib$BytecoderCharsetEncoder_rtt $initStatus (global.get $de$mirkosertic$bytecoder$classlib$BytecoderCharsetEncoder_cls) (i32.const 1))
                (drop (call $java$nio$charset$CharsetEncoder_i))
                (br $check)
                ))
        (return (global.get $de$mirkosertic$bytecoder$classlib$BytecoderCharsetEncoder_cls))
        )
    (func $java$nio$Buffer$1_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$nio$Buffer$1_i (type $t298) (result (ref $java$nio$Buffer$1_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$nio$Buffer$1_rtt $initStatus (global.get $java$nio$Buffer$1_cls)))
            (then
                (struct.set $java$nio$Buffer$1_rtt $initStatus (global.get $java$nio$Buffer$1_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$nio$Buffer$1_cls))
        )
    (func $jdk$internal$util$Preconditions$3_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (if $check_107 (i32.eq (i32.const 107) (local.get $methodid))
            (then
                (return (i32.const 405))
                ))
        (if $check_77 (i32.eq (i32.const 77) (local.get $methodid))
            (then
                (return (i32.const 404))
                ))
        (unreachable))
    (func $jdk$internal$util$Preconditions$3_i (type $t301) (result (ref $jdk$internal$util$Preconditions$3_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $jdk$internal$util$Preconditions$3_rtt $initStatus (global.get $jdk$internal$util$Preconditions$3_cls)))
            (then
                (struct.set $jdk$internal$util$Preconditions$3_rtt $initStatus (global.get $jdk$internal$util$Preconditions$3_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $jdk$internal$util$Preconditions$3_cls))
        )
    (func $de$mirkosertic$bytecoder$api$vue$VueBuilder_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (if $check_108 (i32.eq (i32.const 108) (local.get $methodid))
            (then
                (return (i32.const 406))
                ))
        (if $check_109 (i32.eq (i32.const 109) (local.get $methodid))
            (then
                (return (i32.const 407))
                ))
        (if $check_110 (i32.eq (i32.const 110) (local.get $methodid))
            (then
                (return (i32.const 408))
                ))
        (if $check_111 (i32.eq (i32.const 111) (local.get $methodid))
            (then
                (return (i32.const 409))
                ))
        (unreachable))
    (func $de$mirkosertic$bytecoder$api$vue$VueBuilder_i (type $t304) (result (ref $de$mirkosertic$bytecoder$api$vue$VueBuilder_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $de$mirkosertic$bytecoder$api$vue$VueBuilder_rtt $initStatus (global.get $de$mirkosertic$bytecoder$api$vue$VueBuilder_cls)))
            (then
                (struct.set $de$mirkosertic$bytecoder$api$vue$VueBuilder_rtt $initStatus (global.get $de$mirkosertic$bytecoder$api$vue$VueBuilder_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $de$mirkosertic$bytecoder$api$vue$VueBuilder_cls))
        )
    (func $java$util$concurrent$locks$ReentrantLock_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$util$concurrent$locks$ReentrantLock_i (type $t307) (result (ref $java$util$concurrent$locks$ReentrantLock_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$concurrent$locks$ReentrantLock_rtt $initStatus (global.get $java$util$concurrent$locks$ReentrantLock_cls)))
            (then
                (struct.set $java$util$concurrent$locks$ReentrantLock_rtt $initStatus (global.get $java$util$concurrent$locks$ReentrantLock_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$util$concurrent$locks$ReentrantLock_cls))
        )
    (func $java$nio$ByteBuffer_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 420))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 421))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 422))
                ))
        (if $check_70 (i32.eq (i32.const 70) (local.get $methodid))
            (then
                (return (i32.const 417))
                ))
        (if $check_72 (i32.eq (i32.const 72) (local.get $methodid))
            (then
                (return (i32.const 419))
                ))
        (if $check_14 (i32.eq (i32.const 14) (local.get $methodid))
            (then
                (return (i32.const 414))
                ))
        (if $check_15 (i32.eq (i32.const 15) (local.get $methodid))
            (then
                (return (i32.const 214))
                ))
        (if $check_16 (i32.eq (i32.const 16) (local.get $methodid))
            (then
                (return (i32.const 416))
                ))
        (if $check_112 (i32.eq (i32.const 112) (local.get $methodid))
            (then
                (return (i32.const 412))
                ))
        (if $check_17 (i32.eq (i32.const 17) (local.get $methodid))
            (then
                (return (i32.const 216))
                ))
        (if $check_113 (i32.eq (i32.const 113) (local.get $methodid))
            (then
                (return (i32.const 415))
                ))
        (if $check_18 (i32.eq (i32.const 18) (local.get $methodid))
            (then
                (return (i32.const 217))
                ))
        (if $check_114 (i32.eq (i32.const 114) (local.get $methodid))
            (then
                (return (i32.const 418))
                ))
        (if $check_19 (i32.eq (i32.const 19) (local.get $methodid))
            (then
                (return (i32.const 218))
                ))
        (if $check_115 (i32.eq (i32.const 115) (local.get $methodid))
            (then
                (return (i32.const 423))
                ))
        (if $check_20 (i32.eq (i32.const 20) (local.get $methodid))
            (then
                (return (i32.const 219))
                ))
        (if $check_116 (i32.eq (i32.const 116) (local.get $methodid))
            (then
                (return (i32.const 424))
                ))
        (if $check_21 (i32.eq (i32.const 21) (local.get $methodid))
            (then
                (return (i32.const 220))
                ))
        (if $check_22 (i32.eq (i32.const 22) (local.get $methodid))
            (then
                (return (i32.const 221))
                ))
        (if $check_23 (i32.eq (i32.const 23) (local.get $methodid))
            (then
                (return (i32.const 222))
                ))
        (if $check_24 (i32.eq (i32.const 24) (local.get $methodid))
            (then
                (return (i32.const 223))
                ))
        (if $check_25 (i32.eq (i32.const 25) (local.get $methodid))
            (then
                (return (i32.const 224))
                ))
        (if $check_26 (i32.eq (i32.const 26) (local.get $methodid))
            (then
                (return (i32.const 225))
                ))
        (unreachable))
    (func $java$nio$ByteBuffer_i (type $t310) (result (ref $java$nio$ByteBuffer_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$nio$ByteBuffer_rtt $initStatus (global.get $java$nio$ByteBuffer_cls)))
            (then
                (struct.set $java$nio$ByteBuffer_rtt $initStatus (global.get $java$nio$ByteBuffer_cls) (i32.const 1))
                (drop (call $java$nio$Buffer_i))
                (call $java$nio$ByteBuffer$V$$clinit$$$ (ref.null none))
                (br $check)
                ))
        (return (global.get $java$nio$ByteBuffer_cls))
        )
    (func $java$util$AbstractList$Itr_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_48 (i32.eq (i32.const 48) (local.get $methodid))
            (then
                (return (i32.const 426))
                ))
        (if $check_80 (i32.eq (i32.const 80) (local.get $methodid))
            (then
                (return (i32.const 427))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (if $check_117 (i32.eq (i32.const 117) (local.get $methodid))
            (then
                (return (i32.const 428))
                ))
        (unreachable))
    (func $java$util$AbstractList$Itr_i (type $t313) (result (ref $java$util$AbstractList$Itr_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$AbstractList$Itr_rtt $initStatus (global.get $java$util$AbstractList$Itr_cls)))
            (then
                (struct.set $java$util$AbstractList$Itr_rtt $initStatus (global.get $java$util$AbstractList$Itr_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$util$AbstractList$Itr_cls))
        )
    (func $de$mirkosertic$bytecoder$classlib$BytecoderCharsetDecoder_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_32 (i32.eq (i32.const 32) (local.get $methodid))
            (then
                (return (i32.const 238))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_33 (i32.eq (i32.const 33) (local.get $methodid))
            (then
                (return (i32.const 239))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (if $check_34 (i32.eq (i32.const 34) (local.get $methodid))
            (then
                (return (i32.const 240))
                ))
        (if $check_35 (i32.eq (i32.const 35) (local.get $methodid))
            (then
                (return (i32.const 241))
                ))
        (if $check_36 (i32.eq (i32.const 36) (local.get $methodid))
            (then
                (return (i32.const 244))
                ))
        (if $check_37 (i32.eq (i32.const 37) (local.get $methodid))
            (then
                (return (i32.const 245))
                ))
        (if $check_5 (i32.eq (i32.const 5) (local.get $methodid))
            (then
                (return (i32.const 246))
                ))
        (if $check_7 (i32.eq (i32.const 7) (local.get $methodid))
            (then
                (return (i32.const 232))
                ))
        (if $check_9 (i32.eq (i32.const 9) (local.get $methodid))
            (then
                (return (i32.const 234))
                ))
        (if $check_118 (i32.eq (i32.const 118) (local.get $methodid))
            (then
                (return (i32.const 430))
                ))
        (if $check_119 (i32.eq (i32.const 119) (local.get $methodid))
            (then
                (return (i32.const 431))
                ))
        (if $check_29 (i32.eq (i32.const 29) (local.get $methodid))
            (then
                (return (i32.const 231))
                ))
        (if $check_30 (i32.eq (i32.const 30) (local.get $methodid))
            (then
                (return (i32.const 233))
                ))
        (if $check_31 (i32.eq (i32.const 31) (local.get $methodid))
            (then
                (return (i32.const 235))
                ))
        (unreachable))
    (func $de$mirkosertic$bytecoder$classlib$BytecoderCharsetDecoder_i (type $t316) (result (ref $de$mirkosertic$bytecoder$classlib$BytecoderCharsetDecoder_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $de$mirkosertic$bytecoder$classlib$BytecoderCharsetDecoder_rtt $initStatus (global.get $de$mirkosertic$bytecoder$classlib$BytecoderCharsetDecoder_cls)))
            (then
                (struct.set $de$mirkosertic$bytecoder$classlib$BytecoderCharsetDecoder_rtt $initStatus (global.get $de$mirkosertic$bytecoder$classlib$BytecoderCharsetDecoder_cls) (i32.const 1))
                (drop (call $java$nio$charset$CharsetDecoder_i))
                (br $check)
                ))
        (return (global.get $de$mirkosertic$bytecoder$classlib$BytecoderCharsetDecoder_cls))
        )
    (func $java$lang$Error_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_64 (i32.eq (i32.const 64) (local.get $methodid))
            (then
                (return (i32.const 294))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_65 (i32.eq (i32.const 65) (local.get $methodid))
            (then
                (return (i32.const 297))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$lang$Error_i (type $t319) (result (ref $java$lang$Error_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$Error_rtt $initStatus (global.get $java$lang$Error_cls)))
            (then
                (struct.set $java$lang$Error_rtt $initStatus (global.get $java$lang$Error_cls) (i32.const 1))
                (drop (call $java$lang$Throwable_i))
                (br $check)
                ))
        (return (global.get $java$lang$Error_cls))
        )
    (func $java$util$ListIterator_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$util$ListIterator_i (type $t322) (result (ref $java$util$ListIterator_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$ListIterator_rtt $initStatus (global.get $java$util$ListIterator_cls)))
            (then
                (struct.set $java$util$ListIterator_rtt $initStatus (global.get $java$util$ListIterator_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$util$ListIterator_cls))
        )
    (func $java$io$Writer_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$io$Writer_i (type $t325) (result (ref $java$io$Writer_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$io$Writer_rtt $initStatus (global.get $java$io$Writer_cls)))
            (then
                (struct.set $java$io$Writer_rtt $initStatus (global.get $java$io$Writer_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$io$Writer_cls))
        )
    (func $java$nio$HeapByteBuffer_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 420))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 421))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 422))
                ))
        (if $check_70 (i32.eq (i32.const 70) (local.get $methodid))
            (then
                (return (i32.const 417))
                ))
        (if $check_72 (i32.eq (i32.const 72) (local.get $methodid))
            (then
                (return (i32.const 419))
                ))
        (if $check_14 (i32.eq (i32.const 14) (local.get $methodid))
            (then
                (return (i32.const 414))
                ))
        (if $check_15 (i32.eq (i32.const 15) (local.get $methodid))
            (then
                (return (i32.const 214))
                ))
        (if $check_16 (i32.eq (i32.const 16) (local.get $methodid))
            (then
                (return (i32.const 416))
                ))
        (if $check_17 (i32.eq (i32.const 17) (local.get $methodid))
            (then
                (return (i32.const 216))
                ))
        (if $check_18 (i32.eq (i32.const 18) (local.get $methodid))
            (then
                (return (i32.const 217))
                ))
        (if $check_19 (i32.eq (i32.const 19) (local.get $methodid))
            (then
                (return (i32.const 218))
                ))
        (if $check_20 (i32.eq (i32.const 20) (local.get $methodid))
            (then
                (return (i32.const 219))
                ))
        (if $check_21 (i32.eq (i32.const 21) (local.get $methodid))
            (then
                (return (i32.const 220))
                ))
        (if $check_22 (i32.eq (i32.const 22) (local.get $methodid))
            (then
                (return (i32.const 221))
                ))
        (if $check_23 (i32.eq (i32.const 23) (local.get $methodid))
            (then
                (return (i32.const 222))
                ))
        (if $check_24 (i32.eq (i32.const 24) (local.get $methodid))
            (then
                (return (i32.const 223))
                ))
        (if $check_25 (i32.eq (i32.const 25) (local.get $methodid))
            (then
                (return (i32.const 224))
                ))
        (if $check_26 (i32.eq (i32.const 26) (local.get $methodid))
            (then
                (return (i32.const 225))
                ))
        (if $check_112 (i32.eq (i32.const 112) (local.get $methodid))
            (then
                (return (i32.const 412))
                ))
        (if $check_113 (i32.eq (i32.const 113) (local.get $methodid))
            (then
                (return (i32.const 415))
                ))
        (if $check_114 (i32.eq (i32.const 114) (local.get $methodid))
            (then
                (return (i32.const 418))
                ))
        (if $check_115 (i32.eq (i32.const 115) (local.get $methodid))
            (then
                (return (i32.const 443))
                ))
        (if $check_116 (i32.eq (i32.const 116) (local.get $methodid))
            (then
                (return (i32.const 424))
                ))
        (if $check_120 (i32.eq (i32.const 120) (local.get $methodid))
            (then
                (return (i32.const 440))
                ))
        (if $check_121 (i32.eq (i32.const 121) (local.get $methodid))
            (then
                (return (i32.const 441))
                ))
        (if $check_122 (i32.eq (i32.const 122) (local.get $methodid))
            (then
                (return (i32.const 442))
                ))
        (unreachable))
    (func $java$nio$HeapByteBuffer_i (type $t328) (result (ref $java$nio$HeapByteBuffer_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$nio$HeapByteBuffer_rtt $initStatus (global.get $java$nio$HeapByteBuffer_cls)))
            (then
                (struct.set $java$nio$HeapByteBuffer_rtt $initStatus (global.get $java$nio$HeapByteBuffer_cls) (i32.const 1))
                (drop (call $java$nio$ByteBuffer_i))
                (call $java$nio$HeapByteBuffer$V$$clinit$$$ (ref.null none))
                (br $check)
                ))
        (return (global.get $java$nio$HeapByteBuffer_cls))
        )
    (func $java$util$concurrent$ConcurrentHashMap_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 449))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 450))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 451))
                ))
        (if $check_100 (i32.eq (i32.const 100) (local.get $methodid))
            (then
                (return (i32.const 452))
                ))
        (if $check_101 (i32.eq (i32.const 101) (local.get $methodid))
            (then
                (return (i32.const 446))
                ))
        (if $check_38 (i32.eq (i32.const 38) (local.get $methodid))
            (then
                (return (i32.const 455))
                ))
        (if $check_123 (i32.eq (i32.const 123) (local.get $methodid))
            (then
                (return (i32.const 447))
                ))
        (if $check_12 (i32.eq (i32.const 12) (local.get $methodid))
            (then
                (return (i32.const 448))
                ))
        (if $check_124 (i32.eq (i32.const 124) (local.get $methodid))
            (then
                (return (i32.const 453))
                ))
        (if $check_125 (i32.eq (i32.const 125) (local.get $methodid))
            (then
                (return (i32.const 454))
                ))
        (unreachable))
    (func $java$util$concurrent$ConcurrentHashMap_i (type $t331) (result (ref $java$util$concurrent$ConcurrentHashMap_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$concurrent$ConcurrentHashMap_rtt $initStatus (global.get $java$util$concurrent$ConcurrentHashMap_cls)))
            (then
                (struct.set $java$util$concurrent$ConcurrentHashMap_rtt $initStatus (global.get $java$util$concurrent$ConcurrentHashMap_cls) (i32.const 1))
                (drop (call $java$util$AbstractMap_i))
                (br $check)
                ))
        (return (global.get $java$util$concurrent$ConcurrentHashMap_cls))
        )
    (func $java$util$ImmutableCollections$AbstractImmutableMap_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 371))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 372))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 374))
                ))
        (if $check_100 (i32.eq (i32.const 100) (local.get $methodid))
            (then
                (return (i32.const 373))
                ))
        (if $check_101 (i32.eq (i32.const 101) (local.get $methodid))
            (then
                (return (i32.const 458))
                ))
        (if $check_12 (i32.eq (i32.const 12) (local.get $methodid))
            (then
                (return (i32.const 457))
                ))
        (unreachable))
    (func $java$util$ImmutableCollections$AbstractImmutableMap_i (type $t334) (result (ref $java$util$ImmutableCollections$AbstractImmutableMap_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$ImmutableCollections$AbstractImmutableMap_rtt $initStatus (global.get $java$util$ImmutableCollections$AbstractImmutableMap_cls)))
            (then
                (struct.set $java$util$ImmutableCollections$AbstractImmutableMap_rtt $initStatus (global.get $java$util$ImmutableCollections$AbstractImmutableMap_cls) (i32.const 1))
                (drop (call $java$util$AbstractMap_i))
                (br $check)
                ))
        (return (global.get $java$util$ImmutableCollections$AbstractImmutableMap_cls))
        )
    (func $java$util$Set_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$util$Set_i (type $t337) (result (ref $java$util$Set_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$Set_rtt $initStatus (global.get $java$util$Set_cls)))
            (then
                (struct.set $java$util$Set_rtt $initStatus (global.get $java$util$Set_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$util$Set_cls))
        )
    (func $java$util$AbstractCollection_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 460))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (if $check_38 (i32.eq (i32.const 38) (local.get $methodid))
            (then
                (return (i32.const 463))
                ))
        (if $check_126 (i32.eq (i32.const 126) (local.get $methodid))
            (then
                (return (i32.const 461))
                ))
        (if $check_127 (i32.eq (i32.const 127) (local.get $methodid))
            (then
                (return (i32.const 462))
                ))
        (unreachable))
    (func $java$util$AbstractCollection_i (type $t340) (result (ref $java$util$AbstractCollection_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$AbstractCollection_rtt $initStatus (global.get $java$util$AbstractCollection_cls)))
            (then
                (struct.set $java$util$AbstractCollection_rtt $initStatus (global.get $java$util$AbstractCollection_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$util$AbstractCollection_cls))
        )
    (func $java$util$AbstractList$ListItr_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_48 (i32.eq (i32.const 48) (local.get $methodid))
            (then
                (return (i32.const 426))
                ))
        (if $check_80 (i32.eq (i32.const 80) (local.get $methodid))
            (then
                (return (i32.const 427))
                ))
        (if $check_128 (i32.eq (i32.const 128) (local.get $methodid))
            (then
                (return (i32.const 465))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (if $check_117 (i32.eq (i32.const 117) (local.get $methodid))
            (then
                (return (i32.const 428))
                ))
        (unreachable))
    (func $java$util$AbstractList$ListItr_i (type $t343) (result (ref $java$util$AbstractList$ListItr_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$AbstractList$ListItr_rtt $initStatus (global.get $java$util$AbstractList$ListItr_cls)))
            (then
                (struct.set $java$util$AbstractList$ListItr_rtt $initStatus (global.get $java$util$AbstractList$ListItr_cls) (i32.const 1))
                (drop (call $java$util$AbstractList$Itr_i))
                (br $check)
                ))
        (return (global.get $java$util$AbstractList$ListItr_cls))
        )
    (func $java$nio$charset$CoderMalfunctionError_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_64 (i32.eq (i32.const 64) (local.get $methodid))
            (then
                (return (i32.const 294))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_65 (i32.eq (i32.const 65) (local.get $methodid))
            (then
                (return (i32.const 297))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$nio$charset$CoderMalfunctionError_i (type $t346) (result (ref $java$nio$charset$CoderMalfunctionError_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$nio$charset$CoderMalfunctionError_rtt $initStatus (global.get $java$nio$charset$CoderMalfunctionError_cls)))
            (then
                (struct.set $java$nio$charset$CoderMalfunctionError_rtt $initStatus (global.get $java$nio$charset$CoderMalfunctionError_cls) (i32.const 1))
                (drop (call $java$lang$Error_i))
                (br $check)
                ))
        (return (global.get $java$nio$charset$CoderMalfunctionError_cls))
        )
    (func $java$lang$Long_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 472))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 473))
                ))
        (if $check_129 (i32.eq (i32.const 129) (local.get $methodid))
            (then
                (return (i32.const 469))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 474))
                ))
        (if $check_130 (i32.eq (i32.const 130) (local.get $methodid))
            (then
                (return (i32.const 470))
                ))
        (if $check_131 (i32.eq (i32.const 131) (local.get $methodid))
            (then
                (return (i32.const 471))
                ))
        (if $check_70 (i32.eq (i32.const 70) (local.get $methodid))
            (then
                (return (i32.const 468))
                ))
        (if $check_103 (i32.eq (i32.const 103) (local.get $methodid))
            (then
                (return (i32.const 378))
                ))
        (if $check_104 (i32.eq (i32.const 104) (local.get $methodid))
            (then
                (return (i32.const 379))
                ))
        (unreachable))
    (func $java$lang$Long_i (type $t349) (result (ref $java$lang$Long_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$Long_rtt $initStatus (global.get $java$lang$Long_cls)))
            (then
                (struct.set $java$lang$Long_rtt $initStatus (global.get $java$lang$Long_cls) (i32.const 1))
                (drop (call $java$lang$Number_i))
                (call $java$lang$Long$V$$clinit$$$ (ref.null none))
                (br $check)
                ))
        (return (global.get $java$lang$Long_cls))
        )
    (func $de$mirkosertic$bytecoder$classlib$BytecoderCharset_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (if $check_132 (i32.eq (i32.const 132) (local.get $methodid))
            (then
                (return (i32.const 476))
                ))
        (if $check_133 (i32.eq (i32.const 133) (local.get $methodid))
            (then
                (return (i32.const 477))
                ))
        (if $check_79 (i32.eq (i32.const 79) (local.get $methodid))
            (then
                (return (i32.const 325))
                ))
        (unreachable))
    (func $de$mirkosertic$bytecoder$classlib$BytecoderCharset_i (type $t352) (result (ref $de$mirkosertic$bytecoder$classlib$BytecoderCharset_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $de$mirkosertic$bytecoder$classlib$BytecoderCharset_rtt $initStatus (global.get $de$mirkosertic$bytecoder$classlib$BytecoderCharset_cls)))
            (then
                (struct.set $de$mirkosertic$bytecoder$classlib$BytecoderCharset_rtt $initStatus (global.get $de$mirkosertic$bytecoder$classlib$BytecoderCharset_cls) (i32.const 1))
                (drop (call $java$nio$charset$Charset_i))
                (br $check)
                ))
        (return (global.get $de$mirkosertic$bytecoder$classlib$BytecoderCharset_cls))
        )
    (func $java$nio$HeapCharBuffer_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 314))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 315))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 316))
                ))
        (if $check_66 (i32.eq (i32.const 66) (local.get $methodid))
            (then
                (return (i32.const 302))
                ))
        (if $check_67 (i32.eq (i32.const 67) (local.get $methodid))
            (then
                (return (i32.const 480))
                ))
        (if $check_68 (i32.eq (i32.const 68) (local.get $methodid))
            (then
                (return (i32.const 308))
                ))
        (if $check_69 (i32.eq (i32.const 69) (local.get $methodid))
            (then
                (return (i32.const 310))
                ))
        (if $check_70 (i32.eq (i32.const 70) (local.get $methodid))
            (then
                (return (i32.const 311))
                ))
        (if $check_134 (i32.eq (i32.const 134) (local.get $methodid))
            (then
                (return (i32.const 482))
                ))
        (if $check_71 (i32.eq (i32.const 71) (local.get $methodid))
            (then
                (return (i32.const 312))
                ))
        (if $check_135 (i32.eq (i32.const 135) (local.get $methodid))
            (then
                (return (i32.const 483))
                ))
        (if $check_72 (i32.eq (i32.const 72) (local.get $methodid))
            (then
                (return (i32.const 313))
                ))
        (if $check_136 (i32.eq (i32.const 136) (local.get $methodid))
            (then
                (return (i32.const 484))
                ))
        (if $check_73 (i32.eq (i32.const 73) (local.get $methodid))
            (then
                (return (i32.const 317))
                ))
        (if $check_137 (i32.eq (i32.const 137) (local.get $methodid))
            (then
                (return (i32.const 485))
                ))
        (if $check_74 (i32.eq (i32.const 74) (local.get $methodid))
            (then
                (return (i32.const 487))
                ))
        (if $check_138 (i32.eq (i32.const 138) (local.get $methodid))
            (then
                (return (i32.const 486))
                ))
        (if $check_75 (i32.eq (i32.const 75) (local.get $methodid))
            (then
                (return (i32.const 319))
                ))
        (if $check_139 (i32.eq (i32.const 139) (local.get $methodid))
            (then
                (return (i32.const 488))
                ))
        (if $check_76 (i32.eq (i32.const 76) (local.get $methodid))
            (then
                (return (i32.const 320))
                ))
        (if $check_14 (i32.eq (i32.const 14) (local.get $methodid))
            (then
                (return (i32.const 307))
                ))
        (if $check_15 (i32.eq (i32.const 15) (local.get $methodid))
            (then
                (return (i32.const 214))
                ))
        (if $check_16 (i32.eq (i32.const 16) (local.get $methodid))
            (then
                (return (i32.const 309))
                ))
        (if $check_17 (i32.eq (i32.const 17) (local.get $methodid))
            (then
                (return (i32.const 216))
                ))
        (if $check_18 (i32.eq (i32.const 18) (local.get $methodid))
            (then
                (return (i32.const 217))
                ))
        (if $check_19 (i32.eq (i32.const 19) (local.get $methodid))
            (then
                (return (i32.const 218))
                ))
        (if $check_20 (i32.eq (i32.const 20) (local.get $methodid))
            (then
                (return (i32.const 219))
                ))
        (if $check_21 (i32.eq (i32.const 21) (local.get $methodid))
            (then
                (return (i32.const 220))
                ))
        (if $check_22 (i32.eq (i32.const 22) (local.get $methodid))
            (then
                (return (i32.const 221))
                ))
        (if $check_23 (i32.eq (i32.const 23) (local.get $methodid))
            (then
                (return (i32.const 222))
                ))
        (if $check_24 (i32.eq (i32.const 24) (local.get $methodid))
            (then
                (return (i32.const 223))
                ))
        (if $check_25 (i32.eq (i32.const 25) (local.get $methodid))
            (then
                (return (i32.const 224))
                ))
        (if $check_26 (i32.eq (i32.const 26) (local.get $methodid))
            (then
                (return (i32.const 225))
                ))
        (if $check_38 (i32.eq (i32.const 38) (local.get $methodid))
            (then
                (return (i32.const 304))
                ))
        (if $check_45 (i32.eq (i32.const 45) (local.get $methodid))
            (then
                (return (i32.const 305))
                ))
        (if $check_120 (i32.eq (i32.const 120) (local.get $methodid))
            (then
                (return (i32.const 479))
                ))
        (if $check_122 (i32.eq (i32.const 122) (local.get $methodid))
            (then
                (return (i32.const 481))
                ))
        (unreachable))
    (func $java$nio$HeapCharBuffer_i (type $t355) (result (ref $java$nio$HeapCharBuffer_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$nio$HeapCharBuffer_rtt $initStatus (global.get $java$nio$HeapCharBuffer_cls)))
            (then
                (struct.set $java$nio$HeapCharBuffer_rtt $initStatus (global.get $java$nio$HeapCharBuffer_cls) (i32.const 1))
                (drop (call $java$nio$CharBuffer_i))
                (call $java$nio$HeapCharBuffer$V$$clinit$$$ (ref.null none))
                (br $check)
                ))
        (return (global.get $java$nio$HeapCharBuffer_cls))
        )
    (func $java$lang$Byte_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 493))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 494))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 495))
                ))
        (if $check_131 (i32.eq (i32.const 131) (local.get $methodid))
            (then
                (return (i32.const 492))
                ))
        (if $check_70 (i32.eq (i32.const 70) (local.get $methodid))
            (then
                (return (i32.const 490))
                ))
        (if $check_103 (i32.eq (i32.const 103) (local.get $methodid))
            (then
                (return (i32.const 378))
                ))
        (if $check_104 (i32.eq (i32.const 104) (local.get $methodid))
            (then
                (return (i32.const 379))
                ))
        (if $check_140 (i32.eq (i32.const 140) (local.get $methodid))
            (then
                (return (i32.const 491))
                ))
        (unreachable))
    (func $java$lang$Byte_i (type $t358) (result (ref $java$lang$Byte_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$Byte_rtt $initStatus (global.get $java$lang$Byte_cls)))
            (then
                (struct.set $java$lang$Byte_rtt $initStatus (global.get $java$lang$Byte_cls) (i32.const 1))
                (drop (call $java$lang$Number_i))
                (call $java$lang$Byte$V$$clinit$$$ (ref.null none))
                (br $check)
                ))
        (return (global.get $java$lang$Byte_cls))
        )
    (func $java$util$Properties_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 503))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 504))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 505))
                ))
        (if $check_100 (i32.eq (i32.const 100) (local.get $methodid))
            (then
                (return (i32.const 506))
                ))
        (if $check_101 (i32.eq (i32.const 101) (local.get $methodid))
            (then
                (return (i32.const 499))
                ))
        (if $check_38 (i32.eq (i32.const 38) (local.get $methodid))
            (then
                (return (i32.const 509))
                ))
        (if $check_123 (i32.eq (i32.const 123) (local.get $methodid))
            (then
                (return (i32.const 502))
                ))
        (if $check_12 (i32.eq (i32.const 12) (local.get $methodid))
            (then
                (return (i32.const 501))
                ))
        (if $check_124 (i32.eq (i32.const 124) (local.get $methodid))
            (then
                (return (i32.const 507))
                ))
        (if $check_141 (i32.eq (i32.const 141) (local.get $methodid))
            (then
                (return (i32.const 498))
                ))
        (if $check_125 (i32.eq (i32.const 125) (local.get $methodid))
            (then
                (return (i32.const 508))
                ))
        (if $check_142 (i32.eq (i32.const 142) (local.get $methodid))
            (then
                (return (i32.const 500))
                ))
        (unreachable))
    (func $java$util$Properties_i (type $t361) (result (ref $java$util$Properties_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$Properties_rtt $initStatus (global.get $java$util$Properties_cls)))
            (then
                (struct.set $java$util$Properties_rtt $initStatus (global.get $java$util$Properties_cls) (i32.const 1))
                (drop (call $java$util$Hashtable_i))
                (call $java$util$Properties$V$$clinit$$$ (ref.null none))
                (br $check)
                ))
        (return (global.get $java$util$Properties_cls))
        )
    (func $java$lang$RuntimeException_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_64 (i32.eq (i32.const 64) (local.get $methodid))
            (then
                (return (i32.const 294))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_65 (i32.eq (i32.const 65) (local.get $methodid))
            (then
                (return (i32.const 297))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$lang$RuntimeException_i (type $t364) (result (ref $java$lang$RuntimeException_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$RuntimeException_rtt $initStatus (global.get $java$lang$RuntimeException_cls)))
            (then
                (struct.set $java$lang$RuntimeException_rtt $initStatus (global.get $java$lang$RuntimeException_cls) (i32.const 1))
                (drop (call $java$lang$Exception_i))
                (br $check)
                ))
        (return (global.get $java$lang$RuntimeException_cls))
        )
    (func $java$lang$Float_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 518))
                ))
        (if $check_144 (i32.eq (i32.const 144) (local.get $methodid))
            (then
                (return (i32.const 516))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 519))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 520))
                ))
        (if $check_131 (i32.eq (i32.const 131) (local.get $methodid))
            (then
                (return (i32.const 517))
                ))
        (if $check_70 (i32.eq (i32.const 70) (local.get $methodid))
            (then
                (return (i32.const 514))
                ))
        (if $check_103 (i32.eq (i32.const 103) (local.get $methodid))
            (then
                (return (i32.const 378))
                ))
        (if $check_104 (i32.eq (i32.const 104) (local.get $methodid))
            (then
                (return (i32.const 379))
                ))
        (if $check_143 (i32.eq (i32.const 143) (local.get $methodid))
            (then
                (return (i32.const 515))
                ))
        (unreachable))
    (func $java$lang$Float_i (type $t367) (result (ref $java$lang$Float_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$Float_rtt $initStatus (global.get $java$lang$Float_cls)))
            (then
                (struct.set $java$lang$Float_rtt $initStatus (global.get $java$lang$Float_cls) (i32.const 1))
                (drop (call $java$lang$Number_i))
                (call $java$lang$Float$V$$clinit$$$ (ref.null none))
                (br $check)
                ))
        (return (global.get $java$lang$Float_cls))
        )
    (func $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_64 (i32.eq (i32.const 64) (local.get $methodid))
            (then
                (return (i32.const 294))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_65 (i32.eq (i32.const 65) (local.get $methodid))
            (then
                (return (i32.const 297))
                ))
        (if $check_145 (i32.eq (i32.const 145) (local.get $methodid))
            (then
                (return (i32.const 521))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError_i (type $t370) (result (ref $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError_rtt $initStatus (global.get $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError_cls)))
            (then
                (struct.set $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError_rtt $initStatus (global.get $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError_cls) (i32.const 1))
                (drop (call $java$lang$Error_i))
                (br $check)
                ))
        (return (global.get $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError_cls))
        )
    (func $java$util$Collections$SynchronizedCollection_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 526))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (if $check_146 (i32.eq (i32.const 146) (local.get $methodid))
            (then
                (return (i32.const 523))
                ))
        (if $check_100 (i32.eq (i32.const 100) (local.get $methodid))
            (then
                (return (i32.const 524))
                ))
        (if $check_38 (i32.eq (i32.const 38) (local.get $methodid))
            (then
                (return (i32.const 525))
                ))
        (unreachable))
    (func $java$util$Collections$SynchronizedCollection_i (type $t373) (result (ref $java$util$Collections$SynchronizedCollection_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$Collections$SynchronizedCollection_rtt $initStatus (global.get $java$util$Collections$SynchronizedCollection_cls)))
            (then
                (struct.set $java$util$Collections$SynchronizedCollection_rtt $initStatus (global.get $java$util$Collections$SynchronizedCollection_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$util$Collections$SynchronizedCollection_cls))
        )
    (func $java$lang$VirtualMachineError_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_64 (i32.eq (i32.const 64) (local.get $methodid))
            (then
                (return (i32.const 294))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_65 (i32.eq (i32.const 65) (local.get $methodid))
            (then
                (return (i32.const 297))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$lang$VirtualMachineError_i (type $t376) (result (ref $java$lang$VirtualMachineError_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$VirtualMachineError_rtt $initStatus (global.get $java$lang$VirtualMachineError_cls)))
            (then
                (struct.set $java$lang$VirtualMachineError_rtt $initStatus (global.get $java$lang$VirtualMachineError_cls) (i32.const 1))
                (drop (call $java$lang$Error_i))
                (br $check)
                ))
        (return (global.get $java$lang$VirtualMachineError_cls))
        )
    (func $java$lang$Integer_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 534))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 535))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 536))
                ))
        (if $check_131 (i32.eq (i32.const 131) (local.get $methodid))
            (then
                (return (i32.const 531))
                ))
        (if $check_147 (i32.eq (i32.const 147) (local.get $methodid))
            (then
                (return (i32.const 533))
                ))
        (if $check_70 (i32.eq (i32.const 70) (local.get $methodid))
            (then
                (return (i32.const 532))
                ))
        (if $check_103 (i32.eq (i32.const 103) (local.get $methodid))
            (then
                (return (i32.const 378))
                ))
        (if $check_104 (i32.eq (i32.const 104) (local.get $methodid))
            (then
                (return (i32.const 379))
                ))
        (unreachable))
    (func $java$lang$Integer_i (type $t379) (result (ref $java$lang$Integer_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$Integer_rtt $initStatus (global.get $java$lang$Integer_cls)))
            (then
                (struct.set $java$lang$Integer_rtt $initStatus (global.get $java$lang$Integer_cls) (i32.const 1))
                (drop (call $java$lang$Number_i))
                (call $java$lang$Integer$V$$clinit$$$ (ref.null none))
                (br $check)
                ))
        (return (global.get $java$lang$Integer_cls))
        )
    (func $java$lang$AssertionError_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_64 (i32.eq (i32.const 64) (local.get $methodid))
            (then
                (return (i32.const 294))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_65 (i32.eq (i32.const 65) (local.get $methodid))
            (then
                (return (i32.const 297))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$lang$AssertionError_i (type $t382) (result (ref $java$lang$AssertionError_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$AssertionError_rtt $initStatus (global.get $java$lang$AssertionError_cls)))
            (then
                (struct.set $java$lang$AssertionError_rtt $initStatus (global.get $java$lang$AssertionError_cls) (i32.const 1))
                (drop (call $java$lang$Error_i))
                (br $check)
                ))
        (return (global.get $java$lang$AssertionError_cls))
        )
    (func $java$util$ImmutableCollections$ListItr_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_48 (i32.eq (i32.const 48) (local.get $methodid))
            (then
                (return (i32.const 541))
                ))
        (if $check_80 (i32.eq (i32.const 80) (local.get $methodid))
            (then
                (return (i32.const 542))
                ))
        (if $check_128 (i32.eq (i32.const 128) (local.get $methodid))
            (then
                (return (i32.const 543))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$util$ImmutableCollections$ListItr_i (type $t385) (result (ref $java$util$ImmutableCollections$ListItr_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$ImmutableCollections$ListItr_rtt $initStatus (global.get $java$util$ImmutableCollections$ListItr_cls)))
            (then
                (struct.set $java$util$ImmutableCollections$ListItr_rtt $initStatus (global.get $java$util$ImmutableCollections$ListItr_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$util$ImmutableCollections$ListItr_cls))
        )
    (func $java$io$InputStream_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$io$InputStream_i (type $t388) (result (ref $java$io$InputStream_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$io$InputStream_rtt $initStatus (global.get $java$io$InputStream_cls)))
            (then
                (struct.set $java$io$InputStream_rtt $initStatus (global.get $java$io$InputStream_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$io$InputStream_cls))
        )
    (func $java$io$OutputStream_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$io$OutputStream_i (type $t391) (result (ref $java$io$OutputStream_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$io$OutputStream_rtt $initStatus (global.get $java$io$OutputStream_cls)))
            (then
                (struct.set $java$io$OutputStream_rtt $initStatus (global.get $java$io$OutputStream_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$io$OutputStream_cls))
        )
    (func $de$mirkosertic$bytecoder$api$web$MouseEvent_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $de$mirkosertic$bytecoder$api$web$MouseEvent_i (type $t394) (result (ref $de$mirkosertic$bytecoder$api$web$MouseEvent_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $de$mirkosertic$bytecoder$api$web$MouseEvent_rtt $initStatus (global.get $de$mirkosertic$bytecoder$api$web$MouseEvent_cls)))
            (then
                (struct.set $de$mirkosertic$bytecoder$api$web$MouseEvent_rtt $initStatus (global.get $de$mirkosertic$bytecoder$api$web$MouseEvent_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $de$mirkosertic$bytecoder$api$web$MouseEvent_cls))
        )
    (func $java$util$Collections$EmptyListIterator_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_48 (i32.eq (i32.const 48) (local.get $methodid))
            (then
                (return (i32.const 381))
                ))
        (if $check_80 (i32.eq (i32.const 80) (local.get $methodid))
            (then
                (return (i32.const 382))
                ))
        (if $check_128 (i32.eq (i32.const 128) (local.get $methodid))
            (then
                (return (i32.const 547))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$util$Collections$EmptyListIterator_i (type $t397) (result (ref $java$util$Collections$EmptyListIterator_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$Collections$EmptyListIterator_rtt $initStatus (global.get $java$util$Collections$EmptyListIterator_cls)))
            (then
                (struct.set $java$util$Collections$EmptyListIterator_rtt $initStatus (global.get $java$util$Collections$EmptyListIterator_cls) (i32.const 1))
                (drop (call $java$util$Collections$EmptyIterator_i))
                (call $java$util$Collections$EmptyListIterator$V$$clinit$$$ (ref.null none))
                (br $check)
                ))
        (return (global.get $java$util$Collections$EmptyListIterator_cls))
        )
    (func $java$util$LinkedHashMap$Entry_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 356))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 357))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 358))
                ))
        (if $check_92 (i32.eq (i32.const 92) (local.get $methodid))
            (then
                (return (i32.const 359))
                ))
        (if $check_93 (i32.eq (i32.const 93) (local.get $methodid))
            (then
                (return (i32.const 360))
                ))
        (unreachable))
    (func $java$util$LinkedHashMap$Entry_i (type $t400) (result (ref $java$util$LinkedHashMap$Entry_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$LinkedHashMap$Entry_rtt $initStatus (global.get $java$util$LinkedHashMap$Entry_cls)))
            (then
                (struct.set $java$util$LinkedHashMap$Entry_rtt $initStatus (global.get $java$util$LinkedHashMap$Entry_cls) (i32.const 1))
                (drop (call $java$util$HashMap$Node_i))
                (br $check)
                ))
        (return (global.get $java$util$LinkedHashMap$Entry_cls))
        )
    (func $java$util$HashMap_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 371))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 372))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 374))
                ))
        (if $check_100 (i32.eq (i32.const 100) (local.get $methodid))
            (then
                (return (i32.const 565))
                ))
        (if $check_101 (i32.eq (i32.const 101) (local.get $methodid))
            (then
                (return (i32.const 563))
                ))
        (if $check_38 (i32.eq (i32.const 38) (local.get $methodid))
            (then
                (return (i32.const 568))
                ))
        (if $check_12 (i32.eq (i32.const 12) (local.get $methodid))
            (then
                (return (i32.const 552))
                ))
        (if $check_148 (i32.eq (i32.const 148) (local.get $methodid))
            (then
                (return (i32.const 553))
                ))
        (if $check_149 (i32.eq (i32.const 149) (local.get $methodid))
            (then
                (return (i32.const 554))
                ))
        (if $check_150 (i32.eq (i32.const 150) (local.get $methodid))
            (then
                (return (i32.const 555))
                ))
        (if $check_151 (i32.eq (i32.const 151) (local.get $methodid))
            (then
                (return (i32.const 556))
                ))
        (if $check_152 (i32.eq (i32.const 152) (local.get $methodid))
            (then
                (return (i32.const 557))
                ))
        (if $check_153 (i32.eq (i32.const 153) (local.get $methodid))
            (then
                (return (i32.const 558))
                ))
        (if $check_154 (i32.eq (i32.const 154) (local.get $methodid))
            (then
                (return (i32.const 559))
                ))
        (if $check_155 (i32.eq (i32.const 155) (local.get $methodid))
            (then
                (return (i32.const 560))
                ))
        (if $check_123 (i32.eq (i32.const 123) (local.get $methodid))
            (then
                (return (i32.const 561))
                ))
        (if $check_156 (i32.eq (i32.const 156) (local.get $methodid))
            (then
                (return (i32.const 562))
                ))
        (if $check_124 (i32.eq (i32.const 124) (local.get $methodid))
            (then
                (return (i32.const 566))
                ))
        (if $check_157 (i32.eq (i32.const 157) (local.get $methodid))
            (then
                (return (i32.const 564))
                ))
        (if $check_125 (i32.eq (i32.const 125) (local.get $methodid))
            (then
                (return (i32.const 567))
                ))
        (unreachable))
    (func $java$util$HashMap_i (type $t403) (result (ref $java$util$HashMap_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$HashMap_rtt $initStatus (global.get $java$util$HashMap_cls)))
            (then
                (struct.set $java$util$HashMap_rtt $initStatus (global.get $java$util$HashMap_cls) (i32.const 1))
                (drop (call $java$util$AbstractMap_i))
                (br $check)
                ))
        (return (global.get $java$util$HashMap_cls))
        )
    (func $java$util$List_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$util$List_i (type $t406) (result (ref $java$util$List_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$List_rtt $initStatus (global.get $java$util$List_cls)))
            (then
                (struct.set $java$util$List_rtt $initStatus (global.get $java$util$List_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$util$List_cls))
        )
    (func $java$util$Collections$EmptyMap_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 371))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 571))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 573))
                ))
        (if $check_100 (i32.eq (i32.const 100) (local.get $methodid))
            (then
                (return (i32.const 572))
                ))
        (if $check_101 (i32.eq (i32.const 101) (local.get $methodid))
            (then
                (return (i32.const 375))
                ))
        (if $check_38 (i32.eq (i32.const 38) (local.get $methodid))
            (then
                (return (i32.const 577))
                ))
        (if $check_123 (i32.eq (i32.const 123) (local.get $methodid))
            (then
                (return (i32.const 575))
                ))
        (if $check_12 (i32.eq (i32.const 12) (local.get $methodid))
            (then
                (return (i32.const 574))
                ))
        (if $check_124 (i32.eq (i32.const 124) (local.get $methodid))
            (then
                (return (i32.const 576))
                ))
        (if $check_125 (i32.eq (i32.const 125) (local.get $methodid))
            (then
                (return (i32.const 570))
                ))
        (unreachable))
    (func $java$util$Collections$EmptyMap_i (type $t409) (result (ref $java$util$Collections$EmptyMap_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$Collections$EmptyMap_rtt $initStatus (global.get $java$util$Collections$EmptyMap_cls)))
            (then
                (struct.set $java$util$Collections$EmptyMap_rtt $initStatus (global.get $java$util$Collections$EmptyMap_cls) (i32.const 1))
                (drop (call $java$util$AbstractMap_i))
                (br $check)
                ))
        (return (global.get $java$util$Collections$EmptyMap_cls))
        )
    (func $de$mirkosertic$bytecoder$api$vue$VueInstance_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (if $check_102 (i32.eq (i32.const 102) (local.get $methodid))
            (then
                (return (i32.const 376))
                ))
        (unreachable))
    (func $de$mirkosertic$bytecoder$api$vue$VueInstance_i (type $t412) (result (ref $de$mirkosertic$bytecoder$api$vue$VueInstance_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $de$mirkosertic$bytecoder$api$vue$VueInstance_rtt $initStatus (global.get $de$mirkosertic$bytecoder$api$vue$VueInstance_cls)))
            (then
                (struct.set $de$mirkosertic$bytecoder$api$vue$VueInstance_rtt $initStatus (global.get $de$mirkosertic$bytecoder$api$vue$VueInstance_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $de$mirkosertic$bytecoder$api$vue$VueInstance_cls))
        )
    (func $java$lang$Short_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 582))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 583))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 584))
                ))
        (if $check_131 (i32.eq (i32.const 131) (local.get $methodid))
            (then
                (return (i32.const 581))
                ))
        (if $check_70 (i32.eq (i32.const 70) (local.get $methodid))
            (then
                (return (i32.const 579))
                ))
        (if $check_103 (i32.eq (i32.const 103) (local.get $methodid))
            (then
                (return (i32.const 378))
                ))
        (if $check_104 (i32.eq (i32.const 104) (local.get $methodid))
            (then
                (return (i32.const 379))
                ))
        (if $check_158 (i32.eq (i32.const 158) (local.get $methodid))
            (then
                (return (i32.const 580))
                ))
        (unreachable))
    (func $java$lang$Short_i (type $t415) (result (ref $java$lang$Short_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$Short_rtt $initStatus (global.get $java$lang$Short_cls)))
            (then
                (struct.set $java$lang$Short_rtt $initStatus (global.get $java$lang$Short_cls) (i32.const 1))
                (drop (call $java$lang$Number_i))
                (call $java$lang$Short$V$$clinit$$$ (ref.null none))
                (br $check)
                ))
        (return (global.get $java$lang$Short_cls))
        )
    (func $de$mirkosertic$bytecoder$integrationtest$VueDemo$1_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_160 (i32.eq (i32.const 160) (local.get $methodid))
            (then
                (return (i32.const 587))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (if $check_159 (i32.eq (i32.const 159) (local.get $methodid))
            (then
                (return (i32.const 586))
                ))
        (unreachable))
    (func $de$mirkosertic$bytecoder$integrationtest$VueDemo$1_i (type $t418) (result (ref $de$mirkosertic$bytecoder$integrationtest$VueDemo$1_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $de$mirkosertic$bytecoder$integrationtest$VueDemo$1_rtt $initStatus (global.get $de$mirkosertic$bytecoder$integrationtest$VueDemo$1_cls)))
            (then
                (struct.set $de$mirkosertic$bytecoder$integrationtest$VueDemo$1_rtt $initStatus (global.get $de$mirkosertic$bytecoder$integrationtest$VueDemo$1_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $de$mirkosertic$bytecoder$integrationtest$VueDemo$1_cls))
        )
    (func $java$lang$Double_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 593))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 594))
                ))
        (if $check_161 (i32.eq (i32.const 161) (local.get $methodid))
            (then
                (return (i32.const 590))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 595))
                ))
        (if $check_162 (i32.eq (i32.const 162) (local.get $methodid))
            (then
                (return (i32.const 591))
                ))
        (if $check_131 (i32.eq (i32.const 131) (local.get $methodid))
            (then
                (return (i32.const 592))
                ))
        (if $check_70 (i32.eq (i32.const 70) (local.get $methodid))
            (then
                (return (i32.const 589))
                ))
        (if $check_103 (i32.eq (i32.const 103) (local.get $methodid))
            (then
                (return (i32.const 378))
                ))
        (if $check_104 (i32.eq (i32.const 104) (local.get $methodid))
            (then
                (return (i32.const 379))
                ))
        (unreachable))
    (func $java$lang$Double_i (type $t421) (result (ref $java$lang$Double_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$Double_rtt $initStatus (global.get $java$lang$Double_cls)))
            (then
                (struct.set $java$lang$Double_rtt $initStatus (global.get $java$lang$Double_cls) (i32.const 1))
                (drop (call $java$lang$Number_i))
                (call $java$lang$Double$V$$clinit$$$ (ref.null none))
                (br $check)
                ))
        (return (global.get $java$lang$Double_cls))
        )
    (func $java$lang$ClassCastException_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_64 (i32.eq (i32.const 64) (local.get $methodid))
            (then
                (return (i32.const 294))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_65 (i32.eq (i32.const 65) (local.get $methodid))
            (then
                (return (i32.const 297))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$lang$ClassCastException_i (type $t424) (result (ref $java$lang$ClassCastException_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$ClassCastException_rtt $initStatus (global.get $java$lang$ClassCastException_cls)))
            (then
                (struct.set $java$lang$ClassCastException_rtt $initStatus (global.get $java$lang$ClassCastException_cls) (i32.const 1))
                (drop (call $java$lang$RuntimeException_i))
                (br $check)
                ))
        (return (global.get $java$lang$ClassCastException_cls))
        )
    (func $java$nio$BufferOverflowException_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_64 (i32.eq (i32.const 64) (local.get $methodid))
            (then
                (return (i32.const 294))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_65 (i32.eq (i32.const 65) (local.get $methodid))
            (then
                (return (i32.const 297))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$nio$BufferOverflowException_i (type $t427) (result (ref $java$nio$BufferOverflowException_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$nio$BufferOverflowException_rtt $initStatus (global.get $java$nio$BufferOverflowException_cls)))
            (then
                (struct.set $java$nio$BufferOverflowException_rtt $initStatus (global.get $java$nio$BufferOverflowException_cls) (i32.const 1))
                (drop (call $java$lang$RuntimeException_i))
                (br $check)
                ))
        (return (global.get $java$nio$BufferOverflowException_cls))
        )
    (func $java$lang$IllegalStateException_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_64 (i32.eq (i32.const 64) (local.get $methodid))
            (then
                (return (i32.const 294))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_65 (i32.eq (i32.const 65) (local.get $methodid))
            (then
                (return (i32.const 297))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$lang$IllegalStateException_i (type $t430) (result (ref $java$lang$IllegalStateException_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$IllegalStateException_rtt $initStatus (global.get $java$lang$IllegalStateException_cls)))
            (then
                (struct.set $java$lang$IllegalStateException_rtt $initStatus (global.get $java$lang$IllegalStateException_cls) (i32.const 1))
                (drop (call $java$lang$RuntimeException_i))
                (br $check)
                ))
        (return (global.get $java$lang$IllegalStateException_cls))
        )
    (func $java$util$ImmutableCollections$AbstractImmutableCollection_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 460))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (if $check_38 (i32.eq (i32.const 38) (local.get $methodid))
            (then
                (return (i32.const 463))
                ))
        (if $check_126 (i32.eq (i32.const 126) (local.get $methodid))
            (then
                (return (i32.const 461))
                ))
        (if $check_127 (i32.eq (i32.const 127) (local.get $methodid))
            (then
                (return (i32.const 462))
                ))
        (unreachable))
    (func $java$util$ImmutableCollections$AbstractImmutableCollection_i (type $t433) (result (ref $java$util$ImmutableCollections$AbstractImmutableCollection_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$ImmutableCollections$AbstractImmutableCollection_rtt $initStatus (global.get $java$util$ImmutableCollections$AbstractImmutableCollection_cls)))
            (then
                (struct.set $java$util$ImmutableCollections$AbstractImmutableCollection_rtt $initStatus (global.get $java$util$ImmutableCollections$AbstractImmutableCollection_cls) (i32.const 1))
                (drop (call $java$util$AbstractCollection_i))
                (br $check)
                ))
        (return (global.get $java$util$ImmutableCollections$AbstractImmutableCollection_cls))
        )
    (func $java$util$AbstractList_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 460))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (if $check_163 (i32.eq (i32.const 163) (local.get $methodid))
            (then
                (return (i32.const 604))
                ))
        (if $check_164 (i32.eq (i32.const 164) (local.get $methodid))
            (then
                (return (i32.const 605))
                ))
        (if $check_165 (i32.eq (i32.const 165) (local.get $methodid))
            (then
                (return (i32.const 606))
                ))
        (if $check_38 (i32.eq (i32.const 38) (local.get $methodid))
            (then
                (return (i32.const 463))
                ))
        (if $check_166 (i32.eq (i32.const 166) (local.get $methodid))
            (then
                (return (i32.const 607))
                ))
        (if $check_167 (i32.eq (i32.const 167) (local.get $methodid))
            (then
                (return (i32.const 608))
                ))
        (if $check_126 (i32.eq (i32.const 126) (local.get $methodid))
            (then
                (return (i32.const 461))
                ))
        (if $check_127 (i32.eq (i32.const 127) (local.get $methodid))
            (then
                (return (i32.const 462))
                ))
        (unreachable))
    (func $java$util$AbstractList_i (type $t436) (result (ref $java$util$AbstractList_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$AbstractList_rtt $initStatus (global.get $java$util$AbstractList_cls)))
            (then
                (struct.set $java$util$AbstractList_rtt $initStatus (global.get $java$util$AbstractList_cls) (i32.const 1))
                (drop (call $java$util$AbstractCollection_i))
                (br $check)
                ))
        (return (global.get $java$util$AbstractList_cls))
        )
    (func $java$lang$IllegalArgumentException_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_64 (i32.eq (i32.const 64) (local.get $methodid))
            (then
                (return (i32.const 294))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_65 (i32.eq (i32.const 65) (local.get $methodid))
            (then
                (return (i32.const 297))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$lang$IllegalArgumentException_i (type $t439) (result (ref $java$lang$IllegalArgumentException_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$IllegalArgumentException_rtt $initStatus (global.get $java$lang$IllegalArgumentException_cls)))
            (then
                (struct.set $java$lang$IllegalArgumentException_rtt $initStatus (global.get $java$lang$IllegalArgumentException_cls) (i32.const 1))
                (drop (call $java$lang$RuntimeException_i))
                (br $check)
                ))
        (return (global.get $java$lang$IllegalArgumentException_cls))
        )
    (func $java$util$NoSuchElementException_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_64 (i32.eq (i32.const 64) (local.get $methodid))
            (then
                (return (i32.const 294))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_65 (i32.eq (i32.const 65) (local.get $methodid))
            (then
                (return (i32.const 297))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$util$NoSuchElementException_i (type $t442) (result (ref $java$util$NoSuchElementException_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$NoSuchElementException_rtt $initStatus (global.get $java$util$NoSuchElementException_cls)))
            (then
                (struct.set $java$util$NoSuchElementException_rtt $initStatus (global.get $java$util$NoSuchElementException_cls) (i32.const 1))
                (drop (call $java$lang$RuntimeException_i))
                (br $check)
                ))
        (return (global.get $java$util$NoSuchElementException_cls))
        )
    (func $java$util$ConcurrentModificationException_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_64 (i32.eq (i32.const 64) (local.get $methodid))
            (then
                (return (i32.const 294))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_65 (i32.eq (i32.const 65) (local.get $methodid))
            (then
                (return (i32.const 297))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$util$ConcurrentModificationException_i (type $t445) (result (ref $java$util$ConcurrentModificationException_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$ConcurrentModificationException_rtt $initStatus (global.get $java$util$ConcurrentModificationException_cls)))
            (then
                (struct.set $java$util$ConcurrentModificationException_rtt $initStatus (global.get $java$util$ConcurrentModificationException_cls) (i32.const 1))
                (drop (call $java$lang$RuntimeException_i))
                (br $check)
                ))
        (return (global.get $java$util$ConcurrentModificationException_cls))
        )
    (func $java$lang$UnsupportedOperationException_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_64 (i32.eq (i32.const 64) (local.get $methodid))
            (then
                (return (i32.const 294))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_65 (i32.eq (i32.const 65) (local.get $methodid))
            (then
                (return (i32.const 297))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$lang$UnsupportedOperationException_i (type $t448) (result (ref $java$lang$UnsupportedOperationException_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$UnsupportedOperationException_rtt $initStatus (global.get $java$lang$UnsupportedOperationException_cls)))
            (then
                (struct.set $java$lang$UnsupportedOperationException_rtt $initStatus (global.get $java$lang$UnsupportedOperationException_cls) (i32.const 1))
                (drop (call $java$lang$RuntimeException_i))
                (br $check)
                ))
        (return (global.get $java$lang$UnsupportedOperationException_cls))
        )
    (func $de$mirkosertic$bytecoder$integrationtest$VueDemo$MyVueInstance_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (if $check_102 (i32.eq (i32.const 102) (local.get $methodid))
            (then
                (return (i32.const 376))
                ))
        (if $check_168 (i32.eq (i32.const 168) (local.get $methodid))
            (then
                (return (i32.const 621))
                ))
        (unreachable))
    (func $de$mirkosertic$bytecoder$integrationtest$VueDemo$MyVueInstance_i (type $t451) (result (ref $de$mirkosertic$bytecoder$integrationtest$VueDemo$MyVueInstance_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $de$mirkosertic$bytecoder$integrationtest$VueDemo$MyVueInstance_rtt $initStatus (global.get $de$mirkosertic$bytecoder$integrationtest$VueDemo$MyVueInstance_cls)))
            (then
                (struct.set $de$mirkosertic$bytecoder$integrationtest$VueDemo$MyVueInstance_rtt $initStatus (global.get $de$mirkosertic$bytecoder$integrationtest$VueDemo$MyVueInstance_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $de$mirkosertic$bytecoder$integrationtest$VueDemo$MyVueInstance_cls))
        )
    (func $java$nio$BufferUnderflowException_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_64 (i32.eq (i32.const 64) (local.get $methodid))
            (then
                (return (i32.const 294))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_65 (i32.eq (i32.const 65) (local.get $methodid))
            (then
                (return (i32.const 297))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$nio$BufferUnderflowException_i (type $t454) (result (ref $java$nio$BufferUnderflowException_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$nio$BufferUnderflowException_rtt $initStatus (global.get $java$nio$BufferUnderflowException_cls)))
            (then
                (struct.set $java$nio$BufferUnderflowException_rtt $initStatus (global.get $java$nio$BufferUnderflowException_cls) (i32.const 1))
                (drop (call $java$lang$RuntimeException_i))
                (br $check)
                ))
        (return (global.get $java$nio$BufferUnderflowException_cls))
        )
    (func $java$io$OutputStreamWriter_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$io$OutputStreamWriter_i (type $t457) (result (ref $java$io$OutputStreamWriter_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$io$OutputStreamWriter_rtt $initStatus (global.get $java$io$OutputStreamWriter_cls)))
            (then
                (struct.set $java$io$OutputStreamWriter_rtt $initStatus (global.get $java$io$OutputStreamWriter_cls) (i32.const 1))
                (drop (call $java$io$Writer_i))
                (br $check)
                ))
        (return (global.get $java$io$OutputStreamWriter_cls))
        )
    (func $java$io$FileInputStream_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$io$FileInputStream_i (type $t460) (result (ref $java$io$FileInputStream_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$io$FileInputStream_rtt $initStatus (global.get $java$io$FileInputStream_cls)))
            (then
                (struct.set $java$io$FileInputStream_rtt $initStatus (global.get $java$io$FileInputStream_cls) (i32.const 1))
                (drop (call $java$io$InputStream_i))
                (br $check)
                ))
        (return (global.get $java$io$FileInputStream_cls))
        )
    (func $sun$nio$cs$StreamEncoder_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $sun$nio$cs$StreamEncoder_i (type $t463) (result (ref $sun$nio$cs$StreamEncoder_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $sun$nio$cs$StreamEncoder_rtt $initStatus (global.get $sun$nio$cs$StreamEncoder_cls)))
            (then
                (struct.set $sun$nio$cs$StreamEncoder_rtt $initStatus (global.get $sun$nio$cs$StreamEncoder_cls) (i32.const 1))
                (drop (call $java$io$Writer_i))
                (call $sun$nio$cs$StreamEncoder$V$$clinit$$$ (ref.null none))
                (br $check)
                ))
        (return (global.get $sun$nio$cs$StreamEncoder_cls))
        )
    (func $java$util$HashMap$TreeNode_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 356))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 357))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 358))
                ))
        (if $check_169 (i32.eq (i32.const 169) (local.get $methodid))
            (then
                (return (i32.const 627))
                ))
        (if $check_170 (i32.eq (i32.const 170) (local.get $methodid))
            (then
                (return (i32.const 628))
                ))
        (if $check_171 (i32.eq (i32.const 171) (local.get $methodid))
            (then
                (return (i32.const 629))
                ))
        (if $check_92 (i32.eq (i32.const 92) (local.get $methodid))
            (then
                (return (i32.const 359))
                ))
        (if $check_172 (i32.eq (i32.const 172) (local.get $methodid))
            (then
                (return (i32.const 630))
                ))
        (if $check_93 (i32.eq (i32.const 93) (local.get $methodid))
            (then
                (return (i32.const 360))
                ))
        (if $check_173 (i32.eq (i32.const 173) (local.get $methodid))
            (then
                (return (i32.const 631))
                ))
        (if $check_174 (i32.eq (i32.const 174) (local.get $methodid))
            (then
                (return (i32.const 632))
                ))
        (if $check_175 (i32.eq (i32.const 175) (local.get $methodid))
            (then
                (return (i32.const 633))
                ))
        (unreachable))
    (func $java$util$HashMap$TreeNode_i (type $t466) (result (ref $java$util$HashMap$TreeNode_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$HashMap$TreeNode_rtt $initStatus (global.get $java$util$HashMap$TreeNode_cls)))
            (then
                (struct.set $java$util$HashMap$TreeNode_rtt $initStatus (global.get $java$util$HashMap$TreeNode_cls) (i32.const 1))
                (drop (call $java$util$LinkedHashMap$Entry_i))
                (call $java$util$HashMap$TreeNode$V$$clinit$$$ (ref.null none))
                (br $check)
                ))
        (return (global.get $java$util$HashMap$TreeNode_cls))
        )
    (func $java$util$Properties$EntrySet_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 639))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 640))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 641))
                ))
        (if $check_146 (i32.eq (i32.const 146) (local.get $methodid))
            (then
                (return (i32.const 636))
                ))
        (if $check_100 (i32.eq (i32.const 100) (local.get $methodid))
            (then
                (return (i32.const 637))
                ))
        (if $check_38 (i32.eq (i32.const 38) (local.get $methodid))
            (then
                (return (i32.const 638))
                ))
        (unreachable))
    (func $java$util$Properties$EntrySet_i (type $t469) (result (ref $java$util$Properties$EntrySet_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$Properties$EntrySet_rtt $initStatus (global.get $java$util$Properties$EntrySet_cls)))
            (then
                (struct.set $java$util$Properties$EntrySet_rtt $initStatus (global.get $java$util$Properties$EntrySet_cls) (i32.const 1))
                (drop (call $java$lang$Object_i))
                (br $check)
                ))
        (return (global.get $java$util$Properties$EntrySet_cls))
        )
    (func $java$util$ImmutableCollections$MapN_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 371))
                ))
        (if $check_176 (i32.eq (i32.const 176) (local.get $methodid))
            (then
                (return (i32.const 643))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 372))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 645))
                ))
        (if $check_100 (i32.eq (i32.const 100) (local.get $methodid))
            (then
                (return (i32.const 646))
                ))
        (if $check_101 (i32.eq (i32.const 101) (local.get $methodid))
            (then
                (return (i32.const 458))
                ))
        (if $check_38 (i32.eq (i32.const 38) (local.get $methodid))
            (then
                (return (i32.const 649))
                ))
        (if $check_123 (i32.eq (i32.const 123) (local.get $methodid))
            (then
                (return (i32.const 644))
                ))
        (if $check_12 (i32.eq (i32.const 12) (local.get $methodid))
            (then
                (return (i32.const 457))
                ))
        (if $check_124 (i32.eq (i32.const 124) (local.get $methodid))
            (then
                (return (i32.const 647))
                ))
        (if $check_125 (i32.eq (i32.const 125) (local.get $methodid))
            (then
                (return (i32.const 648))
                ))
        (unreachable))
    (func $java$util$ImmutableCollections$MapN_i (type $t472) (result (ref $java$util$ImmutableCollections$MapN_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$ImmutableCollections$MapN_rtt $initStatus (global.get $java$util$ImmutableCollections$MapN_cls)))
            (then
                (struct.set $java$util$ImmutableCollections$MapN_rtt $initStatus (global.get $java$util$ImmutableCollections$MapN_cls) (i32.const 1))
                (drop (call $java$util$ImmutableCollections$AbstractImmutableMap_i))
                (br $check)
                ))
        (return (global.get $java$util$ImmutableCollections$MapN_cls))
        )
    (func $java$lang$InternalError_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_64 (i32.eq (i32.const 64) (local.get $methodid))
            (then
                (return (i32.const 294))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_65 (i32.eq (i32.const 65) (local.get $methodid))
            (then
                (return (i32.const 297))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$lang$InternalError_i (type $t475) (result (ref $java$lang$InternalError_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$InternalError_rtt $initStatus (global.get $java$lang$InternalError_cls)))
            (then
                (struct.set $java$lang$InternalError_rtt $initStatus (global.get $java$lang$InternalError_cls) (i32.const 1))
                (drop (call $java$lang$VirtualMachineError_i))
                (br $check)
                ))
        (return (global.get $java$lang$InternalError_cls))
        )
    (func $java$lang$NullPointerException_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_64 (i32.eq (i32.const 64) (local.get $methodid))
            (then
                (return (i32.const 655))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_65 (i32.eq (i32.const 65) (local.get $methodid))
            (then
                (return (i32.const 297))
                ))
        (if $check_177 (i32.eq (i32.const 177) (local.get $methodid))
            (then
                (return (i32.const 656))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$lang$NullPointerException_i (type $t478) (result (ref $java$lang$NullPointerException_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$NullPointerException_rtt $initStatus (global.get $java$lang$NullPointerException_cls)))
            (then
                (struct.set $java$lang$NullPointerException_rtt $initStatus (global.get $java$lang$NullPointerException_cls) (i32.const 1))
                (drop (call $java$lang$RuntimeException_i))
                (br $check)
                ))
        (return (global.get $java$lang$NullPointerException_cls))
        )
    (func $java$io$BufferedWriter_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$io$BufferedWriter_i (type $t481) (result (ref $java$io$BufferedWriter_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$io$BufferedWriter_rtt $initStatus (global.get $java$io$BufferedWriter_cls)))
            (then
                (struct.set $java$io$BufferedWriter_rtt $initStatus (global.get $java$io$BufferedWriter_cls) (i32.const 1))
                (drop (call $java$io$Writer_i))
                (br $check)
                ))
        (return (global.get $java$io$BufferedWriter_cls))
        )
    (func $java$io$FileOutputStream_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$io$FileOutputStream_i (type $t484) (result (ref $java$io$FileOutputStream_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$io$FileOutputStream_rtt $initStatus (global.get $java$io$FileOutputStream_cls)))
            (then
                (struct.set $java$io$FileOutputStream_rtt $initStatus (global.get $java$io$FileOutputStream_cls) (i32.const 1))
                (drop (call $java$io$OutputStream_i))
                (br $check)
                ))
        (return (global.get $java$io$FileOutputStream_cls))
        )
    (func $java$util$AbstractSet_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 460))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 661))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 662))
                ))
        (if $check_38 (i32.eq (i32.const 38) (local.get $methodid))
            (then
                (return (i32.const 463))
                ))
        (if $check_126 (i32.eq (i32.const 126) (local.get $methodid))
            (then
                (return (i32.const 461))
                ))
        (if $check_127 (i32.eq (i32.const 127) (local.get $methodid))
            (then
                (return (i32.const 462))
                ))
        (unreachable))
    (func $java$util$AbstractSet_i (type $t487) (result (ref $java$util$AbstractSet_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$AbstractSet_rtt $initStatus (global.get $java$util$AbstractSet_cls)))
            (then
                (struct.set $java$util$AbstractSet_rtt $initStatus (global.get $java$util$AbstractSet_cls) (i32.const 1))
                (drop (call $java$util$AbstractCollection_i))
                (br $check)
                ))
        (return (global.get $java$util$AbstractSet_cls))
        )
    (func $java$util$Collections$SynchronizedSet_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 526))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 664))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 665))
                ))
        (if $check_146 (i32.eq (i32.const 146) (local.get $methodid))
            (then
                (return (i32.const 523))
                ))
        (if $check_100 (i32.eq (i32.const 100) (local.get $methodid))
            (then
                (return (i32.const 524))
                ))
        (if $check_38 (i32.eq (i32.const 38) (local.get $methodid))
            (then
                (return (i32.const 525))
                ))
        (unreachable))
    (func $java$util$Collections$SynchronizedSet_i (type $t490) (result (ref $java$util$Collections$SynchronizedSet_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$Collections$SynchronizedSet_rtt $initStatus (global.get $java$util$Collections$SynchronizedSet_cls)))
            (then
                (struct.set $java$util$Collections$SynchronizedSet_rtt $initStatus (global.get $java$util$Collections$SynchronizedSet_cls) (i32.const 1))
                (drop (call $java$util$Collections$SynchronizedCollection_i))
                (br $check)
                ))
        (return (global.get $java$util$Collections$SynchronizedSet_cls))
        )
    (func $java$io$FilterOutputStream_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$io$FilterOutputStream_i (type $t493) (result (ref $java$io$FilterOutputStream_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$io$FilterOutputStream_rtt $initStatus (global.get $java$io$FilterOutputStream_cls)))
            (then
                (struct.set $java$io$FilterOutputStream_rtt $initStatus (global.get $java$io$FilterOutputStream_cls) (i32.const 1))
                (drop (call $java$io$OutputStream_i))
                (br $check)
                ))
        (return (global.get $java$io$FilterOutputStream_cls))
        )
    (func $java$lang$IndexOutOfBoundsException_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_64 (i32.eq (i32.const 64) (local.get $methodid))
            (then
                (return (i32.const 294))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_65 (i32.eq (i32.const 65) (local.get $methodid))
            (then
                (return (i32.const 297))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$lang$IndexOutOfBoundsException_i (type $t496) (result (ref $java$lang$IndexOutOfBoundsException_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$IndexOutOfBoundsException_rtt $initStatus (global.get $java$lang$IndexOutOfBoundsException_cls)))
            (then
                (struct.set $java$lang$IndexOutOfBoundsException_rtt $initStatus (global.get $java$lang$IndexOutOfBoundsException_cls) (i32.const 1))
                (drop (call $java$lang$RuntimeException_i))
                (br $check)
                ))
        (return (global.get $java$lang$IndexOutOfBoundsException_cls))
        )
    (func $java$util$ImmutableCollections$AbstractImmutableSet_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 460))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 670))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (if $check_38 (i32.eq (i32.const 38) (local.get $methodid))
            (then
                (return (i32.const 463))
                ))
        (if $check_126 (i32.eq (i32.const 126) (local.get $methodid))
            (then
                (return (i32.const 461))
                ))
        (if $check_127 (i32.eq (i32.const 127) (local.get $methodid))
            (then
                (return (i32.const 462))
                ))
        (unreachable))
    (func $java$util$ImmutableCollections$AbstractImmutableSet_i (type $t499) (result (ref $java$util$ImmutableCollections$AbstractImmutableSet_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$ImmutableCollections$AbstractImmutableSet_rtt $initStatus (global.get $java$util$ImmutableCollections$AbstractImmutableSet_cls)))
            (then
                (struct.set $java$util$ImmutableCollections$AbstractImmutableSet_rtt $initStatus (global.get $java$util$ImmutableCollections$AbstractImmutableSet_cls) (i32.const 1))
                (drop (call $java$util$ImmutableCollections$AbstractImmutableCollection_i))
                (br $check)
                ))
        (return (global.get $java$util$ImmutableCollections$AbstractImmutableSet_cls))
        )
    (func $java$lang$StringIndexOutOfBoundsException_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_64 (i32.eq (i32.const 64) (local.get $methodid))
            (then
                (return (i32.const 294))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_65 (i32.eq (i32.const 65) (local.get $methodid))
            (then
                (return (i32.const 297))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$lang$StringIndexOutOfBoundsException_i (type $t502) (result (ref $java$lang$StringIndexOutOfBoundsException_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$StringIndexOutOfBoundsException_rtt $initStatus (global.get $java$lang$StringIndexOutOfBoundsException_cls)))
            (then
                (struct.set $java$lang$StringIndexOutOfBoundsException_rtt $initStatus (global.get $java$lang$StringIndexOutOfBoundsException_cls) (i32.const 1))
                (drop (call $java$lang$IndexOutOfBoundsException_i))
                (br $check)
                ))
        (return (global.get $java$lang$StringIndexOutOfBoundsException_cls))
        )
    (func $java$util$ImmutableCollections$MapN$1_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 460))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 661))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 662))
                ))
        (if $check_146 (i32.eq (i32.const 146) (local.get $methodid))
            (then
                (return (i32.const 674))
                ))
        (if $check_100 (i32.eq (i32.const 100) (local.get $methodid))
            (then
                (return (i32.const 675))
                ))
        (if $check_38 (i32.eq (i32.const 38) (local.get $methodid))
            (then
                (return (i32.const 463))
                ))
        (if $check_126 (i32.eq (i32.const 126) (local.get $methodid))
            (then
                (return (i32.const 461))
                ))
        (if $check_127 (i32.eq (i32.const 127) (local.get $methodid))
            (then
                (return (i32.const 462))
                ))
        (unreachable))
    (func $java$util$ImmutableCollections$MapN$1_i (type $t505) (result (ref $java$util$ImmutableCollections$MapN$1_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$ImmutableCollections$MapN$1_rtt $initStatus (global.get $java$util$ImmutableCollections$MapN$1_cls)))
            (then
                (struct.set $java$util$ImmutableCollections$MapN$1_rtt $initStatus (global.get $java$util$ImmutableCollections$MapN$1_cls) (i32.const 1))
                (drop (call $java$util$AbstractSet_i))
                (br $check)
                ))
        (return (global.get $java$util$ImmutableCollections$MapN$1_cls))
        )
    (func $java$util$HashMap$EntrySet_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 460))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 661))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 662))
                ))
        (if $check_146 (i32.eq (i32.const 146) (local.get $methodid))
            (then
                (return (i32.const 677))
                ))
        (if $check_100 (i32.eq (i32.const 100) (local.get $methodid))
            (then
                (return (i32.const 678))
                ))
        (if $check_38 (i32.eq (i32.const 38) (local.get $methodid))
            (then
                (return (i32.const 463))
                ))
        (if $check_126 (i32.eq (i32.const 126) (local.get $methodid))
            (then
                (return (i32.const 679))
                ))
        (if $check_127 (i32.eq (i32.const 127) (local.get $methodid))
            (then
                (return (i32.const 462))
                ))
        (unreachable))
    (func $java$util$HashMap$EntrySet_i (type $t508) (result (ref $java$util$HashMap$EntrySet_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$HashMap$EntrySet_rtt $initStatus (global.get $java$util$HashMap$EntrySet_cls)))
            (then
                (struct.set $java$util$HashMap$EntrySet_rtt $initStatus (global.get $java$util$HashMap$EntrySet_cls) (i32.const 1))
                (drop (call $java$util$AbstractSet_i))
                (br $check)
                ))
        (return (global.get $java$util$HashMap$EntrySet_cls))
        )
    (func $java$lang$ArrayIndexOutOfBoundsException_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_64 (i32.eq (i32.const 64) (local.get $methodid))
            (then
                (return (i32.const 294))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_65 (i32.eq (i32.const 65) (local.get $methodid))
            (then
                (return (i32.const 297))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$lang$ArrayIndexOutOfBoundsException_i (type $t511) (result (ref $java$lang$ArrayIndexOutOfBoundsException_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$lang$ArrayIndexOutOfBoundsException_rtt $initStatus (global.get $java$lang$ArrayIndexOutOfBoundsException_cls)))
            (then
                (struct.set $java$lang$ArrayIndexOutOfBoundsException_rtt $initStatus (global.get $java$lang$ArrayIndexOutOfBoundsException_cls) (i32.const 1))
                (drop (call $java$lang$IndexOutOfBoundsException_i))
                (br $check)
                ))
        (return (global.get $java$lang$ArrayIndexOutOfBoundsException_cls))
        )
    (func $java$io$PrintStream_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (if $check_5 (i32.eq (i32.const 5) (local.get $methodid))
            (then
                (return (i32.const 685))
                ))
        (unreachable))
    (func $java$io$PrintStream_i (type $t514) (result (ref $java$io$PrintStream_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$io$PrintStream_rtt $initStatus (global.get $java$io$PrintStream_cls)))
            (then
                (struct.set $java$io$PrintStream_rtt $initStatus (global.get $java$io$PrintStream_cls) (i32.const 1))
                (drop (call $java$io$FilterOutputStream_i))
                (call $java$io$PrintStream$V$$clinit$$$ (ref.null none))
                (br $check)
                ))
        (return (global.get $java$io$PrintStream_cls))
        )
    (func $java$util$ImmutableCollections$AbstractImmutableList_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 460))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 688))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 689))
                ))
        (if $check_178 (i32.eq (i32.const 178) (local.get $methodid))
            (then
                (return (i32.const 687))
                ))
        (if $check_146 (i32.eq (i32.const 146) (local.get $methodid))
            (then
                (return (i32.const 690))
                ))
        (if $check_38 (i32.eq (i32.const 38) (local.get $methodid))
            (then
                (return (i32.const 463))
                ))
        (if $check_126 (i32.eq (i32.const 126) (local.get $methodid))
            (then
                (return (i32.const 691))
                ))
        (if $check_127 (i32.eq (i32.const 127) (local.get $methodid))
            (then
                (return (i32.const 462))
                ))
        (unreachable))
    (func $java$util$ImmutableCollections$AbstractImmutableList_i (type $t517) (result (ref $java$util$ImmutableCollections$AbstractImmutableList_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$ImmutableCollections$AbstractImmutableList_rtt $initStatus (global.get $java$util$ImmutableCollections$AbstractImmutableList_cls)))
            (then
                (struct.set $java$util$ImmutableCollections$AbstractImmutableList_rtt $initStatus (global.get $java$util$ImmutableCollections$AbstractImmutableList_cls) (i32.const 1))
                (drop (call $java$util$ImmutableCollections$AbstractImmutableCollection_i))
                (br $check)
                ))
        (return (global.get $java$util$ImmutableCollections$AbstractImmutableList_cls))
        )
    (func $java$nio$ReadOnlyBufferException_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_64 (i32.eq (i32.const 64) (local.get $methodid))
            (then
                (return (i32.const 294))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_65 (i32.eq (i32.const 65) (local.get $methodid))
            (then
                (return (i32.const 297))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$nio$ReadOnlyBufferException_i (type $t520) (result (ref $java$nio$ReadOnlyBufferException_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$nio$ReadOnlyBufferException_rtt $initStatus (global.get $java$nio$ReadOnlyBufferException_cls)))
            (then
                (struct.set $java$nio$ReadOnlyBufferException_rtt $initStatus (global.get $java$nio$ReadOnlyBufferException_cls) (i32.const 1))
                (drop (call $java$lang$UnsupportedOperationException_i))
                (br $check)
                ))
        (return (global.get $java$nio$ReadOnlyBufferException_cls))
        )
    (func $java$util$Collections$EmptyList_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 460))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 700))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 701))
                ))
        (if $check_163 (i32.eq (i32.const 163) (local.get $methodid))
            (then
                (return (i32.const 604))
                ))
        (if $check_164 (i32.eq (i32.const 164) (local.get $methodid))
            (then
                (return (i32.const 702))
                ))
        (if $check_100 (i32.eq (i32.const 100) (local.get $methodid))
            (then
                (return (i32.const 694))
                ))
        (if $check_165 (i32.eq (i32.const 165) (local.get $methodid))
            (then
                (return (i32.const 606))
                ))
        (if $check_38 (i32.eq (i32.const 38) (local.get $methodid))
            (then
                (return (i32.const 699))
                ))
        (if $check_166 (i32.eq (i32.const 166) (local.get $methodid))
            (then
                (return (i32.const 607))
                ))
        (if $check_167 (i32.eq (i32.const 167) (local.get $methodid))
            (then
                (return (i32.const 608))
                ))
        (if $check_146 (i32.eq (i32.const 146) (local.get $methodid))
            (then
                (return (i32.const 695))
                ))
        (if $check_179 (i32.eq (i32.const 179) (local.get $methodid))
            (then
                (return (i32.const 698))
                ))
        (if $check_126 (i32.eq (i32.const 126) (local.get $methodid))
            (then
                (return (i32.const 696))
                ))
        (if $check_127 (i32.eq (i32.const 127) (local.get $methodid))
            (then
                (return (i32.const 697))
                ))
        (unreachable))
    (func $java$util$Collections$EmptyList_i (type $t523) (result (ref $java$util$Collections$EmptyList_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$Collections$EmptyList_rtt $initStatus (global.get $java$util$Collections$EmptyList_cls)))
            (then
                (struct.set $java$util$Collections$EmptyList_rtt $initStatus (global.get $java$util$Collections$EmptyList_cls) (i32.const 1))
                (drop (call $java$util$AbstractList_i))
                (br $check)
                ))
        (return (global.get $java$util$Collections$EmptyList_cls))
        )
    (func $java$util$Collections$EmptySet_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 460))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 661))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 709))
                ))
        (if $check_146 (i32.eq (i32.const 146) (local.get $methodid))
            (then
                (return (i32.const 704))
                ))
        (if $check_100 (i32.eq (i32.const 100) (local.get $methodid))
            (then
                (return (i32.const 705))
                ))
        (if $check_38 (i32.eq (i32.const 38) (local.get $methodid))
            (then
                (return (i32.const 708))
                ))
        (if $check_126 (i32.eq (i32.const 126) (local.get $methodid))
            (then
                (return (i32.const 706))
                ))
        (if $check_127 (i32.eq (i32.const 127) (local.get $methodid))
            (then
                (return (i32.const 707))
                ))
        (unreachable))
    (func $java$util$Collections$EmptySet_i (type $t526) (result (ref $java$util$Collections$EmptySet_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$Collections$EmptySet_rtt $initStatus (global.get $java$util$Collections$EmptySet_cls)))
            (then
                (struct.set $java$util$Collections$EmptySet_rtt $initStatus (global.get $java$util$Collections$EmptySet_cls) (i32.const 1))
                (drop (call $java$util$AbstractSet_i))
                (br $check)
                ))
        (return (global.get $java$util$Collections$EmptySet_cls))
        )
    (func $java$io$FileWriter_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (unreachable))
    (func $java$io$FileWriter_i (type $t529) (result (ref $java$io$FileWriter_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$io$FileWriter_rtt $initStatus (global.get $java$io$FileWriter_cls)))
            (then
                (struct.set $java$io$FileWriter_rtt $initStatus (global.get $java$io$FileWriter_cls) (i32.const 1))
                (drop (call $java$io$OutputStreamWriter_i))
                (br $check)
                ))
        (return (global.get $java$io$FileWriter_cls))
        )
    (func $java$util$ImmutableCollections$SetN_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 460))
                ))
        (if $check_176 (i32.eq (i32.const 176) (local.get $methodid))
            (then
                (return (i32.const 711))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 670))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 712))
                ))
        (if $check_146 (i32.eq (i32.const 146) (local.get $methodid))
            (then
                (return (i32.const 713))
                ))
        (if $check_100 (i32.eq (i32.const 100) (local.get $methodid))
            (then
                (return (i32.const 714))
                ))
        (if $check_38 (i32.eq (i32.const 38) (local.get $methodid))
            (then
                (return (i32.const 716))
                ))
        (if $check_126 (i32.eq (i32.const 126) (local.get $methodid))
            (then
                (return (i32.const 715))
                ))
        (if $check_127 (i32.eq (i32.const 127) (local.get $methodid))
            (then
                (return (i32.const 462))
                ))
        (unreachable))
    (func $java$util$ImmutableCollections$SetN_i (type $t532) (result (ref $java$util$ImmutableCollections$SetN_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$ImmutableCollections$SetN_rtt $initStatus (global.get $java$util$ImmutableCollections$SetN_cls)))
            (then
                (struct.set $java$util$ImmutableCollections$SetN_rtt $initStatus (global.get $java$util$ImmutableCollections$SetN_cls) (i32.const 1))
                (drop (call $java$util$ImmutableCollections$AbstractImmutableSet_i))
                (br $check)
                ))
        (return (global.get $java$util$ImmutableCollections$SetN_cls))
        )
    (func $java$util$ImmutableCollections$ListN_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 460))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 688))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 689))
                ))
        (if $check_178 (i32.eq (i32.const 178) (local.get $methodid))
            (then
                (return (i32.const 687))
                ))
        (if $check_146 (i32.eq (i32.const 146) (local.get $methodid))
            (then
                (return (i32.const 690))
                ))
        (if $check_179 (i32.eq (i32.const 179) (local.get $methodid))
            (then
                (return (i32.const 719))
                ))
        (if $check_163 (i32.eq (i32.const 163) (local.get $methodid))
            (then
                (return (i32.const 720))
                ))
        (if $check_100 (i32.eq (i32.const 100) (local.get $methodid))
            (then
                (return (i32.const 718))
                ))
        (if $check_38 (i32.eq (i32.const 38) (local.get $methodid))
            (then
                (return (i32.const 721))
                ))
        (if $check_126 (i32.eq (i32.const 126) (local.get $methodid))
            (then
                (return (i32.const 691))
                ))
        (if $check_127 (i32.eq (i32.const 127) (local.get $methodid))
            (then
                (return (i32.const 462))
                ))
        (unreachable))
    (func $java$util$ImmutableCollections$ListN_i (type $t535) (result (ref $java$util$ImmutableCollections$ListN_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$ImmutableCollections$ListN_rtt $initStatus (global.get $java$util$ImmutableCollections$ListN_cls)))
            (then
                (struct.set $java$util$ImmutableCollections$ListN_rtt $initStatus (global.get $java$util$ImmutableCollections$ListN_cls) (i32.const 1))
                (drop (call $java$util$ImmutableCollections$AbstractImmutableList_i))
                (br $check)
                ))
        (return (global.get $java$util$ImmutableCollections$ListN_cls))
        )
    (func $java$util$ImmutableCollections$List12_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 460))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 688))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 689))
                ))
        (if $check_178 (i32.eq (i32.const 178) (local.get $methodid))
            (then
                (return (i32.const 687))
                ))
        (if $check_146 (i32.eq (i32.const 146) (local.get $methodid))
            (then
                (return (i32.const 690))
                ))
        (if $check_179 (i32.eq (i32.const 179) (local.get $methodid))
            (then
                (return (i32.const 725))
                ))
        (if $check_163 (i32.eq (i32.const 163) (local.get $methodid))
            (then
                (return (i32.const 726))
                ))
        (if $check_100 (i32.eq (i32.const 100) (local.get $methodid))
            (then
                (return (i32.const 724))
                ))
        (if $check_38 (i32.eq (i32.const 38) (local.get $methodid))
            (then
                (return (i32.const 727))
                ))
        (if $check_126 (i32.eq (i32.const 126) (local.get $methodid))
            (then
                (return (i32.const 691))
                ))
        (if $check_127 (i32.eq (i32.const 127) (local.get $methodid))
            (then
                (return (i32.const 462))
                ))
        (unreachable))
    (func $java$util$ImmutableCollections$List12_i (type $t538) (result (ref $java$util$ImmutableCollections$List12_rtt))
        (if $check (i32.eq (i32.const 0) (struct.get $java$util$ImmutableCollections$List12_rtt $initStatus (global.get $java$util$ImmutableCollections$List12_cls)))
            (then
                (struct.set $java$util$ImmutableCollections$List12_rtt $initStatus (global.get $java$util$ImmutableCollections$List12_cls) (i32.const 1))
                (drop (call $java$util$ImmutableCollections$AbstractImmutableList_i))
                (br $check)
                ))
        (return (global.get $java$util$ImmutableCollections$List12_cls))
        )
    (func $java.lang.Object_getNativeObject (type $t539) (param $instance (ref $java$lang$Object)) (result externref)
        (return (struct.get $java$lang$Object $nativeObject (local.get $instance)))
        )
    (func $java.lang.Object_setNativeObject (type $t540) (param $instance (ref $java$lang$Object)) (param $value externref)
        (struct.set $java$lang$Object $nativeObject (local.get $instance) (local.get $value))
        (return)
        )
    (func $instanceOf (type $t551) (param $obj (ref null $java$lang$Object)) (param $runtimeTypeId i32) (result i32)
        (local $idx i32)
        (local $len i32)
        (local $arr (ref null $t7))
        (if $nullcheck (ref.eq (local.get $obj) (ref.null none))
            (then
                (return (i32.const 0))
                )(else
                (local.set $arr (struct.get $java$lang$Object $implTypes (local.get $obj)))
                (local.set $len (array.len $t7 (local.get $arr)))
                (local.set $idx (i32.const 0))
                (loop $iter
                    (if $idxcheck (i32.eq (local.get $idx) (local.get $len))
                        (then
                            (return (i32.const 0))
                            )(else
                            (if $ischeck (i32.eq (local.get $runtimeTypeId) (array.get $t7 (local.get $arr) (local.get $idx)))
                                (then
                                    (return (i32.const 1))
                                    )(else
                                    (local.set $idx (i32.add (local.get $idx) (i32.const 1)))
                                    (br $iter)
                                    ))
                            ))
                    )
                (return (i32.const 0))
                ))
        (unreachable))
    (func $runtimetypeof (type $t552) (param $obj (ref null $java$lang$Object)) (result (ref $java$lang$Object))
        (local $id i32)
        (local.set $id (struct.get $java$lang$Object $typeId (local.get $obj)))
        (if $check_0 (i32.eq (i32.const 0) (local.get $id))
            (then
                (return (global.get $java$lang$Object_cls))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $id))
            (then
                (return (global.get $java$nio$ByteOrder_cls))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $id))
            (then
                (return (global.get $jdk$internal$misc$VM_cls))
                ))
        (if $check_3 (i32.eq (i32.const 3) (local.get $id))
            (then
                (return (global.get $java$util$Dictionary_cls))
                ))
        (if $check_4 (i32.eq (i32.const 4) (local.get $id))
            (then
                (return (global.get $java$lang$Runnable_cls))
                ))
        (if $check_5 (i32.eq (i32.const 5) (local.get $id))
            (then
                (return (global.get $jdk$internal$access$JavaIOPrintStreamAccess_cls))
                ))
        (if $check_6 (i32.eq (i32.const 6) (local.get $id))
            (then
                (return (global.get $de$mirkosertic$bytecoder$api$OpaqueReferenceType_cls))
                ))
        (if $check_7 (i32.eq (i32.const 7) (local.get $id))
            (then
                (return (global.get $java$nio$charset$CharsetEncoder_cls))
                ))
        (if $check_8 (i32.eq (i32.const 8) (local.get $id))
            (then
                (return (global.get $de$mirkosertic$bytecoder$classlib$java$lang$TMath_cls))
                ))
        (if $check_9 (i32.eq (i32.const 9) (local.get $id))
            (then
                (return (global.get $java$lang$ThreadGroup_cls))
                ))
        (if $check_10 (i32.eq (i32.const 10) (local.get $id))
            (then
                (return (global.get $java$lang$Readable_cls))
                ))
        (if $check_11 (i32.eq (i32.const 11) (local.get $id))
            (then
                (return (global.get $java$util$ImmutableCollections_cls))
                ))
        (if $check_12 (i32.eq (i32.const 12) (local.get $id))
            (then
                (return (global.get $java$lang$System_cls))
                ))
        (if $check_13 (i32.eq (i32.const 13) (local.get $id))
            (then
                (return (global.get $jdk$internal$foreign$MemorySessionImpl_cls))
                ))
        (if $check_14 (i32.eq (i32.const 14) (local.get $id))
            (then
                (return (global.get $java$lang$invoke$CallSite_cls))
                ))
        (if $check_15 (i32.eq (i32.const 15) (local.get $id))
            (then
                (return (global.get $java$util$Map_cls))
                ))
        (if $check_16 (i32.eq (i32.const 16) (local.get $id))
            (then
                (return (global.get $java$util$function$Supplier_cls))
                ))
        (if $check_17 (i32.eq (i32.const 17) (local.get $id))
            (then
                (return (global.get $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup_cls))
                ))
        (if $check_18 (i32.eq (i32.const 18) (local.get $id))
            (then
                (return (global.get $java$lang$AbstractStringBuilder_cls))
                ))
        (if $check_19 (i32.eq (i32.const 19) (local.get $id))
            (then
                (return (global.get $java$util$concurrent$locks$Lock_cls))
                ))
        (if $check_20 (i32.eq (i32.const 20) (local.get $id))
            (then
                (return (global.get $java$lang$Character_cls))
                ))
        (if $check_21 (i32.eq (i32.const 21) (local.get $id))
            (then
                (return (global.get $java$lang$ref$Reference_cls))
                ))
        (if $check_22 (i32.eq (i32.const 22) (local.get $id))
            (then
                (return (global.get $de$mirkosertic$bytecoder$classlib$VM_cls))
                ))
        (if $check_23 (i32.eq (i32.const 23) (local.get $id))
            (then
                (return (global.get $java$lang$invoke$MethodHandle_cls))
                ))
        (if $check_24 (i32.eq (i32.const 24) (local.get $id))
            (then
                (return (global.get $java$nio$charset$CodingErrorAction_cls))
                ))
        (if $check_25 (i32.eq (i32.const 25) (local.get $id))
            (then
                (return (global.get $java$util$Iterator_cls))
                ))
        (if $check_26 (i32.eq (i32.const 26) (local.get $id))
            (then
                (return (global.get $java$lang$Iterable_cls))
                ))
        (if $check_27 (i32.eq (i32.const 27) (local.get $id))
            (then
                (return (global.get $java$lang$Math_cls))
                ))
        (if $check_28 (i32.eq (i32.const 28) (local.get $id))
            (then
                (return (global.get $jdk$internal$util$Preconditions_cls))
                ))
        (if $check_29 (i32.eq (i32.const 29) (local.get $id))
            (then
                (return (global.get $java$nio$Buffer_cls))
                ))
        (if $check_30 (i32.eq (i32.const 30) (local.get $id))
            (then
                (return (global.get $de$mirkosertic$bytecoder$classlib$java$lang$ref$TReference_cls))
                ))
        (if $check_31 (i32.eq (i32.const 31) (local.get $id))
            (then
                (return (global.get $java$util$RandomAccess_cls))
                ))
        (if $check_32 (i32.eq (i32.const 32) (local.get $id))
            (then
                (return (global.get $java$io$FileDescriptor_cls))
                ))
        (if $check_33 (i32.eq (i32.const 33) (local.get $id))
            (then
                (return (global.get $java$io$Flushable_cls))
                ))
        (if $check_34 (i32.eq (i32.const 34) (local.get $id))
            (then
                (return (global.get $java$nio$charset$CharsetDecoder_cls))
                ))
        (if $check_35 (i32.eq (i32.const 35) (local.get $id))
            (then
                (return (global.get $java$lang$CharSequence_cls))
                ))
        (if $check_36 (i32.eq (i32.const 36) (local.get $id))
            (then
                (return (global.get $java$lang$Class_cls))
                ))
        (if $check_37 (i32.eq (i32.const 37) (local.get $id))
            (then
                (return (global.get $java$util$function$Function_cls))
                ))
        (if $check_38 (i32.eq (i32.const 38) (local.get $id))
            (then
                (return (global.get $java$util$Objects_cls))
                ))
        (if $check_39 (i32.eq (i32.const 39) (local.get $id))
            (then
                (return (global.get $de$mirkosertic$bytecoder$api$vue$Vue_cls))
                ))
        (if $check_40 (i32.eq (i32.const 40) (local.get $id))
            (then
                (return (global.get $java$nio$BufferMismatch_cls))
                ))
        (if $check_41 (i32.eq (i32.const 41) (local.get $id))
            (then
                (return (global.get $java$nio$charset$CoderResult_cls))
                ))
        (if $check_42 (i32.eq (i32.const 42) (local.get $id))
            (then
                (return (global.get $java$nio$charset$CoderResult$Cache_cls))
                ))
        (if $check_43 (i32.eq (i32.const 43) (local.get $id))
            (then
                (return (global.get $java$lang$Appendable_cls))
                ))
        (if $check_44 (i32.eq (i32.const 44) (local.get $id))
            (then
                (return (global.get $jdk$internal$access$SharedSecrets_cls))
                ))
        (if $check_45 (i32.eq (i32.const 45) (local.get $id))
            (then
                (return (global.get $java$util$Arrays_cls))
                ))
        (if $check_46 (i32.eq (i32.const 46) (local.get $id))
            (then
                (return (global.get $java$lang$Void_cls))
                ))
        (if $check_47 (i32.eq (i32.const 47) (local.get $id))
            (then
                (return (global.get $de$mirkosertic$bytecoder$api$Callback_cls))
                ))
        (if $check_48 (i32.eq (i32.const 48) (local.get $id))
            (then
                (return (global.get $java$util$HashMap$HashIterator_cls))
                ))
        (if $check_49 (i32.eq (i32.const 49) (local.get $id))
            (then
                (return (global.get $de$mirkosertic$bytecoder$classlib$Array_cls))
                ))
        (if $check_50 (i32.eq (i32.const 50) (local.get $id))
            (then
                (return (global.get $jdk$internal$misc$ScopedMemoryAccess_cls))
                ))
        (if $check_51 (i32.eq (i32.const 51) (local.get $id))
            (then
                (return (global.get $java$lang$Comparable_cls))
                ))
        (if $check_52 (i32.eq (i32.const 52) (local.get $id))
            (then
                (return (global.get $java$lang$reflect$Type_cls))
                ))
        (if $check_53 (i32.eq (i32.const 53) (local.get $id))
            (then
                (return (global.get $java$lang$AutoCloseable_cls))
                ))
        (if $check_54 (i32.eq (i32.const 54) (local.get $id))
            (then
                (return (global.get $java$io$Serializable_cls))
                ))
        (if $check_55 (i32.eq (i32.const 55) (local.get $id))
            (then
                (return (global.get $jdk$internal$util$ArraysSupport_cls))
                ))
        (if $check_56 (i32.eq (i32.const 56) (local.get $id))
            (then
                (return (global.get $jdk$internal$misc$InternalLock_cls))
                ))
        (if $check_57 (i32.eq (i32.const 57) (local.get $id))
            (then
                (return (global.get $java$util$Map$Entry_cls))
                ))
        (if $check_58 (i32.eq (i32.const 58) (local.get $id))
            (then
                (return (global.get $de$mirkosertic$bytecoder$integrationtest$VueDemo_cls))
                ))
        (if $check_59 (i32.eq (i32.const 59) (local.get $id))
            (then
                (return (global.get $jdk$internal$misc$CDS_cls))
                ))
        (if $check_60 (i32.eq (i32.const 60) (local.get $id))
            (then
                (return (global.get $jdk$internal$misc$Unsafe_cls))
                ))
        (if $check_61 (i32.eq (i32.const 61) (local.get $id))
            (then
                (return (global.get $java$util$function$BiFunction_cls))
                ))
        (if $check_62 (i32.eq (i32.const 62) (local.get $id))
            (then
                (return (global.get $java$lang$Throwable_cls))
                ))
        (if $check_63 (i32.eq (i32.const 63) (local.get $id))
            (then
                (return (global.get $java$util$Collections_cls))
                ))
        (if $check_64 (i32.eq (i32.const 64) (local.get $id))
            (then
                (return (global.get $java$lang$ClassLoader_cls))
                ))
        (if $check_65 (i32.eq (i32.const 65) (local.get $id))
            (then
                (return (global.get $java$lang$Cloneable_cls))
                ))
        (if $check_66 (i32.eq (i32.const 66) (local.get $id))
            (then
                (return (global.get $jdk$internal$access$JavaNioAccess_cls))
                ))
        (if $check_67 (i32.eq (i32.const 67) (local.get $id))
            (then
                (return (global.get $java$nio$CharBuffer_cls))
                ))
        (if $check_68 (i32.eq (i32.const 68) (local.get $id))
            (then
                (return (global.get $jdk$internal$util$Preconditions$2_cls))
                ))
        (if $check_69 (i32.eq (i32.const 69) (local.get $id))
            (then
                (return (global.get $java$nio$charset$Charset_cls))
                ))
        (if $check_70 (i32.eq (i32.const 70) (local.get $id))
            (then
                (return (global.get $java$util$HashMap$EntryIterator_cls))
                ))
        (if $check_71 (i32.eq (i32.const 71) (local.get $id))
            (then
                (return (global.get $java$util$Collection_cls))
                ))
        (if $check_72 (i32.eq (i32.const 72) (local.get $id))
            (then
                (return (global.get $java$io$Closeable_cls))
                ))
        (if $check_73 (i32.eq (i32.const 73) (local.get $id))
            (then
                (return (global.get $java$util$ImmutableCollections$MapN$MapNIterator_cls))
                ))
        (if $check_74 (i32.eq (i32.const 74) (local.get $id))
            (then
                (return (global.get $java$lang$String_cls))
                ))
        (if $check_75 (i32.eq (i32.const 75) (local.get $id))
            (then
                (return (global.get $java$lang$Thread_cls))
                ))
        (if $check_76 (i32.eq (i32.const 76) (local.get $id))
            (then
                (return (global.get $de$mirkosertic$bytecoder$api$vue$VueEventListener_cls))
                ))
        (if $check_77 (i32.eq (i32.const 77) (local.get $id))
            (then
                (return (global.get $jdk$internal$util$Preconditions$1_cls))
                ))
        (if $check_78 (i32.eq (i32.const 78) (local.get $id))
            (then
                (return (global.get $de$mirkosertic$bytecoder$api$web$Event_cls))
                ))
        (if $check_79 (i32.eq (i32.const 79) (local.get $id))
            (then
                (return (global.get $java$io$PrintStream$1_cls))
                ))
        (if $check_80 (i32.eq (i32.const 80) (local.get $id))
            (then
                (return (global.get $java$util$HashMap$Node_cls))
                ))
        (if $check_81 (i32.eq (i32.const 81) (local.get $id))
            (then
                (return (global.get $java$lang$StringBuilder_cls))
                ))
        (if $check_82 (i32.eq (i32.const 82) (local.get $id))
            (then
                (return (global.get $java$util$AbstractMap_cls))
                ))
        (if $check_83 (i32.eq (i32.const 83) (local.get $id))
            (then
                (return (global.get $java$util$concurrent$ConcurrentMap_cls))
                ))
        (if $check_84 (i32.eq (i32.const 84) (local.get $id))
            (then
                (return (global.get $de$mirkosertic$bytecoder$api$vue$VueData_cls))
                ))
        (if $check_85 (i32.eq (i32.const 85) (local.get $id))
            (then
                (return (global.get $java$lang$Number_cls))
                ))
        (if $check_86 (i32.eq (i32.const 86) (local.get $id))
            (then
                (return (global.get $java$util$Collections$EmptyIterator_cls))
                ))
        (if $check_87 (i32.eq (i32.const 87) (local.get $id))
            (then
                (return (global.get $java$util$Hashtable_cls))
                ))
        (if $check_88 (i32.eq (i32.const 88) (local.get $id))
            (then
                (return (global.get $java$lang$reflect$ParameterizedType_cls))
                ))
        (if $check_89 (i32.eq (i32.const 89) (local.get $id))
            (then
                (return (global.get $java$util$ImmutableCollections$SetN$SetNIterator_cls))
                ))
        (if $check_90 (i32.eq (i32.const 90) (local.get $id))
            (then
                (return (global.get $de$mirkosertic$bytecoder$classlib$VM$1_cls))
                ))
        (if $check_91 (i32.eq (i32.const 91) (local.get $id))
            (then
                (return (global.get $java$lang$ref$WeakReference_cls))
                ))
        (if $check_92 (i32.eq (i32.const 92) (local.get $id))
            (then
                (return (global.get $jdk$internal$util$Preconditions$4_cls))
                ))
        (if $check_93 (i32.eq (i32.const 93) (local.get $id))
            (then
                (return (global.get $java$util$KeyValueHolder_cls))
                ))
        (if $check_94 (i32.eq (i32.const 94) (local.get $id))
            (then
                (return (global.get $java$lang$Exception_cls))
                ))
        (if $check_95 (i32.eq (i32.const 95) (local.get $id))
            (then
                (return (global.get $de$mirkosertic$bytecoder$classlib$BytecoderCharsetEncoder_cls))
                ))
        (if $check_96 (i32.eq (i32.const 96) (local.get $id))
            (then
                (return (global.get $java$nio$Buffer$1_cls))
                ))
        (if $check_97 (i32.eq (i32.const 97) (local.get $id))
            (then
                (return (global.get $jdk$internal$util$Preconditions$3_cls))
                ))
        (if $check_98 (i32.eq (i32.const 98) (local.get $id))
            (then
                (return (global.get $de$mirkosertic$bytecoder$api$vue$VueBuilder_cls))
                ))
        (if $check_99 (i32.eq (i32.const 99) (local.get $id))
            (then
                (return (global.get $java$util$concurrent$locks$ReentrantLock_cls))
                ))
        (if $check_100 (i32.eq (i32.const 100) (local.get $id))
            (then
                (return (global.get $java$nio$ByteBuffer_cls))
                ))
        (if $check_101 (i32.eq (i32.const 101) (local.get $id))
            (then
                (return (global.get $java$util$AbstractList$Itr_cls))
                ))
        (if $check_102 (i32.eq (i32.const 102) (local.get $id))
            (then
                (return (global.get $de$mirkosertic$bytecoder$classlib$BytecoderCharsetDecoder_cls))
                ))
        (if $check_103 (i32.eq (i32.const 103) (local.get $id))
            (then
                (return (global.get $java$lang$Error_cls))
                ))
        (if $check_104 (i32.eq (i32.const 104) (local.get $id))
            (then
                (return (global.get $java$util$ListIterator_cls))
                ))
        (if $check_105 (i32.eq (i32.const 105) (local.get $id))
            (then
                (return (global.get $java$io$Writer_cls))
                ))
        (if $check_106 (i32.eq (i32.const 106) (local.get $id))
            (then
                (return (global.get $java$nio$HeapByteBuffer_cls))
                ))
        (if $check_107 (i32.eq (i32.const 107) (local.get $id))
            (then
                (return (global.get $java$util$concurrent$ConcurrentHashMap_cls))
                ))
        (if $check_108 (i32.eq (i32.const 108) (local.get $id))
            (then
                (return (global.get $java$util$ImmutableCollections$AbstractImmutableMap_cls))
                ))
        (if $check_109 (i32.eq (i32.const 109) (local.get $id))
            (then
                (return (global.get $java$util$Set_cls))
                ))
        (if $check_110 (i32.eq (i32.const 110) (local.get $id))
            (then
                (return (global.get $java$util$AbstractCollection_cls))
                ))
        (if $check_111 (i32.eq (i32.const 111) (local.get $id))
            (then
                (return (global.get $java$util$AbstractList$ListItr_cls))
                ))
        (if $check_112 (i32.eq (i32.const 112) (local.get $id))
            (then
                (return (global.get $java$nio$charset$CoderMalfunctionError_cls))
                ))
        (if $check_113 (i32.eq (i32.const 113) (local.get $id))
            (then
                (return (global.get $java$lang$Long_cls))
                ))
        (if $check_114 (i32.eq (i32.const 114) (local.get $id))
            (then
                (return (global.get $de$mirkosertic$bytecoder$classlib$BytecoderCharset_cls))
                ))
        (if $check_115 (i32.eq (i32.const 115) (local.get $id))
            (then
                (return (global.get $java$nio$HeapCharBuffer_cls))
                ))
        (if $check_116 (i32.eq (i32.const 116) (local.get $id))
            (then
                (return (global.get $java$lang$Byte_cls))
                ))
        (if $check_117 (i32.eq (i32.const 117) (local.get $id))
            (then
                (return (global.get $java$util$Properties_cls))
                ))
        (if $check_118 (i32.eq (i32.const 118) (local.get $id))
            (then
                (return (global.get $java$lang$RuntimeException_cls))
                ))
        (if $check_119 (i32.eq (i32.const 119) (local.get $id))
            (then
                (return (global.get $java$lang$Float_cls))
                ))
        (if $check_120 (i32.eq (i32.const 120) (local.get $id))
            (then
                (return (global.get $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError_cls))
                ))
        (if $check_121 (i32.eq (i32.const 121) (local.get $id))
            (then
                (return (global.get $java$util$Collections$SynchronizedCollection_cls))
                ))
        (if $check_122 (i32.eq (i32.const 122) (local.get $id))
            (then
                (return (global.get $java$lang$VirtualMachineError_cls))
                ))
        (if $check_123 (i32.eq (i32.const 123) (local.get $id))
            (then
                (return (global.get $java$lang$Integer_cls))
                ))
        (if $check_124 (i32.eq (i32.const 124) (local.get $id))
            (then
                (return (global.get $java$lang$AssertionError_cls))
                ))
        (if $check_125 (i32.eq (i32.const 125) (local.get $id))
            (then
                (return (global.get $java$util$ImmutableCollections$ListItr_cls))
                ))
        (if $check_126 (i32.eq (i32.const 126) (local.get $id))
            (then
                (return (global.get $java$io$InputStream_cls))
                ))
        (if $check_127 (i32.eq (i32.const 127) (local.get $id))
            (then
                (return (global.get $java$io$OutputStream_cls))
                ))
        (if $check_128 (i32.eq (i32.const 128) (local.get $id))
            (then
                (return (global.get $de$mirkosertic$bytecoder$api$web$MouseEvent_cls))
                ))
        (if $check_129 (i32.eq (i32.const 129) (local.get $id))
            (then
                (return (global.get $java$util$Collections$EmptyListIterator_cls))
                ))
        (if $check_130 (i32.eq (i32.const 130) (local.get $id))
            (then
                (return (global.get $java$util$LinkedHashMap$Entry_cls))
                ))
        (if $check_131 (i32.eq (i32.const 131) (local.get $id))
            (then
                (return (global.get $java$util$HashMap_cls))
                ))
        (if $check_132 (i32.eq (i32.const 132) (local.get $id))
            (then
                (return (global.get $java$util$List_cls))
                ))
        (if $check_133 (i32.eq (i32.const 133) (local.get $id))
            (then
                (return (global.get $java$util$Collections$EmptyMap_cls))
                ))
        (if $check_134 (i32.eq (i32.const 134) (local.get $id))
            (then
                (return (global.get $de$mirkosertic$bytecoder$api$vue$VueInstance_cls))
                ))
        (if $check_135 (i32.eq (i32.const 135) (local.get $id))
            (then
                (return (global.get $java$lang$Short_cls))
                ))
        (if $check_136 (i32.eq (i32.const 136) (local.get $id))
            (then
                (return (global.get $de$mirkosertic$bytecoder$integrationtest$VueDemo$1_cls))
                ))
        (if $check_137 (i32.eq (i32.const 137) (local.get $id))
            (then
                (return (global.get $java$lang$Double_cls))
                ))
        (if $check_138 (i32.eq (i32.const 138) (local.get $id))
            (then
                (return (global.get $java$lang$ClassCastException_cls))
                ))
        (if $check_139 (i32.eq (i32.const 139) (local.get $id))
            (then
                (return (global.get $java$nio$BufferOverflowException_cls))
                ))
        (if $check_140 (i32.eq (i32.const 140) (local.get $id))
            (then
                (return (global.get $java$lang$IllegalStateException_cls))
                ))
        (if $check_141 (i32.eq (i32.const 141) (local.get $id))
            (then
                (return (global.get $java$util$ImmutableCollections$AbstractImmutableCollection_cls))
                ))
        (if $check_142 (i32.eq (i32.const 142) (local.get $id))
            (then
                (return (global.get $java$util$AbstractList_cls))
                ))
        (if $check_143 (i32.eq (i32.const 143) (local.get $id))
            (then
                (return (global.get $java$lang$IllegalArgumentException_cls))
                ))
        (if $check_144 (i32.eq (i32.const 144) (local.get $id))
            (then
                (return (global.get $java$util$NoSuchElementException_cls))
                ))
        (if $check_145 (i32.eq (i32.const 145) (local.get $id))
            (then
                (return (global.get $java$util$ConcurrentModificationException_cls))
                ))
        (if $check_146 (i32.eq (i32.const 146) (local.get $id))
            (then
                (return (global.get $java$lang$UnsupportedOperationException_cls))
                ))
        (if $check_147 (i32.eq (i32.const 147) (local.get $id))
            (then
                (return (global.get $de$mirkosertic$bytecoder$integrationtest$VueDemo$MyVueInstance_cls))
                ))
        (if $check_148 (i32.eq (i32.const 148) (local.get $id))
            (then
                (return (global.get $java$nio$BufferUnderflowException_cls))
                ))
        (if $check_149 (i32.eq (i32.const 149) (local.get $id))
            (then
                (return (global.get $java$io$OutputStreamWriter_cls))
                ))
        (if $check_150 (i32.eq (i32.const 150) (local.get $id))
            (then
                (return (global.get $java$io$FileInputStream_cls))
                ))
        (if $check_151 (i32.eq (i32.const 151) (local.get $id))
            (then
                (return (global.get $sun$nio$cs$StreamEncoder_cls))
                ))
        (if $check_152 (i32.eq (i32.const 152) (local.get $id))
            (then
                (return (global.get $java$util$HashMap$TreeNode_cls))
                ))
        (if $check_153 (i32.eq (i32.const 153) (local.get $id))
            (then
                (return (global.get $java$util$Properties$EntrySet_cls))
                ))
        (if $check_154 (i32.eq (i32.const 154) (local.get $id))
            (then
                (return (global.get $java$util$ImmutableCollections$MapN_cls))
                ))
        (if $check_155 (i32.eq (i32.const 155) (local.get $id))
            (then
                (return (global.get $java$lang$InternalError_cls))
                ))
        (if $check_156 (i32.eq (i32.const 156) (local.get $id))
            (then
                (return (global.get $java$lang$NullPointerException_cls))
                ))
        (if $check_157 (i32.eq (i32.const 157) (local.get $id))
            (then
                (return (global.get $java$io$BufferedWriter_cls))
                ))
        (if $check_158 (i32.eq (i32.const 158) (local.get $id))
            (then
                (return (global.get $java$io$FileOutputStream_cls))
                ))
        (if $check_159 (i32.eq (i32.const 159) (local.get $id))
            (then
                (return (global.get $java$util$AbstractSet_cls))
                ))
        (if $check_160 (i32.eq (i32.const 160) (local.get $id))
            (then
                (return (global.get $java$util$Collections$SynchronizedSet_cls))
                ))
        (if $check_161 (i32.eq (i32.const 161) (local.get $id))
            (then
                (return (global.get $java$io$FilterOutputStream_cls))
                ))
        (if $check_162 (i32.eq (i32.const 162) (local.get $id))
            (then
                (return (global.get $java$lang$IndexOutOfBoundsException_cls))
                ))
        (if $check_163 (i32.eq (i32.const 163) (local.get $id))
            (then
                (return (global.get $java$util$ImmutableCollections$AbstractImmutableSet_cls))
                ))
        (if $check_164 (i32.eq (i32.const 164) (local.get $id))
            (then
                (return (global.get $java$lang$StringIndexOutOfBoundsException_cls))
                ))
        (if $check_165 (i32.eq (i32.const 165) (local.get $id))
            (then
                (return (global.get $java$util$ImmutableCollections$MapN$1_cls))
                ))
        (if $check_166 (i32.eq (i32.const 166) (local.get $id))
            (then
                (return (global.get $java$util$HashMap$EntrySet_cls))
                ))
        (if $check_167 (i32.eq (i32.const 167) (local.get $id))
            (then
                (return (global.get $java$lang$ArrayIndexOutOfBoundsException_cls))
                ))
        (if $check_168 (i32.eq (i32.const 168) (local.get $id))
            (then
                (return (global.get $java$io$PrintStream_cls))
                ))
        (if $check_169 (i32.eq (i32.const 169) (local.get $id))
            (then
                (return (global.get $java$util$ImmutableCollections$AbstractImmutableList_cls))
                ))
        (if $check_170 (i32.eq (i32.const 170) (local.get $id))
            (then
                (return (global.get $java$nio$ReadOnlyBufferException_cls))
                ))
        (if $check_171 (i32.eq (i32.const 171) (local.get $id))
            (then
                (return (global.get $java$util$Collections$EmptyList_cls))
                ))
        (if $check_172 (i32.eq (i32.const 172) (local.get $id))
            (then
                (return (global.get $java$util$Collections$EmptySet_cls))
                ))
        (if $check_173 (i32.eq (i32.const 173) (local.get $id))
            (then
                (return (global.get $java$io$FileWriter_cls))
                ))
        (if $check_174 (i32.eq (i32.const 174) (local.get $id))
            (then
                (return (global.get $java$util$ImmutableCollections$SetN_cls))
                ))
        (if $check_175 (i32.eq (i32.const 175) (local.get $id))
            (then
                (return (global.get $java$util$ImmutableCollections$ListN_cls))
                ))
        (if $check_176 (i32.eq (i32.const 176) (local.get $id))
            (then
                (return (global.get $java$util$ImmutableCollections$List12_cls))
                ))
        (unreachable))
    (func $java$lang$Object$Ljava$lang$String$$toString$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (return (global.get $stringpool_1))
        (unreachable))
    (func $java$lang$Object$Z$equals$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 i32)
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = If_5_0
        (block $If_5_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (select (i32.const 0) (i32.const 1) (ref.eq (local.get $var0) (local.get $arg0)))
                (then
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (local.get $arg0))
                    (local.set $phi3 (i32.const 0))
                    (br $If_5_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (local.get $arg0))
                    (local.set $phi3 (i32.const 1))
                    (br $If_5_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi3))
        (unreachable))
    (func $java$lang$Object$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$lang$Object$I$hashCode$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (return (i32.const 0))
        (unreachable))
    (func $java$nio$ByteOrder$V$$clinit$$$ (type $t541) (param $unused (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $phi4 (ref null $java$lang$Object))
        (local $phi5 (ref null $java$lang$Object))
        (drop (call $java$nio$ByteOrder_i))
        (local.set $var0 (struct.new $java$nio$ByteOrder (struct.get $java$nio$ByteOrder_rtt $factoryFor (global.get $java$nio$ByteOrder_cls)) (ref.func $java$nio$ByteOrder_vt) (ref.null noextern) (struct.get $java$nio$ByteOrder_rtt $classImplTypes (global.get $java$nio$ByteOrder_cls)) (ref.null none)))
        (struct.set $java$nio$ByteOrder $name (ref.cast (ref null $java$nio$ByteOrder) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_32)))
        (drop (call $java$nio$ByteOrder_i))
        (struct.set $java$nio$ByteOrder_rtt $BIG_ENDIAN (ref.cast (ref null $java$nio$ByteOrder_rtt) (call $java$nio$ByteOrder_i)) (ref.cast (ref null $java$lang$Object) (local.get $var0)))
        (drop (call $java$nio$ByteOrder_i))
        (local.set $var1 (struct.new $java$nio$ByteOrder (struct.get $java$nio$ByteOrder_rtt $factoryFor (global.get $java$nio$ByteOrder_cls)) (ref.func $java$nio$ByteOrder_vt) (ref.null noextern) (struct.get $java$nio$ByteOrder_rtt $classImplTypes (global.get $java$nio$ByteOrder_cls)) (ref.null none)))
        (struct.set $java$nio$ByteOrder $name (ref.cast (ref null $java$nio$ByteOrder) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_33)))
        (drop (call $java$nio$ByteOrder_i))
        (struct.set $java$nio$ByteOrder_rtt $LITTLE_ENDIAN (ref.cast (ref null $java$nio$ByteOrder_rtt) (call $java$nio$ByteOrder_i)) (ref.cast (ref null $java$lang$Object) (local.get $var1)))
        (drop (call $jdk$internal$misc$Unsafe_i))
        (drop (call $jdk$internal$misc$Unsafe_i))
        (local.set $phi5 (struct.get $jdk$internal$misc$Unsafe_rtt $INSTANCE (global.get $jdk$internal$misc$Unsafe_cls)))
        (local.set $var2 (local.get $phi5))
        ;; startBlock type=NORMAL, label = If_21_0
        (block $If_21_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.eq (call $jdk$internal$misc$Unsafe$Z$isBigEndian$$ (local.get $var2)) (i32.const 0))
                (then
                    (drop (call $java$nio$ByteOrder_i))
                    (local.set $phi4 (struct.get $java$nio$ByteOrder_rtt $LITTLE_ENDIAN (global.get $java$nio$ByteOrder_cls)))
                    (br $If_21_0)
                    ;; Start else
                    )(else
                    (drop (call $java$nio$ByteOrder_i))
                    (local.set $var3 (struct.get $java$nio$ByteOrder_rtt $BIG_ENDIAN (global.get $java$nio$ByteOrder_cls)))
                    ;; Here was a goto statement
                    (local.set $phi4 (local.get $var3))
                    (br $If_21_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (drop (call $java$nio$ByteOrder_i))
        (struct.set $java$nio$ByteOrder_rtt $NATIVE_ORDER (ref.cast (ref null $java$nio$ByteOrder_rtt) (call $java$nio$ByteOrder_i)) (ref.cast (ref null $java$lang$Object) (local.get $phi4)))
        (return)
        (unreachable))
    (func $java$nio$ByteOrder$V$$init$$Ljava$lang$String$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$nio$ByteOrder $name (ref.cast (ref null $java$nio$ByteOrder) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (return)
        (unreachable))
    (func $java$nio$ByteOrder$Ljava$nio$ByteOrder$$nativeOrder$$ (type $t553) (param $unused (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (drop (call $java$nio$ByteOrder_i))
        (return (struct.get $java$nio$ByteOrder_rtt $NATIVE_ORDER (global.get $java$nio$ByteOrder_cls)))
        (unreachable))
    (func $java$nio$ByteOrder$Ljava$lang$String$$toString$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (return (struct.get $java$nio$ByteOrder $name (ref.cast (ref null $java$nio$ByteOrder) (local.get $thisref))))
        (unreachable))
    (func $jdk$internal$misc$VM$V$$clinit$$$ (type $t541) (param $unused (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $phi3 (ref null $java$lang$Object))
        (local $phi4 i32)
        (local.set $var0 (struct.new $java$lang$Object (struct.get $java$lang$Object_rtt $factoryFor (global.get $java$lang$Object_cls)) (ref.func $java$lang$Object_vt) (ref.null noextern) (struct.get $java$lang$Object_rtt $classImplTypes (global.get $java$lang$Object_cls))))
        (drop (call $jdk$internal$misc$VM_i))
        (struct.set $jdk$internal$misc$VM_rtt $lock (ref.cast (ref null $jdk$internal$misc$VM_rtt) (call $jdk$internal$misc$VM_i)) (ref.cast (ref null $java$lang$Object) (local.get $var0)))
        (drop (call $jdk$internal$misc$VM_i))
        (struct.set $jdk$internal$misc$VM_rtt $directMemory (ref.cast (ref null $jdk$internal$misc$VM_rtt) (call $jdk$internal$misc$VM_i)) (i64.const 67108864))
        (local.set $var1 (struct.new $java$util$HashMap (struct.get $java$util$HashMap_rtt $factoryFor (global.get $java$util$HashMap_cls)) (ref.func $java$util$HashMap_vt) (ref.null noextern) (struct.get $java$util$HashMap_rtt $classImplTypes (global.get $java$util$HashMap_cls)) (f32.const 0.0) (i32.const 0) (i32.const 0) (ref.null none) (i32.const 0) (ref.null none)))
        (struct.set $java$util$HashMap $loadFactor (ref.cast (ref null $java$util$HashMap) (local.get $var1)) (f32.const 0.75))
        (drop (call $jdk$internal$misc$VM_i))
        (drop (call $jdk$internal$misc$VM_i))
        (drop (call $jdk$internal$misc$VM_i))
        (local.set $phi4 (struct.get $jdk$internal$misc$VM_rtt $initLevel (global.get $jdk$internal$misc$VM_cls)))
        ;; writeIfAndStartTrueBlock
        (if $if0 (i32.eq (local.get $phi4) (i32.const 0))
            (then
                ;; startBlock type=NORMAL, label = If_30_0
                (block $If_30_0
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (select (i32.const 0) (i32.const 1) (ref.is_null (struct.get $jdk$internal$misc$VM_rtt $savedProps (global.get $jdk$internal$misc$VM_cls))))
                        (then
                            (local.set $phi3 (local.get $var1))
                            (br $If_30_0)
                            ;; Start else
                            )(else
                            (struct.set $jdk$internal$misc$VM_rtt $savedProps (ref.cast (ref null $jdk$internal$misc$VM_rtt) (call $jdk$internal$misc$VM_i)) (ref.cast (ref null $java$lang$Object) (local.get $var1)))
                            (local.set $phi3 (local.get $var1))
                            (br $If_30_0)
                            ))
                    ;; finishIfBlock
                    )
                ;; finishBlock
                (return)
                ;; Start else
                )(else
                (local.set $var2 (struct.new $java$lang$IllegalStateException (struct.get $java$lang$IllegalStateException_rtt $factoryFor (global.get $java$lang$IllegalStateException_cls)) (ref.func $java$lang$IllegalStateException_vt) (ref.null noextern) (struct.get $java$lang$IllegalStateException_rtt $classImplTypes (global.get $java$lang$IllegalStateException_cls)) (ref.null none) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var2)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_66)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var2)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var2))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $jdk$internal$misc$VM$V$saveProperties$Ljava$util$Map$ (type $t556) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 i32)
        (drop (call $jdk$internal$misc$VM_i))
        (drop (call $jdk$internal$misc$VM_i))
        (local.set $phi2 (struct.get $jdk$internal$misc$VM_rtt $initLevel (global.get $jdk$internal$misc$VM_cls)))
        ;; writeIfAndStartTrueBlock
        (if $if0 (i32.eq (local.get $phi2) (i32.const 0))
            (then
                ;; startBlock type=NORMAL, label = If_14_0
                (block $If_14_0
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (select (i32.const 0) (i32.const 1) (ref.is_null (struct.get $jdk$internal$misc$VM_rtt $savedProps (global.get $jdk$internal$misc$VM_cls))))
                        (then
                            (local.set $phi1 (local.get $arg0))
                            (br $If_14_0)
                            ;; Start else
                            )(else
                            (struct.set $jdk$internal$misc$VM_rtt $savedProps (ref.cast (ref null $jdk$internal$misc$VM_rtt) (call $jdk$internal$misc$VM_i)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
                            (local.set $phi1 (local.get $arg0))
                            (br $If_14_0)
                            ))
                    ;; finishIfBlock
                    )
                ;; finishBlock
                (return)
                ;; Start else
                )(else
                (local.set $var0 (struct.new $java$lang$IllegalStateException (struct.get $java$lang$IllegalStateException_rtt $factoryFor (global.get $java$lang$IllegalStateException_cls)) (ref.func $java$lang$IllegalStateException_vt) (ref.null noextern) (struct.get $java$lang$IllegalStateException_rtt $classImplTypes (global.get $java$lang$IllegalStateException_cls)) (ref.null none) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_66)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var0))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $jdk$internal$misc$VM$I$initLevel$$ (type $t555) (param $unused (ref null $java$lang$Object)) (result i32)
        (drop (call $jdk$internal$misc$VM_i))
        (return (struct.get $jdk$internal$misc$VM_rtt $initLevel (global.get $jdk$internal$misc$VM_cls)))
        (unreachable))
    (func $jdk$internal$misc$VM$Z$isBooted$$ (type $t555) (param $unused (ref null $java$lang$Object)) (result i32)
        (local $phi0 i32)
        (drop (call $jdk$internal$misc$VM_i))
        ;; startBlock type=NORMAL, label = If_5_0
        (block $If_5_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.lt_s (struct.get $jdk$internal$misc$VM_rtt $initLevel (global.get $jdk$internal$misc$VM_cls)) (i32.const 4))
                (then
                    (local.set $phi0 (i32.const 0))
                    (br $If_5_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi0 (i32.const 1))
                    (br $If_5_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi0))
        (unreachable))
    (func $jdk$internal$misc$VM$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$util$Dictionary$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$nio$charset$CharsetEncoder$V$$clinit$$$ (type $t541) (param $unused (ref null $java$lang$Object))
        (local $phi0 i32)
        (local $var1 (ref null $java$lang$Object))
        ;; startBlock type=NORMAL, label = If_4_0
        (block $If_4_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ne (call $java$lang$Class$Z$desiredAssertionStatus$$ (call $java$nio$charset$CharsetEncoder_i)) (i32.const 0))
                (then
                    (local.set $phi0 (i32.const 0))
                    (br $If_4_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi0 (i32.const 1))
                    (br $If_4_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (drop (call $java$nio$charset$CharsetEncoder_i))
        (struct.set $java$nio$charset$CharsetEncoder_rtt $$assertionsDisabled (ref.cast (ref null $java$nio$charset$CharsetEncoder_rtt) (call $java$nio$charset$CharsetEncoder_i)) (local.get $phi0))
        (local.set $var1 (struct.new $obj_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t549 (i32.const 4))))
        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var1))) (i32.const 0) (global.get $stringpool_6))
        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var1))) (i32.const 1) (global.get $stringpool_7))
        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var1))) (i32.const 2) (global.get $stringpool_8))
        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var1))) (i32.const 3) (global.get $stringpool_9))
        (drop (call $java$nio$charset$CharsetEncoder_i))
        (struct.set $java$nio$charset$CharsetEncoder_rtt $stateNames (ref.cast (ref null $java$nio$charset$CharsetEncoder_rtt) (call $java$nio$charset$CharsetEncoder_i)) (ref.cast (ref null $java$lang$Object) (local.get $var1)))
        (return)
        (unreachable))
    (func $java$nio$charset$CharsetEncoder$V$$init$$Ljava$nio$charset$Charset$$F$F (type $t557) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 f32) (param $arg2 f32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (struct.new $i32_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t7 (i32.const 1))))
        (array.set $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $var1))) (i32.const 0) (i32.const 63))
        (call $java$nio$charset$CharsetEncoder$V$$init$$Ljava$nio$charset$Charset$$F$F$$B (local.get $var0) (local.get $arg0) (local.get $arg1) (local.get $arg2) (local.get $var1))
        (return)
        (unreachable))
    (func $java$nio$charset$CharsetEncoder$V$$init$$Ljava$nio$charset$Charset$$F$F$$B (type $t558) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 f32) (param $arg2 f32) (param $arg3 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (drop (call $java$nio$charset$CodingErrorAction_i))
        (struct.set $java$nio$charset$CharsetEncoder $malformedInputAction (ref.cast (ref null $java$nio$charset$CharsetEncoder) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (struct.get $java$nio$charset$CodingErrorAction_rtt $REPORT (global.get $java$nio$charset$CodingErrorAction_cls))))
        (drop (call $java$nio$charset$CodingErrorAction_i))
        (struct.set $java$nio$charset$CharsetEncoder $unmappableCharacterAction (ref.cast (ref null $java$nio$charset$CharsetEncoder) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (struct.get $java$nio$charset$CodingErrorAction_rtt $REPORT (global.get $java$nio$charset$CodingErrorAction_cls))))
        (struct.set $java$nio$charset$CharsetEncoder $state (ref.cast (ref null $java$nio$charset$CharsetEncoder) (local.get $var0)) (i32.const 0))
        (struct.set $java$nio$charset$CharsetEncoder $cachedDecoder (ref.cast (ref null $java$nio$charset$CharsetEncoder) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (struct.set $java$nio$charset$CharsetEncoder $charset (ref.cast (ref null $java$nio$charset$CharsetEncoder) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        ;; writeIfAndStartTrueBlock
        (if $if0 (i32.gt_s (call $compare_f32 (local.get $arg1) (f32.const 0.0)) (i32.const 0))
            (then
                ;; writeIfAndStartTrueBlock
                (if $if1 (i32.gt_s (call $compare_f32 (local.get $arg2) (f32.const 0.0)) (i32.const 0))
                    (then
                        ;; writeIfAndStartTrueBlock
                        (if $if2 (i32.le_s (call $compare_f32 (local.get $arg1) (local.get $arg2)) (i32.const 0))
                            (then
                                (struct.set $java$nio$charset$CharsetEncoder $replacement (ref.cast (ref null $java$nio$charset$CharsetEncoder) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg3)))
                                (struct.set $java$nio$charset$CharsetEncoder $averageBytesPerChar (ref.cast (ref null $java$nio$charset$CharsetEncoder) (local.get $var0)) (local.get $arg1))
                                (struct.set $java$nio$charset$CharsetEncoder $maxBytesPerChar (ref.cast (ref null $java$nio$charset$CharsetEncoder) (local.get $var0)) (local.get $arg2))
                                (local.set $var4 (call $java$nio$charset$CharsetEncoder$Ljava$nio$charset$CharsetEncoder$$replaceWith$$B (local.get $var0) (local.get $arg3)))
                                (return)
                                ;; Start else
                                )(else
                                (local.set $var3 (struct.new $java$lang$IllegalArgumentException (struct.get $java$lang$IllegalArgumentException_rtt $factoryFor (global.get $java$lang$IllegalArgumentException_cls)) (ref.func $java$lang$IllegalArgumentException_vt) (ref.null noextern) (struct.get $java$lang$IllegalArgumentException_rtt $classImplTypes (global.get $java$lang$IllegalArgumentException_cls)) (ref.null none) (ref.null none)))
                                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var3)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_15)))
                                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var3)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                (throw $javaexception (local.get $var3))
                                ))
                        ;; finishIfBlock
                        ;; Start else
                        )(else
                        (local.set $var2 (struct.new $java$lang$IllegalArgumentException (struct.get $java$lang$IllegalArgumentException_rtt $factoryFor (global.get $java$lang$IllegalArgumentException_cls)) (ref.func $java$lang$IllegalArgumentException_vt) (ref.null noextern) (struct.get $java$lang$IllegalArgumentException_rtt $classImplTypes (global.get $java$lang$IllegalArgumentException_cls)) (ref.null none) (ref.null none)))
                        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var2)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_14)))
                        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var2)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                        (throw $javaexception (local.get $var2))
                        ))
                ;; finishIfBlock
                ;; Start else
                )(else
                (local.set $var1 (struct.new $java$lang$IllegalArgumentException (struct.get $java$lang$IllegalArgumentException_rtt $factoryFor (global.get $java$lang$IllegalArgumentException_cls)) (ref.func $java$lang$IllegalArgumentException_vt) (ref.null noextern) (struct.get $java$lang$IllegalArgumentException_rtt $classImplTypes (global.get $java$lang$IllegalArgumentException_cls)) (ref.null none) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_13)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var1))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$nio$charset$CharsetEncoder$Ljava$nio$charset$CharsetEncoder$$replaceWith$$B (type $t559) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 i32)
        (local $var3 (ref null $java$lang$Object))
        (local $var4 f32)
        (local $var5 (ref null $java$lang$Object))
        (local $var6 (ref null $java$lang$Object))
        (local $var7 i32)
        (local $phi8 (ref null $java$lang$Object))
        (local $phi9 i32)
        (local $var10 i32)
        (local $var11 i32)
        (local $phi12 (ref null $java$lang$Object))
        (local $var13 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg0)))
            (then
                (local.set $var2 (array.len $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $arg0)))))
                ;; writeIfAndStartTrueBlock
                (if $if1 (i32.ne (local.get $var2) (i32.const 0))
                    (then
                        (local.set $var4 (f32.convert_i32_s (local.get $var2)))
                        ;; writeIfAndStartTrueBlock
                        (if $if2 (i32.le_s (call $compare_f32 (local.get $var4) (struct.get $java$nio$charset$CharsetEncoder $maxBytesPerChar (ref.cast (ref null $java$nio$charset$CharsetEncoder) (local.get $var0)))) (i32.const 0))
                            (then
                                ;; writeIfAndStartTrueBlock
                                (if $if3 (i32.ne (call $java$nio$charset$CharsetEncoder$Z$isLegalReplacement$$B (local.get $var0) (local.get $arg0)) (i32.const 0))
                                    (then
                                        (local.set $var7 (array.len $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $arg0)))))
                                        (drop (call $java$util$Arrays_i))
                                        (local.set $phi8 (struct.new $i32_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t7 (local.get $var7))))
                                        (local.set $phi9 (i32.const 0))
                                        ;; startBlock type=LOOP, label = L1674303124_1
                                        (loop $L1674303124_1
                                            (local.set $var10 (local.get $phi9))
                                            (local.set $var11 (array.len $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $arg0)))))
                                            (drop (call $java$lang$Math_i))
                                            ;; writeIfAndStartTrueBlock
                                            (if $if4 (i32.ge_s (local.get $var10) (call $java$lang$Math$I$min$I$I (call $java$lang$Math_i) (local.get $var7) (local.get $var11)))
                                                (then
                                                    (local.set $phi12 (local.get $phi8))
                                                    (struct.set $java$nio$charset$CharsetEncoder $replacement (ref.cast (ref null $java$nio$charset$CharsetEncoder) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $phi12)))
                                                    (local.set $var13 (struct.get $java$nio$charset$CharsetEncoder $replacement (ref.cast (ref null $java$nio$charset$CharsetEncoder) (local.get $var0))))
                                                    (return (local.get $var0))
                                                    ;; Start else
                                                    )(else
                                                    (array.set $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $phi8))) (local.get $phi9) (array.get $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $arg0))) (local.get $phi9)))
                                                    (local.set $phi9 (i32.add (local.get $phi9) (i32.const 1)))
                                                    ;; Here was a goto statement
                                                    (br $L1674303124_1)
                                                    ))
                                            ;; finishIfBlock
                                            )
                                        ;; finishBlock
                                        ;; Start else
                                        )(else
                                        (local.set $var6 (struct.new $java$lang$IllegalArgumentException (struct.get $java$lang$IllegalArgumentException_rtt $factoryFor (global.get $java$lang$IllegalArgumentException_cls)) (ref.func $java$lang$IllegalArgumentException_vt) (ref.null noextern) (struct.get $java$lang$IllegalArgumentException_rtt $classImplTypes (global.get $java$lang$IllegalArgumentException_cls)) (ref.null none) (ref.null none)))
                                        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var6)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_84)))
                                        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var6)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                        (throw $javaexception (local.get $var6))
                                        ))
                                ;; finishIfBlock
                                ;; Start else
                                )(else
                                (local.set $var5 (struct.new $java$lang$IllegalArgumentException (struct.get $java$lang$IllegalArgumentException_rtt $factoryFor (global.get $java$lang$IllegalArgumentException_cls)) (ref.func $java$lang$IllegalArgumentException_vt) (ref.null noextern) (struct.get $java$lang$IllegalArgumentException_rtt $classImplTypes (global.get $java$lang$IllegalArgumentException_cls)) (ref.null none) (ref.null none)))
                                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var5)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_18)))
                                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var5)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                (throw $javaexception (local.get $var5))
                                ))
                        ;; finishIfBlock
                        ;; Start else
                        )(else
                        (local.set $var3 (struct.new $java$lang$IllegalArgumentException (struct.get $java$lang$IllegalArgumentException_rtt $factoryFor (global.get $java$lang$IllegalArgumentException_cls)) (ref.func $java$lang$IllegalArgumentException_vt) (ref.null noextern) (struct.get $java$lang$IllegalArgumentException_rtt $classImplTypes (global.get $java$lang$IllegalArgumentException_cls)) (ref.null none) (ref.null none)))
                        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var3)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_17)))
                        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var3)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                        (throw $javaexception (local.get $var3))
                        ))
                ;; finishIfBlock
                ;; Start else
                )(else
                (local.set $var1 (struct.new $java$lang$IllegalArgumentException (struct.get $java$lang$IllegalArgumentException_rtt $factoryFor (global.get $java$lang$IllegalArgumentException_cls)) (ref.func $java$lang$IllegalArgumentException_vt) (ref.null noextern) (struct.get $java$lang$IllegalArgumentException_rtt $classImplTypes (global.get $java$lang$IllegalArgumentException_cls)) (ref.null none) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_16)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var1))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$nio$charset$CharsetEncoder$Z$isLegalReplacement$$B (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $phi3 (ref null $java$lang$Object))
        (local $phi4 (ref null $java$lang$Object))
        (local $phi5 (ref null $java$lang$Object))
        (local $phi6 (ref null $java$lang$Object))
        (local $var7 (ref null $java$lang$Object))
        (local $var8 (ref null $java$lang$Object))
        (local $var9 (ref null $java$lang$Object))
        (local $var10 (ref null $java$lang$Object))
        (local $var11 (ref null $java$lang$Object))
        (local $var12 (ref null $java$lang$Object))
        (local $var13 (ref null $java$lang$Object))
        (local $var14 (ref null $java$lang$Object))
        (local $phi15 (ref null $java$lang$Object))
        (local $var16 (ref null $java$lang$Object))
        (local $var17 (ref null $java$lang$Object))
        (local $var18 f32)
        (local $var19 i32)
        (local $var20 (ref null $java$lang$Object))
        (local $var21 (ref null $java$lang$Object))
        (local $var22 (ref null $java$lang$Object))
        (local $phi23 (ref null $java$lang$Object))
        (local $phi24 (ref null $java$lang$Object))
        (local $phi25 (ref null $java$lang$Object))
        (local $phi26 i32)
        (local $var27 (ref null $java$lang$Object))
        (local $var28 (ref null $java$lang$Object))
        (local $phi29 (ref null $java$lang$Object))
        (local $var30 i32)
        (local $phi31 (ref null $java$lang$Object))
        (local $var32 (ref null $java$lang$Object))
        (local $var33 (ref null $java$lang$Object))
        (local $phi34 (ref null $java$lang$Object))
        (local $phi35 (ref null $java$lang$Object))
        (local $phi36 f32)
        (local $var37 (ref null $java$lang$Object))
        (local $phi38 (ref null $java$lang$Object))
        (local $var39 (ref null $java$lang$Object))
        (local $phi40 (ref null $java$lang$Object))
        (local $phi41 (ref null $java$lang$Object))
        (local $var42 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (struct.get $java$nio$charset$CharsetEncoder $cachedDecoder (ref.cast (ref null $java$nio$charset$CharsetEncoder) (local.get $var0))))
        ;; startBlock type=NORMAL, label = If_9_0
        (block $If_9_0
            ;; startBlock type=NORMAL, label = If_9_1
            (block $If_9_1
                ;; writeIfAndStartTrueBlock
                (if $if0 (ref.is_null (local.get $var1))
                    (then
                        (local.set $phi3 (local.get $var0))
                        (local.set $phi4 (local.get $arg0))
                        (local.set $phi5 (local.get $var1))
                        (local.set $phi6 (ref.null none))
                        (br $If_9_1)
                        ;; Start else
                        )(else
                        (local.set $var2 (ref.cast (ref null $java$lang$Object) (call_indirect (type $t553) (local.get $var1) (call_ref $t0 (i32.const 13) (struct.get $java$lang$Object $vt_resolver (local.get $var1))))))
                        ;; writeIfAndStartTrueBlock
                        (if $if1 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var2)))
                            (then
                                (struct.set $java$nio$charset$CharsetDecoder $state (ref.cast (ref null $java$nio$charset$CharsetDecoder) (local.get $var2)) (i32.const 0))
                                (local.set $phi35 (local.get $var2))
                                (local.set $var27 (local.get $phi35))
                                (local.set $phi3 (local.get $var0))
                                (local.set $phi4 (local.get $arg0))
                                (local.set $phi5 (local.get $var1))
                                (local.set $phi15 (local.get $var2))
                                (br $If_9_0)
                                ;; Start else
                                )(else
                                (local.set $phi3 (local.get $var0))
                                (local.set $phi4 (local.get $arg0))
                                (local.set $phi5 (local.get $var1))
                                (local.set $phi6 (local.get $var2))
                                (br $If_9_1)
                                ))
                        ;; finishIfBlock
                        ))
                ;; finishIfBlock
                )
            ;; finishBlock
            (local.set $phi41 (struct.get $java$nio$charset$CharsetEncoder $charset (ref.cast (ref null $java$nio$charset$CharsetEncoder) (local.get $phi3))))
            (local.set $var7 (local.get $phi41))
            (local.set $var8 (call_indirect (type $t553) (local.get $var7) (call_ref $t0 (i32.const 132) (struct.get $java$lang$Object $vt_resolver (local.get $var7)))))
            (drop (call $java$nio$charset$CodingErrorAction_i))
            (local.set $var9 (struct.get $java$nio$charset$CodingErrorAction_rtt $REPORT (global.get $java$nio$charset$CodingErrorAction_cls)))
            ;; writeIfAndStartTrueBlock
            (if $if2 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var9)))
                (then
                    (struct.set $java$nio$charset$CharsetDecoder $malformedInputAction (ref.cast (ref null $java$nio$charset$CharsetDecoder) (local.get $var8)) (ref.cast (ref null $java$lang$Object) (local.get $var9)))
                    (local.set $phi40 (local.get $var8))
                    (local.set $var10 (local.get $phi40))
                    (drop (call $java$nio$charset$CodingErrorAction_i))
                    (local.set $var11 (struct.get $java$nio$charset$CodingErrorAction_rtt $REPORT (global.get $java$nio$charset$CodingErrorAction_cls)))
                    ;; writeIfAndStartTrueBlock
                    (if $if3 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var11)))
                        (then
                            (struct.set $java$nio$charset$CharsetDecoder $unmappableCharacterAction (ref.cast (ref null $java$nio$charset$CharsetDecoder) (local.get $var8)) (ref.cast (ref null $java$lang$Object) (local.get $var11)))
                            (local.set $phi38 (local.get $var8))
                            (local.set $var12 (local.get $phi38))
                            (local.set $var13 (local.get $phi3))
                            (local.set $var14 (struct.new $java$lang$ref$WeakReference (struct.get $java$lang$ref$WeakReference_rtt $factoryFor (global.get $java$lang$ref$WeakReference_cls)) (ref.func $java$lang$ref$WeakReference_vt) (ref.null noextern) (struct.get $java$lang$ref$WeakReference_rtt $classImplTypes (global.get $java$lang$ref$WeakReference_cls)) (ref.null none)))
                            (struct.set $de$mirkosertic$bytecoder$classlib$java$lang$ref$TReference $referent (ref.cast (ref null $de$mirkosertic$bytecoder$classlib$java$lang$ref$TReference) (local.get $var14)) (ref.cast (ref null $java$lang$Object) (local.get $var8)))
                            (struct.set $java$nio$charset$CharsetEncoder $cachedDecoder (ref.cast (ref null $java$nio$charset$CharsetEncoder) (local.get $var13)) (ref.cast (ref null $java$lang$Object) (local.get $var14)))
                            ;; Here was a goto statement
                            (local.set $phi15 (local.get $var8))
                            (br $If_9_0)
                            ;; Start else
                            )(else
                            (local.set $var37 (struct.new $java$lang$IllegalArgumentException (struct.get $java$lang$IllegalArgumentException_rtt $factoryFor (global.get $java$lang$IllegalArgumentException_cls)) (ref.func $java$lang$IllegalArgumentException_vt) (ref.null noextern) (struct.get $java$lang$IllegalArgumentException_rtt $classImplTypes (global.get $java$lang$IllegalArgumentException_cls)) (ref.null none) (ref.null none)))
                            (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var37)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_19)))
                            (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var37)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                            (throw $javaexception (local.get $var37))
                            ))
                    ;; finishIfBlock
                    ;; Start else
                    )(else
                    (local.set $var39 (struct.new $java$lang$IllegalArgumentException (struct.get $java$lang$IllegalArgumentException_rtt $factoryFor (global.get $java$lang$IllegalArgumentException_cls)) (ref.func $java$lang$IllegalArgumentException_vt) (ref.null noextern) (struct.get $java$lang$IllegalArgumentException_rtt $classImplTypes (global.get $java$lang$IllegalArgumentException_cls)) (ref.null none) (ref.null none)))
                    (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var39)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_19)))
                    (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var39)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                    (throw $javaexception (local.get $var39))
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (local.set $var16 (local.get $phi4))
        (drop (call $java$nio$ByteBuffer_i))
        (local.set $var30 (array.len $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $var16)))))
        (drop (call $java$nio$ByteBuffer_i))
        ;; startBlock type=NORMAL, label = TryCatch_138_0
        (block $TryCatch_138_0
            ;; startTryCatch
            (try $trycatch_0 (do
                    (drop (call $java$nio$HeapByteBuffer_i))
                    (local.set $var33 (struct.new $java$nio$HeapByteBuffer (struct.get $java$nio$HeapByteBuffer_rtt $factoryFor (global.get $java$nio$HeapByteBuffer_cls)) (ref.func $java$nio$HeapByteBuffer_vt) (ref.null noextern) (struct.get $java$nio$HeapByteBuffer_rtt $classImplTypes (global.get $java$nio$HeapByteBuffer_cls)) (i32.const 0) (i32.const 0) (i32.const 0) (ref.null none) (i32.const 0) (i64.const 0) (i32.const 0) (i32.const 0) (ref.null none) (i32.const 0)))
                    (call $java$nio$ByteBuffer$V$$init$$I$I$I$I$$B$I$Ljava$lang$foreign$MemorySegment$ (local.get $var33) (i32.const -1) (i32.const 0) (i32.add (i32.const 0) (local.get $var30)) (array.len $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $var16)))) (local.get $var16) (i32.const 0) (ref.null none))
                    (drop (call $java$nio$HeapByteBuffer_i))
                    (struct.set $java$nio$Buffer $address (ref.cast (ref null $java$nio$Buffer) (local.get $var33)) (struct.get $java$nio$HeapByteBuffer_rtt $ARRAY_BASE_OFFSET (global.get $java$nio$HeapByteBuffer_cls)))
                    (br $TryCatch_138_0)
                    )
                (catch $javaexception
                    ;; startCatchBlock
                    (global.set $lastcaughtexception (pop (ref null $java$lang$Object)))
                    (if $catchcheck_0 (call $instanceOf (global.get $lastcaughtexception) (struct.get $java$lang$IllegalArgumentException_rtt $factoryFor (global.get $java$lang$IllegalArgumentException_cls)))
                        (then
                            (local.set $var32 (struct.new $java$lang$IndexOutOfBoundsException (struct.get $java$lang$IndexOutOfBoundsException_rtt $factoryFor (global.get $java$lang$IndexOutOfBoundsException_cls)) (ref.func $java$lang$IndexOutOfBoundsException_vt) (ref.null noextern) (struct.get $java$lang$IndexOutOfBoundsException_rtt $classImplTypes (global.get $java$lang$IndexOutOfBoundsException_cls)) (ref.null none) (ref.null none)))
                            (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var32)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                            (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var32)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                            (throw $javaexception (local.get $var32))
                            ))
                    (rethrow $trycatch_0)
                    )
                )
            ;; finishTryCatch
            )
        ;; finishBlock
        (local.set $phi34 (local.get $var33))
        (local.set $phi31 (local.get $phi34))
        (local.set $var17 (local.get $phi31))
        (local.set $var18 (f32.convert_i32_s (call_indirect (type $t555) (local.get $var17) (call_ref $t0 (i32.const 18) (struct.get $java$lang$Object $vt_resolver (local.get $var17))))))
        (local.set $phi36 (struct.get $java$nio$charset$CharsetDecoder $maxCharsPerByte (ref.cast (ref null $java$nio$charset$CharsetDecoder) (local.get $phi15))))
        (local.set $var19 (i32.trunc_f32_s (f32.mul (local.get $var18) (local.get $phi36))))
        (drop (call $java$nio$CharBuffer_i))
        ;; writeIfAndStartTrueBlock
        (if $if4 (i32.ge_s (local.get $var19) (i32.const 0))
            (then
                (drop (call $java$nio$HeapCharBuffer_i))
                (local.set $var28 (struct.new $java$nio$HeapCharBuffer (struct.get $java$nio$HeapCharBuffer_rtt $factoryFor (global.get $java$nio$HeapCharBuffer_cls)) (ref.func $java$nio$HeapCharBuffer_vt) (ref.null noextern) (struct.get $java$nio$HeapCharBuffer_rtt $classImplTypes (global.get $java$nio$HeapCharBuffer_cls)) (i32.const 0) (i32.const 0) (i32.const 0) (ref.null none) (i32.const 0) (i64.const 0) (ref.null none) (i32.const 0)))
                (local.set $var42 (struct.new $i32_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t7 (local.get $var19))))
                (call $java$nio$Buffer$V$$init$$I$I$I$I$Ljava$lang$foreign$MemorySegment$ (local.get $var28) (i32.const -1) (i32.const 0) (local.get $var19) (local.get $var19) (ref.null none))
                (struct.set $java$nio$CharBuffer $hb (ref.cast (ref null $java$nio$CharBuffer) (local.get $var28)) (ref.cast (ref null $java$lang$Object) (local.get $var42)))
                (struct.set $java$nio$CharBuffer $offset (ref.cast (ref null $java$nio$CharBuffer) (local.get $var28)) (i32.const 0))
                (drop (call $java$nio$HeapCharBuffer_i))
                (struct.set $java$nio$Buffer $address (ref.cast (ref null $java$nio$Buffer) (local.get $var28)) (struct.get $java$nio$HeapCharBuffer_rtt $ARRAY_BASE_OFFSET (global.get $java$nio$HeapCharBuffer_cls)))
                (local.set $phi29 (local.get $var28))
                (local.set $var20 (local.get $phi29))
                (local.set $var21 (local.get $phi15))
                (local.set $var22 (call $java$nio$charset$CharsetDecoder$Ljava$nio$charset$CoderResult$$decode$Ljava$nio$ByteBuffer$$Ljava$nio$CharBuffer$$Z (local.get $var21) (local.get $var17) (local.get $var20) (i32.const 1)))
                ;; startBlock type=NORMAL, label = If_74_0
                (block $If_74_0
                    ;; writeIfAndStartTrueBlock
                    (if $if5 (i32.ne (call $java$nio$charset$CoderResult$Z$isError$$ (local.get $var22)) (i32.const 0))
                        (then
                            (local.set $phi23 (local.get $var17))
                            (local.set $phi24 (local.get $var20))
                            (local.set $phi25 (local.get $var22))
                            (local.set $phi26 (i32.const 0))
                            (br $If_74_0)
                            ;; Start else
                            )(else
                            ;; Here was a goto statement
                            (local.set $phi23 (local.get $var17))
                            (local.set $phi24 (local.get $var20))
                            (local.set $phi25 (local.get $var22))
                            (local.set $phi26 (i32.const 1))
                            (br $If_74_0)
                            ))
                    ;; finishIfBlock
                    )
                ;; finishBlock
                (return (local.get $phi26))
                ;; Start else
                )(else
                (drop (call $java$nio$CharBuffer_i))
                (throw $javaexception (call $java$nio$Buffer$Ljava$lang$IllegalArgumentException$$createCapacityException$I (call $java$nio$CharBuffer_i) (local.get $var19)))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$nio$charset$CharsetEncoder$Ljava$nio$charset$Charset$$charset$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (return (struct.get $java$nio$charset$CharsetEncoder $charset (ref.cast (ref null $java$nio$charset$CharsetEncoder) (local.get $thisref))))
        (unreachable))
    (func $java$nio$charset$CharsetEncoder$Ljava$nio$charset$CharsetEncoder$$onMalformedInput$Ljava$nio$charset$CodingErrorAction$ (type $t559) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg0)))
            (then
                (struct.set $java$nio$charset$CharsetEncoder $malformedInputAction (ref.cast (ref null $java$nio$charset$CharsetEncoder) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
                (return (local.get $var0))
                ;; Start else
                )(else
                (local.set $var1 (struct.new $java$lang$IllegalArgumentException (struct.get $java$lang$IllegalArgumentException_rtt $factoryFor (global.get $java$lang$IllegalArgumentException_cls)) (ref.func $java$lang$IllegalArgumentException_vt) (ref.null noextern) (struct.get $java$lang$IllegalArgumentException_rtt $classImplTypes (global.get $java$lang$IllegalArgumentException_cls)) (ref.null none) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_19)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var1))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$nio$charset$CharsetEncoder$V$implOnMalformedInput$Ljava$nio$charset$CodingErrorAction$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$nio$charset$CharsetEncoder$Ljava$nio$charset$CharsetEncoder$$onUnmappableCharacter$Ljava$nio$charset$CodingErrorAction$ (type $t559) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg0)))
            (then
                (struct.set $java$nio$charset$CharsetEncoder $unmappableCharacterAction (ref.cast (ref null $java$nio$charset$CharsetEncoder) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
                (return (local.get $var0))
                ;; Start else
                )(else
                (local.set $var1 (struct.new $java$lang$IllegalArgumentException (struct.get $java$lang$IllegalArgumentException_rtt $factoryFor (global.get $java$lang$IllegalArgumentException_cls)) (ref.func $java$lang$IllegalArgumentException_vt) (ref.null noextern) (struct.get $java$lang$IllegalArgumentException_rtt $classImplTypes (global.get $java$lang$IllegalArgumentException_cls)) (ref.null none) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_19)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var1))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$nio$charset$CharsetEncoder$V$implOnUnmappableCharacter$Ljava$nio$charset$CodingErrorAction$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$nio$charset$CharsetEncoder$V$implReplaceWith$$B (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $de$mirkosertic$bytecoder$classlib$java$lang$TMath$V$$clinit$$$ (type $t541) (param $unused (ref null $java$lang$Object))
        (local $phi0 i32)
        ;; startBlock type=NORMAL, label = If_4_0
        (block $If_4_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ne (call $java$lang$Class$Z$desiredAssertionStatus$$ (call $de$mirkosertic$bytecoder$classlib$java$lang$TMath_i)) (i32.const 0))
                (then
                    (local.set $phi0 (i32.const 0))
                    (br $If_4_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi0 (i32.const 1))
                    (br $If_4_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (drop (call $de$mirkosertic$bytecoder$classlib$java$lang$TMath_i))
        (struct.set $de$mirkosertic$bytecoder$classlib$java$lang$TMath_rtt $$assertionsDisabled (ref.cast (ref null $de$mirkosertic$bytecoder$classlib$java$lang$TMath_rtt) (call $de$mirkosertic$bytecoder$classlib$java$lang$TMath_i)) (local.get $phi0))
        (return)
        (unreachable))
    (func $de$mirkosertic$bytecoder$classlib$java$lang$TMath$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$lang$ThreadGroup$V$$clinit$$$ (type $t541) (param $unused (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (drop (call $java$lang$ThreadGroup_i))
        (local.set $var0 (struct.new $java$lang$ThreadGroup (struct.get $java$lang$ThreadGroup_rtt $factoryFor (global.get $java$lang$ThreadGroup_cls)) (ref.func $java$lang$ThreadGroup_vt) (ref.null noextern) (struct.get $java$lang$ThreadGroup_rtt $classImplTypes (global.get $java$lang$ThreadGroup_cls)) (ref.null none) (ref.null none)))
        (struct.set $java$lang$ThreadGroup $name (ref.cast (ref null $java$lang$ThreadGroup) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_67)))
        (struct.set $java$lang$ThreadGroup $parent (ref.cast (ref null $java$lang$ThreadGroup) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (drop (call $java$lang$ThreadGroup_i))
        (struct.set $java$lang$ThreadGroup_rtt $SYSTEM (ref.cast (ref null $java$lang$ThreadGroup_rtt) (call $java$lang$ThreadGroup_i)) (ref.cast (ref null $java$lang$Object) (local.get $var0)))
        (return)
        (unreachable))
    (func $java$lang$ThreadGroup$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$ThreadGroup $name (ref.cast (ref null $java$lang$ThreadGroup) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_67)))
        (struct.set $java$lang$ThreadGroup $parent (ref.cast (ref null $java$lang$ThreadGroup) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return)
        (unreachable))
    (func $java$lang$ThreadGroup$V$$init$$Ljava$lang$ThreadGroup$$Ljava$lang$String$ (type $t560) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$ThreadGroup $name (ref.cast (ref null $java$lang$ThreadGroup) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg1)))
        (struct.set $java$lang$ThreadGroup $parent (ref.cast (ref null $java$lang$ThreadGroup) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (return)
        (unreachable))
    (func $java$util$ImmutableCollections$V$$clinit$$$ (type $t541) (param $unused (ref null $java$lang$Object))
        (local $phi0 i32)
        (local $var1 i64)
        (local $var2 i64)
        (local $phi3 i64)
        (local $phi4 i64)
        (local $var5 i64)
        (local $phi6 i32)
        (local $var7 (ref null $java$lang$Object))
        (local $var8 (ref null $java$lang$Object))
        (local $var9 (ref null $java$lang$Object))
        (local $var10 (ref null $java$lang$Object))
        (local $var11 (ref null $java$lang$Object))
        (local $var12 (ref null $java$lang$Object))
        (local $var13 (ref null $java$lang$Object))
        (local $var14 (ref null $java$lang$Object))
        (local $var15 (ref null $java$lang$Object))
        (local $var16 (ref null $java$lang$Object))
        (local $var17 (ref null $java$lang$Object))
        (local $phi18 i64)
        ;; startBlock type=NORMAL, label = If_4_0
        (block $If_4_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ne (call $java$lang$Class$Z$desiredAssertionStatus$$ (call $java$util$ImmutableCollections_i)) (i32.const 0))
                (then
                    (local.set $phi0 (i32.const 0))
                    (br $If_4_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi0 (i32.const 1))
                    (br $If_4_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (drop (call $java$util$ImmutableCollections_i))
        (struct.set $java$util$ImmutableCollections_rtt $$assertionsDisabled (ref.cast (ref null $java$util$ImmutableCollections_rtt) (call $java$util$ImmutableCollections_i)) (local.get $phi0))
        (drop (call $jdk$internal$misc$CDS_i))
        (local.set $var1 (call $jdk$internal$misc$CDS$J$getRandomSeedForDumping$$ (call $jdk$internal$misc$CDS_i)))
        ;; startBlock type=NORMAL, label = If_21_0
        (block $If_21_0
            ;; writeIfAndStartTrueBlock
            (if $if1 (i32.ne (call $compare_i64 (local.get $var1) (i64.const 0)) (i32.const 0))
                (then
                    (local.set $phi3 (i64.const 2611923443488327891))
                    (local.set $phi4 (local.get $var1))
                    (br $If_21_0)
                    ;; Start else
                    )(else
                    (drop (call $java$lang$System_i))
                    (drop (call $java$lang$System_i))
                    (local.set $phi18 (i64.mul (call $java$lang$System$J$currentTimeMillis$$ (call $java$lang$System_i)) (i64.const 1000000)))
                    (local.set $var2 (local.get $phi18))
                    (local.set $phi3 (i64.const 2611923443488327891))
                    (local.set $phi4 (local.get $var2))
                    (br $If_21_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (local.set $var5 (i64.and (i64.extend_i32_s (i32.wrap_i64 (i64.shr_s (i64.mul (local.get $phi3) (local.get $phi4)) (i64.extend_i32_s (i32.const 16))))) (i64.const 4294967295)))
        (drop (call $java$util$ImmutableCollections_i))
        (struct.set $java$util$ImmutableCollections_rtt $SALT32L (ref.cast (ref null $java$util$ImmutableCollections_rtt) (call $java$util$ImmutableCollections_i)) (local.get $var5))
        (drop (call $java$util$ImmutableCollections_i))
        ;; startBlock type=NORMAL, label = If_48_0
        (block $If_48_0
            ;; writeIfAndStartTrueBlock
            (if $if2 (i32.ne (call $compare_i64 (i64.and (struct.get $java$util$ImmutableCollections_rtt $SALT32L (global.get $java$util$ImmutableCollections_cls)) (i64.const 1)) (i64.const 0)) (i32.const 0))
                (then
                    (local.set $phi6 (i32.const 0))
                    (br $If_48_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi6 (i32.const 1))
                    (br $If_48_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (drop (call $java$util$ImmutableCollections_i))
        (struct.set $java$util$ImmutableCollections_rtt $REVERSE (ref.cast (ref null $java$util$ImmutableCollections_rtt) (call $java$util$ImmutableCollections_i)) (local.get $phi6))
        (drop (call $jdk$internal$misc$CDS_i))
        (call $jdk$internal$misc$CDS$V$initializeFromArchive$Ljava$lang$Class$ (call $jdk$internal$misc$CDS_i) (call $java$util$ImmutableCollections_i))
        (drop (call $java$util$ImmutableCollections_i))
        ;; startBlock type=NORMAL, label = If_62_0
        (block $If_62_0
            ;; writeIfAndStartTrueBlock
            (if $if3 (select (i32.const 0) (i32.const 1) (ref.is_null (struct.get $java$util$ImmutableCollections_rtt $archivedObjects (global.get $java$util$ImmutableCollections_cls))))
                (then
                    (drop (call $java$util$ImmutableCollections_i))
                    (local.set $var13 (array.get $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (struct.get $java$util$ImmutableCollections_rtt $archivedObjects (global.get $java$util$ImmutableCollections_cls)))) (i32.const 0)))
                    (drop (call $java$util$ImmutableCollections_i))
                    (struct.set $java$util$ImmutableCollections_rtt $EMPTY (ref.cast (ref null $java$util$ImmutableCollections_rtt) (call $java$util$ImmutableCollections_i)) (ref.cast (ref null $java$lang$Object) (local.get $var13)))
                    (drop (call $java$util$ImmutableCollections_i))
                    (local.set $var14 (ref.cast (ref null $java$lang$Object) (array.get $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (struct.get $java$util$ImmutableCollections_rtt $archivedObjects (global.get $java$util$ImmutableCollections_cls)))) (i32.const 1))))
                    (drop (call $java$util$ImmutableCollections_i))
                    (struct.set $java$util$ImmutableCollections_rtt $EMPTY_LIST (ref.cast (ref null $java$util$ImmutableCollections_rtt) (call $java$util$ImmutableCollections_i)) (ref.cast (ref null $java$lang$Object) (local.get $var14)))
                    (drop (call $java$util$ImmutableCollections_i))
                    (local.set $var15 (ref.cast (ref null $java$lang$Object) (array.get $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (struct.get $java$util$ImmutableCollections_rtt $archivedObjects (global.get $java$util$ImmutableCollections_cls)))) (i32.const 2))))
                    (drop (call $java$util$ImmutableCollections_i))
                    (struct.set $java$util$ImmutableCollections_rtt $EMPTY_LIST_NULLS (ref.cast (ref null $java$util$ImmutableCollections_rtt) (call $java$util$ImmutableCollections_i)) (ref.cast (ref null $java$lang$Object) (local.get $var15)))
                    (drop (call $java$util$ImmutableCollections_i))
                    (local.set $var16 (ref.cast (ref null $java$lang$Object) (array.get $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (struct.get $java$util$ImmutableCollections_rtt $archivedObjects (global.get $java$util$ImmutableCollections_cls)))) (i32.const 3))))
                    (drop (call $java$util$ImmutableCollections_i))
                    (struct.set $java$util$ImmutableCollections_rtt $EMPTY_SET (ref.cast (ref null $java$util$ImmutableCollections_rtt) (call $java$util$ImmutableCollections_i)) (ref.cast (ref null $java$lang$Object) (local.get $var16)))
                    (drop (call $java$util$ImmutableCollections_i))
                    (local.set $var17 (ref.cast (ref null $java$lang$Object) (array.get $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (struct.get $java$util$ImmutableCollections_rtt $archivedObjects (global.get $java$util$ImmutableCollections_cls)))) (i32.const 4))))
                    (drop (call $java$util$ImmutableCollections_i))
                    (struct.set $java$util$ImmutableCollections_rtt $EMPTY_MAP (ref.cast (ref null $java$util$ImmutableCollections_rtt) (call $java$util$ImmutableCollections_i)) (ref.cast (ref null $java$lang$Object) (local.get $var17)))
                    (br $If_62_0)
                    ;; Start else
                    )(else
                    (local.set $var7 (struct.new $java$lang$Object (struct.get $java$lang$Object_rtt $factoryFor (global.get $java$lang$Object_cls)) (ref.func $java$lang$Object_vt) (ref.null noextern) (struct.get $java$lang$Object_rtt $classImplTypes (global.get $java$lang$Object_cls))))
                    (drop (call $java$util$ImmutableCollections_i))
                    (struct.set $java$util$ImmutableCollections_rtt $EMPTY (ref.cast (ref null $java$util$ImmutableCollections_rtt) (call $java$util$ImmutableCollections_i)) (ref.cast (ref null $java$lang$Object) (local.get $var7)))
                    (local.set $var8 (struct.new $java$util$ImmutableCollections$ListN (struct.get $java$util$ImmutableCollections$ListN_rtt $factoryFor (global.get $java$util$ImmutableCollections$ListN_cls)) (ref.func $java$util$ImmutableCollections$ListN_vt) (ref.null noextern) (struct.get $java$util$ImmutableCollections$ListN_rtt $classImplTypes (global.get $java$util$ImmutableCollections$ListN_cls)) (ref.null none) (i32.const 0)))
                    (struct.set $java$util$ImmutableCollections$ListN $elements (ref.cast (ref null $java$util$ImmutableCollections$ListN) (local.get $var8)) (ref.cast (ref null $java$lang$Object) (struct.new $obj_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t549 (i32.const 0)))))
                    (struct.set $java$util$ImmutableCollections$ListN $allowNulls (ref.cast (ref null $java$util$ImmutableCollections$ListN) (local.get $var8)) (i32.const 0))
                    (drop (call $java$util$ImmutableCollections_i))
                    (struct.set $java$util$ImmutableCollections_rtt $EMPTY_LIST (ref.cast (ref null $java$util$ImmutableCollections_rtt) (call $java$util$ImmutableCollections_i)) (ref.cast (ref null $java$lang$Object) (local.get $var8)))
                    (local.set $var9 (struct.new $java$util$ImmutableCollections$ListN (struct.get $java$util$ImmutableCollections$ListN_rtt $factoryFor (global.get $java$util$ImmutableCollections$ListN_cls)) (ref.func $java$util$ImmutableCollections$ListN_vt) (ref.null noextern) (struct.get $java$util$ImmutableCollections$ListN_rtt $classImplTypes (global.get $java$util$ImmutableCollections$ListN_cls)) (ref.null none) (i32.const 0)))
                    (struct.set $java$util$ImmutableCollections$ListN $elements (ref.cast (ref null $java$util$ImmutableCollections$ListN) (local.get $var9)) (ref.cast (ref null $java$lang$Object) (struct.new $obj_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t549 (i32.const 0)))))
                    (struct.set $java$util$ImmutableCollections$ListN $allowNulls (ref.cast (ref null $java$util$ImmutableCollections$ListN) (local.get $var9)) (i32.const 1))
                    (drop (call $java$util$ImmutableCollections_i))
                    (struct.set $java$util$ImmutableCollections_rtt $EMPTY_LIST_NULLS (ref.cast (ref null $java$util$ImmutableCollections_rtt) (call $java$util$ImmutableCollections_i)) (ref.cast (ref null $java$lang$Object) (local.get $var9)))
                    (local.set $var10 (struct.new $java$util$ImmutableCollections$SetN (struct.get $java$util$ImmutableCollections$SetN_rtt $factoryFor (global.get $java$util$ImmutableCollections$SetN_cls)) (ref.func $java$util$ImmutableCollections$SetN_vt) (ref.null noextern) (struct.get $java$util$ImmutableCollections$SetN_rtt $classImplTypes (global.get $java$util$ImmutableCollections$SetN_cls)) (i32.const 0) (ref.null none)))
                    (call $java$util$ImmutableCollections$SetN$V$$init$$$Ljava$lang$Object$ (local.get $var10) (struct.new $obj_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t549 (i32.const 0))))
                    (drop (call $java$util$ImmutableCollections_i))
                    (struct.set $java$util$ImmutableCollections_rtt $EMPTY_SET (ref.cast (ref null $java$util$ImmutableCollections_rtt) (call $java$util$ImmutableCollections_i)) (ref.cast (ref null $java$lang$Object) (local.get $var10)))
                    (local.set $var11 (struct.new $java$util$ImmutableCollections$MapN (struct.get $java$util$ImmutableCollections$MapN_rtt $factoryFor (global.get $java$util$ImmutableCollections$MapN_cls)) (ref.func $java$util$ImmutableCollections$MapN_vt) (ref.null noextern) (struct.get $java$util$ImmutableCollections$MapN_rtt $classImplTypes (global.get $java$util$ImmutableCollections$MapN_cls)) (i32.const 0) (ref.null none)))
                    (call $java$util$ImmutableCollections$MapN$V$$init$$$Ljava$lang$Object$ (local.get $var11) (struct.new $obj_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t549 (i32.const 0))))
                    (drop (call $java$util$ImmutableCollections_i))
                    (struct.set $java$util$ImmutableCollections_rtt $EMPTY_MAP (ref.cast (ref null $java$util$ImmutableCollections_rtt) (call $java$util$ImmutableCollections_i)) (ref.cast (ref null $java$lang$Object) (local.get $var11)))
                    (local.set $var12 (struct.new $obj_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t549 (i32.const 5))))
                    (drop (call $java$util$ImmutableCollections_i))
                    (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var12))) (i32.const 0) (struct.get $java$util$ImmutableCollections_rtt $EMPTY (global.get $java$util$ImmutableCollections_cls)))
                    (drop (call $java$util$ImmutableCollections_i))
                    (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var12))) (i32.const 1) (struct.get $java$util$ImmutableCollections_rtt $EMPTY_LIST (global.get $java$util$ImmutableCollections_cls)))
                    (drop (call $java$util$ImmutableCollections_i))
                    (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var12))) (i32.const 2) (struct.get $java$util$ImmutableCollections_rtt $EMPTY_LIST_NULLS (global.get $java$util$ImmutableCollections_cls)))
                    (drop (call $java$util$ImmutableCollections_i))
                    (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var12))) (i32.const 3) (struct.get $java$util$ImmutableCollections_rtt $EMPTY_SET (global.get $java$util$ImmutableCollections_cls)))
                    (drop (call $java$util$ImmutableCollections_i))
                    (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var12))) (i32.const 4) (struct.get $java$util$ImmutableCollections_rtt $EMPTY_MAP (global.get $java$util$ImmutableCollections_cls)))
                    (drop (call $java$util$ImmutableCollections_i))
                    (struct.set $java$util$ImmutableCollections_rtt $archivedObjects (ref.cast (ref null $java$util$ImmutableCollections_rtt) (call $java$util$ImmutableCollections_i)) (ref.cast (ref null $java$lang$Object) (local.get $var12)))
                    ;; Here was a goto statement
                    (br $If_62_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return)
        (unreachable))
    (func $java$util$ImmutableCollections$Ljava$util$List$$listFromArray$$Ljava$lang$Object$ (type $t559) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $phi0 (ref null $java$lang$Object))
        (local $phi1 i32)
        (local $var2 (ref null $java$lang$Object))
        (local $var3 i32)
        (local $var4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $var6 (ref null $java$lang$Object))
        (local $phi7 (ref null $java$lang$Object))
        (local.set $phi0 (struct.new $obj_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t549 (array.len $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $arg0)))))))
        (local.set $phi1 (i32.const 0))
        ;; startBlock type=LOOP, label = L1418287374
        (loop $L1418287374
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ge_s (local.get $phi1) (array.len $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $arg0)))))
                (then
                    (local.set $var5 (struct.new $java$util$ImmutableCollections$ListN (struct.get $java$util$ImmutableCollections$ListN_rtt $factoryFor (global.get $java$util$ImmutableCollections$ListN_cls)) (ref.func $java$util$ImmutableCollections$ListN_vt) (ref.null noextern) (struct.get $java$util$ImmutableCollections$ListN_rtt $classImplTypes (global.get $java$util$ImmutableCollections$ListN_cls)) (ref.null none) (i32.const 0)))
                    (struct.set $java$util$ImmutableCollections$ListN $elements (ref.cast (ref null $java$util$ImmutableCollections$ListN) (local.get $var5)) (ref.cast (ref null $java$lang$Object) (local.get $phi0)))
                    (struct.set $java$util$ImmutableCollections$ListN $allowNulls (ref.cast (ref null $java$util$ImmutableCollections$ListN) (local.get $var5)) (i32.const 0))
                    (return (local.get $var5))
                    ;; Start else
                    )(else
                    (local.set $var2 (local.get $phi0))
                    (local.set $var3 (local.get $phi1))
                    (local.set $var4 (array.get $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $arg0))) (local.get $phi1)))
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var4)))
                        (then
                            (local.set $phi7 (local.get $var4))
                            (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var2))) (local.get $var3) (local.get $phi7))
                            (local.set $phi1 (i32.add (local.get $phi1) (i32.const 1)))
                            ;; Here was a goto statement
                            (br $L1418287374)
                            ;; Start else
                            )(else
                            (local.set $var6 (struct.new $java$lang$NullPointerException (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)) (ref.func $java$lang$NullPointerException_vt) (ref.null noextern) (struct.get $java$lang$NullPointerException_rtt $classImplTypes (global.get $java$lang$NullPointerException_cls)) (ref.null none) (ref.null none) (i32.const 0) (ref.null none)))
                            (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var6)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                            (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var6)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                            (throw $javaexception (local.get $var6))
                            ))
                    ;; finishIfBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (unreachable))
    (func $java$util$ImmutableCollections$Ljava$lang$UnsupportedOperationException$$uoe$$ (type $t553) (param $unused (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (struct.new $java$lang$UnsupportedOperationException (struct.get $java$lang$UnsupportedOperationException_rtt $factoryFor (global.get $java$lang$UnsupportedOperationException_cls)) (ref.func $java$lang$UnsupportedOperationException_vt) (ref.null noextern) (struct.get $java$lang$UnsupportedOperationException_rtt $classImplTypes (global.get $java$lang$UnsupportedOperationException_cls)) (ref.null none) (ref.null none)))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return (local.get $var0))
        (unreachable))
    (func $java$util$ImmutableCollections$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$lang$System$V$$clinit$$$ (type $t541) (param $unused (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $var6 (ref null $java$lang$Object))
        (local $var7 (ref null $java$lang$Object))
        (local $var8 (ref null $java$lang$Object))
        (local $var9 (ref null $java$lang$Object))
        (local $var10 (ref null $java$lang$Object))
        (local $phi11 (ref null $java$lang$Object))
        (local $phi12 (ref null $java$lang$Object))
        (local $var13 (ref null $java$lang$Object))
        (local $phi14 (ref null $java$lang$Object))
        (local $var15 (ref null $java$lang$Object))
        (local $var16 (ref null $java$lang$Object))
        (drop (call $java$util$Properties_i))
        (local.set $var0 (struct.new $java$util$Properties (struct.get $java$util$Properties_rtt $factoryFor (global.get $java$util$Properties_cls)) (ref.func $java$util$Properties_vt) (ref.null noextern) (struct.get $java$util$Properties_rtt $classImplTypes (global.get $java$util$Properties_cls)) (i32.const 0) (ref.null none) (ref.null none)))
        (struct.set $java$util$Hashtable $modCount (ref.cast (ref null $java$util$Hashtable) (local.get $var0)) (i32.const 0))
        (local.set $var15 (struct.new $java$util$concurrent$ConcurrentHashMap (struct.get $java$util$concurrent$ConcurrentHashMap_rtt $factoryFor (global.get $java$util$concurrent$ConcurrentHashMap_cls)) (ref.func $java$util$concurrent$ConcurrentHashMap_vt) (ref.null noextern) (struct.get $java$util$concurrent$ConcurrentHashMap_rtt $classImplTypes (global.get $java$util$concurrent$ConcurrentHashMap_cls)) (ref.null none)))
        (local.set $var16 (struct.new $java$util$HashMap (struct.get $java$util$HashMap_rtt $factoryFor (global.get $java$util$HashMap_cls)) (ref.func $java$util$HashMap_vt) (ref.null noextern) (struct.get $java$util$HashMap_rtt $classImplTypes (global.get $java$util$HashMap_cls)) (f32.const 0.0) (i32.const 0) (i32.const 0) (ref.null none) (i32.const 0) (ref.null none)))
        (call $java$util$HashMap$V$$init$$I$F (local.get $var16) (i32.const 8) (f32.const 0.75))
        (struct.set $java$util$concurrent$ConcurrentHashMap $delegate (ref.cast (ref null $java$util$concurrent$ConcurrentHashMap) (local.get $var15)) (ref.cast (ref null $java$lang$Object) (local.get $var16)))
        (struct.set $java$util$Properties $map (ref.cast (ref null $java$util$Properties) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $var15)))
        (struct.set $java$util$Properties $defaults (ref.cast (ref null $java$util$Properties) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (drop (call $java$util$Properties_i))
        (drop (call $java$lang$System_i))
        (struct.set $java$lang$System_rtt $PROPERTIES (ref.cast (ref null $java$lang$System_rtt) (call $java$lang$System_i)) (ref.cast (ref null $java$lang$Object) (local.get $var0)))
        (drop (call $java$lang$System_i))
        (local.set $var13 (struct.get $java$util$concurrent$ConcurrentHashMap $delegate (ref.cast (ref null $java$util$concurrent$ConcurrentHashMap) (struct.get $java$util$Properties $map (ref.cast (ref null $java$util$Properties) (struct.get $java$lang$System_rtt $PROPERTIES (global.get $java$lang$System_cls)))))))
        (local.set $phi14 (call_indirect (type $t561) (local.get $var13) (global.get $stringpool_60) (global.get $stringpool_61) (call_ref $t0 (i32.const 101) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var13))))))
        (local.set $phi12 (local.get $phi14))
        (local.set $phi11 (local.get $phi12))
        (local.set $var1 (local.get $phi11))
        (local.set $var2 (struct.new $java$io$FileInputStream (struct.get $java$io$FileInputStream_rtt $factoryFor (global.get $java$io$FileInputStream_cls)) (ref.func $java$io$FileInputStream_vt) (ref.null noextern) (struct.get $java$io$FileInputStream_rtt $classImplTypes (global.get $java$io$FileInputStream_cls)) (ref.null none) (ref.null none)))
        (drop (call $java$io$FileDescriptor_i))
        (local.set $var9 (struct.get $java$io$FileDescriptor_rtt $in (global.get $java$io$FileDescriptor_cls)))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var9)))
            (then
                (struct.set $java$io$FileInputStream $fd (ref.cast (ref null $java$io$FileInputStream) (local.get $var2)) (ref.cast (ref null $java$lang$Object) (local.get $var9)))
                (struct.set $java$io$FileInputStream $path (ref.cast (ref null $java$io$FileInputStream) (local.get $var2)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (drop (call $java$lang$System_i))
                (struct.set $java$lang$System_rtt $in (ref.cast (ref null $java$lang$System_rtt) (call $java$lang$System_i)) (ref.cast (ref null $java$lang$Object) (local.get $var2)))
                (drop (call $java$io$PrintStream_i))
                (local.set $var3 (struct.new $java$io$PrintStream (struct.get $java$io$PrintStream_rtt $factoryFor (global.get $java$io$PrintStream_cls)) (ref.func $java$io$PrintStream_vt) (ref.null noextern) (struct.get $java$io$PrintStream_rtt $classImplTypes (global.get $java$io$PrintStream_cls)) (ref.null none) (ref.null none) (i32.const 0) (i32.const 0) (i32.const 0) (ref.null none) (ref.null none) (ref.null none) (ref.null none)))
                (local.set $var4 (struct.new $java$io$FileOutputStream (struct.get $java$io$FileOutputStream_rtt $factoryFor (global.get $java$io$FileOutputStream_cls)) (ref.func $java$io$FileOutputStream_vt) (ref.null noextern) (struct.get $java$io$FileOutputStream_rtt $classImplTypes (global.get $java$io$FileOutputStream_cls)) (ref.null none) (ref.null none)))
                (drop (call $java$io$FileDescriptor_i))
                (struct.set $java$io$FileOutputStream $fd (ref.cast (ref null $java$io$FileOutputStream) (local.get $var4)) (ref.cast (ref null $java$lang$Object) (struct.get $java$io$FileDescriptor_rtt $out (global.get $java$io$FileDescriptor_cls))))
                (struct.set $java$io$FileOutputStream $path (ref.cast (ref null $java$io$FileOutputStream) (local.get $var4)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (drop (call $java$io$PrintStream_i))
                ;; writeIfAndStartTrueBlock
                (if $if1 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var4)))
                    (then
                        (call $java$io$PrintStream$V$$init$$Z$Ljava$io$OutputStream$ (local.get $var3) (i32.const 0) (ref.cast (ref null $java$lang$Object) (local.get $var4)))
                        (drop (call $java$lang$System_i))
                        (struct.set $java$lang$System_rtt $out (ref.cast (ref null $java$lang$System_rtt) (call $java$lang$System_i)) (ref.cast (ref null $java$lang$Object) (local.get $var3)))
                        (local.set $var5 (struct.new $java$io$PrintStream (struct.get $java$io$PrintStream_rtt $factoryFor (global.get $java$io$PrintStream_cls)) (ref.func $java$io$PrintStream_vt) (ref.null noextern) (struct.get $java$io$PrintStream_rtt $classImplTypes (global.get $java$io$PrintStream_cls)) (ref.null none) (ref.null none) (i32.const 0) (i32.const 0) (i32.const 0) (ref.null none) (ref.null none) (ref.null none) (ref.null none)))
                        (local.set $var6 (struct.new $java$io$FileOutputStream (struct.get $java$io$FileOutputStream_rtt $factoryFor (global.get $java$io$FileOutputStream_cls)) (ref.func $java$io$FileOutputStream_vt) (ref.null noextern) (struct.get $java$io$FileOutputStream_rtt $classImplTypes (global.get $java$io$FileOutputStream_cls)) (ref.null none) (ref.null none)))
                        (drop (call $java$io$FileDescriptor_i))
                        (struct.set $java$io$FileOutputStream $fd (ref.cast (ref null $java$io$FileOutputStream) (local.get $var6)) (ref.cast (ref null $java$lang$Object) (struct.get $java$io$FileDescriptor_rtt $err (global.get $java$io$FileDescriptor_cls))))
                        (struct.set $java$io$FileOutputStream $path (ref.cast (ref null $java$io$FileOutputStream) (local.get $var6)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                        ;; writeIfAndStartTrueBlock
                        (if $if2 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var6)))
                            (then
                                (call $java$io$PrintStream$V$$init$$Z$Ljava$io$OutputStream$ (local.get $var5) (i32.const 0) (ref.cast (ref null $java$lang$Object) (local.get $var6)))
                                (drop (call $java$lang$System_i))
                                (struct.set $java$lang$System_rtt $err (ref.cast (ref null $java$lang$System_rtt) (call $java$lang$System_i)) (ref.cast (ref null $java$lang$Object) (local.get $var5)))
                                (return)
                                ;; Start else
                                )(else
                                (local.set $var7 (struct.new $java$lang$NullPointerException (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)) (ref.func $java$lang$NullPointerException_vt) (ref.null noextern) (struct.get $java$lang$NullPointerException_rtt $classImplTypes (global.get $java$lang$NullPointerException_cls)) (ref.null none) (ref.null none) (i32.const 0) (ref.null none)))
                                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var7)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_62)))
                                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var7)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                (throw $javaexception (local.get $var7))
                                ))
                        ;; finishIfBlock
                        ;; Start else
                        )(else
                        (local.set $var8 (struct.new $java$lang$NullPointerException (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)) (ref.func $java$lang$NullPointerException_vt) (ref.null noextern) (struct.get $java$lang$NullPointerException_rtt $classImplTypes (global.get $java$lang$NullPointerException_cls)) (ref.null none) (ref.null none) (i32.const 0) (ref.null none)))
                        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var8)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_62)))
                        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var8)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                        (throw $javaexception (local.get $var8))
                        ))
                ;; finishIfBlock
                ;; Start else
                )(else
                (local.set $var10 (struct.new $java$lang$NullPointerException (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)) (ref.func $java$lang$NullPointerException_vt) (ref.null noextern) (struct.get $java$lang$NullPointerException_rtt $classImplTypes (global.get $java$lang$NullPointerException_cls)) (ref.null none) (ref.null none) (i32.const 0) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var10)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var10)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var10))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$lang$System$Ljava$lang$String$$getProperty$Ljava$lang$String$ (type $t559) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (drop (call $java$lang$System_i))
        (local.set $var0 (struct.get $java$lang$System_rtt $PROPERTIES (global.get $java$lang$System_cls)))
        (return (call $java$util$Properties$Ljava$lang$String$$getProperty$Ljava$lang$String$ (local.get $var0) (local.get $arg0)))
        (unreachable))
    (func $java$lang$System$J$nanoTime$$ (type $t562) (param $unused (ref null $java$lang$Object)) (result i64)
        (drop (call $java$lang$System_i))
        (return (i64.mul (call $java$lang$System$J$currentTimeMillis$$ (call $java$lang$System_i)) (i64.const 1000000)))
        (unreachable))
    (func $java$lang$System$I$identityHashCode$Ljava$lang$Object$ (type $t554) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (return (call_indirect (type $t555) (local.get $arg0) (call_ref $t0 (i32.const 2) (struct.get $java$lang$Object $vt_resolver (local.get $arg0)))))
        (unreachable))
    (func $java$lang$System$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$lang$System$V$arraycopy$$B$I$$B$I$I (type $t563) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 i32) (param $arg2 (ref null $java$lang$Object)) (param $arg3 i32) (param $arg4 i32)
        (local $phi0 i32)
        (local.set $phi0 (i32.const 0))
        ;; startBlock type=LOOP, label = L627184073
        (loop $L627184073
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ge_s (local.get $phi0) (local.get $arg4))
                (then
                    (return)
                    ;; Start else
                    )(else
                    (array.set $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $arg2))) (i32.add (local.get $arg3) (local.get $phi0)) (array.get $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $arg0))) (i32.add (local.get $arg1) (local.get $phi0))))
                    (local.set $phi0 (i32.add (local.get $phi0) (i32.const 1)))
                    ;; Here was a goto statement
                    (br $L627184073)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (unreachable))
    (func $java$lang$System$V$arraycopy$$C$I$$C$I$I (type $t563) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 i32) (param $arg2 (ref null $java$lang$Object)) (param $arg3 i32) (param $arg4 i32)
        (local $phi0 i32)
        (local.set $phi0 (i32.const 0))
        ;; startBlock type=LOOP, label = L723415724
        (loop $L723415724
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ge_s (local.get $phi0) (local.get $arg4))
                (then
                    (return)
                    ;; Start else
                    )(else
                    (array.set $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $arg2))) (i32.add (local.get $arg3) (local.get $phi0)) (array.get $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $arg0))) (i32.add (local.get $arg1) (local.get $phi0))))
                    (local.set $phi0 (i32.add (local.get $phi0) (i32.const 1)))
                    ;; Here was a goto statement
                    (br $L723415724)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (unreachable))
    (func $jdk$internal$foreign$MemorySessionImpl$V$checkValidStateRaw$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $jdk$internal$foreign$MemorySessionImpl$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$lang$invoke$CallSite$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$util$Map$Ljava$lang$Object$$computeIfAbsent$Ljava$lang$Object$$Ljava$util$function$Function$ (type $t561) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $phi4 (ref null $java$lang$Object))
        (local $phi5 (ref null $java$lang$Object))
        (local $phi6 (ref null $java$lang$Object))
        (local $phi7 (ref null $java$lang$Object))
        (local $phi8 (ref null $java$lang$Object))
        (local $var9 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg1)))
            (then
                (local.set $var1 (call_indirect (type $t559) (local.get $var0) (local.get $arg0) (call_ref $t0 (i32.const 123) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var0))))))
                ;; startBlock type=NORMAL, label = If_9_0
                (block $If_9_0
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var1)))
                        (then
                            (local.set $phi4 (local.get $var0))
                            (local.set $phi5 (local.get $arg0))
                            (local.set $phi6 (local.get $arg1))
                            (local.set $phi7 (local.get $var1))
                            (br $If_9_0)
                            ;; Start else
                            )(else
                            (local.set $var2 (call_indirect (type $t559) (local.get $arg1) (local.get $arg0) (call_ref $t0 (i32.const 77) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $arg1))))))
                            ;; writeIfAndStartTrueBlock
                            (if $if2 (ref.is_null (local.get $var2))
                                (then
                                    (local.set $phi4 (local.get $var0))
                                    (local.set $phi5 (local.get $arg0))
                                    (local.set $phi6 (local.get $arg1))
                                    (local.set $phi7 (local.get $var1))
                                    (local.set $phi8 (local.get $var2))
                                    (br $If_9_0)
                                    ;; Start else
                                    )(else
                                    (local.set $var3 (call_indirect (type $t561) (local.get $var0) (local.get $arg0) (local.get $var2) (call_ref $t0 (i32.const 101) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var0))))))
                                    (return (local.get $var2))
                                    ))
                            ;; finishIfBlock
                            ))
                    ;; finishIfBlock
                    )
                ;; finishBlock
                (return (local.get $phi7))
                ;; Start else
                )(else
                (local.set $var9 (struct.new $java$lang$NullPointerException (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)) (ref.func $java$lang$NullPointerException_vt) (ref.null noextern) (struct.get $java$lang$NullPointerException_rtt $classImplTypes (global.get $java$lang$NullPointerException_cls)) (ref.null none) (ref.null none) (i32.const 0) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var9)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var9)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var9))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup$V$$clinit$$$ (type $t541) (param $unused (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (drop (call $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup_i))
        (local.set $var0 (struct.new $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup (struct.get $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup_rtt $factoryFor (global.get $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup_cls)) (ref.func $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup_rtt $classImplTypes (global.get $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup_cls)) (ref.null none) (ref.null none)))
        (struct.set $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup $name (ref.cast (ref null $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_67)))
        (struct.set $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup $parent (ref.cast (ref null $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (drop (call $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup_i))
        (struct.set $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup_rtt $SYSTEM (ref.cast (ref null $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup_rtt) (call $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup_i)) (ref.cast (ref null $java$lang$Object) (local.get $var0)))
        (return)
        (unreachable))
    (func $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup $name (ref.cast (ref null $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_67)))
        (struct.set $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup $parent (ref.cast (ref null $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return)
        (unreachable))
    (func $java$lang$Character$I$compare$C$C (type $t564) (param $unused (ref null $java$lang$Object)) (param $arg0 i32) (param $arg1 i32) (result i32)
        (return (i32.sub (local.get $arg0) (local.get $arg1)))
        (unreachable))
    (func $java$lang$ref$Reference$Ljava$lang$Object$$get$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (return (struct.get $java$lang$ref$Reference $referent (ref.cast (ref null $java$lang$ref$Reference) (local.get $thisref))))
        (unreachable))
    (func $java$lang$ref$Reference$V$reachabilityFence$Ljava$lang$Object$ (type $t556) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $de$mirkosertic$bytecoder$classlib$VM$Ljava$lang$String$$exceptionMessage$Ljava$lang$Exception$ (type $t559) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (return (call_indirect (type $t553) (local.get $arg0) (call_ref $t0 (i32.const 64) (struct.get $java$lang$Object $vt_resolver (local.get $arg0)))))
        (unreachable))
    (func $de$mirkosertic$bytecoder$classlib$VM$Ljava$lang$String$$objectToString$Ljava$lang$Object$ (type $t559) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg0)))
            (then
                (return (call_indirect (type $t553) (local.get $arg0) (call_ref $t0 (i32.const 0) (struct.get $java$lang$Object $vt_resolver (local.get $arg0)))))
                ;; Start else
                )(else
                (return (global.get $stringpool_0))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $de$mirkosertic$bytecoder$classlib$VM$Z$nullsafeEquals$Ljava$lang$Object$$Ljava$lang$Object$ (type $t566) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object)) (result i32)
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.eq (local.get $arg0) (local.get $arg1)))
            (then
                ;; writeIfAndStartTrueBlock
                (if $if1 (ref.is_null (local.get $arg0))
                    (then
                        (return (i32.const 0))
                        ;; Start else
                        )(else
                        (return (call_indirect (type $t554) (local.get $arg0) (local.get $arg1) (call_ref $t0 (i32.const 1) (struct.get $java$lang$Object $vt_resolver (local.get $arg0)))))
                        ))
                ;; finishIfBlock
                ;; Start else
                )(else
                (return (i32.const 1))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $de$mirkosertic$bytecoder$classlib$VM$Ljava$lang$Byte$$toByte$B (type $t565) (param $unused (ref null $java$lang$Object)) (param $arg0 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (drop (call $java$lang$Byte_i))
        (drop (call $java$lang$Byte_i))
        (local.set $var0 (struct.new $java$lang$Byte (struct.get $java$lang$Byte_rtt $factoryFor (global.get $java$lang$Byte_cls)) (ref.func $java$lang$Byte_vt) (ref.null noextern) (struct.get $java$lang$Byte_rtt $classImplTypes (global.get $java$lang$Byte_cls)) (i32.const 0)))
        (struct.set $java$lang$Byte $value (ref.cast (ref null $java$lang$Byte) (local.get $var0)) (local.get $arg0))
        (local.set $phi1 (local.get $var0))
        (return (local.get $phi1))
        (unreachable))
    (func $de$mirkosertic$bytecoder$classlib$VM$Ljava$lang$Short$$toShort$S (type $t565) (param $unused (ref null $java$lang$Object)) (param $arg0 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (drop (call $java$lang$Short_i))
        (drop (call $java$lang$Short_i))
        (local.set $var0 (struct.new $java$lang$Short (struct.get $java$lang$Short_rtt $factoryFor (global.get $java$lang$Short_cls)) (ref.func $java$lang$Short_vt) (ref.null noextern) (struct.get $java$lang$Short_rtt $classImplTypes (global.get $java$lang$Short_cls)) (i32.const 0)))
        (struct.set $java$lang$Short $value (ref.cast (ref null $java$lang$Short) (local.get $var0)) (local.get $arg0))
        (local.set $phi1 (local.get $var0))
        (return (local.get $phi1))
        (unreachable))
    (func $de$mirkosertic$bytecoder$classlib$VM$Ljava$lang$Integer$$toInteger$I (type $t565) (param $unused (ref null $java$lang$Object)) (param $arg0 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (drop (call $java$lang$Integer_i))
        (drop (call $java$lang$Integer_i))
        (local.set $var0 (struct.new $java$lang$Integer (struct.get $java$lang$Integer_rtt $factoryFor (global.get $java$lang$Integer_cls)) (ref.func $java$lang$Integer_vt) (ref.null noextern) (struct.get $java$lang$Integer_rtt $classImplTypes (global.get $java$lang$Integer_cls)) (i32.const 0)))
        (struct.set $java$lang$Integer $value (ref.cast (ref null $java$lang$Integer) (local.get $var0)) (local.get $arg0))
        (local.set $phi1 (local.get $var0))
        (return (local.get $phi1))
        (unreachable))
    (func $de$mirkosertic$bytecoder$classlib$VM$Ljava$lang$Long$$toLong$J (type $t567) (param $unused (ref null $java$lang$Object)) (param $arg0 i64) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (drop (call $java$lang$Long_i))
        (drop (call $java$lang$Long_i))
        (local.set $var0 (struct.new $java$lang$Long (struct.get $java$lang$Long_rtt $factoryFor (global.get $java$lang$Long_cls)) (ref.func $java$lang$Long_vt) (ref.null noextern) (struct.get $java$lang$Long_rtt $classImplTypes (global.get $java$lang$Long_cls)) (i64.const 0)))
        (struct.set $java$lang$Long $value (ref.cast (ref null $java$lang$Long) (local.get $var0)) (local.get $arg0))
        (local.set $phi1 (local.get $var0))
        (return (local.get $phi1))
        (unreachable))
    (func $de$mirkosertic$bytecoder$classlib$VM$Ljava$lang$Float$$toFloat$F (type $t568) (param $unused (ref null $java$lang$Object)) (param $arg0 f32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (drop (call $java$lang$Float_i))
        (drop (call $java$lang$Float_i))
        (local.set $var0 (struct.new $java$lang$Float (struct.get $java$lang$Float_rtt $factoryFor (global.get $java$lang$Float_cls)) (ref.func $java$lang$Float_vt) (ref.null noextern) (struct.get $java$lang$Float_rtt $classImplTypes (global.get $java$lang$Float_cls)) (f32.const 0.0)))
        (struct.set $java$lang$Float $value (ref.cast (ref null $java$lang$Float) (local.get $var0)) (local.get $arg0))
        (local.set $phi1 (local.get $var0))
        (return (local.get $phi1))
        (unreachable))
    (func $de$mirkosertic$bytecoder$classlib$VM$Ljava$lang$Double$$toDouble$F (type $t568) (param $unused (ref null $java$lang$Object)) (param $arg0 f32) (result (ref null $java$lang$Object))
        (local $var0 f64)
        (local $var1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local.set $var0 (f64.promote_f32 (local.get $arg0)))
        (drop (call $java$lang$Double_i))
        (drop (call $java$lang$Double_i))
        (local.set $var1 (struct.new $java$lang$Double (struct.get $java$lang$Double_rtt $factoryFor (global.get $java$lang$Double_cls)) (ref.func $java$lang$Double_vt) (ref.null noextern) (struct.get $java$lang$Double_rtt $classImplTypes (global.get $java$lang$Double_cls)) (f64.const 0.0)))
        (struct.set $java$lang$Double $value (ref.cast (ref null $java$lang$Double) (local.get $var1)) (local.get $var0))
        (local.set $phi2 (local.get $var1))
        (return (local.get $phi2))
        (unreachable))
    (func $de$mirkosertic$bytecoder$classlib$VM$V$$clinit$$$ (type $t541) (param $unused (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (struct.new $de$mirkosertic$bytecoder$classlib$VM$1 (struct.get $de$mirkosertic$bytecoder$classlib$VM$1_rtt $factoryFor (global.get $de$mirkosertic$bytecoder$classlib$VM$1_cls)) (ref.func $de$mirkosertic$bytecoder$classlib$VM$1_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$VM$1_rtt $classImplTypes (global.get $de$mirkosertic$bytecoder$classlib$VM$1_cls))))
        (drop (call $de$mirkosertic$bytecoder$classlib$VM_i))
        (struct.set $de$mirkosertic$bytecoder$classlib$VM_rtt $SYSTEM_LOADER (ref.cast (ref null $de$mirkosertic$bytecoder$classlib$VM_rtt) (call $de$mirkosertic$bytecoder$classlib$VM_i)) (ref.cast (ref null $java$lang$Object) (local.get $var0)))
        (return)
        (unreachable))
    (func $de$mirkosertic$bytecoder$classlib$VM$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$lang$invoke$MethodHandle$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$nio$charset$CodingErrorAction$V$$clinit$$$ (type $t541) (param $unused (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (drop (call $java$nio$charset$CodingErrorAction_i))
        (local.set $var0 (struct.new $java$nio$charset$CodingErrorAction (struct.get $java$nio$charset$CodingErrorAction_rtt $factoryFor (global.get $java$nio$charset$CodingErrorAction_cls)) (ref.func $java$nio$charset$CodingErrorAction_vt) (ref.null noextern) (struct.get $java$nio$charset$CodingErrorAction_rtt $classImplTypes (global.get $java$nio$charset$CodingErrorAction_cls)) (ref.null none)))
        (struct.set $java$nio$charset$CodingErrorAction $name (ref.cast (ref null $java$nio$charset$CodingErrorAction) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_10)))
        (drop (call $java$nio$charset$CodingErrorAction_i))
        (struct.set $java$nio$charset$CodingErrorAction_rtt $IGNORE (ref.cast (ref null $java$nio$charset$CodingErrorAction_rtt) (call $java$nio$charset$CodingErrorAction_i)) (ref.cast (ref null $java$lang$Object) (local.get $var0)))
        (drop (call $java$nio$charset$CodingErrorAction_i))
        (local.set $var1 (struct.new $java$nio$charset$CodingErrorAction (struct.get $java$nio$charset$CodingErrorAction_rtt $factoryFor (global.get $java$nio$charset$CodingErrorAction_cls)) (ref.func $java$nio$charset$CodingErrorAction_vt) (ref.null noextern) (struct.get $java$nio$charset$CodingErrorAction_rtt $classImplTypes (global.get $java$nio$charset$CodingErrorAction_cls)) (ref.null none)))
        (struct.set $java$nio$charset$CodingErrorAction $name (ref.cast (ref null $java$nio$charset$CodingErrorAction) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_11)))
        (drop (call $java$nio$charset$CodingErrorAction_i))
        (struct.set $java$nio$charset$CodingErrorAction_rtt $REPLACE (ref.cast (ref null $java$nio$charset$CodingErrorAction_rtt) (call $java$nio$charset$CodingErrorAction_i)) (ref.cast (ref null $java$lang$Object) (local.get $var1)))
        (drop (call $java$nio$charset$CodingErrorAction_i))
        (local.set $var2 (struct.new $java$nio$charset$CodingErrorAction (struct.get $java$nio$charset$CodingErrorAction_rtt $factoryFor (global.get $java$nio$charset$CodingErrorAction_cls)) (ref.func $java$nio$charset$CodingErrorAction_vt) (ref.null noextern) (struct.get $java$nio$charset$CodingErrorAction_rtt $classImplTypes (global.get $java$nio$charset$CodingErrorAction_cls)) (ref.null none)))
        (struct.set $java$nio$charset$CodingErrorAction $name (ref.cast (ref null $java$nio$charset$CodingErrorAction) (local.get $var2)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_12)))
        (drop (call $java$nio$charset$CodingErrorAction_i))
        (struct.set $java$nio$charset$CodingErrorAction_rtt $REPORT (ref.cast (ref null $java$nio$charset$CodingErrorAction_rtt) (call $java$nio$charset$CodingErrorAction_i)) (ref.cast (ref null $java$lang$Object) (local.get $var2)))
        (return)
        (unreachable))
    (func $java$nio$charset$CodingErrorAction$V$$init$$Ljava$lang$String$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$nio$charset$CodingErrorAction $name (ref.cast (ref null $java$nio$charset$CodingErrorAction) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (return)
        (unreachable))
    (func $java$nio$charset$CodingErrorAction$Ljava$lang$String$$toString$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (return (struct.get $java$nio$charset$CodingErrorAction $name (ref.cast (ref null $java$nio$charset$CodingErrorAction) (local.get $thisref))))
        (unreachable))
    (func $java$lang$Math$V$$clinit$$$ (type $t541) (param $unused (ref null $java$lang$Object))
        (local $phi0 i32)
        ;; startBlock type=NORMAL, label = If_4_0
        (block $If_4_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ne (call $java$lang$Class$Z$desiredAssertionStatus$$ (call $de$mirkosertic$bytecoder$classlib$java$lang$TMath_i)) (i32.const 0))
                (then
                    (local.set $phi0 (i32.const 0))
                    (br $If_4_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi0 (i32.const 1))
                    (br $If_4_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (drop (call $java$lang$Math_i))
        (struct.set $java$lang$Math_rtt $$assertionsDisabled (ref.cast (ref null $java$lang$Math_rtt) (call $java$lang$Math_i)) (local.get $phi0))
        (return)
        (unreachable))
    (func $java$lang$Math$I$floorMod$I$I (type $t564) (param $unused (ref null $java$lang$Object)) (param $arg0 i32) (param $arg1 i32) (result i32)
        (drop (call $java$lang$Math_i))
        (return (i32.sub (local.get $arg0) (i32.mul (call $java$lang$Math$I$floorDiv$I$I (call $java$lang$Math_i) (local.get $arg0) (local.get $arg1)) (local.get $arg1))))
        (unreachable))
    (func $java$lang$Math$I$floorDiv$I$I (type $t564) (param $unused (ref null $java$lang$Object)) (param $arg0 i32) (param $arg1 i32) (result i32)
        (local $var0 i32)
        (local $var1 i32)
        (local $var2 i32)
        (local $phi3 i32)
        (local $phi4 i32)
        (local $phi5 i32)
        (local $phi6 i32)
        (local $phi7 i32)
        (local.set $var0 (i32.div_s (local.get $arg0) (local.get $arg1)))
        (drop (call $java$lang$Integer_i))
        ;; startBlock type=NORMAL, label = If_46_0
        (block $If_46_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ge_s (local.get $arg0) (i32.const 0))
                (then
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (i32.le_s (local.get $arg0) (i32.const 0))
                        (then
                            (local.set $phi7 (i32.const 0))
                            (br $If_46_0)
                            ;; Start else
                            )(else
                            (local.set $phi7 (i32.const 1))
                            (br $If_46_0)
                            ))
                    ;; finishIfBlock
                    ;; Start else
                    )(else
                    (local.set $phi7 (i32.const -1))
                    (br $If_46_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (local.set $var1 (local.get $phi7))
        (drop (call $java$lang$Integer_i))
        ;; startBlock type=NORMAL, label = If_33_0
        (block $If_33_0
            ;; writeIfAndStartTrueBlock
            (if $if2 (i32.ge_s (local.get $arg1) (i32.const 0))
                (then
                    ;; writeIfAndStartTrueBlock
                    (if $if3 (i32.le_s (local.get $arg1) (i32.const 0))
                        (then
                            (local.set $phi6 (i32.const 0))
                            (br $If_33_0)
                            ;; Start else
                            )(else
                            (local.set $phi6 (i32.const 1))
                            (br $If_33_0)
                            ))
                    ;; finishIfBlock
                    ;; Start else
                    )(else
                    (local.set $phi6 (i32.const -1))
                    (br $If_33_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        ;; startBlock type=NORMAL, label = If_10_0
        (block $If_10_0
            ;; writeIfAndStartTrueBlock
            (if $if4 (i32.eq (local.get $var1) (local.get $phi6))
                (then
                    (local.set $phi3 (local.get $arg0))
                    (local.set $phi4 (local.get $arg1))
                    (local.set $phi5 (local.get $var0))
                    (br $If_10_0)
                    ;; Start else
                    )(else
                    ;; writeIfAndStartTrueBlock
                    (if $if5 (i32.eq (i32.mul (local.get $var0) (local.get $arg1)) (local.get $arg0))
                        (then
                            (local.set $phi3 (local.get $arg0))
                            (local.set $phi4 (local.get $arg1))
                            (local.set $phi5 (local.get $var0))
                            (br $If_10_0)
                            ;; Start else
                            )(else
                            (local.set $var2 (i32.add (local.get $var0) (i32.const -1)))
                            (local.set $phi3 (local.get $arg0))
                            (local.set $phi4 (local.get $arg1))
                            (local.set $phi5 (local.get $var2))
                            (br $If_10_0)
                            ))
                    ;; finishIfBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi5))
        (unreachable))
    (func $java$lang$Math$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $jdk$internal$util$Preconditions$V$$clinit$$$ (type $t541) (param $unused (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $var6 (ref null $java$lang$Object))
        (local $phi7 (ref null $java$lang$Object))
        (local $var8 (ref null $java$lang$Object))
        (local $phi9 (ref null $java$lang$Object))
        (local $var10 (ref null $java$lang$Object))
        (local $phi11 (ref null $java$lang$Object))
        (local.set $var0 (struct.new $jdk$internal$util$Preconditions$1 (struct.get $jdk$internal$util$Preconditions$1_rtt $factoryFor (global.get $jdk$internal$util$Preconditions$1_cls)) (ref.func $jdk$internal$util$Preconditions$1_vt) (ref.null noextern) (struct.get $jdk$internal$util$Preconditions$1_rtt $classImplTypes (global.get $jdk$internal$util$Preconditions$1_cls))))
        (drop (call $jdk$internal$util$Preconditions_i))
        (local.set $var10 (struct.new $jdk$internal$util$Preconditions$4 (struct.get $jdk$internal$util$Preconditions$4_rtt $factoryFor (global.get $jdk$internal$util$Preconditions$4_cls)) (ref.func $jdk$internal$util$Preconditions$4_vt) (ref.null noextern) (struct.get $jdk$internal$util$Preconditions$4_rtt $classImplTypes (global.get $jdk$internal$util$Preconditions$4_cls)) (ref.null none)))
        (struct.set $jdk$internal$util$Preconditions$4 $val$f (ref.cast (ref null $jdk$internal$util$Preconditions$4) (local.get $var10)) (ref.cast (ref null $java$lang$Object) (local.get $var0)))
        (local.set $phi11 (local.get $var10))
        (local.set $var1 (local.get $phi11))
        (drop (call $jdk$internal$util$Preconditions_i))
        (struct.set $jdk$internal$util$Preconditions_rtt $SIOOBE_FORMATTER (ref.cast (ref null $jdk$internal$util$Preconditions_rtt) (call $jdk$internal$util$Preconditions_i)) (ref.cast (ref null $java$lang$Object) (local.get $var1)))
        (local.set $var2 (struct.new $jdk$internal$util$Preconditions$2 (struct.get $jdk$internal$util$Preconditions$2_rtt $factoryFor (global.get $jdk$internal$util$Preconditions$2_cls)) (ref.func $jdk$internal$util$Preconditions$2_vt) (ref.null noextern) (struct.get $jdk$internal$util$Preconditions$2_rtt $classImplTypes (global.get $jdk$internal$util$Preconditions$2_cls))))
        (drop (call $jdk$internal$util$Preconditions_i))
        (local.set $var8 (struct.new $jdk$internal$util$Preconditions$4 (struct.get $jdk$internal$util$Preconditions$4_rtt $factoryFor (global.get $jdk$internal$util$Preconditions$4_cls)) (ref.func $jdk$internal$util$Preconditions$4_vt) (ref.null noextern) (struct.get $jdk$internal$util$Preconditions$4_rtt $classImplTypes (global.get $jdk$internal$util$Preconditions$4_cls)) (ref.null none)))
        (struct.set $jdk$internal$util$Preconditions$4 $val$f (ref.cast (ref null $jdk$internal$util$Preconditions$4) (local.get $var8)) (ref.cast (ref null $java$lang$Object) (local.get $var2)))
        (local.set $phi9 (local.get $var8))
        (local.set $var3 (local.get $phi9))
        (drop (call $jdk$internal$util$Preconditions_i))
        (struct.set $jdk$internal$util$Preconditions_rtt $AIOOBE_FORMATTER (ref.cast (ref null $jdk$internal$util$Preconditions_rtt) (call $jdk$internal$util$Preconditions_i)) (ref.cast (ref null $java$lang$Object) (local.get $var3)))
        (local.set $var4 (struct.new $jdk$internal$util$Preconditions$3 (struct.get $jdk$internal$util$Preconditions$3_rtt $factoryFor (global.get $jdk$internal$util$Preconditions$3_cls)) (ref.func $jdk$internal$util$Preconditions$3_vt) (ref.null noextern) (struct.get $jdk$internal$util$Preconditions$3_rtt $classImplTypes (global.get $jdk$internal$util$Preconditions$3_cls))))
        (drop (call $jdk$internal$util$Preconditions_i))
        (local.set $var6 (struct.new $jdk$internal$util$Preconditions$4 (struct.get $jdk$internal$util$Preconditions$4_rtt $factoryFor (global.get $jdk$internal$util$Preconditions$4_cls)) (ref.func $jdk$internal$util$Preconditions$4_vt) (ref.null noextern) (struct.get $jdk$internal$util$Preconditions$4_rtt $classImplTypes (global.get $jdk$internal$util$Preconditions$4_cls)) (ref.null none)))
        (struct.set $jdk$internal$util$Preconditions$4 $val$f (ref.cast (ref null $jdk$internal$util$Preconditions$4) (local.get $var6)) (ref.cast (ref null $java$lang$Object) (local.get $var4)))
        (local.set $phi7 (local.get $var6))
        (local.set $var5 (local.get $phi7))
        (drop (call $jdk$internal$util$Preconditions_i))
        (struct.set $jdk$internal$util$Preconditions_rtt $IOOBE_FORMATTER (ref.cast (ref null $jdk$internal$util$Preconditions_rtt) (call $jdk$internal$util$Preconditions_i)) (ref.cast (ref null $java$lang$Object) (local.get $var5)))
        (return)
        (unreachable))
    (func $jdk$internal$util$Preconditions$Ljava$util$function$BiFunction$$outOfBoundsExceptionFormatter$Ljava$util$function$Function$ (type $t559) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (struct.new $jdk$internal$util$Preconditions$4 (struct.get $jdk$internal$util$Preconditions$4_rtt $factoryFor (global.get $jdk$internal$util$Preconditions$4_cls)) (ref.func $jdk$internal$util$Preconditions$4_vt) (ref.null noextern) (struct.get $jdk$internal$util$Preconditions$4_rtt $classImplTypes (global.get $jdk$internal$util$Preconditions$4_cls)) (ref.null none)))
        (struct.set $jdk$internal$util$Preconditions$4 $val$f (ref.cast (ref null $jdk$internal$util$Preconditions$4) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (return (local.get $var0))
        (unreachable))
    (func $jdk$internal$util$Preconditions$I$checkFromIndexSize$I$I$I$Ljava$util$function$BiFunction$ (type $t569) (param $unused (ref null $java$lang$Object)) (param $arg0 i32) (param $arg1 i32) (param $arg2 i32) (param $arg3 (ref null $java$lang$Object)) (result i32)
        (local $phi0 i32)
        (local $phi1 i32)
        (local $phi2 i32)
        (local $phi3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $var5 i32)
        (local $var6 i32)
        (local $var7 i32)
        ;; startBlock type=NORMAL, label = If_7_0
        (block $If_7_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.lt_s (i32.or (i32.or (local.get $arg2) (local.get $arg0)) (local.get $arg1)) (i32.const 0))
                (then
                    (local.set $phi0 (local.get $arg0))
                    (local.set $phi1 (local.get $arg1))
                    (local.set $phi2 (local.get $arg2))
                    (local.set $phi3 (local.get $arg3))
                    (br $If_7_0)
                    ;; Start else
                    )(else
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (i32.le_s (local.get $arg1) (i32.sub (local.get $arg2) (local.get $arg0)))
                        (then
                            (return (local.get $arg0))
                            ;; Start else
                            )(else
                            (local.set $phi0 (local.get $arg0))
                            (local.set $phi1 (local.get $arg1))
                            (local.set $phi2 (local.get $arg2))
                            (local.set $phi3 (local.get $arg3))
                            (br $If_7_0)
                            ))
                    ;; finishIfBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (local.set $var4 (local.get $phi3))
        (local.set $var5 (local.get $phi0))
        (local.set $var6 (local.get $phi1))
        (local.set $var7 (local.get $phi2))
        (drop (call $jdk$internal$util$Preconditions_i))
        (throw $javaexception (call $jdk$internal$util$Preconditions$Ljava$lang$RuntimeException$$outOfBoundsCheckFromIndexSize$Ljava$util$function$BiFunction$$I$I$I (call $jdk$internal$util$Preconditions_i) (local.get $var4) (local.get $var5) (local.get $var6) (local.get $var7)))
        (unreachable))
    (func $jdk$internal$util$Preconditions$Ljava$lang$RuntimeException$$outOfBoundsCheckFromIndexSize$Ljava$util$function$BiFunction$$I$I$I (type $t570) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 i32) (param $arg2 i32) (param $arg3 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $phi4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $phi6 (ref null $java$lang$Object))
        (local.set $var0 (struct.new $obj_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t549 (i32.const 3))))
        (drop (call $java$lang$Integer_i))
        (drop (call $java$lang$Integer_i))
        (local.set $var5 (struct.new $java$lang$Integer (struct.get $java$lang$Integer_rtt $factoryFor (global.get $java$lang$Integer_cls)) (ref.func $java$lang$Integer_vt) (ref.null noextern) (struct.get $java$lang$Integer_rtt $classImplTypes (global.get $java$lang$Integer_cls)) (i32.const 0)))
        (struct.set $java$lang$Integer $value (ref.cast (ref null $java$lang$Integer) (local.get $var5)) (local.get $arg1))
        (local.set $phi6 (local.get $var5))
        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var0))) (i32.const 0) (local.get $phi6))
        (local.set $var3 (struct.new $java$lang$Integer (struct.get $java$lang$Integer_rtt $factoryFor (global.get $java$lang$Integer_cls)) (ref.func $java$lang$Integer_vt) (ref.null noextern) (struct.get $java$lang$Integer_rtt $classImplTypes (global.get $java$lang$Integer_cls)) (i32.const 0)))
        (struct.set $java$lang$Integer $value (ref.cast (ref null $java$lang$Integer) (local.get $var3)) (local.get $arg2))
        (local.set $phi4 (local.get $var3))
        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var0))) (i32.const 1) (local.get $phi4))
        (local.set $var1 (struct.new $java$lang$Integer (struct.get $java$lang$Integer_rtt $factoryFor (global.get $java$lang$Integer_cls)) (ref.func $java$lang$Integer_vt) (ref.null noextern) (struct.get $java$lang$Integer_rtt $classImplTypes (global.get $java$lang$Integer_cls)) (i32.const 0)))
        (struct.set $java$lang$Integer $value (ref.cast (ref null $java$lang$Integer) (local.get $var1)) (local.get $arg3))
        (local.set $phi2 (local.get $var1))
        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var0))) (i32.const 2) (local.get $phi2))
        (drop (call $jdk$internal$util$Preconditions_i))
        (return (call $jdk$internal$util$Preconditions$Ljava$lang$RuntimeException$$outOfBounds$Ljava$util$function$BiFunction$$Ljava$lang$String$$$Ljava$lang$Number$ (call $jdk$internal$util$Preconditions_i) (local.get $arg0) (global.get $stringpool_42) (local.get $var0)))
        (unreachable))
    (func $jdk$internal$util$Preconditions$Ljava$lang$RuntimeException$$outOfBounds$Ljava$util$function$BiFunction$$Ljava$lang$String$$$Ljava$lang$Number$ (type $t571) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object)) (param $arg2 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 (ref null $java$lang$Object))
        (local $phi4 (ref null $java$lang$Object))
        (local $phi5 (ref null $java$lang$Object))
        (local $var6 (ref null $java$lang$Object))
        (local $var7 (ref null $java$lang$Object))
        (local $var8 (ref null $java$lang$Object))
        (local $var9 (ref null $java$lang$Object))
        (local $phi10 (ref null $java$lang$Object))
        (local $phi11 (ref null $java$lang$Object))
        (local $var12 (ref null $java$lang$Object))
        (local.set $var0 (call $java$util$List$Ljava$util$List$$of$$Ljava$lang$Object$ (global.get $java$util$List_cls) (local.get $arg2)))
        ;; startBlock type=NORMAL, label = If_8_0
        (block $If_8_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg0)))
                (then
                    (local.set $var12 (ref.cast (ref null $java$lang$Object) (call_indirect (type $t561) (local.get $arg0) (local.get $arg1) (local.get $var0) (call_ref $t0 (i32.const 105) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $arg0)))))))
                    (local.set $phi1 (local.get $arg0))
                    (local.set $phi2 (local.get $arg1))
                    (local.set $phi3 (local.get $arg2))
                    (local.set $phi4 (local.get $var0))
                    (local.set $phi5 (local.get $var12))
                    (br $If_8_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi1 (local.get $arg0))
                    (local.set $phi2 (local.get $arg1))
                    (local.set $phi3 (local.get $arg2))
                    (local.set $phi4 (local.get $var0))
                    (local.set $phi5 (ref.null none))
                    (br $If_8_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (local.set $var6 (local.get $phi5))
        ;; startBlock type=NORMAL, label = If_20_0
        (block $If_20_0
            ;; writeIfAndStartTrueBlock
            (if $if1 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var6)))
                (then
                    (local.set $phi10 (local.get $var6))
                    (local.set $phi11 (local.get $var6))
                    (br $If_20_0)
                    ;; Start else
                    )(else
                    (local.set $var7 (struct.new $java$lang$IndexOutOfBoundsException (struct.get $java$lang$IndexOutOfBoundsException_rtt $factoryFor (global.get $java$lang$IndexOutOfBoundsException_cls)) (ref.func $java$lang$IndexOutOfBoundsException_vt) (ref.null noextern) (struct.get $java$lang$IndexOutOfBoundsException_rtt $classImplTypes (global.get $java$lang$IndexOutOfBoundsException_cls)) (ref.null none) (ref.null none)))
                    (local.set $var8 (local.get $phi2))
                    (local.set $var9 (local.get $phi4))
                    (drop (call $jdk$internal$util$Preconditions_i))
                    (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var7)) (ref.cast (ref null $java$lang$Object) (call $jdk$internal$util$Preconditions$Ljava$lang$String$$outOfBoundsMessage$Ljava$lang$String$$Ljava$util$List$ (call $jdk$internal$util$Preconditions_i) (local.get $var8) (local.get $var9))))
                    (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var7)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                    ;; Here was a goto statement
                    (local.set $phi10 (local.get $var6))
                    (local.set $phi11 (local.get $var7))
                    (br $If_20_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi11))
        (unreachable))
    (func $jdk$internal$util$Preconditions$Ljava$lang$String$$outOfBoundsMessage$Ljava$lang$String$$Ljava$util$List$ (type $t561) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $phi6 i32)
        (local $phi7 (ref null $java$lang$Object))
        (local $phi8 i32)
        (local $phi9 i32)
        (local $var10 (ref null $java$lang$Object))
        (local $phi11 (ref null $java$lang$Object))
        (local $var12 (ref null $java$lang$Object))
        (local $phi13 (ref null $java$lang$Object))
        (local $phi14 i32)
        (local $var15 (ref null $java$lang$Object))
        (local $var16 (ref null $java$lang$Object))
        (local $var17 (ref null $java$lang$Object))
        (local $var18 (ref null $java$lang$Object))
        (local $var19 (ref null $java$lang$Object))
        (local $var20 (ref null $java$lang$Object))
        (local $var21 (ref null $java$lang$Object))
        (local $var22 (ref null $java$lang$Object))
        (local $var23 (ref null $java$lang$Object))
        (local $var24 (ref null $java$lang$Object))
        (local $var25 (ref null $java$lang$Object))
        (local $var26 (ref null $java$lang$Object))
        (local $tableswitch_idx0 i32)
        (local $tableswitch_idx1 i32)
        ;; startBlock type=NORMAL, label = If_3_0
        (block $If_3_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg0)))
                (then
                    (local.set $phi1 (local.get $arg0))
                    (local.set $phi2 (local.get $arg1))
                    (br $If_3_0)
                    ;; Start else
                    )(else
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg1)))
                        (then
                            (local.set $phi1 (local.get $arg0))
                            (local.set $phi2 (local.get $arg1))
                            (br $If_3_0)
                            ;; Start else
                            )(else
                            (local.set $var0 (struct.new $obj_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t549 (i32.const 0))))
                            (return (call $java$lang$String$Ljava$lang$String$$format$Ljava$lang$String$$$Ljava$lang$Object$ (global.get $java$lang$String_cls) (global.get $stringpool_74) (local.get $var0)))
                            ))
                    ;; finishIfBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        ;; writeIfAndStartTrueBlock
        (if $if2 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $phi1)))
            (then
                ;; writeIfAndStartTrueBlock
                (if $if3 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $phi2)))
                    (then
                        (local.set $var5 (local.get $phi1))
                        ;; startBlock type=NORMAL, label = LookupSwitch_45_0
                        (block $LookupSwitch_45_0
                            ;; writeLookupSwitch
                            (block $lookupswitchb_0
                                (block $lookupswitchbi_1
                                    ;; writeSwitchCase 1844394469
                                    (if $casecheck0 (i32.eq (call $java$lang$String$I$hashCode$$ (local.get $var5)) (i32.const 1844394469))
                                        (then
                                            ;; writeIfAndStartTrueBlock
                                            (if $if4 (i32.eq (call $java$lang$String$Z$equals$Ljava$lang$Object$ (local.get $var5) (global.get $stringpool_80)) (i32.const 0))
                                                (then
                                                    (local.set $phi6 (i32.const 0))
                                                    (local.set $phi7 (local.get $var5))
                                                    (local.set $phi8 (i32.const -1))
                                                    (br $LookupSwitch_45_0)
                                                    ;; Start else
                                                    )(else
                                                    ;; Here was a goto statement
                                                    (local.set $phi6 (i32.const 0))
                                                    (local.set $phi7 (local.get $var5))
                                                    (local.set $phi8 (i32.const 1))
                                                    (br $LookupSwitch_45_0)
                                                    ))
                                            ;; finishIfBlock
                                            ))
                                    ;; finishSwitchCase
                                    ;; writeSwitchCase -538822486
                                    (if $casecheck1 (i32.eq (call $java$lang$String$I$hashCode$$ (local.get $var5)) (i32.const -538822486))
                                        (then
                                            ;; writeIfAndStartTrueBlock
                                            (if $if5 (i32.eq (call $java$lang$String$Z$equals$Ljava$lang$Object$ (local.get $var5) (global.get $stringpool_81)) (i32.const 0))
                                                (then
                                                    (local.set $phi6 (i32.const 0))
                                                    (local.set $phi7 (local.get $var5))
                                                    (local.set $phi8 (i32.const -1))
                                                    (br $LookupSwitch_45_0)
                                                    ;; Start else
                                                    )(else
                                                    ;; Here was a goto statement
                                                    (local.set $phi6 (i32.const 0))
                                                    (local.set $phi7 (local.get $var5))
                                                    (local.set $phi8 (i32.const 0))
                                                    (br $LookupSwitch_45_0)
                                                    ))
                                            ;; finishIfBlock
                                            ))
                                    ;; finishSwitchCase
                                    ;; writeSwitchCase 1848935233
                                    (if $casecheck2 (i32.eq (call $java$lang$String$I$hashCode$$ (local.get $var5)) (i32.const 1848935233))
                                        (then
                                            ;; writeIfAndStartTrueBlock
                                            (if $if6 (i32.eq (call $java$lang$String$Z$equals$Ljava$lang$Object$ (local.get $var5) (global.get $stringpool_42)) (i32.const 0))
                                                (then
                                                    (local.set $phi6 (i32.const 0))
                                                    (local.set $phi7 (local.get $var5))
                                                    (local.set $phi8 (i32.const -1))
                                                    (br $LookupSwitch_45_0)
                                                    ;; Start else
                                                    )(else
                                                    (local.set $phi6 (i32.const 0))
                                                    (local.set $phi7 (local.get $var5))
                                                    (local.set $phi8 (i32.const 2))
                                                    (br $LookupSwitch_45_0)
                                                    ))
                                            ;; finishIfBlock
                                            ))
                                    ;; finishSwitchCase
                                    ;; writeSwitchDefaultCase
                                    )
                                (local.set $phi6 (i32.const 0))
                                (local.set $phi7 (local.get $var5))
                                (local.set $phi8 (i32.const -1))
                                (br $LookupSwitch_45_0)
                                ;; finishSwitchDefault
                                )
                            ;; finishLookupSwitch
                            )
                        ;; finishBlock
                        ;; startBlock type=NORMAL, label = TableSwitch_50_0
                        (block $TableSwitch_50_0
                            ;; writeTableSwitch
                            (block $tableswitch_outer0
                                (local.set $tableswitch_idx0 (i32.sub (local.get $phi8) (i32.const 0)))
                                (block $tableswitch_inner0
                                    (if $tableswitch_min0 (i32.ge_s (local.get $phi8) (i32.const 0))
                                        (then
                                            (if $tableswitch_max0 (i32.le_s (local.get $phi8) (i32.const 2))
                                                (then
                                                    ;; writeSwitchCase 0
                                                    (if $casecheck3 (i32.eq (local.get $tableswitch_idx0) (i32.const 0))
                                                        (then
                                                            ;; Here was a goto statement
                                                            (local.set $phi9 (i32.const 2))
                                                            (br $TableSwitch_50_0)
                                                            ))
                                                    ;; finishSwitchCase
                                                    ;; writeSwitchCase 1
                                                    (if $casecheck4 (i32.eq (local.get $tableswitch_idx0) (i32.const 1))
                                                        (then
                                                            ;; Here was a goto statement
                                                            (local.set $phi9 (i32.const 3))
                                                            (br $TableSwitch_50_0)
                                                            ))
                                                    ;; finishSwitchCase
                                                    ;; writeSwitchCase 2
                                                    (if $casecheck5 (i32.eq (local.get $tableswitch_idx0) (i32.const 2))
                                                        (then
                                                            ;; Here was a goto statement
                                                            (local.set $phi9 (i32.const 3))
                                                            (br $TableSwitch_50_0)
                                                            ))
                                                    ;; finishSwitchCase
                                                    )(else
                                                    (br $tableswitch_inner0)
                                                    ))
                                            )(else
                                            (br $tableswitch_inner0)
                                            ))
                                    )
                                ;; startTableSwitchDefaultBlock
                                (local.set $phi9 (local.get $phi6))
                                (br $TableSwitch_50_0)
                                ;; finishTableSwitchDefaultBlock
                                )
                            ;; finishTableSwitch
                            )
                        ;; finishBlock
                        (local.set $var10 (local.get $phi2))
                        ;; startBlock type=NORMAL, label = If_58_0
                        (block $If_58_0
                            ;; writeIfAndStartTrueBlock
                            (if $if7 (i32.eq (call_indirect (type $t555) (local.get $var10) (call_ref $t0 (i32.const 100) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var10))))) (local.get $phi9))
                                (then
                                    (local.set $phi11 (local.get $phi1))
                                    (br $If_58_0)
                                    ;; Start else
                                    )(else
                                    ;; Here was a goto statement
                                    (local.set $phi11 (global.get $stringpool_1))
                                    (br $If_58_0)
                                    ))
                            ;; finishIfBlock
                            )
                        ;; finishBlock
                        (local.set $var12 (local.get $phi11))
                        ;; startBlock type=NORMAL, label = LookupSwitch_68_0
                        (block $LookupSwitch_68_0
                            ;; writeLookupSwitch
                            (block $lookupswitchb_2
                                (block $lookupswitchbi_3
                                    ;; writeSwitchCase -538822486
                                    (if $casecheck6 (i32.eq (call $java$lang$String$I$hashCode$$ (local.get $var12)) (i32.const -538822486))
                                        (then
                                            ;; writeIfAndStartTrueBlock
                                            (if $if8 (i32.eq (call $java$lang$String$Z$equals$Ljava$lang$Object$ (local.get $var12) (global.get $stringpool_81)) (i32.const 0))
                                                (then
                                                    (local.set $phi13 (local.get $var12))
                                                    (local.set $phi14 (i32.const -1))
                                                    (br $LookupSwitch_68_0)
                                                    ;; Start else
                                                    )(else
                                                    ;; Here was a goto statement
                                                    (local.set $phi13 (local.get $var12))
                                                    (local.set $phi14 (i32.const 0))
                                                    (br $LookupSwitch_68_0)
                                                    ))
                                            ;; finishIfBlock
                                            ))
                                    ;; finishSwitchCase
                                    ;; writeSwitchCase 1844394469
                                    (if $casecheck7 (i32.eq (call $java$lang$String$I$hashCode$$ (local.get $var12)) (i32.const 1844394469))
                                        (then
                                            ;; writeIfAndStartTrueBlock
                                            (if $if9 (i32.eq (call $java$lang$String$Z$equals$Ljava$lang$Object$ (local.get $var12) (global.get $stringpool_80)) (i32.const 0))
                                                (then
                                                    (local.set $phi13 (local.get $var12))
                                                    (local.set $phi14 (i32.const -1))
                                                    (br $LookupSwitch_68_0)
                                                    ;; Start else
                                                    )(else
                                                    ;; Here was a goto statement
                                                    (local.set $phi13 (local.get $var12))
                                                    (local.set $phi14 (i32.const 1))
                                                    (br $LookupSwitch_68_0)
                                                    ))
                                            ;; finishIfBlock
                                            ))
                                    ;; finishSwitchCase
                                    ;; writeSwitchCase 1848935233
                                    (if $casecheck8 (i32.eq (call $java$lang$String$I$hashCode$$ (local.get $var12)) (i32.const 1848935233))
                                        (then
                                            ;; writeIfAndStartTrueBlock
                                            (if $if10 (i32.eq (call $java$lang$String$Z$equals$Ljava$lang$Object$ (local.get $var12) (global.get $stringpool_42)) (i32.const 0))
                                                (then
                                                    (local.set $phi13 (local.get $var12))
                                                    (local.set $phi14 (i32.const -1))
                                                    (br $LookupSwitch_68_0)
                                                    ;; Start else
                                                    )(else
                                                    (local.set $phi13 (local.get $var12))
                                                    (local.set $phi14 (i32.const 2))
                                                    (br $LookupSwitch_68_0)
                                                    ))
                                            ;; finishIfBlock
                                            ))
                                    ;; finishSwitchCase
                                    ;; writeSwitchDefaultCase
                                    )
                                (local.set $phi13 (local.get $var12))
                                (local.set $phi14 (i32.const -1))
                                (br $LookupSwitch_68_0)
                                ;; finishSwitchDefault
                                )
                            ;; finishLookupSwitch
                            )
                        ;; finishBlock
                        ;; writeTableSwitch
                        (block $tableswitch_outer1
                            (local.set $tableswitch_idx1 (i32.sub (local.get $phi14) (i32.const 0)))
                            (block $tableswitch_inner1
                                (if $tableswitch_min1 (i32.ge_s (local.get $phi14) (i32.const 0))
                                    (then
                                        (if $tableswitch_max1 (i32.le_s (local.get $phi14) (i32.const 2))
                                            (then
                                                ;; writeSwitchCase 0
                                                (if $casecheck9 (i32.eq (local.get $tableswitch_idx1) (i32.const 0))
                                                    (then
                                                        (local.set $var23 (struct.new $obj_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t549 (i32.const 2))))
                                                        (local.set $var24 (local.get $phi2))
                                                        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var23))) (i32.const 0) (call_indirect (type $t565) (local.get $var24) (i32.const 0) (call_ref $t0 (i32.const 179) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var24))))))
                                                        (local.set $var25 (local.get $phi2))
                                                        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var23))) (i32.const 1) (call_indirect (type $t565) (local.get $var25) (i32.const 1) (call_ref $t0 (i32.const 179) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var25))))))
                                                        (return (call $java$lang$String$Ljava$lang$String$$format$Ljava$lang$String$$$Ljava$lang$Object$ (global.get $java$lang$String_cls) (global.get $stringpool_78) (local.get $var23)))
                                                        ))
                                                ;; finishSwitchCase
                                                ;; writeSwitchCase 1
                                                (if $casecheck10 (i32.eq (local.get $tableswitch_idx1) (i32.const 1))
                                                    (then
                                                        (local.set $var19 (struct.new $obj_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t549 (i32.const 3))))
                                                        (local.set $var20 (local.get $phi2))
                                                        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var19))) (i32.const 0) (call_indirect (type $t565) (local.get $var20) (i32.const 0) (call_ref $t0 (i32.const 179) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var20))))))
                                                        (local.set $var21 (local.get $phi2))
                                                        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var19))) (i32.const 1) (call_indirect (type $t565) (local.get $var21) (i32.const 1) (call_ref $t0 (i32.const 179) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var21))))))
                                                        (local.set $var22 (local.get $phi2))
                                                        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var19))) (i32.const 2) (call_indirect (type $t565) (local.get $var22) (i32.const 2) (call_ref $t0 (i32.const 179) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var22))))))
                                                        (return (call $java$lang$String$Ljava$lang$String$$format$Ljava$lang$String$$$Ljava$lang$Object$ (global.get $java$lang$String_cls) (global.get $stringpool_77) (local.get $var19)))
                                                        ))
                                                ;; finishSwitchCase
                                                ;; writeSwitchCase 2
                                                (if $casecheck11 (i32.eq (local.get $tableswitch_idx1) (i32.const 2))
                                                    (then
                                                        (local.set $var15 (struct.new $obj_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t549 (i32.const 3))))
                                                        (local.set $var16 (local.get $phi2))
                                                        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var15))) (i32.const 0) (call_indirect (type $t565) (local.get $var16) (i32.const 0) (call_ref $t0 (i32.const 179) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var16))))))
                                                        (local.set $var17 (local.get $phi2))
                                                        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var15))) (i32.const 1) (call_indirect (type $t565) (local.get $var17) (i32.const 1) (call_ref $t0 (i32.const 179) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var17))))))
                                                        (local.set $var18 (local.get $phi2))
                                                        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var15))) (i32.const 2) (call_indirect (type $t565) (local.get $var18) (i32.const 2) (call_ref $t0 (i32.const 179) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var18))))))
                                                        (return (call $java$lang$String$Ljava$lang$String$$format$Ljava$lang$String$$$Ljava$lang$Object$ (global.get $java$lang$String_cls) (global.get $stringpool_76) (local.get $var15)))
                                                        ))
                                                ;; finishSwitchCase
                                                )(else
                                                (br $tableswitch_inner1)
                                                ))
                                        )(else
                                        (br $tableswitch_inner1)
                                        ))
                                )
                            ;; startTableSwitchDefaultBlock
                            (local.set $var26 (struct.new $obj_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t549 (i32.const 2))))
                            (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var26))) (i32.const 0) (local.get $phi1))
                            (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var26))) (i32.const 1) (local.get $phi2))
                            (return (call $java$lang$String$Ljava$lang$String$$format$Ljava$lang$String$$$Ljava$lang$Object$ (global.get $java$lang$String_cls) (global.get $stringpool_79) (local.get $var26)))
                            ;; finishTableSwitchDefaultBlock
                            )
                        ;; finishTableSwitch
                        ;; Start else
                        )(else
                        (local.set $var4 (struct.new $obj_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t549 (i32.const 1))))
                        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var4))) (i32.const 0) (local.get $phi1))
                        (return (call $java$lang$String$Ljava$lang$String$$format$Ljava$lang$String$$$Ljava$lang$Object$ (global.get $java$lang$String_cls) (global.get $stringpool_75) (local.get $var4)))
                        ))
                ;; finishIfBlock
                ;; Start else
                )(else
                (local.set $var3 (struct.new $obj_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t549 (i32.const 1))))
                (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var3))) (i32.const 0) (local.get $phi2))
                (return (call $java$lang$String$Ljava$lang$String$$format$Ljava$lang$String$$$Ljava$lang$Object$ (global.get $java$lang$String_cls) (global.get $stringpool_75) (local.get $var3)))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $jdk$internal$util$Preconditions$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $jdk$internal$util$Preconditions$I$checkIndex$I$I$Ljava$util$function$BiFunction$ (type $t572) (param $unused (ref null $java$lang$Object)) (param $arg0 i32) (param $arg1 i32) (param $arg2 (ref null $java$lang$Object)) (result i32)
        (local $phi0 i32)
        (local $phi1 i32)
        (local $phi2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 i32)
        (local $var5 i32)
        ;; startBlock type=NORMAL, label = If_4_0
        (block $If_4_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.lt_s (local.get $arg0) (i32.const 0))
                (then
                    (local.set $phi0 (local.get $arg0))
                    (local.set $phi1 (local.get $arg1))
                    (local.set $phi2 (local.get $arg2))
                    (br $If_4_0)
                    ;; Start else
                    )(else
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (i32.lt_s (local.get $arg0) (local.get $arg1))
                        (then
                            (return (local.get $arg0))
                            ;; Start else
                            )(else
                            (local.set $phi0 (local.get $arg0))
                            (local.set $phi1 (local.get $arg1))
                            (local.set $phi2 (local.get $arg2))
                            (br $If_4_0)
                            ))
                    ;; finishIfBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (local.set $var3 (local.get $phi2))
        (local.set $var4 (local.get $phi0))
        (local.set $var5 (local.get $phi1))
        (drop (call $jdk$internal$util$Preconditions_i))
        (throw $javaexception (call $jdk$internal$util$Preconditions$Ljava$lang$RuntimeException$$outOfBoundsCheckIndex$Ljava$util$function$BiFunction$$I$I (call $jdk$internal$util$Preconditions_i) (local.get $var3) (local.get $var4) (local.get $var5)))
        (unreachable))
    (func $jdk$internal$util$Preconditions$Ljava$lang$RuntimeException$$outOfBoundsCheckIndex$Ljava$util$function$BiFunction$$I$I (type $t573) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 i32) (param $arg2 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $phi4 (ref null $java$lang$Object))
        (local.set $var0 (struct.new $obj_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t549 (i32.const 2))))
        (drop (call $java$lang$Integer_i))
        (drop (call $java$lang$Integer_i))
        (local.set $var3 (struct.new $java$lang$Integer (struct.get $java$lang$Integer_rtt $factoryFor (global.get $java$lang$Integer_cls)) (ref.func $java$lang$Integer_vt) (ref.null noextern) (struct.get $java$lang$Integer_rtt $classImplTypes (global.get $java$lang$Integer_cls)) (i32.const 0)))
        (struct.set $java$lang$Integer $value (ref.cast (ref null $java$lang$Integer) (local.get $var3)) (local.get $arg1))
        (local.set $phi4 (local.get $var3))
        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var0))) (i32.const 0) (local.get $phi4))
        (local.set $var1 (struct.new $java$lang$Integer (struct.get $java$lang$Integer_rtt $factoryFor (global.get $java$lang$Integer_cls)) (ref.func $java$lang$Integer_vt) (ref.null noextern) (struct.get $java$lang$Integer_rtt $classImplTypes (global.get $java$lang$Integer_cls)) (i32.const 0)))
        (struct.set $java$lang$Integer $value (ref.cast (ref null $java$lang$Integer) (local.get $var1)) (local.get $arg2))
        (local.set $phi2 (local.get $var1))
        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var0))) (i32.const 1) (local.get $phi2))
        (drop (call $jdk$internal$util$Preconditions_i))
        (return (call $jdk$internal$util$Preconditions$Ljava$lang$RuntimeException$$outOfBounds$Ljava$util$function$BiFunction$$Ljava$lang$String$$$Ljava$lang$Number$ (call $jdk$internal$util$Preconditions_i) (local.get $arg0) (global.get $stringpool_81) (local.get $var0)))
        (unreachable))
    (func $java$nio$Buffer$V$$clinit$$$ (type $t541) (param $unused (ref null $java$lang$Object))
        (local $phi0 i32)
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $phi3 (ref null $java$lang$Object))
        (local $phi4 (ref null $java$lang$Object))
        ;; startBlock type=NORMAL, label = If_4_0
        (block $If_4_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ne (call $java$lang$Class$Z$desiredAssertionStatus$$ (call $java$nio$Buffer_i)) (i32.const 0))
                (then
                    (local.set $phi0 (i32.const 0))
                    (br $If_4_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi0 (i32.const 1))
                    (br $If_4_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (drop (call $java$nio$Buffer_i))
        (struct.set $java$nio$Buffer_rtt $$assertionsDisabled (ref.cast (ref null $java$nio$Buffer_rtt) (call $java$nio$Buffer_i)) (local.get $phi0))
        (drop (call $jdk$internal$misc$Unsafe_i))
        (drop (call $jdk$internal$misc$Unsafe_i))
        (local.set $phi4 (struct.get $jdk$internal$misc$Unsafe_rtt $INSTANCE (global.get $jdk$internal$misc$Unsafe_cls)))
        (local.set $var1 (local.get $phi4))
        (drop (call $java$nio$Buffer_i))
        (struct.set $java$nio$Buffer_rtt $UNSAFE (ref.cast (ref null $java$nio$Buffer_rtt) (call $java$nio$Buffer_i)) (ref.cast (ref null $java$lang$Object) (local.get $var1)))
        (drop (call $jdk$internal$misc$ScopedMemoryAccess_i))
        (drop (call $jdk$internal$misc$ScopedMemoryAccess_i))
        (local.set $phi3 (struct.get $jdk$internal$misc$ScopedMemoryAccess_rtt $theScopedMemoryAccess (global.get $jdk$internal$misc$ScopedMemoryAccess_cls)))
        (local.set $var2 (local.get $phi3))
        (drop (call $java$nio$Buffer_i))
        (struct.set $java$nio$Buffer_rtt $SCOPED_MEMORY_ACCESS (ref.cast (ref null $java$nio$Buffer_rtt) (call $java$nio$Buffer_i)) (ref.cast (ref null $java$lang$Object) (local.get $var2)))
        (struct.set $jdk$internal$access$SharedSecrets_rtt $javaNioAccess (ref.cast (ref null $jdk$internal$access$SharedSecrets_rtt) (global.get $jdk$internal$access$SharedSecrets_cls)) (ref.cast (ref null $java$lang$Object) (struct.new $java$nio$Buffer$1 (struct.get $java$nio$Buffer$1_rtt $factoryFor (global.get $java$nio$Buffer$1_cls)) (ref.func $java$nio$Buffer$1_vt) (ref.null noextern) (struct.get $java$nio$Buffer$1_rtt $classImplTypes (global.get $java$nio$Buffer$1_cls)))))
        (return)
        (unreachable))
    (func $java$nio$Buffer$V$$init$$I$I$I$I$Ljava$lang$foreign$MemorySegment$ (type $t574) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (param $arg1 i32) (param $arg2 i32) (param $arg3 i32) (param $arg4 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $var6 (ref null $java$lang$Object))
        (local $var7 (ref null $java$lang$Object))
        (local $var8 (ref null $java$lang$Object))
        (local $var9 (ref null $java$lang$Object))
        (local $phi10 (ref null $java$lang$Object))
        (local $phi11 i32)
        (local $phi12 i32)
        (local $phi13 i32)
        (local $phi14 i32)
        (local $phi15 (ref null $java$lang$Object))
        (local $var16 (ref null $java$lang$Object))
        (local $phi17 (ref null $java$lang$Object))
        (local $var18 (ref null $java$lang$Object))
        (local $phi19 (ref null $java$lang$Object))
        (local $phi20 (ref null $java$lang$Object))
        (local $phi21 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$nio$Buffer $mark (ref.cast (ref null $java$nio$Buffer) (local.get $var0)) (i32.const -1))
        (struct.set $java$nio$Buffer $position (ref.cast (ref null $java$nio$Buffer) (local.get $var0)) (i32.const 0))
        ;; writeIfAndStartTrueBlock
        (if $if0 (i32.ge_s (local.get $arg3) (i32.const 0))
            (then
                (struct.set $java$nio$Buffer $capacity (ref.cast (ref null $java$nio$Buffer) (local.get $var0)) (local.get $arg3))
                (struct.set $java$nio$Buffer $segment (ref.cast (ref null $java$nio$Buffer) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg4)))
                (local.set $var1 (call_indirect (type $t565) (local.get $var0) (local.get $arg2) (call_ref $t0 (i32.const 14) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
                (local.set $var2 (call_indirect (type $t565) (local.get $var0) (local.get $arg1) (call_ref $t0 (i32.const 16) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
                ;; startBlock type=NORMAL, label = If_28_0
                (block $If_28_0
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (i32.lt_s (local.get $arg0) (i32.const 0))
                        (then
                            (local.set $phi10 (local.get $var0))
                            (local.set $phi11 (local.get $arg0))
                            (local.set $phi12 (local.get $arg1))
                            (local.set $phi13 (local.get $arg2))
                            (local.set $phi14 (local.get $arg3))
                            (local.set $phi15 (local.get $arg4))
                            (br $If_28_0)
                            ;; Start else
                            )(else
                            ;; writeIfAndStartTrueBlock
                            (if $if2 (i32.le_s (local.get $arg0) (local.get $arg1))
                                (then
                                    (struct.set $java$nio$Buffer $mark (ref.cast (ref null $java$nio$Buffer) (local.get $var0)) (local.get $arg0))
                                    (local.set $phi10 (local.get $var0))
                                    (local.set $phi11 (local.get $arg0))
                                    (local.set $phi12 (local.get $arg1))
                                    (local.set $phi13 (local.get $arg2))
                                    (local.set $phi14 (local.get $arg3))
                                    (local.set $phi15 (local.get $arg4))
                                    (br $If_28_0)
                                    ;; Start else
                                    )(else
                                    (local.set $var3 (struct.new $java$lang$IllegalArgumentException (struct.get $java$lang$IllegalArgumentException_rtt $factoryFor (global.get $java$lang$IllegalArgumentException_cls)) (ref.func $java$lang$IllegalArgumentException_vt) (ref.null noextern) (struct.get $java$lang$IllegalArgumentException_rtt $classImplTypes (global.get $java$lang$IllegalArgumentException_cls)) (ref.null none) (ref.null none)))
                                    (local.set $var4 (struct.new $java$lang$StringBuilder (struct.get $java$lang$StringBuilder_rtt $factoryFor (global.get $java$lang$StringBuilder_cls)) (ref.func $java$lang$StringBuilder_vt) (ref.null noextern) (struct.get $java$lang$StringBuilder_rtt $classImplTypes (global.get $java$lang$StringBuilder_cls))))
                                    (call $java$lang$StringBuilder$V$initializeWith$I (local.get $var4) (i32.const 10))
                                    (local.set $var5 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var4) (global.get $stringpool_31)))
                                    (drop (call $java$lang$Integer_i))
                                    (drop (call $java$lang$Integer_i))
                                    (local.set $phi20 (call $java$lang$Integer$Ljava$lang$String$$toString$I$I (call $java$lang$Integer_i) (local.get $arg0) (i32.const 10)))
                                    (local.set $var18 (local.get $phi20))
                                    (local.set $phi19 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var5) (local.get $var18)))
                                    (local.set $var6 (local.get $phi19))
                                    (local.set $var7 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var6) (global.get $stringpool_24)))
                                    (drop (call $java$lang$Integer_i))
                                    (local.set $phi21 (call $java$lang$Integer$Ljava$lang$String$$toString$I$I (call $java$lang$Integer_i) (local.get $arg1) (i32.const 10)))
                                    (local.set $var16 (local.get $phi21))
                                    (local.set $phi17 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var7) (local.get $var16)))
                                    (local.set $var8 (local.get $phi17))
                                    (local.set $var9 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var8) (global.get $stringpool_25)))
                                    (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var3)) (ref.cast (ref null $java$lang$Object) (call $java$lang$StringBuilder$Ljava$lang$String$$toString$$ (local.get $var9))))
                                    (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var3)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                    (throw $javaexception (local.get $var3))
                                    ))
                            ;; finishIfBlock
                            ))
                    ;; finishIfBlock
                    )
                ;; finishBlock
                (return)
                ;; Start else
                )(else
                (drop (call $java$nio$Buffer_i))
                (throw $javaexception (call $java$nio$Buffer$Ljava$lang$IllegalArgumentException$$createCapacityException$I (call $java$nio$Buffer_i) (local.get $arg3)))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$nio$Buffer$Ljava$lang$IllegalArgumentException$$createCapacityException$I (type $t565) (param $unused (ref null $java$lang$Object)) (param $arg0 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 i32)
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $var5 i32)
        (local $var6 (ref null $java$lang$Object))
        (local $var7 (ref null $java$lang$Object))
        (local $var8 (ref null $java$lang$Object))
        (local $var9 (ref null $java$lang$Object))
        (local $phi10 (ref null $java$lang$Object))
        (local $phi11 (ref null $java$lang$Object))
        (local $phi12 (ref null $java$lang$Object))
        (local $var13 (ref null $java$lang$Object))
        (local $phi14 (ref null $java$lang$Object))
        (local $phi15 (ref null $java$lang$Object))
        (drop (call $java$nio$Buffer_i))
        ;; startBlock type=NORMAL, label = If_5_0
        (block $If_5_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ne (struct.get $java$nio$Buffer_rtt $$assertionsDisabled (global.get $java$nio$Buffer_cls)) (i32.const 0))
                (then
                    (local.set $phi1 (local.get $arg0))
                    (br $If_5_0)
                    ;; Start else
                    )(else
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (i32.lt_s (local.get $arg0) (i32.const 0))
                        (then
                            (local.set $phi1 (local.get $arg0))
                            (br $If_5_0)
                            ;; Start else
                            )(else
                            (local.set $var0 (struct.new $java$lang$AssertionError (struct.get $java$lang$AssertionError_rtt $factoryFor (global.get $java$lang$AssertionError_cls)) (ref.func $java$lang$AssertionError_vt) (ref.null noextern) (struct.get $java$lang$AssertionError_rtt $classImplTypes (global.get $java$lang$AssertionError_cls)) (ref.null none) (ref.null none)))
                            ;; startBlock type=NORMAL, label = If_62_0
                            (block $If_62_0
                                ;; writeIfAndStartTrueBlock
                                (if $if2 (select (i32.const 0) (i32.const 1) (ref.is_null (global.get $stringpool_20)))
                                    (then
                                        (local.set $phi12 (call_indirect (type $t553) (global.get $stringpool_20) (call_ref $t0 (i32.const 0) (struct.get $java$lang$Object $vt_resolver (global.get $stringpool_20)))))
                                        (br $If_62_0)
                                        ;; Start else
                                        )(else
                                        (local.set $phi12 (global.get $stringpool_0))
                                        (br $If_62_0)
                                        ))
                                ;; finishIfBlock
                                )
                            ;; finishBlock
                            (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $phi12)))
                            (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                            ;; startBlock type=NORMAL, label = If_46_0
                            (block $If_46_0
                                ;; writeIfAndStartTrueBlock
                                (if $if3 (i32.eq (call $instanceOf (global.get $stringpool_20) (i32.const 62)) (i32.const 0))
                                    (then
                                        (local.set $phi10 (local.get $var0))
                                        (local.set $phi11 (global.get $stringpool_20))
                                        (br $If_46_0)
                                        ;; Start else
                                        )(else
                                        (local.set $var8 (ref.cast (ref null $java$lang$Object) (global.get $stringpool_20)))
                                        (local.set $var9 (call_indirect (type $t559) (local.get $var0) (local.get $var8) (call_ref $t0 (i32.const 65) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
                                        (local.set $phi10 (local.get $var0))
                                        (local.set $phi11 (global.get $stringpool_20))
                                        (br $If_46_0)
                                        ))
                                ;; finishIfBlock
                                )
                            ;; finishBlock
                            (throw $javaexception (local.get $var0))
                            ))
                    ;; finishIfBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (local.set $var2 (struct.new $java$lang$IllegalArgumentException (struct.get $java$lang$IllegalArgumentException_rtt $factoryFor (global.get $java$lang$IllegalArgumentException_cls)) (ref.func $java$lang$IllegalArgumentException_vt) (ref.null noextern) (struct.get $java$lang$IllegalArgumentException_rtt $classImplTypes (global.get $java$lang$IllegalArgumentException_cls)) (ref.null none) (ref.null none)))
        (local.set $var3 (struct.new $java$lang$StringBuilder (struct.get $java$lang$StringBuilder_rtt $factoryFor (global.get $java$lang$StringBuilder_cls)) (ref.func $java$lang$StringBuilder_vt) (ref.null noextern) (struct.get $java$lang$StringBuilder_rtt $classImplTypes (global.get $java$lang$StringBuilder_cls))))
        (call $java$lang$StringBuilder$V$initializeWith$I (local.get $var3) (i32.const 10))
        (local.set $var4 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var3) (global.get $stringpool_21)))
        (local.set $var5 (local.get $phi1))
        (drop (call $java$lang$Integer_i))
        (drop (call $java$lang$Integer_i))
        (local.set $phi15 (call $java$lang$Integer$Ljava$lang$String$$toString$I$I (call $java$lang$Integer_i) (local.get $var5) (i32.const 10)))
        (local.set $var13 (local.get $phi15))
        (local.set $phi14 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var4) (local.get $var13)))
        (local.set $var6 (local.get $phi14))
        (local.set $var7 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var6) (global.get $stringpool_22)))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var2)) (ref.cast (ref null $java$lang$Object) (call $java$lang$StringBuilder$Ljava$lang$String$$toString$$ (local.get $var7))))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var2)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return (local.get $var2))
        (unreachable))
    (func $java$nio$Buffer$Ljava$nio$Buffer$$limit$I (type $t565) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 i32)
        (local $phi3 i32)
        (local $phi4 i32)
        (local $var5 (ref null $java$lang$Object))
        (local $var6 i32)
        (local $var7 (ref null $java$lang$Object))
        (local $var8 (ref null $java$lang$Object))
        (local $var9 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = If_6_0
        (block $If_6_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.le_s (local.get $arg0) (struct.get $java$nio$Buffer $capacity (ref.cast (ref null $java$nio$Buffer) (local.get $var0))))
                (then
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (local.get $arg0))
                    (local.set $phi3 (i32.const 0))
                    (br $If_6_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (local.get $arg0))
                    (local.set $phi3 (i32.const 1))
                    (br $If_6_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        ;; startBlock type=NORMAL, label = If_14_0
        (block $If_14_0
            ;; writeIfAndStartTrueBlock
            (if $if1 (i32.ge_s (local.get $phi2) (i32.const 0))
                (then
                    (local.set $phi4 (i32.const 0))
                    (br $If_14_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi4 (i32.const 1))
                    (br $If_14_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        ;; writeIfAndStartTrueBlock
        (if $if2 (i32.eq (i32.or (local.get $phi3) (local.get $phi4)) (i32.const 0))
            (then
                (local.set $var7 (local.get $phi1))
                (struct.set $java$nio$Buffer $limit (ref.cast (ref null $java$nio$Buffer) (local.get $var7)) (local.get $phi2))
                ;; startBlock type=NORMAL, label = If_35_0
                (block $If_35_0
                    ;; writeIfAndStartTrueBlock
                    (if $if3 (i32.le_s (struct.get $java$nio$Buffer $position (ref.cast (ref null $java$nio$Buffer) (local.get $phi1))) (local.get $phi2))
                        (then
                            (br $If_35_0)
                            ;; Start else
                            )(else
                            (local.set $var8 (local.get $phi1))
                            (struct.set $java$nio$Buffer $position (ref.cast (ref null $java$nio$Buffer) (local.get $var8)) (local.get $phi2))
                            (br $If_35_0)
                            ))
                    ;; finishIfBlock
                    )
                ;; finishBlock
                ;; startBlock type=NORMAL, label = If_42_0
                (block $If_42_0
                    ;; writeIfAndStartTrueBlock
                    (if $if4 (i32.le_s (struct.get $java$nio$Buffer $mark (ref.cast (ref null $java$nio$Buffer) (local.get $phi1))) (local.get $phi2))
                        (then
                            (br $If_42_0)
                            ;; Start else
                            )(else
                            (local.set $var9 (local.get $phi1))
                            (struct.set $java$nio$Buffer $mark (ref.cast (ref null $java$nio$Buffer) (local.get $var9)) (i32.const -1))
                            (br $If_42_0)
                            ))
                    ;; finishIfBlock
                    )
                ;; finishBlock
                (return (local.get $phi1))
                ;; Start else
                )(else
                (local.set $var5 (local.get $phi1))
                (local.set $var6 (local.get $phi2))
                (throw $javaexception (call $java$nio$Buffer$Ljava$lang$IllegalArgumentException$$createLimitException$I (local.get $var5) (local.get $var6)))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$nio$Buffer$Ljava$lang$IllegalArgumentException$$createLimitException$I (type $t565) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $var5 i32)
        (local $var6 (ref null $java$lang$Object))
        (local $var7 (ref null $java$lang$Object))
        (local $var8 (ref null $java$lang$Object))
        (local $phi9 (ref null $java$lang$Object))
        (local $phi10 i32)
        (local $phi11 (ref null $java$lang$Object))
        (local $var12 (ref null $java$lang$Object))
        (local $var13 (ref null $java$lang$Object))
        (local $phi14 (ref null $java$lang$Object))
        (local $phi15 i32)
        (local $phi16 (ref null $java$lang$Object))
        (local $var17 (ref null $java$lang$Object))
        (local $var18 (ref null $java$lang$Object))
        (local $var19 i32)
        (local $var20 (ref null $java$lang$Object))
        (local $var21 (ref null $java$lang$Object))
        (local $var22 (ref null $java$lang$Object))
        (local $var23 (ref null $java$lang$Object))
        (local $var24 (ref null $java$lang$Object))
        (local $phi25 (ref null $java$lang$Object))
        (local $phi26 (ref null $java$lang$Object))
        (local $phi27 (ref null $java$lang$Object))
        (local $var28 (ref null $java$lang$Object))
        (local $phi29 (ref null $java$lang$Object))
        (local $var30 (ref null $java$lang$Object))
        (local $phi31 (ref null $java$lang$Object))
        (local $var32 (ref null $java$lang$Object))
        (local $phi33 (ref null $java$lang$Object))
        (local $phi34 (ref null $java$lang$Object))
        (local $phi35 (ref null $java$lang$Object))
        (local $phi36 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = If_7_0
        (block $If_7_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.le_s (local.get $arg0) (struct.get $java$nio$Buffer $capacity (ref.cast (ref null $java$nio$Buffer) (local.get $var0))))
                (then
                    (drop (call $java$nio$Buffer_i))
                    ;; startBlock type=NORMAL, label = If_48_0
                    (block $If_48_0
                        ;; writeIfAndStartTrueBlock
                        (if $if1 (i32.ne (struct.get $java$nio$Buffer_rtt $$assertionsDisabled (global.get $java$nio$Buffer_cls)) (i32.const 0))
                            (then
                                (local.set $phi14 (local.get $var0))
                                (local.set $phi15 (local.get $arg0))
                                (local.set $phi16 (ref.null none))
                                (br $If_48_0)
                                ;; Start else
                                )(else
                                ;; writeIfAndStartTrueBlock
                                (if $if2 (i32.lt_s (local.get $arg0) (i32.const 0))
                                    (then
                                        (local.set $phi14 (local.get $var0))
                                        (local.set $phi15 (local.get $arg0))
                                        (local.set $phi16 (ref.null none))
                                        (br $If_48_0)
                                        ;; Start else
                                        )(else
                                        (local.set $var13 (struct.new $java$lang$AssertionError (struct.get $java$lang$AssertionError_rtt $factoryFor (global.get $java$lang$AssertionError_cls)) (ref.func $java$lang$AssertionError_vt) (ref.null noextern) (struct.get $java$lang$AssertionError_rtt $classImplTypes (global.get $java$lang$AssertionError_cls)) (ref.null none) (ref.null none)))
                                        ;; startBlock type=NORMAL, label = If_113_0
                                        (block $If_113_0
                                            ;; writeIfAndStartTrueBlock
                                            (if $if3 (select (i32.const 0) (i32.const 1) (ref.is_null (global.get $stringpool_26)))
                                                (then
                                                    (local.set $phi27 (call_indirect (type $t553) (global.get $stringpool_26) (call_ref $t0 (i32.const 0) (struct.get $java$lang$Object $vt_resolver (global.get $stringpool_26)))))
                                                    (br $If_113_0)
                                                    ;; Start else
                                                    )(else
                                                    (local.set $phi27 (global.get $stringpool_0))
                                                    (br $If_113_0)
                                                    ))
                                            ;; finishIfBlock
                                            )
                                        ;; finishBlock
                                        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var13)) (ref.cast (ref null $java$lang$Object) (local.get $phi27)))
                                        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var13)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                        ;; startBlock type=NORMAL, label = If_97_0
                                        (block $If_97_0
                                            ;; writeIfAndStartTrueBlock
                                            (if $if4 (i32.eq (call $instanceOf (global.get $stringpool_26) (i32.const 62)) (i32.const 0))
                                                (then
                                                    (local.set $phi25 (local.get $var13))
                                                    (local.set $phi26 (global.get $stringpool_26))
                                                    (br $If_97_0)
                                                    ;; Start else
                                                    )(else
                                                    (local.set $var23 (ref.cast (ref null $java$lang$Object) (global.get $stringpool_26)))
                                                    (local.set $var24 (call_indirect (type $t559) (local.get $var13) (local.get $var23) (call_ref $t0 (i32.const 65) (struct.get $java$lang$Object $vt_resolver (local.get $var13)))))
                                                    (local.set $phi25 (local.get $var13))
                                                    (local.set $phi26 (global.get $stringpool_26))
                                                    (br $If_97_0)
                                                    ))
                                            ;; finishIfBlock
                                            )
                                        ;; finishBlock
                                        (throw $javaexception (local.get $var13))
                                        ))
                                ;; finishIfBlock
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    (local.set $var17 (struct.new $java$lang$StringBuilder (struct.get $java$lang$StringBuilder_rtt $factoryFor (global.get $java$lang$StringBuilder_cls)) (ref.func $java$lang$StringBuilder_vt) (ref.null noextern) (struct.get $java$lang$StringBuilder_rtt $classImplTypes (global.get $java$lang$StringBuilder_cls))))
                    (call $java$lang$StringBuilder$V$initializeWith$I (local.get $var17) (i32.const 10))
                    (local.set $var18 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var17) (global.get $stringpool_27)))
                    (local.set $var19 (local.get $phi15))
                    (drop (call $java$lang$Integer_i))
                    (drop (call $java$lang$Integer_i))
                    (local.set $phi36 (call $java$lang$Integer$Ljava$lang$String$$toString$I$I (call $java$lang$Integer_i) (local.get $var19) (i32.const 10)))
                    (local.set $var28 (local.get $phi36))
                    (local.set $phi29 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var18) (local.get $var28)))
                    (local.set $var20 (local.get $phi29))
                    (local.set $var21 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var20) (global.get $stringpool_22)))
                    (local.set $var22 (call $java$lang$StringBuilder$Ljava$lang$String$$toString$$ (local.get $var21)))
                    (local.set $phi9 (local.get $phi14))
                    (local.set $phi10 (local.get $phi15))
                    (local.set $phi11 (local.get $var22))
                    (br $If_7_0)
                    ;; Start else
                    )(else
                    (local.set $var1 (struct.new $java$lang$StringBuilder (struct.get $java$lang$StringBuilder_rtt $factoryFor (global.get $java$lang$StringBuilder_cls)) (ref.func $java$lang$StringBuilder_vt) (ref.null noextern) (struct.get $java$lang$StringBuilder_rtt $classImplTypes (global.get $java$lang$StringBuilder_cls))))
                    (call $java$lang$StringBuilder$V$initializeWith$I (local.get $var1) (i32.const 10))
                    (local.set $var2 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var1) (global.get $stringpool_23)))
                    (drop (call $java$lang$Integer_i))
                    (drop (call $java$lang$Integer_i))
                    (local.set $phi34 (call $java$lang$Integer$Ljava$lang$String$$toString$I$I (call $java$lang$Integer_i) (local.get $arg0) (i32.const 10)))
                    (local.set $var32 (local.get $phi34))
                    (local.set $phi33 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var2) (local.get $var32)))
                    (local.set $var3 (local.get $phi33))
                    (local.set $var4 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var3) (global.get $stringpool_24)))
                    (local.set $var5 (struct.get $java$nio$Buffer $capacity (ref.cast (ref null $java$nio$Buffer) (local.get $var0))))
                    (drop (call $java$lang$Integer_i))
                    (local.set $phi35 (call $java$lang$Integer$Ljava$lang$String$$toString$I$I (call $java$lang$Integer_i) (local.get $var5) (i32.const 10)))
                    (local.set $var30 (local.get $phi35))
                    (local.set $phi31 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var4) (local.get $var30)))
                    (local.set $var6 (local.get $phi31))
                    (local.set $var7 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var6) (global.get $stringpool_25)))
                    (local.set $var8 (call $java$lang$StringBuilder$Ljava$lang$String$$toString$$ (local.get $var7)))
                    ;; Here was a goto statement
                    (local.set $phi9 (local.get $var0))
                    (local.set $phi10 (local.get $arg0))
                    (local.set $phi11 (local.get $var8))
                    (br $If_7_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (local.set $var12 (struct.new $java$lang$IllegalArgumentException (struct.get $java$lang$IllegalArgumentException_rtt $factoryFor (global.get $java$lang$IllegalArgumentException_cls)) (ref.func $java$lang$IllegalArgumentException_vt) (ref.null noextern) (struct.get $java$lang$IllegalArgumentException_rtt $classImplTypes (global.get $java$lang$IllegalArgumentException_cls)) (ref.null none) (ref.null none)))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var12)) (ref.cast (ref null $java$lang$Object) (local.get $phi11)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var12)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return (local.get $var12))
        (unreachable))
    (func $java$nio$Buffer$Ljava$nio$Buffer$$position$I (type $t565) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 i32)
        (local $phi3 i32)
        (local $phi4 i32)
        (local $var5 (ref null $java$lang$Object))
        (local $var6 i32)
        (local $var7 (ref null $java$lang$Object))
        (local $var8 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = If_6_0
        (block $If_6_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.le_s (local.get $arg0) (struct.get $java$nio$Buffer $limit (ref.cast (ref null $java$nio$Buffer) (local.get $var0))))
                (then
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (local.get $arg0))
                    (local.set $phi3 (i32.const 0))
                    (br $If_6_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (local.get $arg0))
                    (local.set $phi3 (i32.const 1))
                    (br $If_6_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        ;; startBlock type=NORMAL, label = If_14_0
        (block $If_14_0
            ;; writeIfAndStartTrueBlock
            (if $if1 (i32.ge_s (local.get $phi2) (i32.const 0))
                (then
                    (local.set $phi4 (i32.const 0))
                    (br $If_14_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi4 (i32.const 1))
                    (br $If_14_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        ;; writeIfAndStartTrueBlock
        (if $if2 (i32.eq (i32.or (local.get $phi3) (local.get $phi4)) (i32.const 0))
            (then
                ;; startBlock type=NORMAL, label = If_32_0
                (block $If_32_0
                    ;; writeIfAndStartTrueBlock
                    (if $if3 (i32.le_s (struct.get $java$nio$Buffer $mark (ref.cast (ref null $java$nio$Buffer) (local.get $phi1))) (local.get $phi2))
                        (then
                            (br $If_32_0)
                            ;; Start else
                            )(else
                            (local.set $var7 (local.get $phi1))
                            (struct.set $java$nio$Buffer $mark (ref.cast (ref null $java$nio$Buffer) (local.get $var7)) (i32.const -1))
                            (br $If_32_0)
                            ))
                    ;; finishIfBlock
                    )
                ;; finishBlock
                (local.set $var8 (local.get $phi1))
                (struct.set $java$nio$Buffer $position (ref.cast (ref null $java$nio$Buffer) (local.get $var8)) (local.get $phi2))
                (return (local.get $phi1))
                ;; Start else
                )(else
                (local.set $var5 (local.get $phi1))
                (local.set $var6 (local.get $phi2))
                (throw $javaexception (call $java$nio$Buffer$Ljava$lang$IllegalArgumentException$$createPositionException$I (local.get $var5) (local.get $var6)))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$nio$Buffer$Ljava$lang$IllegalArgumentException$$createPositionException$I (type $t565) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $var5 i32)
        (local $var6 (ref null $java$lang$Object))
        (local $var7 (ref null $java$lang$Object))
        (local $var8 (ref null $java$lang$Object))
        (local $phi9 (ref null $java$lang$Object))
        (local $phi10 i32)
        (local $phi11 (ref null $java$lang$Object))
        (local $var12 (ref null $java$lang$Object))
        (local $var13 (ref null $java$lang$Object))
        (local $phi14 (ref null $java$lang$Object))
        (local $phi15 i32)
        (local $phi16 (ref null $java$lang$Object))
        (local $var17 (ref null $java$lang$Object))
        (local $var18 (ref null $java$lang$Object))
        (local $var19 i32)
        (local $var20 (ref null $java$lang$Object))
        (local $var21 (ref null $java$lang$Object))
        (local $var22 (ref null $java$lang$Object))
        (local $var23 (ref null $java$lang$Object))
        (local $var24 (ref null $java$lang$Object))
        (local $phi25 (ref null $java$lang$Object))
        (local $phi26 (ref null $java$lang$Object))
        (local $phi27 (ref null $java$lang$Object))
        (local $var28 (ref null $java$lang$Object))
        (local $phi29 (ref null $java$lang$Object))
        (local $var30 (ref null $java$lang$Object))
        (local $phi31 (ref null $java$lang$Object))
        (local $var32 (ref null $java$lang$Object))
        (local $phi33 (ref null $java$lang$Object))
        (local $phi34 (ref null $java$lang$Object))
        (local $phi35 (ref null $java$lang$Object))
        (local $phi36 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = If_7_0
        (block $If_7_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.le_s (local.get $arg0) (struct.get $java$nio$Buffer $limit (ref.cast (ref null $java$nio$Buffer) (local.get $var0))))
                (then
                    (drop (call $java$nio$Buffer_i))
                    ;; startBlock type=NORMAL, label = If_48_0
                    (block $If_48_0
                        ;; writeIfAndStartTrueBlock
                        (if $if1 (i32.ne (struct.get $java$nio$Buffer_rtt $$assertionsDisabled (global.get $java$nio$Buffer_cls)) (i32.const 0))
                            (then
                                (local.set $phi14 (local.get $var0))
                                (local.set $phi15 (local.get $arg0))
                                (local.set $phi16 (ref.null none))
                                (br $If_48_0)
                                ;; Start else
                                )(else
                                ;; writeIfAndStartTrueBlock
                                (if $if2 (i32.lt_s (local.get $arg0) (i32.const 0))
                                    (then
                                        (local.set $phi14 (local.get $var0))
                                        (local.set $phi15 (local.get $arg0))
                                        (local.set $phi16 (ref.null none))
                                        (br $If_48_0)
                                        ;; Start else
                                        )(else
                                        (local.set $var13 (struct.new $java$lang$AssertionError (struct.get $java$lang$AssertionError_rtt $factoryFor (global.get $java$lang$AssertionError_cls)) (ref.func $java$lang$AssertionError_vt) (ref.null noextern) (struct.get $java$lang$AssertionError_rtt $classImplTypes (global.get $java$lang$AssertionError_cls)) (ref.null none) (ref.null none)))
                                        ;; startBlock type=NORMAL, label = If_113_0
                                        (block $If_113_0
                                            ;; writeIfAndStartTrueBlock
                                            (if $if3 (select (i32.const 0) (i32.const 1) (ref.is_null (global.get $stringpool_29)))
                                                (then
                                                    (local.set $phi27 (call_indirect (type $t553) (global.get $stringpool_29) (call_ref $t0 (i32.const 0) (struct.get $java$lang$Object $vt_resolver (global.get $stringpool_29)))))
                                                    (br $If_113_0)
                                                    ;; Start else
                                                    )(else
                                                    (local.set $phi27 (global.get $stringpool_0))
                                                    (br $If_113_0)
                                                    ))
                                            ;; finishIfBlock
                                            )
                                        ;; finishBlock
                                        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var13)) (ref.cast (ref null $java$lang$Object) (local.get $phi27)))
                                        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var13)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                        ;; startBlock type=NORMAL, label = If_97_0
                                        (block $If_97_0
                                            ;; writeIfAndStartTrueBlock
                                            (if $if4 (i32.eq (call $instanceOf (global.get $stringpool_29) (i32.const 62)) (i32.const 0))
                                                (then
                                                    (local.set $phi25 (local.get $var13))
                                                    (local.set $phi26 (global.get $stringpool_29))
                                                    (br $If_97_0)
                                                    ;; Start else
                                                    )(else
                                                    (local.set $var23 (ref.cast (ref null $java$lang$Object) (global.get $stringpool_29)))
                                                    (local.set $var24 (call_indirect (type $t559) (local.get $var13) (local.get $var23) (call_ref $t0 (i32.const 65) (struct.get $java$lang$Object $vt_resolver (local.get $var13)))))
                                                    (local.set $phi25 (local.get $var13))
                                                    (local.set $phi26 (global.get $stringpool_29))
                                                    (br $If_97_0)
                                                    ))
                                            ;; finishIfBlock
                                            )
                                        ;; finishBlock
                                        (throw $javaexception (local.get $var13))
                                        ))
                                ;; finishIfBlock
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    (local.set $var17 (struct.new $java$lang$StringBuilder (struct.get $java$lang$StringBuilder_rtt $factoryFor (global.get $java$lang$StringBuilder_cls)) (ref.func $java$lang$StringBuilder_vt) (ref.null noextern) (struct.get $java$lang$StringBuilder_rtt $classImplTypes (global.get $java$lang$StringBuilder_cls))))
                    (call $java$lang$StringBuilder$V$initializeWith$I (local.get $var17) (i32.const 10))
                    (local.set $var18 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var17) (global.get $stringpool_30)))
                    (local.set $var19 (local.get $phi15))
                    (drop (call $java$lang$Integer_i))
                    (drop (call $java$lang$Integer_i))
                    (local.set $phi36 (call $java$lang$Integer$Ljava$lang$String$$toString$I$I (call $java$lang$Integer_i) (local.get $var19) (i32.const 10)))
                    (local.set $var28 (local.get $phi36))
                    (local.set $phi29 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var18) (local.get $var28)))
                    (local.set $var20 (local.get $phi29))
                    (local.set $var21 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var20) (global.get $stringpool_22)))
                    (local.set $var22 (call $java$lang$StringBuilder$Ljava$lang$String$$toString$$ (local.get $var21)))
                    (local.set $phi9 (local.get $phi14))
                    (local.set $phi10 (local.get $phi15))
                    (local.set $phi11 (local.get $var22))
                    (br $If_7_0)
                    ;; Start else
                    )(else
                    (local.set $var1 (struct.new $java$lang$StringBuilder (struct.get $java$lang$StringBuilder_rtt $factoryFor (global.get $java$lang$StringBuilder_cls)) (ref.func $java$lang$StringBuilder_vt) (ref.null noextern) (struct.get $java$lang$StringBuilder_rtt $classImplTypes (global.get $java$lang$StringBuilder_cls))))
                    (call $java$lang$StringBuilder$V$initializeWith$I (local.get $var1) (i32.const 10))
                    (local.set $var2 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var1) (global.get $stringpool_28)))
                    (drop (call $java$lang$Integer_i))
                    (drop (call $java$lang$Integer_i))
                    (local.set $phi34 (call $java$lang$Integer$Ljava$lang$String$$toString$I$I (call $java$lang$Integer_i) (local.get $arg0) (i32.const 10)))
                    (local.set $var32 (local.get $phi34))
                    (local.set $phi33 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var2) (local.get $var32)))
                    (local.set $var3 (local.get $phi33))
                    (local.set $var4 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var3) (global.get $stringpool_24)))
                    (local.set $var5 (struct.get $java$nio$Buffer $limit (ref.cast (ref null $java$nio$Buffer) (local.get $var0))))
                    (drop (call $java$lang$Integer_i))
                    (local.set $phi35 (call $java$lang$Integer$Ljava$lang$String$$toString$I$I (call $java$lang$Integer_i) (local.get $var5) (i32.const 10)))
                    (local.set $var30 (local.get $phi35))
                    (local.set $phi31 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var4) (local.get $var30)))
                    (local.set $var6 (local.get $phi31))
                    (local.set $var7 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var6) (global.get $stringpool_25)))
                    (local.set $var8 (call $java$lang$StringBuilder$Ljava$lang$String$$toString$$ (local.get $var7)))
                    ;; Here was a goto statement
                    (local.set $phi9 (local.get $var0))
                    (local.set $phi10 (local.get $arg0))
                    (local.set $phi11 (local.get $var8))
                    (br $If_7_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (local.set $var12 (struct.new $java$lang$IllegalArgumentException (struct.get $java$lang$IllegalArgumentException_rtt $factoryFor (global.get $java$lang$IllegalArgumentException_cls)) (ref.func $java$lang$IllegalArgumentException_vt) (ref.null noextern) (struct.get $java$lang$IllegalArgumentException_rtt $classImplTypes (global.get $java$lang$IllegalArgumentException_cls)) (ref.null none) (ref.null none)))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var12)) (ref.cast (ref null $java$lang$Object) (local.get $phi11)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var12)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return (local.get $var12))
        (unreachable))
    (func $java$nio$Buffer$I$remaining$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 i32)
        (local $var2 i32)
        (local $phi3 (ref null $java$lang$Object))
        (local $phi4 i32)
        (local $phi5 i32)
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (struct.get $java$nio$Buffer $limit (ref.cast (ref null $java$nio$Buffer) (local.get $var0))))
        (local.set $var2 (i32.sub (local.get $var1) (struct.get $java$nio$Buffer $position (ref.cast (ref null $java$nio$Buffer) (local.get $var0)))))
        ;; startBlock type=NORMAL, label = If_11_0
        (block $If_11_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.le_s (local.get $var2) (i32.const 0))
                (then
                    (local.set $phi3 (local.get $var0))
                    (local.set $phi4 (local.get $var2))
                    (local.set $phi5 (i32.const 0))
                    (br $If_11_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi3 (local.get $var0))
                    (local.set $phi4 (local.get $var2))
                    (local.set $phi5 (local.get $var2))
                    (br $If_11_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi5))
        (unreachable))
    (func $java$nio$Buffer$Z$hasRemaining$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 i32)
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 i32)
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (struct.get $java$nio$Buffer $position (ref.cast (ref null $java$nio$Buffer) (local.get $var0))))
        ;; startBlock type=NORMAL, label = If_8_0
        (block $If_8_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ge_s (local.get $var1) (struct.get $java$nio$Buffer $limit (ref.cast (ref null $java$nio$Buffer) (local.get $var0))))
                (then
                    (local.set $phi2 (local.get $var0))
                    (local.set $phi3 (i32.const 0))
                    (br $If_8_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi2 (local.get $var0))
                    (local.set $phi3 (i32.const 1))
                    (br $If_8_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi3))
        (unreachable))
    (func $java$nio$Buffer$I$position$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (return (struct.get $java$nio$Buffer $position (ref.cast (ref null $java$nio$Buffer) (local.get $thisref))))
        (unreachable))
    (func $java$nio$Buffer$V$checkSession$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$nio$Buffer$I$limit$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (return (struct.get $java$nio$Buffer $limit (ref.cast (ref null $java$nio$Buffer) (local.get $thisref))))
        (unreachable))
    (func $java$nio$Buffer$I$nextPutIndex$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 i32)
        (local $var2 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (struct.get $java$nio$Buffer $position (ref.cast (ref null $java$nio$Buffer) (local.get $var0))))
        ;; writeIfAndStartTrueBlock
        (if $if0 (i32.lt_s (local.get $var1) (struct.get $java$nio$Buffer $limit (ref.cast (ref null $java$nio$Buffer) (local.get $var0))))
            (then
                (struct.set $java$nio$Buffer $position (ref.cast (ref null $java$nio$Buffer) (local.get $var0)) (i32.add (local.get $var1) (i32.const 1)))
                (return (local.get $var1))
                ;; Start else
                )(else
                (local.set $var2 (struct.new $java$nio$BufferOverflowException (struct.get $java$nio$BufferOverflowException_rtt $factoryFor (global.get $java$nio$BufferOverflowException_cls)) (ref.func $java$nio$BufferOverflowException_vt) (ref.null noextern) (struct.get $java$nio$BufferOverflowException_rtt $classImplTypes (global.get $java$nio$BufferOverflowException_cls)) (ref.null none) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var2)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var2)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var2))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$nio$Buffer$Ljdk$internal$foreign$MemorySessionImpl$$session$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (return (ref.null none))
        (unreachable))
    (func $java$nio$Buffer$I$capacity$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (return (struct.get $java$nio$Buffer $capacity (ref.cast (ref null $java$nio$Buffer) (local.get $thisref))))
        (unreachable))
    (func $java$nio$Buffer$I$checkIndex$I (type $t551) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (result i32)
        (local $var0 i32)
        (local $phi1 i32)
        (local $phi2 i32)
        (local $phi3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $var5 i32)
        (local $var6 i32)
        (local.set $var0 (struct.get $java$nio$Buffer $limit (ref.cast (ref null $java$nio$Buffer) (local.get $thisref))))
        (drop (call $jdk$internal$util$Preconditions_i))
        ;; startBlock type=NORMAL, label = If_10_0
        (block $If_10_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.lt_s (local.get $arg0) (i32.const 0))
                (then
                    (local.set $phi1 (local.get $arg0))
                    (local.set $phi2 (local.get $var0))
                    (local.set $phi3 (ref.null none))
                    (br $If_10_0)
                    ;; Start else
                    )(else
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (i32.lt_s (local.get $arg0) (local.get $var0))
                        (then
                            (return (local.get $arg0))
                            ;; Start else
                            )(else
                            (local.set $phi1 (local.get $arg0))
                            (local.set $phi2 (local.get $var0))
                            (local.set $phi3 (ref.null none))
                            (br $If_10_0)
                            ))
                    ;; finishIfBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (local.set $var4 (local.get $phi3))
        (local.set $var5 (local.get $phi1))
        (local.set $var6 (local.get $phi2))
        (drop (call $jdk$internal$util$Preconditions_i))
        (throw $javaexception (call $jdk$internal$util$Preconditions$Ljava$lang$RuntimeException$$outOfBoundsCheckIndex$Ljava$util$function$BiFunction$$I$I (call $jdk$internal$util$Preconditions_i) (local.get $var4) (local.get $var5) (local.get $var6)))
        (unreachable))
    (func $de$mirkosertic$bytecoder$classlib$java$lang$ref$TReference$V$$init$$Ljava$lang$Object$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $de$mirkosertic$bytecoder$classlib$java$lang$ref$TReference $referent (ref.cast (ref null $de$mirkosertic$bytecoder$classlib$java$lang$ref$TReference) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (return)
        (unreachable))
    (func $java$io$FileDescriptor$I$getFileDescriptorHandle$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (return (struct.get $java$io$FileDescriptor $fd (ref.cast (ref null $java$io$FileDescriptor) (local.get $thisref))))
        (unreachable))
    (func $java$io$FileDescriptor$V$setFileDescriptorHandle$I (type $t575) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32)
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$io$FileDescriptor $fd (ref.cast (ref null $java$io$FileDescriptor) (local.get $var0)) (local.get $arg0))
        (return)
        (unreachable))
    (func $java$io$FileDescriptor$V$$clinit$$$ (type $t541) (param $unused (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (drop (call $java$io$FileDescriptor_i))
        (local.set $var0 (struct.new $java$io$FileDescriptor (struct.get $java$io$FileDescriptor_rtt $factoryFor (global.get $java$io$FileDescriptor_cls)) (ref.func $java$io$FileDescriptor_vt) (ref.null noextern) (struct.get $java$io$FileDescriptor_rtt $classImplTypes (global.get $java$io$FileDescriptor_cls)) (i32.const 0)))
        (struct.set $java$io$FileDescriptor $fd (ref.cast (ref null $java$io$FileDescriptor) (local.get $var0)) (i32.const 0))
        (local.set $var1 (ref.cast (ref null $java$lang$Object) (local.get $var0)))
        (drop (call $java$io$FileDescriptor_i))
        (struct.set $java$io$FileDescriptor_rtt $in (ref.cast (ref null $java$io$FileDescriptor_rtt) (call $java$io$FileDescriptor_i)) (ref.cast (ref null $java$lang$Object) (local.get $var1)))
        (drop (call $java$io$FileDescriptor_i))
        (local.set $var2 (struct.new $java$io$FileDescriptor (struct.get $java$io$FileDescriptor_rtt $factoryFor (global.get $java$io$FileDescriptor_cls)) (ref.func $java$io$FileDescriptor_vt) (ref.null noextern) (struct.get $java$io$FileDescriptor_rtt $classImplTypes (global.get $java$io$FileDescriptor_cls)) (i32.const 0)))
        (struct.set $java$io$FileDescriptor $fd (ref.cast (ref null $java$io$FileDescriptor) (local.get $var2)) (i32.const 1))
        (local.set $var3 (ref.cast (ref null $java$lang$Object) (local.get $var2)))
        (drop (call $java$io$FileDescriptor_i))
        (struct.set $java$io$FileDescriptor_rtt $out (ref.cast (ref null $java$io$FileDescriptor_rtt) (call $java$io$FileDescriptor_i)) (ref.cast (ref null $java$lang$Object) (local.get $var3)))
        (drop (call $java$io$FileDescriptor_i))
        (local.set $var4 (struct.new $java$io$FileDescriptor (struct.get $java$io$FileDescriptor_rtt $factoryFor (global.get $java$io$FileDescriptor_cls)) (ref.func $java$io$FileDescriptor_vt) (ref.null noextern) (struct.get $java$io$FileDescriptor_rtt $classImplTypes (global.get $java$io$FileDescriptor_cls)) (i32.const 0)))
        (struct.set $java$io$FileDescriptor $fd (ref.cast (ref null $java$io$FileDescriptor) (local.get $var4)) (i32.const 2))
        (local.set $var5 (ref.cast (ref null $java$lang$Object) (local.get $var4)))
        (drop (call $java$io$FileDescriptor_i))
        (struct.set $java$io$FileDescriptor_rtt $err (ref.cast (ref null $java$io$FileDescriptor_rtt) (call $java$io$FileDescriptor_i)) (ref.cast (ref null $java$lang$Object) (local.get $var5)))
        (return)
        (unreachable))
    (func $java$io$FileDescriptor$V$$init$$I (type $t575) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32)
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$io$FileDescriptor $fd (ref.cast (ref null $java$io$FileDescriptor) (local.get $var0)) (local.get $arg0))
        (return)
        (unreachable))
    (func $java$io$FileDescriptor$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$io$FileDescriptor $fd (ref.cast (ref null $java$io$FileDescriptor) (local.get $var0)) (i32.const -1))
        (return)
        (unreachable))
    (func $java$nio$charset$CharsetDecoder$V$$clinit$$$ (type $t541) (param $unused (ref null $java$lang$Object))
        (local $phi0 i32)
        (local $var1 (ref null $java$lang$Object))
        ;; startBlock type=NORMAL, label = If_4_0
        (block $If_4_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ne (call $java$lang$Class$Z$desiredAssertionStatus$$ (call $java$nio$charset$CharsetDecoder_i)) (i32.const 0))
                (then
                    (local.set $phi0 (i32.const 0))
                    (br $If_4_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi0 (i32.const 1))
                    (br $If_4_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (drop (call $java$nio$charset$CharsetDecoder_i))
        (struct.set $java$nio$charset$CharsetDecoder_rtt $$assertionsDisabled (ref.cast (ref null $java$nio$charset$CharsetDecoder_rtt) (call $java$nio$charset$CharsetDecoder_i)) (local.get $phi0))
        (local.set $var1 (struct.new $obj_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t549 (i32.const 4))))
        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var1))) (i32.const 0) (global.get $stringpool_6))
        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var1))) (i32.const 1) (global.get $stringpool_7))
        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var1))) (i32.const 2) (global.get $stringpool_8))
        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var1))) (i32.const 3) (global.get $stringpool_9))
        (drop (call $java$nio$charset$CharsetDecoder_i))
        (struct.set $java$nio$charset$CharsetDecoder_rtt $stateNames (ref.cast (ref null $java$nio$charset$CharsetDecoder_rtt) (call $java$nio$charset$CharsetDecoder_i)) (ref.cast (ref null $java$lang$Object) (local.get $var1)))
        (return)
        (unreachable))
    (func $java$nio$charset$CharsetDecoder$Ljava$nio$charset$CharsetDecoder$$onMalformedInput$Ljava$nio$charset$CodingErrorAction$ (type $t559) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg0)))
            (then
                (struct.set $java$nio$charset$CharsetDecoder $malformedInputAction (ref.cast (ref null $java$nio$charset$CharsetDecoder) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
                (return (local.get $var0))
                ;; Start else
                )(else
                (local.set $var1 (struct.new $java$lang$IllegalArgumentException (struct.get $java$lang$IllegalArgumentException_rtt $factoryFor (global.get $java$lang$IllegalArgumentException_cls)) (ref.func $java$lang$IllegalArgumentException_vt) (ref.null noextern) (struct.get $java$lang$IllegalArgumentException_rtt $classImplTypes (global.get $java$lang$IllegalArgumentException_cls)) (ref.null none) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_19)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var1))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$nio$charset$CharsetDecoder$V$implOnMalformedInput$Ljava$nio$charset$CodingErrorAction$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$nio$charset$CharsetDecoder$Ljava$nio$charset$CharsetDecoder$$onUnmappableCharacter$Ljava$nio$charset$CodingErrorAction$ (type $t559) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg0)))
            (then
                (struct.set $java$nio$charset$CharsetDecoder $unmappableCharacterAction (ref.cast (ref null $java$nio$charset$CharsetDecoder) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
                (return (local.get $var0))
                ;; Start else
                )(else
                (local.set $var1 (struct.new $java$lang$IllegalArgumentException (struct.get $java$lang$IllegalArgumentException_rtt $factoryFor (global.get $java$lang$IllegalArgumentException_cls)) (ref.func $java$lang$IllegalArgumentException_vt) (ref.null noextern) (struct.get $java$lang$IllegalArgumentException_rtt $classImplTypes (global.get $java$lang$IllegalArgumentException_cls)) (ref.null none) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_19)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var1))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$nio$charset$CharsetDecoder$V$implOnUnmappableCharacter$Ljava$nio$charset$CodingErrorAction$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$nio$charset$CharsetDecoder$F$maxCharsPerByte$$ (type $t576) (param $thisref (ref null $java$lang$Object)) (result f32)
        (return (struct.get $java$nio$charset$CharsetDecoder $maxCharsPerByte (ref.cast (ref null $java$nio$charset$CharsetDecoder) (local.get $thisref))))
        (unreachable))
    (func $java$nio$charset$CharsetDecoder$Ljava$nio$charset$CoderResult$$decode$Ljava$nio$ByteBuffer$$Ljava$nio$CharBuffer$$Z (type $t577) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object)) (param $arg2 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 (ref null $java$lang$Object))
        (local $phi4 i32)
        (local $phi5 i32)
        (local $var6 i32)
        (local $phi7 i32)
        (local $var8 (ref null $java$lang$Object))
        (local $var9 (ref null $java$lang$Object))
        (local $var10 (ref null $java$lang$Object))
        (local $var11 (ref null $java$lang$Object))
        (local $var12 (ref null $java$lang$Object))
        (local $var13 (ref null $java$lang$Object))
        (local $var14 (ref null $java$lang$Object))
        (local $var15 (ref null $java$lang$Object))
        (local $var16 (ref null $java$lang$Object))
        (local $var17 i32)
        (local $var18 (ref null $java$lang$Object))
        (local $phi19 (ref null $java$lang$Object))
        (local $var20 (ref null $java$lang$Object))
        (local $var21 (ref null $java$lang$Object))
        (local $phi22 (ref null $java$lang$Object))
        (local $var23 (ref null $java$lang$Object))
        (local $var24 (ref null $java$lang$Object))
        (local $var25 (ref null $java$lang$Object))
        (local $var26 i32)
        (local $var27 (ref null $java$lang$Object))
        (local $var28 (ref null $java$lang$Object))
        (local $var29 (ref null $java$lang$Object))
        (local $var30 (ref null $java$lang$Object))
        (local $var31 (ref null $java$lang$Object))
        (local $var32 (ref null $java$lang$Object))
        (local $var33 (ref null $java$lang$Object))
        (local $var34 (ref null $java$lang$Object))
        (local $var35 i32)
        (local $var36 (ref null $java$lang$Object))
        (local $var37 i32)
        (local $var38 (ref null $java$lang$Object))
        (local $var39 (ref null $java$lang$Object))
        (local $var40 (ref null $java$lang$Object))
        (local $var41 (ref null $java$lang$Object))
        (local $var42 (ref null $java$lang$Object))
        (local $phi43 (ref null $java$lang$Object))
        (local $var44 (ref null $java$lang$Object))
        (local $var45 (ref null $java$lang$Object))
        (local $phi46 i32)
        (local $var47 i32)
        (local $phi48 (ref null $java$lang$Object))
        (local $var49 (ref null $java$lang$Object))
        (local $var50 (ref null $java$lang$Object))
        (local $var51 (ref null $java$lang$Object))
        (local $var52 (ref null $java$lang$Object))
        (local $var53 (ref null $java$lang$Object))
        (local $phi54 (ref null $java$lang$Object))
        (local $phi55 (ref null $java$lang$Object))
        (local $var56 (ref null $java$lang$Object))
        (local $var57 (ref null $java$lang$Object))
        (local $var58 (ref null $java$lang$Object))
        (local $phi59 (ref null $java$lang$Object))
        (local $phi60 (ref null $java$lang$Object))
        (local $phi61 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = If_7_0
        (block $If_7_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.eq (local.get $arg2) (i32.const 0))
                (then
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (local.get $arg0))
                    (local.set $phi3 (local.get $arg1))
                    (local.set $phi4 (local.get $arg2))
                    (local.set $phi5 (i32.const 1))
                    (br $If_7_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (local.get $arg0))
                    (local.set $phi3 (local.get $arg1))
                    (local.set $phi4 (local.get $arg2))
                    (local.set $phi5 (i32.const 2))
                    (br $If_7_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (local.set $var6 (local.get $phi5))
        ;; startBlock type=NORMAL, label = If_21_0
        (block $If_21_0
            ;; writeIfAndStartTrueBlock
            (if $if1 (i32.eq (struct.get $java$nio$charset$CharsetDecoder $state (ref.cast (ref null $java$nio$charset$CharsetDecoder) (local.get $phi1))) (i32.const 0))
                (then
                    (local.set $phi7 (local.get $var6))
                    (br $If_21_0)
                    ;; Start else
                    )(else
                    ;; writeIfAndStartTrueBlock
                    (if $if2 (i32.eq (struct.get $java$nio$charset$CharsetDecoder $state (ref.cast (ref null $java$nio$charset$CharsetDecoder) (local.get $phi1))) (i32.const 1))
                        (then
                            (local.set $phi7 (local.get $var6))
                            (br $If_21_0)
                            ;; Start else
                            )(else
                            ;; startBlock type=NORMAL, label = If_28_0
                            (block $If_28_0
                                ;; writeIfAndStartTrueBlock
                                (if $if3 (i32.eq (local.get $phi4) (i32.const 0))
                                    (then
                                        (local.set $phi7 (local.get $var6))
                                        (br $If_28_0)
                                        ;; Start else
                                        )(else
                                        ;; writeIfAndStartTrueBlock
                                        (if $if4 (i32.eq (struct.get $java$nio$charset$CharsetDecoder $state (ref.cast (ref null $java$nio$charset$CharsetDecoder) (local.get $phi1))) (i32.const 2))
                                            (then
                                                (local.set $phi7 (local.get $var6))
                                                (br $If_21_0)
                                                ;; Start else
                                                )(else
                                                (local.set $phi7 (local.get $var6))
                                                (br $If_28_0)
                                                ))
                                        ;; finishIfBlock
                                        ))
                                ;; finishIfBlock
                                )
                            ;; finishBlock
                            (call $java$nio$charset$CharsetDecoder$V$throwIllegalStateException$I$I (local.get $phi1) (struct.get $java$nio$charset$CharsetDecoder $state (ref.cast (ref null $java$nio$charset$CharsetDecoder) (local.get $phi1))) (local.get $phi7))
                            (br $If_21_0)
                            ))
                    ;; finishIfBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (local.set $var8 (local.get $phi1))
        (struct.set $java$nio$charset$CharsetDecoder $state (ref.cast (ref null $java$nio$charset$CharsetDecoder) (local.get $var8)) (local.get $phi7))
        ;; startBlock type=LOOP, label = TryCatch_43
        (loop $TryCatch_43
            ;; startBlock type=NORMAL, label = TryCatch_43_0
            (block $TryCatch_43_0
                ;; startTryCatch
                (try $trycatch_0 (do
                        (local.set $var11 (local.get $phi1))
                        (local.set $var12 (local.get $phi2))
                        (local.set $var13 (local.get $phi3))
                        (local.set $var14 (call_indirect (type $t561) (local.get $var11) (local.get $var12) (local.get $var13) (call_ref $t0 (i32.const 118) (struct.get $java$lang$Object $vt_resolver (local.get $var11)))))
                        (br $TryCatch_43_0)
                        )
                    (catch $javaexception
                        ;; startCatchBlock
                        (global.set $lastcaughtexception (pop (ref null $java$lang$Object)))
                        (if $catchcheck_0 (call $instanceOf (global.get $lastcaughtexception) (struct.get $java$lang$RuntimeException_rtt $factoryFor (global.get $java$lang$RuntimeException_cls)))
                            (then
                                (local.set $var9 (global.get $lastcaughtexception))
                                (local.set $var10 (struct.new $java$nio$charset$CoderMalfunctionError (struct.get $java$nio$charset$CoderMalfunctionError_rtt $factoryFor (global.get $java$nio$charset$CoderMalfunctionError_cls)) (ref.func $java$nio$charset$CoderMalfunctionError_vt) (ref.null noextern) (struct.get $java$nio$charset$CoderMalfunctionError_rtt $classImplTypes (global.get $java$nio$charset$CoderMalfunctionError_cls)) (ref.null none) (ref.null none)))
                                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var10)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var10)) (ref.cast (ref null $java$lang$Object) (local.get $var9)))
                                (throw $javaexception (local.get $var10))
                                ))
                        (rethrow $trycatch_0)
                        )
                    )
                ;; finishTryCatch
                )
            ;; finishBlock
            ;; Here was a goto statement
            ;; writeIfAndStartTrueBlock
            (if $if5 (i32.eq (call $java$nio$charset$CoderResult$Z$isOverflow$$ (local.get $var14)) (i32.const 0))
                (then
                    ;; startBlock type=NORMAL, label = If_69_0
                    (block $If_69_0
                        ;; writeIfAndStartTrueBlock
                        (if $if6 (i32.eq (call $java$nio$charset$CoderResult$Z$isUnderflow$$ (local.get $var14)) (i32.const 0))
                            (then
                                (local.set $phi19 (local.get $var14))
                                (br $If_69_0)
                                ;; Start else
                                )(else
                                ;; startBlock type=NORMAL, label = If_72_0
                                (block $If_72_0
                                    ;; writeIfAndStartTrueBlock
                                    (if $if7 (i32.eq (local.get $phi4) (i32.const 0))
                                        (then
                                            (local.set $phi43 (local.get $var14))
                                            (br $If_72_0)
                                            ;; Start else
                                            )(else
                                            (local.set $var15 (local.get $phi2))
                                            ;; writeIfAndStartTrueBlock
                                            (if $if8 (i32.eq (call_indirect (type $t555) (local.get $var15) (call_ref $t0 (i32.const 19) (struct.get $java$lang$Object $vt_resolver (local.get $var15)))) (i32.const 0))
                                                (then
                                                    (local.set $phi43 (local.get $var14))
                                                    (br $If_72_0)
                                                    ;; Start else
                                                    )(else
                                                    (local.set $var16 (local.get $phi2))
                                                    (local.set $var17 (call_indirect (type $t555) (local.get $var16) (call_ref $t0 (i32.const 18) (struct.get $java$lang$Object $vt_resolver (local.get $var16)))))
                                                    (drop (call $java$nio$charset$CoderResult_i))
                                                    ;; writeIfAndStartTrueBlock
                                                    (if $if9 (i32.gt_s (local.get $var17) (i32.const 0))
                                                        (then
                                                            ;; startBlock type=NORMAL, label = If_271_0
                                                            (block $If_271_0
                                                                ;; writeIfAndStartTrueBlock
                                                                (if $if10 (i32.gt_s (local.get $var17) (i32.const 4))
                                                                    (then
                                                                        (drop (call $java$nio$charset$CoderResult$Cache_i))
                                                                        (local.set $var50 (struct.get $java$nio$charset$CoderResult$Cache $malformed (ref.cast (ref null $java$nio$charset$CoderResult$Cache) (struct.get $java$nio$charset$CoderResult$Cache_rtt $INSTANCE (global.get $java$nio$charset$CoderResult$Cache_cls)))))
                                                                        (drop (call $java$lang$Integer_i))
                                                                        (drop (call $java$lang$Integer_i))
                                                                        (local.set $var53 (struct.new $java$lang$Integer (struct.get $java$lang$Integer_rtt $factoryFor (global.get $java$lang$Integer_cls)) (ref.func $java$lang$Integer_vt) (ref.null noextern) (struct.get $java$lang$Integer_rtt $classImplTypes (global.get $java$lang$Integer_cls)) (i32.const 0)))
                                                                        (struct.set $java$lang$Integer $value (ref.cast (ref null $java$lang$Integer) (local.get $var53)) (local.get $var17))
                                                                        (local.set $phi54 (local.get $var53))
                                                                        (local.set $var51 (local.get $phi54))
                                                                        (local.set $var52 (struct.new $java.util.function.Function$lambda$13 (struct.get $java$util$function$Function_rtt $factoryFor (global.get $java$util$function$Function_cls)) (ref.func $java.util.function.Function$lambda$13_vt) (ref.null noextern) (struct.get $java$util$function$Function_rtt $classImplTypes (global.get $java$util$function$Function_cls))))
                                                                        (local.set $phi55 (ref.cast (ref null $java$lang$Object) (call_indirect (type $t561) (local.get $var50) (local.get $var51) (local.get $var52) (call_ref $t0 (i32.const 12) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var50)))))))
                                                                        (br $If_271_0)
                                                                        ;; Start else
                                                                        )(else
                                                                        (drop (call $java$nio$charset$CoderResult_i))
                                                                        (local.set $phi55 (array.get $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (struct.get $java$nio$charset$CoderResult_rtt $malformed4 (global.get $java$nio$charset$CoderResult_cls)))) (i32.sub (local.get $var17) (i32.const 1))))
                                                                        (br $If_271_0)
                                                                        ))
                                                                ;; finishIfBlock
                                                                )
                                                            ;; finishBlock
                                                            (local.set $var18 (local.get $phi55))
                                                            ;; Here was a goto statement
                                                            (local.set $phi19 (local.get $var18))
                                                            (br $If_69_0)
                                                            ;; Start else
                                                            )(else
                                                            (local.set $var49 (struct.new $java$lang$IllegalArgumentException (struct.get $java$lang$IllegalArgumentException_rtt $factoryFor (global.get $java$lang$IllegalArgumentException_cls)) (ref.func $java$lang$IllegalArgumentException_vt) (ref.null noextern) (struct.get $java$lang$IllegalArgumentException_rtt $classImplTypes (global.get $java$lang$IllegalArgumentException_cls)) (ref.null none) (ref.null none)))
                                                            (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var49)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_40)))
                                                            (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var49)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                                            (throw $javaexception (local.get $var49))
                                                            ))
                                                    ;; finishIfBlock
                                                    ))
                                            ;; finishIfBlock
                                            ))
                                    ;; finishIfBlock
                                    )
                                ;; finishBlock
                                (return (local.get $phi43))
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    (local.set $var20 (local.get $phi19))
                    ;; startBlock type=NORMAL, label = If_97_0
                    (block $If_97_0
                        ;; writeIfAndStartTrueBlock
                        (if $if11 (i32.eq (call $java$nio$charset$CoderResult$Z$isMalformed$$ (local.get $var20)) (i32.const 0))
                            (then
                                (local.set $var39 (local.get $phi19))
                                ;; writeIfAndStartTrueBlock
                                (if $if12 (i32.eq (call $java$nio$charset$CoderResult$Z$isUnmappable$$ (local.get $var39)) (i32.const 0))
                                    (then
                                        (drop (call $java$nio$charset$CharsetDecoder_i))
                                        ;; writeIfAndStartTrueBlock
                                        (if $if13 (i32.ne (struct.get $java$nio$charset$CharsetDecoder_rtt $$assertionsDisabled (global.get $java$nio$charset$CharsetDecoder_cls)) (i32.const 0))
                                            (then
                                                (local.set $phi22 (ref.null none))
                                                (br $If_97_0)
                                                ;; Start else
                                                )(else
                                                (local.set $var41 (struct.new $java$lang$AssertionError (struct.get $java$lang$AssertionError_rtt $factoryFor (global.get $java$lang$AssertionError_cls)) (ref.func $java$lang$AssertionError_vt) (ref.null noextern) (struct.get $java$lang$AssertionError_rtt $classImplTypes (global.get $java$lang$AssertionError_cls)) (ref.null none) (ref.null none)))
                                                (local.set $var42 (local.get $phi19))
                                                (local.set $var56 (call $java$nio$charset$CoderResult$Ljava$lang$String$$toString$$ (local.get $var42)))
                                                ;; startBlock type=NORMAL, label = If_333_0
                                                (block $If_333_0
                                                    ;; writeIfAndStartTrueBlock
                                                    (if $if14 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var56)))
                                                        (then
                                                            (local.set $phi61 (call_indirect (type $t553) (local.get $var56) (call_ref $t0 (i32.const 0) (struct.get $java$lang$Object $vt_resolver (local.get $var56)))))
                                                            (br $If_333_0)
                                                            ;; Start else
                                                            )(else
                                                            (local.set $phi61 (global.get $stringpool_0))
                                                            (br $If_333_0)
                                                            ))
                                                    ;; finishIfBlock
                                                    )
                                                ;; finishBlock
                                                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var41)) (ref.cast (ref null $java$lang$Object) (local.get $phi61)))
                                                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var41)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                                ;; startBlock type=NORMAL, label = If_317_0
                                                (block $If_317_0
                                                    ;; writeIfAndStartTrueBlock
                                                    (if $if15 (i32.eq (call $instanceOf (local.get $var56) (i32.const 62)) (i32.const 0))
                                                        (then
                                                            (local.set $phi59 (local.get $var41))
                                                            (local.set $phi60 (local.get $var56))
                                                            (br $If_317_0)
                                                            ;; Start else
                                                            )(else
                                                            (local.set $var57 (ref.cast (ref null $java$lang$Object) (local.get $var56)))
                                                            (local.set $var58 (call_indirect (type $t559) (local.get $var41) (local.get $var57) (call_ref $t0 (i32.const 65) (struct.get $java$lang$Object $vt_resolver (local.get $var41)))))
                                                            (local.set $phi59 (local.get $var41))
                                                            (local.set $phi60 (local.get $var56))
                                                            (br $If_317_0)
                                                            ))
                                                    ;; finishIfBlock
                                                    )
                                                ;; finishBlock
                                                (throw $javaexception (local.get $var41))
                                                ))
                                        ;; finishIfBlock
                                        ;; Start else
                                        )(else
                                        (local.set $var40 (struct.get $java$nio$charset$CharsetDecoder $unmappableCharacterAction (ref.cast (ref null $java$nio$charset$CharsetDecoder) (local.get $phi1))))
                                        ;; Here was a goto statement
                                        (local.set $phi22 (local.get $var40))
                                        (br $If_97_0)
                                        ))
                                ;; finishIfBlock
                                ;; Start else
                                )(else
                                (local.set $var21 (struct.get $java$nio$charset$CharsetDecoder $malformedInputAction (ref.cast (ref null $java$nio$charset$CharsetDecoder) (local.get $phi1))))
                                ;; Here was a goto statement
                                (local.set $phi22 (local.get $var21))
                                (br $If_97_0)
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    (local.set $var23 (local.get $phi22))
                    (drop (call $java$nio$charset$CodingErrorAction_i))
                    ;; writeIfAndStartTrueBlock
                    (if $if16 (select (i32.const 0) (i32.const 1) (ref.eq (local.get $var23) (struct.get $java$nio$charset$CodingErrorAction_rtt $REPORT (global.get $java$nio$charset$CodingErrorAction_cls))))
                        (then
                            (local.set $var24 (local.get $phi22))
                            (drop (call $java$nio$charset$CodingErrorAction_i))
                            ;; startBlock type=NORMAL, label = If_118_0
                            (block $If_118_0
                                ;; writeIfAndStartTrueBlock
                                (if $if17 (select (i32.const 0) (i32.const 1) (ref.eq (local.get $var24) (struct.get $java$nio$charset$CodingErrorAction_rtt $REPLACE (global.get $java$nio$charset$CodingErrorAction_cls))))
                                    (then
                                        (br $If_118_0)
                                        ;; Start else
                                        )(else
                                        (local.set $var25 (local.get $phi3))
                                        (local.set $var26 (call_indirect (type $t555) (local.get $var25) (call_ref $t0 (i32.const 18) (struct.get $java$lang$Object $vt_resolver (local.get $var25)))))
                                        (local.set $var27 (struct.get $java$nio$charset$CharsetDecoder $replacement (ref.cast (ref null $java$nio$charset$CharsetDecoder) (local.get $phi1))))
                                        ;; writeIfAndStartTrueBlock
                                        (if $if18 (i32.ge_s (local.get $var26) (call $java$lang$String$I$length$$ (local.get $var27)))
                                            (then
                                                (local.set $var28 (local.get $phi3))
                                                (local.set $var29 (struct.get $java$nio$charset$CharsetDecoder $replacement (ref.cast (ref null $java$nio$charset$CharsetDecoder) (local.get $phi1))))
                                                (local.set $var47 (call $java$lang$String$I$length$$ (local.get $var29)))
                                                (local.set $phi48 (call_indirect (type $t573) (local.get $var28) (local.get $var29) (i32.const 0) (local.get $var47) (call_ref $t0 (i32.const 67) (struct.get $java$lang$Object $vt_resolver (local.get $var28)))))
                                                (local.set $var30 (local.get $phi48))
                                                (br $If_118_0)
                                                ;; Start else
                                                )(else
                                                (drop (call $java$nio$charset$CoderResult_i))
                                                (return (struct.get $java$nio$charset$CoderResult_rtt $OVERFLOW (global.get $java$nio$charset$CoderResult_cls)))
                                                ))
                                        ;; finishIfBlock
                                        ))
                                ;; finishIfBlock
                                )
                            ;; finishBlock
                            (local.set $var31 (local.get $phi22))
                            (drop (call $java$nio$charset$CodingErrorAction_i))
                            ;; startBlock type=NORMAL, label = If_146_0
                            (block $If_146_0
                                ;; writeIfAndStartTrueBlock
                                (if $if19 (ref.eq (local.get $var31) (struct.get $java$nio$charset$CodingErrorAction_rtt $IGNORE (global.get $java$nio$charset$CodingErrorAction_cls)))
                                    (then
                                        (br $If_146_0)
                                        ;; Start else
                                        )(else
                                        (local.set $var32 (local.get $phi22))
                                        (drop (call $java$nio$charset$CodingErrorAction_i))
                                        ;; writeIfAndStartTrueBlock
                                        (if $if20 (select (i32.const 0) (i32.const 1) (ref.eq (local.get $var32) (struct.get $java$nio$charset$CodingErrorAction_rtt $REPLACE (global.get $java$nio$charset$CodingErrorAction_cls))))
                                            (then
                                                (drop (call $java$nio$charset$CharsetDecoder_i))
                                                ;; writeIfAndStartTrueBlock
                                                (if $if21 (i32.ne (struct.get $java$nio$charset$CharsetDecoder_rtt $$assertionsDisabled (global.get $java$nio$charset$CharsetDecoder_cls)) (i32.const 0))
                                                    (then
                                                        ;; Here was a goto statement
                                                        (br $TryCatch_43)
                                                        ;; Start else
                                                        )(else
                                                        (local.set $var38 (struct.new $java$lang$AssertionError (struct.get $java$lang$AssertionError_rtt $factoryFor (global.get $java$lang$AssertionError_cls)) (ref.func $java$lang$AssertionError_vt) (ref.null noextern) (struct.get $java$lang$AssertionError_rtt $classImplTypes (global.get $java$lang$AssertionError_cls)) (ref.null none) (ref.null none)))
                                                        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var38)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                                        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var38)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                                        (throw $javaexception (local.get $var38))
                                                        ))
                                                ;; finishIfBlock
                                                ;; Start else
                                                )(else
                                                (br $If_146_0)
                                                ))
                                        ;; finishIfBlock
                                        ))
                                ;; finishIfBlock
                                )
                            ;; finishBlock
                            (local.set $var33 (local.get $phi2))
                            (local.set $var34 (local.get $phi2))
                            (local.set $var35 (call_indirect (type $t555) (local.get $var34) (call_ref $t0 (i32.const 20) (struct.get $java$lang$Object $vt_resolver (local.get $var34)))))
                            (local.set $var36 (local.get $phi19))
                            ;; writeIfAndStartTrueBlock
                            (if $if22 (i32.ne (call $java$nio$charset$CoderResult$Z$isError$$ (local.get $var36)) (i32.const 0))
                                (then
                                    (local.set $phi46 (struct.get $java$nio$charset$CoderResult $length (ref.cast (ref null $java$nio$charset$CoderResult) (local.get $var36))))
                                    (local.set $var37 (i32.add (local.get $var35) (local.get $phi46)))
                                    (local.set $var44 (call $java$nio$Buffer$Ljava$nio$Buffer$$position$I (local.get $var33) (local.get $var37)))
                                    ;; Here was a goto statement
                                    (br $TryCatch_43)
                                    ;; Start else
                                    )(else
                                    (local.set $var45 (struct.new $java$lang$UnsupportedOperationException (struct.get $java$lang$UnsupportedOperationException_rtt $factoryFor (global.get $java$lang$UnsupportedOperationException_cls)) (ref.func $java$lang$UnsupportedOperationException_vt) (ref.null noextern) (struct.get $java$lang$UnsupportedOperationException_rtt $classImplTypes (global.get $java$lang$UnsupportedOperationException_cls)) (ref.null none) (ref.null none)))
                                    (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var45)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                    (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var45)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                    (throw $javaexception (local.get $var45))
                                    ))
                            ;; finishIfBlock
                            ;; Start else
                            )(else
                            (return (local.get $phi19))
                            ))
                    ;; finishIfBlock
                    ;; Start else
                    )(else
                    (return (local.get $var14))
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (unreachable))
    (func $lambda12 (type $t559) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        ;; Invocation kind is INVOKESTATIC
        (return (call $java$nio$charset$CoderResult$Ljava$nio$charset$CoderResult$$lambda$malformedForLength$0$Ljava$lang$Integer$ (call $java$nio$charset$CoderResult_i) (local.get $arg0)))
        )
    (func $java.util.function.Function$lambda$13_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (if $check_77 (i32.eq (i32.const 77) (local.get $methodid))
            (then
                (return (i32.const 236))
                ))
        (unreachable))
    (func $java$nio$charset$CharsetDecoder$V$throwIllegalStateException$I$I (type $t579) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (param $arg1 i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $var6 (ref null $java$lang$Object))
        (local $var7 (ref null $java$lang$Object))
        (local.set $var0 (struct.new $java$lang$IllegalStateException (struct.get $java$lang$IllegalStateException_rtt $factoryFor (global.get $java$lang$IllegalStateException_cls)) (ref.func $java$lang$IllegalStateException_vt) (ref.null noextern) (struct.get $java$lang$IllegalStateException_rtt $classImplTypes (global.get $java$lang$IllegalStateException_cls)) (ref.null none) (ref.null none)))
        (local.set $var1 (struct.new $java$lang$StringBuilder (struct.get $java$lang$StringBuilder_rtt $factoryFor (global.get $java$lang$StringBuilder_cls)) (ref.func $java$lang$StringBuilder_vt) (ref.null noextern) (struct.get $java$lang$StringBuilder_rtt $classImplTypes (global.get $java$lang$StringBuilder_cls))))
        (call $java$lang$StringBuilder$V$initializeWith$I (local.get $var1) (i32.const 10))
        (local.set $var2 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var1) (global.get $stringpool_38)))
        (drop (call $java$nio$charset$CharsetDecoder_i))
        (local.set $var3 (array.get $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (struct.get $java$nio$charset$CharsetDecoder_rtt $stateNames (global.get $java$nio$charset$CharsetDecoder_cls)))) (local.get $arg0)))
        (local.set $var4 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var2) (local.get $var3)))
        (local.set $var5 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var4) (global.get $stringpool_39)))
        (drop (call $java$nio$charset$CharsetDecoder_i))
        (local.set $var6 (array.get $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (struct.get $java$nio$charset$CharsetDecoder_rtt $stateNames (global.get $java$nio$charset$CharsetDecoder_cls)))) (local.get $arg1)))
        (local.set $var7 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var5) (local.get $var6)))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (call $java$lang$StringBuilder$Ljava$lang$String$$toString$$ (local.get $var7))))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (throw $javaexception (local.get $var0))
        (unreachable))
    (func $java$nio$charset$CharsetDecoder$Ljava$nio$charset$CharsetDecoder$$reset$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$nio$charset$CharsetDecoder $state (ref.cast (ref null $java$nio$charset$CharsetDecoder) (local.get $var0)) (i32.const 0))
        (return (local.get $var0))
        (unreachable))
    (func $java$nio$charset$CharsetDecoder$V$implReset$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$nio$charset$CharsetDecoder$V$$init$$Ljava$nio$charset$Charset$$F$F (type $t557) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 f32) (param $arg2 f32)
        (call $java$nio$charset$CharsetDecoder$V$$init$$Ljava$nio$charset$Charset$$F$F$Ljava$lang$String$ (local.get $thisref) (local.get $arg0) (local.get $arg1) (local.get $arg2) (global.get $stringpool_85))
        (return)
        (unreachable))
    (func $java$nio$charset$CharsetDecoder$V$$init$$Ljava$nio$charset$Charset$$F$F$Ljava$lang$String$ (type $t558) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 f32) (param $arg2 f32) (param $arg3 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (drop (call $java$nio$charset$CodingErrorAction_i))
        (struct.set $java$nio$charset$CharsetDecoder $malformedInputAction (ref.cast (ref null $java$nio$charset$CharsetDecoder) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (struct.get $java$nio$charset$CodingErrorAction_rtt $REPORT (global.get $java$nio$charset$CodingErrorAction_cls))))
        (drop (call $java$nio$charset$CodingErrorAction_i))
        (struct.set $java$nio$charset$CharsetDecoder $unmappableCharacterAction (ref.cast (ref null $java$nio$charset$CharsetDecoder) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (struct.get $java$nio$charset$CodingErrorAction_rtt $REPORT (global.get $java$nio$charset$CodingErrorAction_cls))))
        (struct.set $java$nio$charset$CharsetDecoder $state (ref.cast (ref null $java$nio$charset$CharsetDecoder) (local.get $var0)) (i32.const 0))
        (struct.set $java$nio$charset$CharsetDecoder $charset (ref.cast (ref null $java$nio$charset$CharsetDecoder) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        ;; writeIfAndStartTrueBlock
        (if $if0 (i32.gt_s (call $compare_f32 (local.get $arg1) (f32.const 0.0)) (i32.const 0))
            (then
                ;; writeIfAndStartTrueBlock
                (if $if1 (i32.gt_s (call $compare_f32 (local.get $arg2) (f32.const 0.0)) (i32.const 0))
                    (then
                        ;; writeIfAndStartTrueBlock
                        (if $if2 (i32.le_s (call $compare_f32 (local.get $arg1) (local.get $arg2)) (i32.const 0))
                            (then
                                (struct.set $java$nio$charset$CharsetDecoder $replacement (ref.cast (ref null $java$nio$charset$CharsetDecoder) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg3)))
                                (struct.set $java$nio$charset$CharsetDecoder $averageCharsPerByte (ref.cast (ref null $java$nio$charset$CharsetDecoder) (local.get $var0)) (local.get $arg1))
                                (struct.set $java$nio$charset$CharsetDecoder $maxCharsPerByte (ref.cast (ref null $java$nio$charset$CharsetDecoder) (local.get $var0)) (local.get $arg2))
                                (local.set $var4 (call $java$nio$charset$CharsetDecoder$Ljava$nio$charset$CharsetDecoder$$replaceWith$Ljava$lang$String$ (local.get $var0) (local.get $arg3)))
                                (return)
                                ;; Start else
                                )(else
                                (local.set $var3 (struct.new $java$lang$IllegalArgumentException (struct.get $java$lang$IllegalArgumentException_rtt $factoryFor (global.get $java$lang$IllegalArgumentException_cls)) (ref.func $java$lang$IllegalArgumentException_vt) (ref.null noextern) (struct.get $java$lang$IllegalArgumentException_rtt $classImplTypes (global.get $java$lang$IllegalArgumentException_cls)) (ref.null none) (ref.null none)))
                                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var3)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_88)))
                                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var3)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                (throw $javaexception (local.get $var3))
                                ))
                        ;; finishIfBlock
                        ;; Start else
                        )(else
                        (local.set $var2 (struct.new $java$lang$IllegalArgumentException (struct.get $java$lang$IllegalArgumentException_rtt $factoryFor (global.get $java$lang$IllegalArgumentException_cls)) (ref.func $java$lang$IllegalArgumentException_vt) (ref.null noextern) (struct.get $java$lang$IllegalArgumentException_rtt $classImplTypes (global.get $java$lang$IllegalArgumentException_cls)) (ref.null none) (ref.null none)))
                        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var2)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_87)))
                        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var2)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                        (throw $javaexception (local.get $var2))
                        ))
                ;; finishIfBlock
                ;; Start else
                )(else
                (local.set $var1 (struct.new $java$lang$IllegalArgumentException (struct.get $java$lang$IllegalArgumentException_rtt $factoryFor (global.get $java$lang$IllegalArgumentException_cls)) (ref.func $java$lang$IllegalArgumentException_vt) (ref.null noextern) (struct.get $java$lang$IllegalArgumentException_rtt $classImplTypes (global.get $java$lang$IllegalArgumentException_cls)) (ref.null none) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_86)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var1))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$nio$charset$CharsetDecoder$Ljava$nio$charset$CharsetDecoder$$replaceWith$Ljava$lang$String$ (type $t559) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 i32)
        (local $var3 (ref null $java$lang$Object))
        (local $var4 f32)
        (local $var5 (ref null $java$lang$Object))
        (local $var6 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg0)))
            (then
                (local.set $var2 (call $java$lang$String$I$length$$ (local.get $arg0)))
                ;; writeIfAndStartTrueBlock
                (if $if1 (i32.ne (local.get $var2) (i32.const 0))
                    (then
                        (local.set $var4 (f32.convert_i32_s (local.get $var2)))
                        ;; writeIfAndStartTrueBlock
                        (if $if2 (i32.le_s (call $compare_f32 (local.get $var4) (struct.get $java$nio$charset$CharsetDecoder $maxCharsPerByte (ref.cast (ref null $java$nio$charset$CharsetDecoder) (local.get $var0)))) (i32.const 0))
                            (then
                                (struct.set $java$nio$charset$CharsetDecoder $replacement (ref.cast (ref null $java$nio$charset$CharsetDecoder) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
                                (local.set $var6 (struct.get $java$nio$charset$CharsetDecoder $replacement (ref.cast (ref null $java$nio$charset$CharsetDecoder) (local.get $var0))))
                                (return (local.get $var0))
                                ;; Start else
                                )(else
                                (local.set $var5 (struct.new $java$lang$IllegalArgumentException (struct.get $java$lang$IllegalArgumentException_rtt $factoryFor (global.get $java$lang$IllegalArgumentException_cls)) (ref.func $java$lang$IllegalArgumentException_vt) (ref.null noextern) (struct.get $java$lang$IllegalArgumentException_rtt $classImplTypes (global.get $java$lang$IllegalArgumentException_cls)) (ref.null none) (ref.null none)))
                                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var5)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_18)))
                                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var5)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                (throw $javaexception (local.get $var5))
                                ))
                        ;; finishIfBlock
                        ;; Start else
                        )(else
                        (local.set $var3 (struct.new $java$lang$IllegalArgumentException (struct.get $java$lang$IllegalArgumentException_rtt $factoryFor (global.get $java$lang$IllegalArgumentException_cls)) (ref.func $java$lang$IllegalArgumentException_vt) (ref.null noextern) (struct.get $java$lang$IllegalArgumentException_rtt $classImplTypes (global.get $java$lang$IllegalArgumentException_cls)) (ref.null none) (ref.null none)))
                        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var3)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_17)))
                        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var3)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                        (throw $javaexception (local.get $var3))
                        ))
                ;; finishIfBlock
                ;; Start else
                )(else
                (local.set $var1 (struct.new $java$lang$IllegalArgumentException (struct.get $java$lang$IllegalArgumentException_rtt $factoryFor (global.get $java$lang$IllegalArgumentException_cls)) (ref.func $java$lang$IllegalArgumentException_vt) (ref.null noextern) (struct.get $java$lang$IllegalArgumentException_rtt $classImplTypes (global.get $java$lang$IllegalArgumentException_cls)) (ref.null none) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_16)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var1))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$nio$charset$CharsetDecoder$V$implReplaceWith$Ljava$lang$String$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$nio$charset$CharsetDecoder$Ljava$nio$charset$Charset$$charset$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (return (struct.get $java$nio$charset$CharsetDecoder $charset (ref.cast (ref null $java$nio$charset$CharsetDecoder) (local.get $thisref))))
        (unreachable))
    (func $java$lang$CharSequence$Z$isEmpty$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 i32)
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = If_5_0
        (block $If_5_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ne (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 45) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var0))))) (i32.const 0))
                (then
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (i32.const 0))
                    (br $If_5_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (i32.const 1))
                    (br $If_5_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi2))
        (unreachable))
    (func $java$lang$Class$Z$desiredAssertionStatus$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (return (i32.const 0))
        (unreachable))
    (func $java$lang$Class$Ljava$lang$Class$$getPrimitiveClass$Ljava$lang$String$ (type $t559) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        ;; writeIfAndStartTrueBlock
        (if $if0 (i32.eq (call $java$lang$String$Z$equals$Ljava$lang$Object$ (global.get $stringpool_50) (local.get $arg0)) (i32.const 0))
            (then
                ;; writeIfAndStartTrueBlock
                (if $if1 (i32.eq (call $java$lang$String$Z$equals$Ljava$lang$Object$ (global.get $stringpool_51) (local.get $arg0)) (i32.const 0))
                    (then
                        ;; writeIfAndStartTrueBlock
                        (if $if2 (i32.eq (call $java$lang$String$Z$equals$Ljava$lang$Object$ (global.get $stringpool_52) (local.get $arg0)) (i32.const 0))
                            (then
                                ;; writeIfAndStartTrueBlock
                                (if $if3 (i32.eq (call $java$lang$String$Z$equals$Ljava$lang$Object$ (global.get $stringpool_53) (local.get $arg0)) (i32.const 0))
                                    (then
                                        ;; writeIfAndStartTrueBlock
                                        (if $if4 (i32.eq (call $java$lang$String$Z$equals$Ljava$lang$Object$ (global.get $stringpool_54) (local.get $arg0)) (i32.const 0))
                                            (then
                                                ;; writeIfAndStartTrueBlock
                                                (if $if5 (i32.eq (call $java$lang$String$Z$equals$Ljava$lang$Object$ (global.get $stringpool_55) (local.get $arg0)) (i32.const 0))
                                                    (then
                                                        ;; writeIfAndStartTrueBlock
                                                        (if $if6 (i32.eq (call $java$lang$String$Z$equals$Ljava$lang$Object$ (global.get $stringpool_56) (local.get $arg0)) (i32.const 0))
                                                            (then
                                                                ;; writeIfAndStartTrueBlock
                                                                (if $if7 (i32.eq (call $java$lang$String$Z$equals$Ljava$lang$Object$ (global.get $stringpool_57) (local.get $arg0)) (i32.const 0))
                                                                    (then
                                                                        (local.set $var0 (struct.new $java$lang$RuntimeException (struct.get $java$lang$RuntimeException_rtt $factoryFor (global.get $java$lang$RuntimeException_cls)) (ref.func $java$lang$RuntimeException_vt) (ref.null noextern) (struct.get $java$lang$RuntimeException_rtt $classImplTypes (global.get $java$lang$RuntimeException_cls)) (ref.null none) (ref.null none)))
                                                                        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
                                                                        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                                                        (throw $javaexception (local.get $var0))
                                                                        ;; Start else
                                                                        )(else
                                                                        (return (global.get $primitive_boolean))
                                                                        ))
                                                                ;; finishIfBlock
                                                                ;; Start else
                                                                )(else
                                                                (return (global.get $primitive_long))
                                                                ))
                                                        ;; finishIfBlock
                                                        ;; Start else
                                                        )(else
                                                        (return (global.get $primitive_double))
                                                        ))
                                                ;; finishIfBlock
                                                ;; Start else
                                                )(else
                                                (return (global.get $primitive_float))
                                                ))
                                        ;; finishIfBlock
                                        ;; Start else
                                        )(else
                                        (return (global.get $primitive_int))
                                        ))
                                ;; finishIfBlock
                                ;; Start else
                                )(else
                                (return (global.get $primitive_short))
                                ))
                        ;; finishIfBlock
                        ;; Start else
                        )(else
                        (return (global.get $primitive_char))
                        ))
                ;; finishIfBlock
                ;; Start else
                )(else
                (return (global.get $primitive_byte))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$lang$Class$$Ljava$lang$reflect$Type$$getGenericInterfaces$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (return (struct.new $obj_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t549 (i32.const 0))))
        (unreachable))
    (func $java$lang$Class$Ljava$lang$String$$getName$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (return (global.get $stringpool_1))
        (unreachable))
    (func $java$lang$Class$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$lang$Class$I$hashCode$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (return (i32.const 42))
        (unreachable))
    (func $java$util$Objects$Ljava$lang$Object$$requireNonNull$Ljava$lang$Object$ (type $t559) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg0)))
            (then
                (return (local.get $arg0))
                ;; Start else
                )(else
                (local.set $var0 (struct.new $java$lang$NullPointerException (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)) (ref.func $java$lang$NullPointerException_vt) (ref.null noextern) (struct.get $java$lang$NullPointerException_rtt $classImplTypes (global.get $java$lang$NullPointerException_cls)) (ref.null none) (ref.null none) (i32.const 0) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var0))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$util$Objects$I$checkFromIndexSize$I$I$I (type $t580) (param $unused (ref null $java$lang$Object)) (param $arg0 i32) (param $arg1 i32) (param $arg2 i32) (result i32)
        (drop (call $jdk$internal$util$Preconditions_i))
        (return (call $jdk$internal$util$Preconditions$I$checkFromIndexSize$I$I$I$Ljava$util$function$BiFunction$ (call $jdk$internal$util$Preconditions_i) (local.get $arg0) (local.get $arg1) (local.get $arg2) (ref.null none)))
        (unreachable))
    (func $java$util$Objects$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $phi3 (ref null $java$lang$Object))
        (local $phi4 (ref null $java$lang$Object))
        (local $phi5 (ref null $java$lang$Object))
        (local.set $var0 (struct.new $java$lang$AssertionError (struct.get $java$lang$AssertionError_rtt $factoryFor (global.get $java$lang$AssertionError_cls)) (ref.func $java$lang$AssertionError_vt) (ref.null noextern) (struct.get $java$lang$AssertionError_rtt $classImplTypes (global.get $java$lang$AssertionError_cls)) (ref.null none) (ref.null none)))
        ;; startBlock type=NORMAL, label = If_25_0
        (block $If_25_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (global.get $stringpool_93)))
                (then
                    (local.set $phi5 (call_indirect (type $t553) (global.get $stringpool_93) (call_ref $t0 (i32.const 0) (struct.get $java$lang$Object $vt_resolver (global.get $stringpool_93)))))
                    (br $If_25_0)
                    ;; Start else
                    )(else
                    (local.set $phi5 (global.get $stringpool_0))
                    (br $If_25_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $phi5)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        ;; startBlock type=NORMAL, label = If_9_0
        (block $If_9_0
            ;; writeIfAndStartTrueBlock
            (if $if1 (i32.eq (call $instanceOf (global.get $stringpool_93) (i32.const 62)) (i32.const 0))
                (then
                    (local.set $phi3 (local.get $var0))
                    (local.set $phi4 (global.get $stringpool_93))
                    (br $If_9_0)
                    ;; Start else
                    )(else
                    (local.set $var1 (ref.cast (ref null $java$lang$Object) (global.get $stringpool_93)))
                    (local.set $var2 (call_indirect (type $t559) (local.get $var0) (local.get $var1) (call_ref $t0 (i32.const 65) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
                    (local.set $phi3 (local.get $var0))
                    (local.set $phi4 (global.get $stringpool_93))
                    (br $If_9_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (throw $javaexception (local.get $var0))
        (unreachable))
    (func $java$util$Objects$Z$equals$Ljava$lang$Object$$Ljava$lang$Object$ (type $t566) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object)) (result i32)
        (local $phi0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 i32)
        (local $phi3 (ref null $java$lang$Object))
        (local $phi4 (ref null $java$lang$Object))
        ;; startBlock type=NORMAL, label = If_3_0
        (block $If_3_0
            ;; startBlock type=NORMAL, label = If_3_1
            (block $If_3_1
                ;; writeIfAndStartTrueBlock
                (if $if0 (ref.eq (local.get $arg0) (local.get $arg1))
                    (then
                        (local.set $phi0 (local.get $arg0))
                        (local.set $phi1 (local.get $arg1))
                        (br $If_3_1)
                        ;; Start else
                        )(else
                        ;; startBlock type=NORMAL, label = If_5_0
                        (block $If_5_0
                            ;; writeIfAndStartTrueBlock
                            (if $if1 (ref.is_null (local.get $arg0))
                                (then
                                    (local.set $phi3 (local.get $arg0))
                                    (local.set $phi4 (local.get $arg1))
                                    (br $If_5_0)
                                    ;; Start else
                                    )(else
                                    ;; writeIfAndStartTrueBlock
                                    (if $if2 (i32.eq (call_indirect (type $t554) (local.get $arg0) (local.get $arg1) (call_ref $t0 (i32.const 1) (struct.get $java$lang$Object $vt_resolver (local.get $arg0)))) (i32.const 0))
                                        (then
                                            (local.set $phi3 (local.get $arg0))
                                            (local.set $phi4 (local.get $arg1))
                                            (br $If_5_0)
                                            ;; Start else
                                            )(else
                                            (local.set $phi0 (local.get $arg0))
                                            (local.set $phi1 (local.get $arg1))
                                            (br $If_3_1)
                                            ))
                                    ;; finishIfBlock
                                    ))
                            ;; finishIfBlock
                            )
                        ;; finishBlock
                        (local.set $phi0 (local.get $phi3))
                        (local.set $phi1 (local.get $phi4))
                        (local.set $phi2 (i32.const 0))
                        (br $If_3_0)
                        ))
                ;; finishIfBlock
                )
            ;; finishBlock
            ;; Here was a goto statement
            (local.set $phi2 (i32.const 1))
            (br $If_3_0)
            )
        ;; finishBlock
        (return (local.get $phi2))
        (unreachable))
    (func $java$util$Objects$I$hashCode$Ljava$lang$Object$ (type $t554) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 i32)
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 i32)
        ;; startBlock type=NORMAL, label = If_2_0
        (block $If_2_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (ref.is_null (local.get $arg0))
                (then
                    (local.set $phi1 (local.get $arg0))
                    (local.set $phi2 (i32.const 0))
                    (br $If_2_0)
                    ;; Start else
                    )(else
                    (local.set $var0 (call_indirect (type $t555) (local.get $arg0) (call_ref $t0 (i32.const 2) (struct.get $java$lang$Object $vt_resolver (local.get $arg0)))))
                    ;; Here was a goto statement
                    (local.set $phi1 (local.get $arg0))
                    (local.set $phi2 (local.get $var0))
                    (br $If_2_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi2))
        (unreachable))
    (func $java$util$Objects$I$checkIndex$I$I (type $t564) (param $unused (ref null $java$lang$Object)) (param $arg0 i32) (param $arg1 i32) (result i32)
        (drop (call $jdk$internal$util$Preconditions_i))
        (return (call $jdk$internal$util$Preconditions$I$checkIndex$I$I$Ljava$util$function$BiFunction$ (call $jdk$internal$util$Preconditions_i) (local.get $arg0) (local.get $arg1) (ref.null none)))
        (unreachable))
    (func $de$mirkosertic$bytecoder$api$vue$Vue$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$nio$BufferMismatch$V$$clinit$$$ (type $t541) (param $unused (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (drop (call $jdk$internal$misc$ScopedMemoryAccess_i))
        (drop (call $jdk$internal$misc$ScopedMemoryAccess_i))
        (local.set $phi1 (struct.get $jdk$internal$misc$ScopedMemoryAccess_rtt $theScopedMemoryAccess (global.get $jdk$internal$misc$ScopedMemoryAccess_cls)))
        (local.set $var0 (local.get $phi1))
        (drop (call $java$nio$BufferMismatch_i))
        (struct.set $java$nio$BufferMismatch_rtt $SCOPED_MEMORY_ACCESS (ref.cast (ref null $java$nio$BufferMismatch_rtt) (call $java$nio$BufferMismatch_i)) (ref.cast (ref null $java$lang$Object) (local.get $var0)))
        (return)
        (unreachable))
    (func $java$nio$BufferMismatch$I$mismatch$Ljava$nio$CharBuffer$$I$Ljava$nio$CharBuffer$$I$I (type $t581) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 i32) (param $arg2 (ref null $java$lang$Object)) (param $arg3 i32) (param $arg4 i32) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 i32)
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $var6 i64)
        (local $var7 i64)
        (local $var8 (ref null $java$lang$Object))
        (local $var9 i64)
        (local $var10 i64)
        (local $var11 i32)
        (local $var12 i32)
        (local $var13 i32)
        (local $phi14 (ref null $java$lang$Object))
        (local $phi15 i32)
        (local $phi16 (ref null $java$lang$Object))
        (local $phi17 i32)
        (local $phi18 i32)
        (local $phi19 i32)
        (local $var20 (ref null $java$lang$Object))
        (local $var21 i32)
        (local $var22 i32)
        (local $var23 (ref null $java$lang$Object))
        (local $var24 i32)
        (local $phi25 (ref null $java$lang$Object))
        (local $phi26 (ref null $java$lang$Object))
        (local $var27 (ref null $java$lang$Object))
        (local $var28 i32)
        (local $phi29 i32)
        ;; startBlock type=NORMAL, label = If_8_0
        (block $If_8_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.le_s (local.get $arg4) (i32.const 3))
                (then
                    (local.set $phi14 (local.get $arg0))
                    (local.set $phi15 (local.get $arg1))
                    (local.set $phi16 (local.get $arg2))
                    (local.set $phi17 (local.get $arg3))
                    (local.set $phi18 (local.get $arg4))
                    (local.set $phi19 (i32.const 0))
                    (br $If_8_0)
                    ;; Start else
                    )(else
                    (local.set $var0 (call_indirect (type $t553) (local.get $arg0) (call_ref $t0 (i32.const 135) (struct.get $java$lang$Object $vt_resolver (local.get $arg0)))))
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (select (i32.const 0) (i32.const 1) (ref.eq (local.get $var0) (call_indirect (type $t553) (local.get $arg2) (call_ref $t0 (i32.const 135) (struct.get $java$lang$Object $vt_resolver (local.get $arg2))))))
                        (then
                            (local.set $phi14 (local.get $arg0))
                            (local.set $phi15 (local.get $arg1))
                            (local.set $phi16 (local.get $arg2))
                            (local.set $phi17 (local.get $arg3))
                            (local.set $phi18 (local.get $arg4))
                            (local.set $phi19 (i32.const 0))
                            (br $If_8_0)
                            ;; Start else
                            )(else
                            ;; writeIfAndStartTrueBlock
                            (if $if2 (ref.is_null (call_indirect (type $t553) (local.get $arg0) (call_ref $t0 (i32.const 135) (struct.get $java$lang$Object $vt_resolver (local.get $arg0)))))
                                (then
                                    (local.set $phi14 (local.get $arg0))
                                    (local.set $phi15 (local.get $arg1))
                                    (local.set $phi16 (local.get $arg2))
                                    (local.set $phi17 (local.get $arg3))
                                    (local.set $phi18 (local.get $arg4))
                                    (local.set $phi19 (i32.const 0))
                                    (br $If_8_0)
                                    ;; Start else
                                    )(else
                                    ;; writeIfAndStartTrueBlock
                                    (if $if3 (ref.is_null (call_indirect (type $t553) (local.get $arg2) (call_ref $t0 (i32.const 135) (struct.get $java$lang$Object $vt_resolver (local.get $arg2)))))
                                        (then
                                            (local.set $phi14 (local.get $arg0))
                                            (local.set $phi15 (local.get $arg1))
                                            (local.set $phi16 (local.get $arg2))
                                            (local.set $phi17 (local.get $arg3))
                                            (local.set $phi18 (local.get $arg4))
                                            (local.set $phi19 (i32.const 0))
                                            (br $If_8_0)
                                            ;; Start else
                                            )(else
                                            (local.set $var1 (call_indirect (type $t551) (local.get $arg0) (local.get $arg1) (call_ref $t0 (i32.const 137) (struct.get $java$lang$Object $vt_resolver (local.get $arg0)))))
                                            ;; writeIfAndStartTrueBlock
                                            (if $if4 (i32.eq (local.get $var1) (call_indirect (type $t551) (local.get $arg2) (local.get $arg3) (call_ref $t0 (i32.const 137) (struct.get $java$lang$Object $vt_resolver (local.get $arg2)))))
                                                (then
                                                    (drop (call $java$nio$BufferMismatch_i))
                                                    (local.set $var2 (struct.get $java$nio$BufferMismatch_rtt $SCOPED_MEMORY_ACCESS (global.get $java$nio$BufferMismatch_cls)))
                                                    (local.set $var3 (call_indirect (type $t553) (local.get $arg0) (call_ref $t0 (i32.const 24) (struct.get $java$lang$Object $vt_resolver (local.get $arg0)))))
                                                    (local.set $var4 (call_indirect (type $t553) (local.get $arg2) (call_ref $t0 (i32.const 24) (struct.get $java$lang$Object $vt_resolver (local.get $arg2)))))
                                                    ;; Unable to assign [C to Ljava/lang/Object; for de.mirkosertic.bytecoder.core.ir.PHI@78bf0fc from de.mirkosertic.bytecoder.core.ir.ReadInstanceField@406c6bcc
                                                    (local.set $var5 (local.get $phi26))
                                                    (local.set $var6 (struct.get $java$nio$Buffer $address (ref.cast (ref null $java$nio$Buffer) (local.get $arg0))))
                                                    (drop (call $jdk$internal$util$ArraysSupport_i))
                                                    (local.set $var7 (i64.add (local.get $var6) (i64.extend_i32_s (i32.shl (local.get $arg1) (struct.get $jdk$internal$util$ArraysSupport_rtt $LOG2_ARRAY_CHAR_INDEX_SCALE (global.get $jdk$internal$util$ArraysSupport_cls))))))
                                                    ;; Unable to assign [C to Ljava/lang/Object; for de.mirkosertic.bytecoder.core.ir.PHI@5db19d49 from de.mirkosertic.bytecoder.core.ir.ReadInstanceField@3dd568ba
                                                    (local.set $var8 (local.get $phi25))
                                                    (local.set $var9 (struct.get $java$nio$Buffer $address (ref.cast (ref null $java$nio$Buffer) (local.get $arg2))))
                                                    (drop (call $jdk$internal$util$ArraysSupport_i))
                                                    (local.set $var10 (i64.add (local.get $var9) (i64.extend_i32_s (i32.shl (local.get $arg3) (struct.get $jdk$internal$util$ArraysSupport_rtt $LOG2_ARRAY_CHAR_INDEX_SCALE (global.get $jdk$internal$util$ArraysSupport_cls))))))
                                                    (drop (call $jdk$internal$util$ArraysSupport_i))
                                                    (local.set $var11 (struct.get $jdk$internal$util$ArraysSupport_rtt $LOG2_ARRAY_CHAR_INDEX_SCALE (global.get $jdk$internal$util$ArraysSupport_cls)))
                                                    ;; startBlock type=NORMAL, label = TryCatch_149_0
                                                    (block $TryCatch_149_0
                                                        ;; startTryCatch
                                                        (try $trycatch_0 (do
                                                                (local.set $var28 (call $jdk$internal$misc$ScopedMemoryAccess$I$vectorizedMismatchInternal$Ljdk$internal$foreign$MemorySessionImpl$$Ljdk$internal$foreign$MemorySessionImpl$$Ljava$lang$Object$$J$Ljava$lang$Object$$J$I$I (local.get $var2) (local.get $var3) (local.get $var4) (local.get $var5) (local.get $var7) (local.get $var8) (local.get $var10) (local.get $arg4) (local.get $var11)))
                                                                (br $TryCatch_149_0)
                                                                )
                                                            (catch $javaexception
                                                                ;; startCatchBlock
                                                                (global.set $lastcaughtexception (pop (ref null $java$lang$Object)))
                                                                (if $catchcheck_0 (call $instanceOf (global.get $lastcaughtexception) (struct.get $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError_rtt $factoryFor (global.get $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError_cls)))
                                                                    (then
                                                                        (local.set $var27 (global.get $lastcaughtexception))
                                                                        (throw $javaexception (call $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError$Ljava$lang$RuntimeException$$newRuntimeException$$ (local.get $var27)))
                                                                        ))
                                                                (rethrow $trycatch_0)
                                                                )
                                                            )
                                                        ;; finishTryCatch
                                                        )
                                                    ;; finishBlock
                                                    (local.set $phi29 (local.get $var28))
                                                    (local.set $var12 (local.get $phi29))
                                                    ;; writeIfAndStartTrueBlock
                                                    (if $if5 (i32.lt_s (local.get $var12) (i32.const 0))
                                                        (then
                                                            (local.set $var13 (i32.sub (local.get $arg4) (i32.xor (local.get $var12) (i32.const -1))))
                                                            (local.set $phi14 (local.get $arg0))
                                                            (local.set $phi15 (local.get $arg1))
                                                            (local.set $phi16 (local.get $arg2))
                                                            (local.set $phi17 (local.get $arg3))
                                                            (local.set $phi18 (local.get $arg4))
                                                            (local.set $phi19 (local.get $var13))
                                                            (br $If_8_0)
                                                            ;; Start else
                                                            )(else
                                                            (return (local.get $var12))
                                                            ))
                                                    ;; finishIfBlock
                                                    ;; Start else
                                                    )(else
                                                    (return (i32.const 0))
                                                    ))
                                            ;; finishIfBlock
                                            ))
                                    ;; finishIfBlock
                                    ))
                            ;; finishIfBlock
                            ))
                    ;; finishIfBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        ;; startBlock type=LOOP, label = L891447534
        (loop $L891447534
            ;; writeIfAndStartTrueBlock
            (if $if6 (i32.ge_s (local.get $phi19) (local.get $phi18))
                (then
                    (return (i32.const -1))
                    ;; Start else
                    )(else
                    (local.set $var20 (local.get $phi14))
                    (local.set $var21 (i32.add (local.get $phi15) (local.get $phi19)))
                    (local.set $var22 (call_indirect (type $t551) (local.get $var20) (local.get $var21) (call_ref $t0 (i32.const 137) (struct.get $java$lang$Object $vt_resolver (local.get $var20)))))
                    (local.set $var23 (local.get $phi16))
                    (local.set $var24 (i32.add (local.get $phi17) (local.get $phi19)))
                    ;; writeIfAndStartTrueBlock
                    (if $if7 (i32.eq (local.get $var22) (call_indirect (type $t551) (local.get $var23) (local.get $var24) (call_ref $t0 (i32.const 137) (struct.get $java$lang$Object $vt_resolver (local.get $var23)))))
                        (then
                            (local.set $phi19 (i32.add (local.get $phi19) (i32.const 1)))
                            ;; Here was a goto statement
                            (br $L891447534)
                            ;; Start else
                            )(else
                            (return (local.get $phi19))
                            ))
                    ;; finishIfBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (unreachable))
    (func $java$nio$BufferMismatch$I$mismatch$Ljava$nio$ByteBuffer$$I$Ljava$nio$ByteBuffer$$I$I (type $t581) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 i32) (param $arg2 (ref null $java$lang$Object)) (param $arg3 i32) (param $arg4 i32) (result i32)
        (local $var0 i32)
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $var5 i64)
        (local $var6 (ref null $java$lang$Object))
        (local $var7 i64)
        (local $var8 i32)
        (local $var9 i32)
        (local $var10 i32)
        (local $phi11 (ref null $java$lang$Object))
        (local $phi12 i32)
        (local $phi13 (ref null $java$lang$Object))
        (local $phi14 i32)
        (local $phi15 i32)
        (local $phi16 i32)
        (local $var17 (ref null $java$lang$Object))
        (local $var18 i32)
        (local $var19 i32)
        (local $var20 (ref null $java$lang$Object))
        (local $var21 i32)
        (local $phi22 (ref null $java$lang$Object))
        (local $phi23 (ref null $java$lang$Object))
        (local $var24 (ref null $java$lang$Object))
        (local $var25 i32)
        (local $phi26 i32)
        ;; startBlock type=NORMAL, label = If_8_0
        (block $If_8_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.le_s (local.get $arg4) (i32.const 7))
                (then
                    (local.set $phi11 (local.get $arg0))
                    (local.set $phi12 (local.get $arg1))
                    (local.set $phi13 (local.get $arg2))
                    (local.set $phi14 (local.get $arg3))
                    (local.set $phi15 (local.get $arg4))
                    (local.set $phi16 (i32.const 0))
                    (br $If_8_0)
                    ;; Start else
                    )(else
                    (local.set $var0 (call_indirect (type $t551) (local.get $arg0) (local.get $arg1) (call_ref $t0 (i32.const 121) (struct.get $java$lang$Object $vt_resolver (local.get $arg0)))))
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (i32.eq (local.get $var0) (call_indirect (type $t551) (local.get $arg2) (local.get $arg3) (call_ref $t0 (i32.const 121) (struct.get $java$lang$Object $vt_resolver (local.get $arg2)))))
                        (then
                            (drop (call $java$nio$BufferMismatch_i))
                            (local.set $var1 (struct.get $java$nio$BufferMismatch_rtt $SCOPED_MEMORY_ACCESS (global.get $java$nio$BufferMismatch_cls)))
                            (local.set $var2 (call_indirect (type $t553) (local.get $arg0) (call_ref $t0 (i32.const 24) (struct.get $java$lang$Object $vt_resolver (local.get $arg0)))))
                            (local.set $var3 (call_indirect (type $t553) (local.get $arg2) (call_ref $t0 (i32.const 24) (struct.get $java$lang$Object $vt_resolver (local.get $arg2)))))
                            ;; Unable to assign [B to Ljava/lang/Object; for de.mirkosertic.bytecoder.core.ir.PHI@16f4dc80 from de.mirkosertic.bytecoder.core.ir.ReadInstanceField@1137be4c
                            (local.set $var4 (local.get $phi23))
                            (local.set $var5 (i64.add (struct.get $java$nio$Buffer $address (ref.cast (ref null $java$nio$Buffer) (local.get $arg0))) (i64.extend_i32_s (local.get $arg1))))
                            ;; Unable to assign [B to Ljava/lang/Object; for de.mirkosertic.bytecoder.core.ir.PHI@b0f55db from de.mirkosertic.bytecoder.core.ir.ReadInstanceField@65d35652
                            (local.set $var6 (local.get $phi22))
                            (local.set $var7 (i64.add (struct.get $java$nio$Buffer $address (ref.cast (ref null $java$nio$Buffer) (local.get $arg2))) (i64.extend_i32_s (local.get $arg3))))
                            (drop (call $jdk$internal$util$ArraysSupport_i))
                            (local.set $var8 (struct.get $jdk$internal$util$ArraysSupport_rtt $LOG2_ARRAY_BYTE_INDEX_SCALE (global.get $jdk$internal$util$ArraysSupport_cls)))
                            ;; startBlock type=NORMAL, label = TryCatch_109_0
                            (block $TryCatch_109_0
                                ;; startTryCatch
                                (try $trycatch_0 (do
                                        (local.set $var25 (call $jdk$internal$misc$ScopedMemoryAccess$I$vectorizedMismatchInternal$Ljdk$internal$foreign$MemorySessionImpl$$Ljdk$internal$foreign$MemorySessionImpl$$Ljava$lang$Object$$J$Ljava$lang$Object$$J$I$I (local.get $var1) (local.get $var2) (local.get $var3) (local.get $var4) (local.get $var5) (local.get $var6) (local.get $var7) (local.get $arg4) (local.get $var8)))
                                        (br $TryCatch_109_0)
                                        )
                                    (catch $javaexception
                                        ;; startCatchBlock
                                        (global.set $lastcaughtexception (pop (ref null $java$lang$Object)))
                                        (if $catchcheck_0 (call $instanceOf (global.get $lastcaughtexception) (struct.get $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError_rtt $factoryFor (global.get $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError_cls)))
                                            (then
                                                (local.set $var24 (global.get $lastcaughtexception))
                                                (throw $javaexception (call $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError$Ljava$lang$RuntimeException$$newRuntimeException$$ (local.get $var24)))
                                                ))
                                        (rethrow $trycatch_0)
                                        )
                                    )
                                ;; finishTryCatch
                                )
                            ;; finishBlock
                            (local.set $phi26 (local.get $var25))
                            (local.set $var9 (local.get $phi26))
                            ;; writeIfAndStartTrueBlock
                            (if $if2 (i32.lt_s (local.get $var9) (i32.const 0))
                                (then
                                    (local.set $var10 (i32.sub (local.get $arg4) (i32.xor (local.get $var9) (i32.const -1))))
                                    (local.set $phi11 (local.get $arg0))
                                    (local.set $phi12 (local.get $arg1))
                                    (local.set $phi13 (local.get $arg2))
                                    (local.set $phi14 (local.get $arg3))
                                    (local.set $phi15 (local.get $arg4))
                                    (local.set $phi16 (local.get $var10))
                                    (br $If_8_0)
                                    ;; Start else
                                    )(else
                                    (return (local.get $var9))
                                    ))
                            ;; finishIfBlock
                            ;; Start else
                            )(else
                            (return (i32.const 0))
                            ))
                    ;; finishIfBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        ;; startBlock type=LOOP, label = L178385290
        (loop $L178385290
            ;; writeIfAndStartTrueBlock
            (if $if3 (i32.ge_s (local.get $phi16) (local.get $phi15))
                (then
                    (return (i32.const -1))
                    ;; Start else
                    )(else
                    (local.set $var17 (local.get $phi11))
                    (local.set $var18 (i32.add (local.get $phi12) (local.get $phi16)))
                    (local.set $var19 (call_indirect (type $t551) (local.get $var17) (local.get $var18) (call_ref $t0 (i32.const 121) (struct.get $java$lang$Object $vt_resolver (local.get $var17)))))
                    (local.set $var20 (local.get $phi13))
                    (local.set $var21 (i32.add (local.get $phi14) (local.get $phi16)))
                    ;; writeIfAndStartTrueBlock
                    (if $if4 (i32.eq (local.get $var19) (call_indirect (type $t551) (local.get $var20) (local.get $var21) (call_ref $t0 (i32.const 121) (struct.get $java$lang$Object $vt_resolver (local.get $var20)))))
                        (then
                            (local.set $phi16 (i32.add (local.get $phi16) (i32.const 1)))
                            ;; Here was a goto statement
                            (br $L178385290)
                            ;; Start else
                            )(else
                            (return (local.get $phi16))
                            ))
                    ;; finishIfBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (unreachable))
    (func $java$nio$BufferMismatch$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$nio$charset$CoderResult$V$$clinit$$$ (type $t541) (param $unused (ref null $java$lang$Object))
        (local $phi0 i32)
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $var6 (ref null $java$lang$Object))
        (local $var7 (ref null $java$lang$Object))
        (local $var8 (ref null $java$lang$Object))
        (local $var9 (ref null $java$lang$Object))
        (local $var10 (ref null $java$lang$Object))
        (local $var11 (ref null $java$lang$Object))
        (local $var12 (ref null $java$lang$Object))
        (local $var13 (ref null $java$lang$Object))
        ;; startBlock type=NORMAL, label = If_4_0
        (block $If_4_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ne (call $java$lang$Class$Z$desiredAssertionStatus$$ (call $java$nio$charset$CoderResult_i)) (i32.const 0))
                (then
                    (local.set $phi0 (i32.const 0))
                    (br $If_4_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi0 (i32.const 1))
                    (br $If_4_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (drop (call $java$nio$charset$CoderResult_i))
        (struct.set $java$nio$charset$CoderResult_rtt $$assertionsDisabled (ref.cast (ref null $java$nio$charset$CoderResult_rtt) (call $java$nio$charset$CoderResult_i)) (local.get $phi0))
        (local.set $var1 (struct.new $obj_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t549 (i32.const 4))))
        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var1))) (i32.const 0) (global.get $stringpool_34))
        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var1))) (i32.const 1) (global.get $stringpool_35))
        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var1))) (i32.const 2) (global.get $stringpool_36))
        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var1))) (i32.const 3) (global.get $stringpool_37))
        (drop (call $java$nio$charset$CoderResult_i))
        (struct.set $java$nio$charset$CoderResult_rtt $names (ref.cast (ref null $java$nio$charset$CoderResult_rtt) (call $java$nio$charset$CoderResult_i)) (ref.cast (ref null $java$lang$Object) (local.get $var1)))
        (drop (call $java$nio$charset$CoderResult_i))
        (local.set $var2 (struct.new $java$nio$charset$CoderResult (struct.get $java$nio$charset$CoderResult_rtt $factoryFor (global.get $java$nio$charset$CoderResult_cls)) (ref.func $java$nio$charset$CoderResult_vt) (ref.null noextern) (struct.get $java$nio$charset$CoderResult_rtt $classImplTypes (global.get $java$nio$charset$CoderResult_cls)) (i32.const 0) (i32.const 0)))
        (struct.set $java$nio$charset$CoderResult $type (ref.cast (ref null $java$nio$charset$CoderResult) (local.get $var2)) (i32.const 0))
        (struct.set $java$nio$charset$CoderResult $length (ref.cast (ref null $java$nio$charset$CoderResult) (local.get $var2)) (i32.const 0))
        (drop (call $java$nio$charset$CoderResult_i))
        (struct.set $java$nio$charset$CoderResult_rtt $UNDERFLOW (ref.cast (ref null $java$nio$charset$CoderResult_rtt) (call $java$nio$charset$CoderResult_i)) (ref.cast (ref null $java$lang$Object) (local.get $var2)))
        (drop (call $java$nio$charset$CoderResult_i))
        (local.set $var3 (struct.new $java$nio$charset$CoderResult (struct.get $java$nio$charset$CoderResult_rtt $factoryFor (global.get $java$nio$charset$CoderResult_cls)) (ref.func $java$nio$charset$CoderResult_vt) (ref.null noextern) (struct.get $java$nio$charset$CoderResult_rtt $classImplTypes (global.get $java$nio$charset$CoderResult_cls)) (i32.const 0) (i32.const 0)))
        (struct.set $java$nio$charset$CoderResult $type (ref.cast (ref null $java$nio$charset$CoderResult) (local.get $var3)) (i32.const 1))
        (struct.set $java$nio$charset$CoderResult $length (ref.cast (ref null $java$nio$charset$CoderResult) (local.get $var3)) (i32.const 0))
        (drop (call $java$nio$charset$CoderResult_i))
        (struct.set $java$nio$charset$CoderResult_rtt $OVERFLOW (ref.cast (ref null $java$nio$charset$CoderResult_rtt) (call $java$nio$charset$CoderResult_i)) (ref.cast (ref null $java$lang$Object) (local.get $var3)))
        (local.set $var4 (struct.new $obj_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t549 (i32.const 4))))
        (drop (call $java$nio$charset$CoderResult_i))
        (local.set $var5 (struct.new $java$nio$charset$CoderResult (struct.get $java$nio$charset$CoderResult_rtt $factoryFor (global.get $java$nio$charset$CoderResult_cls)) (ref.func $java$nio$charset$CoderResult_vt) (ref.null noextern) (struct.get $java$nio$charset$CoderResult_rtt $classImplTypes (global.get $java$nio$charset$CoderResult_cls)) (i32.const 0) (i32.const 0)))
        (struct.set $java$nio$charset$CoderResult $type (ref.cast (ref null $java$nio$charset$CoderResult) (local.get $var5)) (i32.const 2))
        (struct.set $java$nio$charset$CoderResult $length (ref.cast (ref null $java$nio$charset$CoderResult) (local.get $var5)) (i32.const 1))
        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var4))) (i32.const 0) (local.get $var5))
        (drop (call $java$nio$charset$CoderResult_i))
        (local.set $var6 (struct.new $java$nio$charset$CoderResult (struct.get $java$nio$charset$CoderResult_rtt $factoryFor (global.get $java$nio$charset$CoderResult_cls)) (ref.func $java$nio$charset$CoderResult_vt) (ref.null noextern) (struct.get $java$nio$charset$CoderResult_rtt $classImplTypes (global.get $java$nio$charset$CoderResult_cls)) (i32.const 0) (i32.const 0)))
        (struct.set $java$nio$charset$CoderResult $type (ref.cast (ref null $java$nio$charset$CoderResult) (local.get $var6)) (i32.const 2))
        (struct.set $java$nio$charset$CoderResult $length (ref.cast (ref null $java$nio$charset$CoderResult) (local.get $var6)) (i32.const 2))
        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var4))) (i32.const 1) (local.get $var6))
        (drop (call $java$nio$charset$CoderResult_i))
        (local.set $var7 (struct.new $java$nio$charset$CoderResult (struct.get $java$nio$charset$CoderResult_rtt $factoryFor (global.get $java$nio$charset$CoderResult_cls)) (ref.func $java$nio$charset$CoderResult_vt) (ref.null noextern) (struct.get $java$nio$charset$CoderResult_rtt $classImplTypes (global.get $java$nio$charset$CoderResult_cls)) (i32.const 0) (i32.const 0)))
        (struct.set $java$nio$charset$CoderResult $type (ref.cast (ref null $java$nio$charset$CoderResult) (local.get $var7)) (i32.const 2))
        (struct.set $java$nio$charset$CoderResult $length (ref.cast (ref null $java$nio$charset$CoderResult) (local.get $var7)) (i32.const 3))
        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var4))) (i32.const 2) (local.get $var7))
        (drop (call $java$nio$charset$CoderResult_i))
        (local.set $var8 (struct.new $java$nio$charset$CoderResult (struct.get $java$nio$charset$CoderResult_rtt $factoryFor (global.get $java$nio$charset$CoderResult_cls)) (ref.func $java$nio$charset$CoderResult_vt) (ref.null noextern) (struct.get $java$nio$charset$CoderResult_rtt $classImplTypes (global.get $java$nio$charset$CoderResult_cls)) (i32.const 0) (i32.const 0)))
        (struct.set $java$nio$charset$CoderResult $type (ref.cast (ref null $java$nio$charset$CoderResult) (local.get $var8)) (i32.const 2))
        (struct.set $java$nio$charset$CoderResult $length (ref.cast (ref null $java$nio$charset$CoderResult) (local.get $var8)) (i32.const 4))
        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var4))) (i32.const 3) (local.get $var8))
        (drop (call $java$nio$charset$CoderResult_i))
        (struct.set $java$nio$charset$CoderResult_rtt $malformed4 (ref.cast (ref null $java$nio$charset$CoderResult_rtt) (call $java$nio$charset$CoderResult_i)) (ref.cast (ref null $java$lang$Object) (local.get $var4)))
        (local.set $var9 (struct.new $obj_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t549 (i32.const 4))))
        (drop (call $java$nio$charset$CoderResult_i))
        (local.set $var10 (struct.new $java$nio$charset$CoderResult (struct.get $java$nio$charset$CoderResult_rtt $factoryFor (global.get $java$nio$charset$CoderResult_cls)) (ref.func $java$nio$charset$CoderResult_vt) (ref.null noextern) (struct.get $java$nio$charset$CoderResult_rtt $classImplTypes (global.get $java$nio$charset$CoderResult_cls)) (i32.const 0) (i32.const 0)))
        (struct.set $java$nio$charset$CoderResult $type (ref.cast (ref null $java$nio$charset$CoderResult) (local.get $var10)) (i32.const 3))
        (struct.set $java$nio$charset$CoderResult $length (ref.cast (ref null $java$nio$charset$CoderResult) (local.get $var10)) (i32.const 1))
        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var9))) (i32.const 0) (local.get $var10))
        (drop (call $java$nio$charset$CoderResult_i))
        (local.set $var11 (struct.new $java$nio$charset$CoderResult (struct.get $java$nio$charset$CoderResult_rtt $factoryFor (global.get $java$nio$charset$CoderResult_cls)) (ref.func $java$nio$charset$CoderResult_vt) (ref.null noextern) (struct.get $java$nio$charset$CoderResult_rtt $classImplTypes (global.get $java$nio$charset$CoderResult_cls)) (i32.const 0) (i32.const 0)))
        (struct.set $java$nio$charset$CoderResult $type (ref.cast (ref null $java$nio$charset$CoderResult) (local.get $var11)) (i32.const 3))
        (struct.set $java$nio$charset$CoderResult $length (ref.cast (ref null $java$nio$charset$CoderResult) (local.get $var11)) (i32.const 2))
        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var9))) (i32.const 1) (local.get $var11))
        (drop (call $java$nio$charset$CoderResult_i))
        (local.set $var12 (struct.new $java$nio$charset$CoderResult (struct.get $java$nio$charset$CoderResult_rtt $factoryFor (global.get $java$nio$charset$CoderResult_cls)) (ref.func $java$nio$charset$CoderResult_vt) (ref.null noextern) (struct.get $java$nio$charset$CoderResult_rtt $classImplTypes (global.get $java$nio$charset$CoderResult_cls)) (i32.const 0) (i32.const 0)))
        (struct.set $java$nio$charset$CoderResult $type (ref.cast (ref null $java$nio$charset$CoderResult) (local.get $var12)) (i32.const 3))
        (struct.set $java$nio$charset$CoderResult $length (ref.cast (ref null $java$nio$charset$CoderResult) (local.get $var12)) (i32.const 3))
        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var9))) (i32.const 2) (local.get $var12))
        (drop (call $java$nio$charset$CoderResult_i))
        (local.set $var13 (struct.new $java$nio$charset$CoderResult (struct.get $java$nio$charset$CoderResult_rtt $factoryFor (global.get $java$nio$charset$CoderResult_cls)) (ref.func $java$nio$charset$CoderResult_vt) (ref.null noextern) (struct.get $java$nio$charset$CoderResult_rtt $classImplTypes (global.get $java$nio$charset$CoderResult_cls)) (i32.const 0) (i32.const 0)))
        (struct.set $java$nio$charset$CoderResult $type (ref.cast (ref null $java$nio$charset$CoderResult) (local.get $var13)) (i32.const 3))
        (struct.set $java$nio$charset$CoderResult $length (ref.cast (ref null $java$nio$charset$CoderResult) (local.get $var13)) (i32.const 4))
        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var9))) (i32.const 3) (local.get $var13))
        (drop (call $java$nio$charset$CoderResult_i))
        (struct.set $java$nio$charset$CoderResult_rtt $unmappable4 (ref.cast (ref null $java$nio$charset$CoderResult_rtt) (call $java$nio$charset$CoderResult_i)) (ref.cast (ref null $java$lang$Object) (local.get $var9)))
        (return)
        (unreachable))
    (func $java$nio$charset$CoderResult$V$$init$$I$I (type $t579) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (param $arg1 i32)
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$nio$charset$CoderResult $type (ref.cast (ref null $java$nio$charset$CoderResult) (local.get $var0)) (local.get $arg0))
        (struct.set $java$nio$charset$CoderResult $length (ref.cast (ref null $java$nio$charset$CoderResult) (local.get $var0)) (local.get $arg1))
        (return)
        (unreachable))
    (func $java$nio$charset$CoderResult$Z$isOverflow$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 i32)
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = If_6_0
        (block $If_6_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ne (struct.get $java$nio$charset$CoderResult $type (ref.cast (ref null $java$nio$charset$CoderResult) (local.get $var0))) (i32.const 1))
                (then
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (i32.const 0))
                    (br $If_6_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (i32.const 1))
                    (br $If_6_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi2))
        (unreachable))
    (func $java$nio$charset$CoderResult$Z$isUnderflow$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 i32)
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = If_5_0
        (block $If_5_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ne (struct.get $java$nio$charset$CoderResult $type (ref.cast (ref null $java$nio$charset$CoderResult) (local.get $var0))) (i32.const 0))
                (then
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (i32.const 0))
                    (br $If_5_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (i32.const 1))
                    (br $If_5_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi2))
        (unreachable))
    (func $java$nio$charset$CoderResult$Ljava$nio$charset$CoderResult$$malformedForLength$I (type $t565) (param $unused (ref null $java$lang$Object)) (param $arg0 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $phi5 (ref null $java$lang$Object))
        ;; writeIfAndStartTrueBlock
        (if $if0 (i32.gt_s (local.get $arg0) (i32.const 0))
            (then
                ;; writeIfAndStartTrueBlock
                (if $if1 (i32.gt_s (local.get $arg0) (i32.const 4))
                    (then
                        (drop (call $java$nio$charset$CoderResult$Cache_i))
                        (local.set $var1 (struct.get $java$nio$charset$CoderResult$Cache $malformed (ref.cast (ref null $java$nio$charset$CoderResult$Cache) (struct.get $java$nio$charset$CoderResult$Cache_rtt $INSTANCE (global.get $java$nio$charset$CoderResult$Cache_cls)))))
                        (drop (call $java$lang$Integer_i))
                        (drop (call $java$lang$Integer_i))
                        (local.set $var4 (struct.new $java$lang$Integer (struct.get $java$lang$Integer_rtt $factoryFor (global.get $java$lang$Integer_cls)) (ref.func $java$lang$Integer_vt) (ref.null noextern) (struct.get $java$lang$Integer_rtt $classImplTypes (global.get $java$lang$Integer_cls)) (i32.const 0)))
                        (struct.set $java$lang$Integer $value (ref.cast (ref null $java$lang$Integer) (local.get $var4)) (local.get $arg0))
                        (local.set $phi5 (local.get $var4))
                        (local.set $var2 (local.get $phi5))
                        (local.set $var3 (struct.new $java.util.function.Function$lambda$15 (struct.get $java$util$function$Function_rtt $factoryFor (global.get $java$util$function$Function_cls)) (ref.func $java.util.function.Function$lambda$15_vt) (ref.null noextern) (struct.get $java$util$function$Function_rtt $classImplTypes (global.get $java$util$function$Function_cls))))
                        (return (ref.cast (ref null $java$lang$Object) (call_indirect (type $t561) (local.get $var1) (local.get $var2) (local.get $var3) (call_ref $t0 (i32.const 12) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var1)))))))
                        ;; Start else
                        )(else
                        (drop (call $java$nio$charset$CoderResult_i))
                        (return (array.get $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (struct.get $java$nio$charset$CoderResult_rtt $malformed4 (global.get $java$nio$charset$CoderResult_cls)))) (i32.sub (local.get $arg0) (i32.const 1))))
                        ))
                ;; finishIfBlock
                ;; Start else
                )(else
                (local.set $var0 (struct.new $java$lang$IllegalArgumentException (struct.get $java$lang$IllegalArgumentException_rtt $factoryFor (global.get $java$lang$IllegalArgumentException_cls)) (ref.func $java$lang$IllegalArgumentException_vt) (ref.null noextern) (struct.get $java$lang$IllegalArgumentException_rtt $classImplTypes (global.get $java$lang$IllegalArgumentException_cls)) (ref.null none) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_40)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var0))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $lambda14 (type $t559) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        ;; Invocation kind is INVOKESTATIC
        (return (call $java$nio$charset$CoderResult$Ljava$nio$charset$CoderResult$$lambda$malformedForLength$0$Ljava$lang$Integer$ (call $java$nio$charset$CoderResult_i) (local.get $arg0)))
        )
    (func $java.util.function.Function$lambda$15_vt (type $t0) (param $methodid i32) (result i32)
        (if $check_0 (i32.eq (i32.const 0) (local.get $methodid))
            (then
                (return (i32.const 177))
                ))
        (if $check_1 (i32.eq (i32.const 1) (local.get $methodid))
            (then
                (return (i32.const 178))
                ))
        (if $check_2 (i32.eq (i32.const 2) (local.get $methodid))
            (then
                (return (i32.const 180))
                ))
        (if $check_77 (i32.eq (i32.const 77) (local.get $methodid))
            (then
                (return (i32.const 259))
                ))
        (unreachable))
    (func $java$nio$charset$CoderResult$Ljava$nio$charset$CoderResult$$lambda$malformedForLength$0$Ljava$lang$Integer$ (type $t559) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 i32)
        (local $phi2 i32)
        (drop (call $java$nio$charset$CoderResult_i))
        (local.set $var0 (struct.new $java$nio$charset$CoderResult (struct.get $java$nio$charset$CoderResult_rtt $factoryFor (global.get $java$nio$charset$CoderResult_cls)) (ref.func $java$nio$charset$CoderResult_vt) (ref.null noextern) (struct.get $java$nio$charset$CoderResult_rtt $classImplTypes (global.get $java$nio$charset$CoderResult_cls)) (i32.const 0) (i32.const 0)))
        (local.set $phi2 (struct.get $java$lang$Integer $value (ref.cast (ref null $java$lang$Integer) (local.get $arg0))))
        (local.set $var1 (local.get $phi2))
        (struct.set $java$nio$charset$CoderResult $type (ref.cast (ref null $java$nio$charset$CoderResult) (local.get $var0)) (i32.const 2))
        (struct.set $java$nio$charset$CoderResult $length (ref.cast (ref null $java$nio$charset$CoderResult) (local.get $var0)) (local.get $var1))
        (return (local.get $var0))
        (unreachable))
    (func $java$nio$charset$CoderResult$Z$isMalformed$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 i32)
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = If_6_0
        (block $If_6_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ne (struct.get $java$nio$charset$CoderResult $type (ref.cast (ref null $java$nio$charset$CoderResult) (local.get $var0))) (i32.const 2))
                (then
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (i32.const 0))
                    (br $If_6_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (i32.const 1))
                    (br $If_6_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi2))
        (unreachable))
    (func $java$nio$charset$CoderResult$I$length$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (i32.ne (call $java$nio$charset$CoderResult$Z$isError$$ (local.get $var0)) (i32.const 0))
            (then
                (return (struct.get $java$nio$charset$CoderResult $length (ref.cast (ref null $java$nio$charset$CoderResult) (local.get $var0))))
                ;; Start else
                )(else
                (local.set $var1 (struct.new $java$lang$UnsupportedOperationException (struct.get $java$lang$UnsupportedOperationException_rtt $factoryFor (global.get $java$lang$UnsupportedOperationException_cls)) (ref.func $java$lang$UnsupportedOperationException_vt) (ref.null noextern) (struct.get $java$lang$UnsupportedOperationException_rtt $classImplTypes (global.get $java$lang$UnsupportedOperationException_cls)) (ref.null none) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var1))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$nio$charset$CoderResult$Z$isError$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 i32)
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = If_6_0
        (block $If_6_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.lt_s (struct.get $java$nio$charset$CoderResult $type (ref.cast (ref null $java$nio$charset$CoderResult) (local.get $var0))) (i32.const 2))
                (then
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (i32.const 0))
                    (br $If_6_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (i32.const 1))
                    (br $If_6_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi2))
        (unreachable))
    (func $java$nio$charset$CoderResult$Z$isUnmappable$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 i32)
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = If_6_0
        (block $If_6_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ne (struct.get $java$nio$charset$CoderResult $type (ref.cast (ref null $java$nio$charset$CoderResult) (local.get $var0))) (i32.const 3))
                (then
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (i32.const 0))
                    (br $If_6_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (i32.const 1))
                    (br $If_6_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi2))
        (unreachable))
    (func $java$nio$charset$CoderResult$Ljava$lang$String$$toString$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $var6 i32)
        (local $var7 (ref null $java$lang$Object))
        (local $var8 (ref null $java$lang$Object))
        (local $var9 (ref null $java$lang$Object))
        (local $phi10 (ref null $java$lang$Object))
        (local $phi11 (ref null $java$lang$Object))
        (local $phi12 (ref null $java$lang$Object))
        (local $var13 (ref null $java$lang$Object))
        (local $phi14 (ref null $java$lang$Object))
        (local $phi15 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (drop (call $java$nio$charset$CoderResult_i))
        (local.set $var1 (struct.get $java$nio$charset$CoderResult_rtt $names (global.get $java$nio$charset$CoderResult_cls)))
        (local.set $var2 (array.get $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var1))) (struct.get $java$nio$charset$CoderResult $type (ref.cast (ref null $java$nio$charset$CoderResult) (local.get $var0)))))
        ;; startBlock type=NORMAL, label = If_14_0
        (block $If_14_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.eq (call $java$nio$charset$CoderResult$Z$isError$$ (local.get $var0)) (i32.const 0))
                (then
                    (local.set $phi10 (local.get $var0))
                    (local.set $phi11 (local.get $var2))
                    (local.set $phi12 (local.get $var2))
                    (br $If_14_0)
                    ;; Start else
                    )(else
                    (local.set $var3 (struct.new $java$lang$StringBuilder (struct.get $java$lang$StringBuilder_rtt $factoryFor (global.get $java$lang$StringBuilder_cls)) (ref.func $java$lang$StringBuilder_vt) (ref.null noextern) (struct.get $java$lang$StringBuilder_rtt $classImplTypes (global.get $java$lang$StringBuilder_cls))))
                    (call $java$lang$StringBuilder$V$initializeWith$I (local.get $var3) (i32.const 10))
                    (local.set $var4 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var3) (local.get $var2)))
                    (local.set $var5 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var4) (global.get $stringpool_82)))
                    (local.set $var6 (struct.get $java$nio$charset$CoderResult $length (ref.cast (ref null $java$nio$charset$CoderResult) (local.get $var0))))
                    (drop (call $java$lang$Integer_i))
                    (drop (call $java$lang$Integer_i))
                    (local.set $phi14 (call $java$lang$Integer$Ljava$lang$String$$toString$I$I (call $java$lang$Integer_i) (local.get $var6) (i32.const 10)))
                    (local.set $var13 (local.get $phi14))
                    (local.set $phi15 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var5) (local.get $var13)))
                    (local.set $var7 (local.get $phi15))
                    (local.set $var8 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var7) (global.get $stringpool_83)))
                    (local.set $var9 (call $java$lang$StringBuilder$Ljava$lang$String$$toString$$ (local.get $var8)))
                    ;; Here was a goto statement
                    (local.set $phi10 (local.get $var0))
                    (local.set $phi11 (local.get $var2))
                    (local.set $phi12 (local.get $var9))
                    (br $If_14_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi12))
        (unreachable))
    (func $java$nio$charset$CoderResult$Cache$V$$clinit$$$ (type $t541) (param $unused (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (drop (call $java$nio$charset$CoderResult$Cache_i))
        (local.set $var0 (struct.new $java$nio$charset$CoderResult$Cache (struct.get $java$nio$charset$CoderResult$Cache_rtt $factoryFor (global.get $java$nio$charset$CoderResult$Cache_cls)) (ref.func $java$nio$charset$CoderResult$Cache_vt) (ref.null noextern) (struct.get $java$nio$charset$CoderResult$Cache_rtt $classImplTypes (global.get $java$nio$charset$CoderResult$Cache_cls)) (ref.null none) (ref.null none)))
        (local.set $var1 (struct.new $java$util$concurrent$ConcurrentHashMap (struct.get $java$util$concurrent$ConcurrentHashMap_rtt $factoryFor (global.get $java$util$concurrent$ConcurrentHashMap_cls)) (ref.func $java$util$concurrent$ConcurrentHashMap_vt) (ref.null noextern) (struct.get $java$util$concurrent$ConcurrentHashMap_rtt $classImplTypes (global.get $java$util$concurrent$ConcurrentHashMap_cls)) (ref.null none)))
        (local.set $var4 (struct.new $java$util$HashMap (struct.get $java$util$HashMap_rtt $factoryFor (global.get $java$util$HashMap_cls)) (ref.func $java$util$HashMap_vt) (ref.null noextern) (struct.get $java$util$HashMap_rtt $classImplTypes (global.get $java$util$HashMap_cls)) (f32.const 0.0) (i32.const 0) (i32.const 0) (ref.null none) (i32.const 0) (ref.null none)))
        (struct.set $java$util$HashMap $loadFactor (ref.cast (ref null $java$util$HashMap) (local.get $var4)) (f32.const 0.75))
        (struct.set $java$util$concurrent$ConcurrentHashMap $delegate (ref.cast (ref null $java$util$concurrent$ConcurrentHashMap) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (local.get $var4)))
        (struct.set $java$nio$charset$CoderResult$Cache $unmappable (ref.cast (ref null $java$nio$charset$CoderResult$Cache) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $var1)))
        (local.set $var2 (struct.new $java$util$concurrent$ConcurrentHashMap (struct.get $java$util$concurrent$ConcurrentHashMap_rtt $factoryFor (global.get $java$util$concurrent$ConcurrentHashMap_cls)) (ref.func $java$util$concurrent$ConcurrentHashMap_vt) (ref.null noextern) (struct.get $java$util$concurrent$ConcurrentHashMap_rtt $classImplTypes (global.get $java$util$concurrent$ConcurrentHashMap_cls)) (ref.null none)))
        (local.set $var3 (struct.new $java$util$HashMap (struct.get $java$util$HashMap_rtt $factoryFor (global.get $java$util$HashMap_cls)) (ref.func $java$util$HashMap_vt) (ref.null noextern) (struct.get $java$util$HashMap_rtt $classImplTypes (global.get $java$util$HashMap_cls)) (f32.const 0.0) (i32.const 0) (i32.const 0) (ref.null none) (i32.const 0) (ref.null none)))
        (struct.set $java$util$HashMap $loadFactor (ref.cast (ref null $java$util$HashMap) (local.get $var3)) (f32.const 0.75))
        (struct.set $java$util$concurrent$ConcurrentHashMap $delegate (ref.cast (ref null $java$util$concurrent$ConcurrentHashMap) (local.get $var2)) (ref.cast (ref null $java$lang$Object) (local.get $var3)))
        (struct.set $java$nio$charset$CoderResult$Cache $malformed (ref.cast (ref null $java$nio$charset$CoderResult$Cache) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $var2)))
        (drop (call $java$nio$charset$CoderResult$Cache_i))
        (struct.set $java$nio$charset$CoderResult$Cache_rtt $INSTANCE (ref.cast (ref null $java$nio$charset$CoderResult$Cache_rtt) (call $java$nio$charset$CoderResult$Cache_i)) (ref.cast (ref null $java$lang$Object) (local.get $var0)))
        (return)
        (unreachable))
    (func $java$nio$charset$CoderResult$Cache$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (struct.new $java$util$concurrent$ConcurrentHashMap (struct.get $java$util$concurrent$ConcurrentHashMap_rtt $factoryFor (global.get $java$util$concurrent$ConcurrentHashMap_cls)) (ref.func $java$util$concurrent$ConcurrentHashMap_vt) (ref.null noextern) (struct.get $java$util$concurrent$ConcurrentHashMap_rtt $classImplTypes (global.get $java$util$concurrent$ConcurrentHashMap_cls)) (ref.null none)))
        (local.set $var4 (struct.new $java$util$HashMap (struct.get $java$util$HashMap_rtt $factoryFor (global.get $java$util$HashMap_cls)) (ref.func $java$util$HashMap_vt) (ref.null noextern) (struct.get $java$util$HashMap_rtt $classImplTypes (global.get $java$util$HashMap_cls)) (f32.const 0.0) (i32.const 0) (i32.const 0) (ref.null none) (i32.const 0) (ref.null none)))
        (struct.set $java$util$HashMap $loadFactor (ref.cast (ref null $java$util$HashMap) (local.get $var4)) (f32.const 0.75))
        (struct.set $java$util$concurrent$ConcurrentHashMap $delegate (ref.cast (ref null $java$util$concurrent$ConcurrentHashMap) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (local.get $var4)))
        (struct.set $java$nio$charset$CoderResult$Cache $unmappable (ref.cast (ref null $java$nio$charset$CoderResult$Cache) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $var1)))
        (local.set $var2 (struct.new $java$util$concurrent$ConcurrentHashMap (struct.get $java$util$concurrent$ConcurrentHashMap_rtt $factoryFor (global.get $java$util$concurrent$ConcurrentHashMap_cls)) (ref.func $java$util$concurrent$ConcurrentHashMap_vt) (ref.null noextern) (struct.get $java$util$concurrent$ConcurrentHashMap_rtt $classImplTypes (global.get $java$util$concurrent$ConcurrentHashMap_cls)) (ref.null none)))
        (local.set $var3 (struct.new $java$util$HashMap (struct.get $java$util$HashMap_rtt $factoryFor (global.get $java$util$HashMap_cls)) (ref.func $java$util$HashMap_vt) (ref.null noextern) (struct.get $java$util$HashMap_rtt $classImplTypes (global.get $java$util$HashMap_cls)) (f32.const 0.0) (i32.const 0) (i32.const 0) (ref.null none) (i32.const 0) (ref.null none)))
        (struct.set $java$util$HashMap $loadFactor (ref.cast (ref null $java$util$HashMap) (local.get $var3)) (f32.const 0.75))
        (struct.set $java$util$concurrent$ConcurrentHashMap $delegate (ref.cast (ref null $java$util$concurrent$ConcurrentHashMap) (local.get $var2)) (ref.cast (ref null $java$lang$Object) (local.get $var3)))
        (struct.set $java$nio$charset$CoderResult$Cache $malformed (ref.cast (ref null $java$nio$charset$CoderResult$Cache) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $var2)))
        (return)
        (unreachable))
    (func $jdk$internal$access$SharedSecrets$V$setJavaNioAccess$Ljdk$internal$access$JavaNioAccess$ (type $t556) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (struct.set $jdk$internal$access$SharedSecrets_rtt $javaNioAccess (ref.cast (ref null $jdk$internal$access$SharedSecrets_rtt) (global.get $jdk$internal$access$SharedSecrets_cls)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (return)
        (unreachable))
    (func $jdk$internal$access$SharedSecrets$V$setJavaIOCPrintStreamAccess$Ljdk$internal$access$JavaIOPrintStreamAccess$ (type $t556) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (struct.set $jdk$internal$access$SharedSecrets_rtt $javaIOPrintStreamAccess (ref.cast (ref null $jdk$internal$access$SharedSecrets_rtt) (global.get $jdk$internal$access$SharedSecrets_cls)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (return)
        (unreachable))
    (func $jdk$internal$access$SharedSecrets$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$util$Arrays$V$$clinit$$$ (type $t541) (param $unused (ref null $java$lang$Object))
        (local $phi0 i32)
        ;; startBlock type=NORMAL, label = If_4_0
        (block $If_4_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ne (call $java$lang$Class$Z$desiredAssertionStatus$$ (call $java$util$Arrays_i)) (i32.const 0))
                (then
                    (local.set $phi0 (i32.const 0))
                    (br $If_4_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi0 (i32.const 1))
                    (br $If_4_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (drop (call $java$util$Arrays_i))
        (struct.set $java$util$Arrays_rtt $$assertionsDisabled (ref.cast (ref null $java$util$Arrays_rtt) (call $java$util$Arrays_i)) (local.get $phi0))
        (return)
        (unreachable))
    (func $java$util$Arrays$$B$copyOf$$B$I (type $t583) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 i32) (result (ref null $java$lang$Object))
        (local $phi0 (ref null $java$lang$Object))
        (local $phi1 i32)
        (local $var2 i32)
        (local $var3 i32)
        (local.set $phi0 (struct.new $i32_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t7 (local.get $arg1))))
        (local.set $phi1 (i32.const 0))
        ;; startBlock type=LOOP, label = L1674303124
        (loop $L1674303124
            (local.set $var2 (local.get $phi1))
            (local.set $var3 (array.len $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $arg0)))))
            (drop (call $java$lang$Math_i))
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ge_s (local.get $var2) (call $java$lang$Math$I$min$I$I (call $java$lang$Math_i) (local.get $arg1) (local.get $var3)))
                (then
                    (return (local.get $phi0))
                    ;; Start else
                    )(else
                    (array.set $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $phi0))) (local.get $phi1) (array.get $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $arg0))) (local.get $phi1)))
                    (local.set $phi1 (i32.add (local.get $phi1) (i32.const 1)))
                    ;; Here was a goto statement
                    (br $L1674303124)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (unreachable))
    (func $java$util$Arrays$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$lang$Void$V$$clinit$$$ (type $t541) (param $unused (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (call $java$lang$Class$Ljava$lang$Class$$getPrimitiveClass$Ljava$lang$String$ (global.get $java$lang$Class_cls) (global.get $stringpool_49)))
        (drop (call $java$lang$Void_i))
        (struct.set $java$lang$Void_rtt $TYPE (ref.cast (ref null $java$lang$Void_rtt) (call $java$lang$Void_i)) (ref.cast (ref null $java$lang$Object) (local.get $var0)))
        (return)
        (unreachable))
    (func $java$lang$Void$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$util$HashMap$HashIterator$V$$init$$Ljava$util$HashMap$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 (ref null $java$lang$Object))
        (local $phi4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $var6 (ref null $java$lang$Object))
        (local $var7 (ref null $java$lang$Object))
        (local $var8 i32)
        (local $var9 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$util$HashMap$HashIterator $this$0 (ref.cast (ref null $java$util$HashMap$HashIterator) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (struct.set $java$util$HashMap$HashIterator $expectedModCount (ref.cast (ref null $java$util$HashMap$HashIterator) (local.get $var0)) (struct.get $java$util$HashMap $modCount (ref.cast (ref null $java$util$HashMap) (local.get $arg0))))
        (local.set $var1 (struct.get $java$util$HashMap $table (ref.cast (ref null $java$util$HashMap) (local.get $arg0))))
        (struct.set $java$util$HashMap$HashIterator $next (ref.cast (ref null $java$util$HashMap$HashIterator) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (struct.set $java$util$HashMap$HashIterator $current (ref.cast (ref null $java$util$HashMap$HashIterator) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (struct.set $java$util$HashMap$HashIterator $index (ref.cast (ref null $java$util$HashMap$HashIterator) (local.get $var0)) (i32.const 0))
        ;; startBlock type=NORMAL, label = If_16_0
        (block $If_16_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (ref.is_null (local.get $var1))
                (then
                    (local.set $phi2 (local.get $var0))
                    (local.set $phi3 (local.get $arg0))
                    (local.set $phi4 (local.get $var1))
                    (br $If_16_0)
                    ;; Start else
                    )(else
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (i32.le_s (struct.get $java$util$HashMap $size (ref.cast (ref null $java$util$HashMap) (local.get $arg0))) (i32.const 0))
                        (then
                            (local.set $phi2 (local.get $var0))
                            (local.set $phi3 (local.get $arg0))
                            (local.set $phi4 (local.get $var1))
                            (br $If_16_0)
                            ;; Start else
                            )(else
                            (local.set $phi2 (local.get $var0))
                            (local.set $phi3 (local.get $arg0))
                            (local.set $phi4 (local.get $var1))
                            ;; startBlock type=LOOP, label = L152233671
                            (loop $L152233671
                                ;; writeIfAndStartTrueBlock
                                (if $if2 (i32.ge_s (struct.get $java$util$HashMap$HashIterator $index (ref.cast (ref null $java$util$HashMap$HashIterator) (local.get $phi2))) (array.len $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $phi4)))))
                                    (then
                                        (br $If_16_0)
                                        ;; Start else
                                        )(else
                                        (local.set $var5 (local.get $phi2))
                                        (local.set $var6 (local.get $phi4))
                                        (local.set $var7 (local.get $phi2))
                                        (local.set $var8 (struct.get $java$util$HashMap$HashIterator $index (ref.cast (ref null $java$util$HashMap$HashIterator) (local.get $var7))))
                                        (struct.set $java$util$HashMap$HashIterator $index (ref.cast (ref null $java$util$HashMap$HashIterator) (local.get $var7)) (i32.add (local.get $var8) (i32.const 1)))
                                        (local.set $var9 (array.get $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var6))) (local.get $var8)))
                                        (struct.set $java$util$HashMap$HashIterator $next (ref.cast (ref null $java$util$HashMap$HashIterator) (local.get $var5)) (ref.cast (ref null $java$lang$Object) (local.get $var9)))
                                        ;; writeIfAndStartTrueBlock
                                        (if $if3 (ref.is_null (local.get $var9))
                                            (then
                                                (br $L152233671)
                                                ;; Start else
                                                )(else
                                                (br $If_16_0)
                                                ))
                                        ;; finishIfBlock
                                        ))
                                ;; finishIfBlock
                                )
                            ;; finishBlock
                            ))
                    ;; finishIfBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return)
        (unreachable))
    (func $java$util$HashMap$HashIterator$Z$hasNext$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 i32)
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = If_5_0
        (block $If_5_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (ref.is_null (struct.get $java$util$HashMap$HashIterator $next (ref.cast (ref null $java$util$HashMap$HashIterator) (local.get $var0))))
                (then
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (i32.const 0))
                    (br $If_5_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (i32.const 1))
                    (br $If_5_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi2))
        (unreachable))
    (func $java$util$HashMap$HashIterator$Ljava$util$HashMap$Node$$nextNode$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 i32)
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $var6 (ref null $java$lang$Object))
        (local $phi7 (ref null $java$lang$Object))
        (local $phi8 (ref null $java$lang$Object))
        (local $phi9 (ref null $java$lang$Object))
        (local $var10 (ref null $java$lang$Object))
        (local $var11 (ref null $java$lang$Object))
        (local $var12 (ref null $java$lang$Object))
        (local $var13 i32)
        (local $var14 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (struct.get $java$util$HashMap$HashIterator $next (ref.cast (ref null $java$util$HashMap$HashIterator) (local.get $var0))))
        (local.set $var2 (struct.get $java$util$HashMap $modCount (ref.cast (ref null $java$util$HashMap) (struct.get $java$util$HashMap$HashIterator $this$0 (ref.cast (ref null $java$util$HashMap$HashIterator) (local.get $var0))))))
        ;; writeIfAndStartTrueBlock
        (if $if0 (i32.eq (local.get $var2) (struct.get $java$util$HashMap$HashIterator $expectedModCount (ref.cast (ref null $java$util$HashMap$HashIterator) (local.get $var0))))
            (then
                ;; writeIfAndStartTrueBlock
                (if $if1 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var1)))
                    (then
                        (struct.set $java$util$HashMap$HashIterator $current (ref.cast (ref null $java$util$HashMap$HashIterator) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $var1)))
                        (local.set $var5 (struct.get $java$util$HashMap$Node $next (ref.cast (ref null $java$util$HashMap$Node) (local.get $var1))))
                        (struct.set $java$util$HashMap$HashIterator $next (ref.cast (ref null $java$util$HashMap$HashIterator) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $var5)))
                        ;; startBlock type=NORMAL, label = If_31_0
                        (block $If_31_0
                            ;; writeIfAndStartTrueBlock
                            (if $if2 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var5)))
                                (then
                                    (local.set $phi7 (local.get $var0))
                                    (local.set $phi9 (local.get $var1))
                                    (br $If_31_0)
                                    ;; Start else
                                    )(else
                                    (local.set $var6 (struct.get $java$util$HashMap $table (ref.cast (ref null $java$util$HashMap) (struct.get $java$util$HashMap$HashIterator $this$0 (ref.cast (ref null $java$util$HashMap$HashIterator) (local.get $var0))))))
                                    ;; writeIfAndStartTrueBlock
                                    (if $if3 (ref.is_null (local.get $var6))
                                        (then
                                            (local.set $phi7 (local.get $var0))
                                            (local.set $phi8 (local.get $var6))
                                            (local.set $phi9 (local.get $var1))
                                            (br $If_31_0)
                                            ;; Start else
                                            )(else
                                            (local.set $phi7 (local.get $var0))
                                            (local.set $phi8 (local.get $var6))
                                            (local.set $phi9 (local.get $var1))
                                            ;; startBlock type=LOOP, label = L995506405
                                            (loop $L995506405
                                                ;; writeIfAndStartTrueBlock
                                                (if $if4 (i32.ge_s (struct.get $java$util$HashMap$HashIterator $index (ref.cast (ref null $java$util$HashMap$HashIterator) (local.get $phi7))) (array.len $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $phi8)))))
                                                    (then
                                                        (br $If_31_0)
                                                        ;; Start else
                                                        )(else
                                                        (local.set $var10 (local.get $phi7))
                                                        (local.set $var11 (local.get $phi8))
                                                        (local.set $var12 (local.get $phi7))
                                                        (local.set $var13 (struct.get $java$util$HashMap$HashIterator $index (ref.cast (ref null $java$util$HashMap$HashIterator) (local.get $var12))))
                                                        (struct.set $java$util$HashMap$HashIterator $index (ref.cast (ref null $java$util$HashMap$HashIterator) (local.get $var12)) (i32.add (local.get $var13) (i32.const 1)))
                                                        (local.set $var14 (array.get $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var11))) (local.get $var13)))
                                                        (struct.set $java$util$HashMap$HashIterator $next (ref.cast (ref null $java$util$HashMap$HashIterator) (local.get $var10)) (ref.cast (ref null $java$lang$Object) (local.get $var14)))
                                                        ;; writeIfAndStartTrueBlock
                                                        (if $if5 (ref.is_null (local.get $var14))
                                                            (then
                                                                (br $L995506405)
                                                                ;; Start else
                                                                )(else
                                                                (br $If_31_0)
                                                                ))
                                                        ;; finishIfBlock
                                                        ))
                                                ;; finishIfBlock
                                                )
                                            ;; finishBlock
                                            ))
                                    ;; finishIfBlock
                                    ))
                            ;; finishIfBlock
                            )
                        ;; finishBlock
                        (return (local.get $phi9))
                        ;; Start else
                        )(else
                        (local.set $var4 (struct.new $java$util$NoSuchElementException (struct.get $java$util$NoSuchElementException_rtt $factoryFor (global.get $java$util$NoSuchElementException_cls)) (ref.func $java$util$NoSuchElementException_vt) (ref.null noextern) (struct.get $java$util$NoSuchElementException_rtt $classImplTypes (global.get $java$util$NoSuchElementException_cls)) (ref.null none) (ref.null none)))
                        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var4)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var4)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                        (throw $javaexception (local.get $var4))
                        ))
                ;; finishIfBlock
                ;; Start else
                )(else
                (local.set $var3 (struct.new $java$util$ConcurrentModificationException (struct.get $java$util$ConcurrentModificationException_rtt $factoryFor (global.get $java$util$ConcurrentModificationException_cls)) (ref.func $java$util$ConcurrentModificationException_vt) (ref.null noextern) (struct.get $java$util$ConcurrentModificationException_rtt $classImplTypes (global.get $java$util$ConcurrentModificationException_cls)) (ref.null none) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var3)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var3)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var3))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $de$mirkosertic$bytecoder$classlib$Array$$Ljava$lang$Object$$newObjectArray$I (type $t565) (param $unused (ref null $java$lang$Object)) (param $arg0 i32) (result (ref null $java$lang$Object))
        (return (struct.new $obj_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t549 (local.get $arg0))))
        (unreachable))
    (func $de$mirkosertic$bytecoder$classlib$Array$$C$newCharArray$I (type $t565) (param $unused (ref null $java$lang$Object)) (param $arg0 i32) (result (ref null $java$lang$Object))
        (return (struct.new $i32_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t7 (local.get $arg0))))
        (unreachable))
    (func $de$mirkosertic$bytecoder$classlib$Array$I$charArrayLength$$C (type $t554) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (return (array.len $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $arg0)))))
        (unreachable))
    (func $de$mirkosertic$bytecoder$classlib$Array$C$getCharArrayEntry$$C$I (type $t584) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 i32) (result i32)
        (return (array.get $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $arg0))) (local.get $arg1)))
        (unreachable))
    (func $de$mirkosertic$bytecoder$classlib$Array$V$setCharArrayEntry$$C$I$C (type $t585) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 i32) (param $arg2 i32)
        (array.set $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $arg0))) (local.get $arg1) (local.get $arg2))
        (return)
        (unreachable))
    (func $de$mirkosertic$bytecoder$classlib$Array$$B$newByteArray$I (type $t565) (param $unused (ref null $java$lang$Object)) (param $arg0 i32) (result (ref null $java$lang$Object))
        (return (struct.new $i32_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t7 (local.get $arg0))))
        (unreachable))
    (func $de$mirkosertic$bytecoder$classlib$Array$I$byteArrayLength$$B (type $t554) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (return (array.len $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $arg0)))))
        (unreachable))
    (func $de$mirkosertic$bytecoder$classlib$Array$B$getByteArrayEntry$$B$I (type $t584) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 i32) (result i32)
        (return (array.get $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $arg0))) (local.get $arg1)))
        (unreachable))
    (func $de$mirkosertic$bytecoder$classlib$Array$V$setByteArrayEntry$$B$I$B (type $t585) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 i32) (param $arg2 i32)
        (array.set $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $arg0))) (local.get $arg1) (local.get $arg2))
        (return)
        (unreachable))
    (func $de$mirkosertic$bytecoder$classlib$Array$I$getIntArrayEntry$$I$I (type $t584) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 i32) (result i32)
        (return (array.get $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $arg0))) (local.get $arg1)))
        (unreachable))
    (func $de$mirkosertic$bytecoder$classlib$Array$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $jdk$internal$misc$ScopedMemoryAccess$V$$clinit$$$ (type $t541) (param $unused (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (drop (call $jdk$internal$misc$Unsafe_i))
        (drop (call $jdk$internal$misc$Unsafe_i))
        (local.set $phi2 (struct.get $jdk$internal$misc$Unsafe_rtt $INSTANCE (global.get $jdk$internal$misc$Unsafe_cls)))
        (local.set $var0 (local.get $phi2))
        (drop (call $jdk$internal$misc$ScopedMemoryAccess_i))
        (struct.set $jdk$internal$misc$ScopedMemoryAccess_rtt $UNSAFE (ref.cast (ref null $jdk$internal$misc$ScopedMemoryAccess_rtt) (call $jdk$internal$misc$ScopedMemoryAccess_i)) (ref.cast (ref null $java$lang$Object) (local.get $var0)))
        (drop (call $jdk$internal$misc$ScopedMemoryAccess_i))
        (call $jdk$internal$misc$ScopedMemoryAccess$V$registerNatives$$ (call $jdk$internal$misc$ScopedMemoryAccess_i))
        (drop (call $jdk$internal$misc$ScopedMemoryAccess_i))
        (local.set $var1 (struct.new $jdk$internal$misc$ScopedMemoryAccess (struct.get $jdk$internal$misc$ScopedMemoryAccess_rtt $factoryFor (global.get $jdk$internal$misc$ScopedMemoryAccess_cls)) (ref.func $jdk$internal$misc$ScopedMemoryAccess_vt) (ref.null noextern) (struct.get $jdk$internal$misc$ScopedMemoryAccess_rtt $classImplTypes (global.get $jdk$internal$misc$ScopedMemoryAccess_cls))))
        (drop (call $jdk$internal$misc$ScopedMemoryAccess_i))
        (struct.set $jdk$internal$misc$ScopedMemoryAccess_rtt $theScopedMemoryAccess (ref.cast (ref null $jdk$internal$misc$ScopedMemoryAccess_rtt) (call $jdk$internal$misc$ScopedMemoryAccess_i)) (ref.cast (ref null $java$lang$Object) (local.get $var1)))
        (return)
        (unreachable))
    (func $jdk$internal$misc$ScopedMemoryAccess$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $jdk$internal$misc$ScopedMemoryAccess$Ljdk$internal$misc$ScopedMemoryAccess$$getScopedMemoryAccess$$ (type $t553) (param $unused (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (drop (call $jdk$internal$misc$ScopedMemoryAccess_i))
        (return (struct.get $jdk$internal$misc$ScopedMemoryAccess_rtt $theScopedMemoryAccess (global.get $jdk$internal$misc$ScopedMemoryAccess_cls)))
        (unreachable))
    (func $jdk$internal$misc$ScopedMemoryAccess$I$vectorizedMismatch$Ljdk$internal$foreign$MemorySessionImpl$$Ljdk$internal$foreign$MemorySessionImpl$$Ljava$lang$Object$$J$Ljava$lang$Object$$J$I$I (type $t586) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object)) (param $arg2 (ref null $java$lang$Object)) (param $arg3 i64) (param $arg4 (ref null $java$lang$Object)) (param $arg5 i64) (param $arg6 i32) (param $arg7 i32) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 i32)
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = TryCatch_12_0
        (block $TryCatch_12_0
            ;; startTryCatch
            (try $trycatch_0 (do
                    (local.set $var2 (call $jdk$internal$misc$ScopedMemoryAccess$I$vectorizedMismatchInternal$Ljdk$internal$foreign$MemorySessionImpl$$Ljdk$internal$foreign$MemorySessionImpl$$Ljava$lang$Object$$J$Ljava$lang$Object$$J$I$I (local.get $var0) (local.get $arg0) (local.get $arg1) (local.get $arg2) (local.get $arg3) (local.get $arg4) (local.get $arg5) (local.get $arg6) (local.get $arg7)))
                    (br $TryCatch_12_0)
                    )
                (catch $javaexception
                    ;; startCatchBlock
                    (global.set $lastcaughtexception (pop (ref null $java$lang$Object)))
                    (if $catchcheck_0 (call $instanceOf (global.get $lastcaughtexception) (struct.get $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError_rtt $factoryFor (global.get $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError_cls)))
                        (then
                            (local.set $var1 (global.get $lastcaughtexception))
                            (throw $javaexception (call $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError$Ljava$lang$RuntimeException$$newRuntimeException$$ (local.get $var1)))
                            ))
                    (rethrow $trycatch_0)
                    )
                )
            ;; finishTryCatch
            )
        ;; finishBlock
        (return (local.get $var2))
        (unreachable))
    (func $jdk$internal$misc$ScopedMemoryAccess$I$vectorizedMismatchInternal$Ljdk$internal$foreign$MemorySessionImpl$$Ljdk$internal$foreign$MemorySessionImpl$$Ljava$lang$Object$$J$Ljava$lang$Object$$J$I$I (type $t586) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object)) (param $arg2 (ref null $java$lang$Object)) (param $arg3 i64) (param $arg4 (ref null $java$lang$Object)) (param $arg5 i64) (param $arg6 i32) (param $arg7 i32) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 (ref null $java$lang$Object))
        (local $phi4 (ref null $java$lang$Object))
        (local $phi5 (ref null $java$lang$Object))
        (local $phi6 i64)
        (local $phi7 (ref null $java$lang$Object))
        (local $phi8 i64)
        (local $phi9 i32)
        (local $phi10 i32)
        (local $var11 (ref null $java$lang$Object))
        (local $var12 i64)
        (local $var13 (ref null $java$lang$Object))
        (local $var14 i64)
        (local $var15 i32)
        (local $var16 i32)
        (local $var17 i32)
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = TryCatch_12_0
        (block $TryCatch_12_0
            ;; startTryCatch
            (try $trycatch_0 (do
                    ;; startBlock type=NORMAL, label = If_19_0
                    (block $If_19_0
                        ;; writeIfAndStartTrueBlock
                        (if $if0 (ref.is_null (local.get $arg0))
                            (then
                                (local.set $phi2 (local.get $var0))
                                (local.set $phi3 (local.get $arg0))
                                (local.set $phi4 (local.get $arg1))
                                (local.set $phi5 (local.get $arg2))
                                (local.set $phi6 (local.get $arg3))
                                (local.set $phi7 (local.get $arg4))
                                (local.set $phi8 (local.get $arg5))
                                (local.set $phi9 (local.get $arg6))
                                (local.set $phi10 (local.get $arg7))
                                (br $If_19_0)
                                ;; Start else
                                )(else
                                (local.set $phi2 (local.get $var0))
                                (local.set $phi3 (local.get $arg0))
                                (local.set $phi4 (local.get $arg1))
                                (local.set $phi5 (local.get $arg2))
                                (local.set $phi6 (local.get $arg3))
                                (local.set $phi7 (local.get $arg4))
                                (local.set $phi8 (local.get $arg5))
                                (local.set $phi9 (local.get $arg6))
                                (local.set $phi10 (local.get $arg7))
                                (br $If_19_0)
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (ref.is_null (local.get $phi4))
                        (then
                            (local.set $var11 (local.get $phi5))
                            (local.set $var12 (local.get $phi6))
                            (local.set $var13 (local.get $phi7))
                            (local.set $var14 (local.get $phi8))
                            (local.set $var15 (local.get $phi9))
                            (local.set $var16 (local.get $phi10))
                            (drop (call $jdk$internal$util$ArraysSupport_i))
                            (local.set $var17 (call $jdk$internal$util$ArraysSupport$I$vectorizedMismatch$Ljava$lang$Object$$J$Ljava$lang$Object$$J$I$I (call $jdk$internal$util$ArraysSupport_i) (local.get $var11) (local.get $var12) (local.get $var13) (local.get $var14) (local.get $var15) (local.get $var16)))
                            (br $TryCatch_12_0)
                            ;; Start else
                            )(else
                            (local.set $var11 (local.get $phi5))
                            (local.set $var12 (local.get $phi6))
                            (local.set $var13 (local.get $phi7))
                            (local.set $var14 (local.get $phi8))
                            (local.set $var15 (local.get $phi9))
                            (local.set $var16 (local.get $phi10))
                            (drop (call $jdk$internal$util$ArraysSupport_i))
                            (local.set $var17 (call $jdk$internal$util$ArraysSupport$I$vectorizedMismatch$Ljava$lang$Object$$J$Ljava$lang$Object$$J$I$I (call $jdk$internal$util$ArraysSupport_i) (local.get $var11) (local.get $var12) (local.get $var13) (local.get $var14) (local.get $var15) (local.get $var16)))
                            (br $TryCatch_12_0)
                            ))
                    ;; finishIfBlock
                    )
                (catch $javaexception
                    ;; startCatchBlock
                    (global.set $lastcaughtexception (pop (ref null $java$lang$Object)))
                    (if $catchcheck_0 (call $instanceOf (global.get $lastcaughtexception) (struct.get $java$lang$Throwable_rtt $factoryFor (global.get $java$lang$Throwable_cls)))
                        (then
                            ;; startBlock type=NORMAL, label = TryCatch_13_0
                            (block $TryCatch_13_0
                                (local.set $var1 (global.get $lastcaughtexception))
                                (br $TryCatch_13_0)
                                )
                            ;; finishBlock
                            (throw $javaexception (local.get $var1))
                            ))
                    (rethrow $trycatch_0)
                    )
                )
            ;; finishTryCatch
            )
        ;; finishBlock
        (return (local.get $var17))
        (unreachable))
    (func $jdk$internal$misc$ScopedMemoryAccess$V$copyMemory$Ljdk$internal$foreign$MemorySessionImpl$$Ljdk$internal$foreign$MemorySessionImpl$$Ljava$lang$Object$$J$Ljava$lang$Object$$J$J (type $t587) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object)) (param $arg2 (ref null $java$lang$Object)) (param $arg3 i64) (param $arg4 (ref null $java$lang$Object)) (param $arg5 i64) (param $arg6 i64)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = TryCatch_11_0
        (block $TryCatch_11_0
            ;; startTryCatch
            (try $trycatch_0 (do
                    (call $jdk$internal$misc$ScopedMemoryAccess$V$copyMemoryInternal$Ljdk$internal$foreign$MemorySessionImpl$$Ljdk$internal$foreign$MemorySessionImpl$$Ljava$lang$Object$$J$Ljava$lang$Object$$J$J (local.get $var0) (local.get $arg0) (local.get $arg1) (local.get $arg2) (local.get $arg3) (local.get $arg4) (local.get $arg5) (local.get $arg6))
                    (br $TryCatch_11_0)
                    )
                (catch $javaexception
                    ;; startCatchBlock
                    (global.set $lastcaughtexception (pop (ref null $java$lang$Object)))
                    (if $catchcheck_0 (call $instanceOf (global.get $lastcaughtexception) (struct.get $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError_rtt $factoryFor (global.get $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError_cls)))
                        (then
                            (local.set $var1 (global.get $lastcaughtexception))
                            (throw $javaexception (call $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError$Ljava$lang$RuntimeException$$newRuntimeException$$ (local.get $var1)))
                            ))
                    (rethrow $trycatch_0)
                    )
                )
            ;; finishTryCatch
            )
        ;; finishBlock
        ;; Here was a goto statement
        (return)
        (unreachable))
    (func $jdk$internal$misc$ScopedMemoryAccess$V$copyMemoryInternal$Ljdk$internal$foreign$MemorySessionImpl$$Ljdk$internal$foreign$MemorySessionImpl$$Ljava$lang$Object$$J$Ljava$lang$Object$$J$J (type $t587) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object)) (param $arg2 (ref null $java$lang$Object)) (param $arg3 i64) (param $arg4 (ref null $java$lang$Object)) (param $arg5 i64) (param $arg6 i64)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 (ref null $java$lang$Object))
        (local $phi4 (ref null $java$lang$Object))
        (local $phi5 (ref null $java$lang$Object))
        (local $phi6 i64)
        (local $phi7 (ref null $java$lang$Object))
        (local $phi8 i64)
        (local $phi9 i64)
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = TryCatch_11_0
        (block $TryCatch_11_0
            ;; startTryCatch
            (try $trycatch_0 (do
                    ;; startBlock type=NORMAL, label = If_18_0
                    (block $If_18_0
                        ;; writeIfAndStartTrueBlock
                        (if $if0 (ref.is_null (local.get $arg0))
                            (then
                                (local.set $phi2 (local.get $var0))
                                (local.set $phi3 (local.get $arg0))
                                (local.set $phi4 (local.get $arg1))
                                (local.set $phi5 (local.get $arg2))
                                (local.set $phi6 (local.get $arg3))
                                (local.set $phi7 (local.get $arg4))
                                (local.set $phi8 (local.get $arg5))
                                (local.set $phi9 (local.get $arg6))
                                (br $If_18_0)
                                ;; Start else
                                )(else
                                (local.set $phi2 (local.get $var0))
                                (local.set $phi3 (local.get $arg0))
                                (local.set $phi4 (local.get $arg1))
                                (local.set $phi5 (local.get $arg2))
                                (local.set $phi6 (local.get $arg3))
                                (local.set $phi7 (local.get $arg4))
                                (local.set $phi8 (local.get $arg5))
                                (local.set $phi9 (local.get $arg6))
                                (br $If_18_0)
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (ref.is_null (local.get $phi4))
                        (then
                            (drop (call $jdk$internal$misc$ScopedMemoryAccess_i))
                            (br $TryCatch_11_0)
                            ;; Start else
                            )(else
                            (drop (call $jdk$internal$misc$ScopedMemoryAccess_i))
                            (br $TryCatch_11_0)
                            ))
                    ;; finishIfBlock
                    )
                (catch $javaexception
                    ;; startCatchBlock
                    (global.set $lastcaughtexception (pop (ref null $java$lang$Object)))
                    (if $catchcheck_0 (call $instanceOf (global.get $lastcaughtexception) (struct.get $java$lang$Throwable_rtt $factoryFor (global.get $java$lang$Throwable_cls)))
                        (then
                            ;; startBlock type=NORMAL, label = TryCatch_12_0
                            (block $TryCatch_12_0
                                (local.set $var1 (global.get $lastcaughtexception))
                                (br $TryCatch_12_0)
                                )
                            ;; finishBlock
                            (throw $javaexception (local.get $var1))
                            ))
                    (rethrow $trycatch_0)
                    )
                )
            ;; finishTryCatch
            )
        ;; finishBlock
        ;; Here was a goto statement
        (return)
        (unreachable))
    (func $jdk$internal$misc$ScopedMemoryAccess$V$copySwapMemory$Ljdk$internal$foreign$MemorySessionImpl$$Ljdk$internal$foreign$MemorySessionImpl$$Ljava$lang$Object$$J$Ljava$lang$Object$$J$J$J (type $t588) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object)) (param $arg2 (ref null $java$lang$Object)) (param $arg3 i64) (param $arg4 (ref null $java$lang$Object)) (param $arg5 i64) (param $arg6 i64) (param $arg7 i64)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = TryCatch_12_0
        (block $TryCatch_12_0
            ;; startTryCatch
            (try $trycatch_0 (do
                    (call $jdk$internal$misc$ScopedMemoryAccess$V$copySwapMemoryInternal$Ljdk$internal$foreign$MemorySessionImpl$$Ljdk$internal$foreign$MemorySessionImpl$$Ljava$lang$Object$$J$Ljava$lang$Object$$J$J$J (local.get $var0) (local.get $arg0) (local.get $arg1) (local.get $arg2) (local.get $arg3) (local.get $arg4) (local.get $arg5) (local.get $arg6) (local.get $arg7))
                    (br $TryCatch_12_0)
                    )
                (catch $javaexception
                    ;; startCatchBlock
                    (global.set $lastcaughtexception (pop (ref null $java$lang$Object)))
                    (if $catchcheck_0 (call $instanceOf (global.get $lastcaughtexception) (struct.get $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError_rtt $factoryFor (global.get $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError_cls)))
                        (then
                            (local.set $var1 (global.get $lastcaughtexception))
                            (throw $javaexception (call $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError$Ljava$lang$RuntimeException$$newRuntimeException$$ (local.get $var1)))
                            ))
                    (rethrow $trycatch_0)
                    )
                )
            ;; finishTryCatch
            )
        ;; finishBlock
        ;; Here was a goto statement
        (return)
        (unreachable))
    (func $jdk$internal$misc$ScopedMemoryAccess$V$copySwapMemoryInternal$Ljdk$internal$foreign$MemorySessionImpl$$Ljdk$internal$foreign$MemorySessionImpl$$Ljava$lang$Object$$J$Ljava$lang$Object$$J$J$J (type $t588) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object)) (param $arg2 (ref null $java$lang$Object)) (param $arg3 i64) (param $arg4 (ref null $java$lang$Object)) (param $arg5 i64) (param $arg6 i64) (param $arg7 i64)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 (ref null $java$lang$Object))
        (local $phi4 (ref null $java$lang$Object))
        (local $phi5 (ref null $java$lang$Object))
        (local $phi6 i64)
        (local $phi7 (ref null $java$lang$Object))
        (local $phi8 i64)
        (local $phi9 i64)
        (local $phi10 i64)
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = TryCatch_12_0
        (block $TryCatch_12_0
            ;; startTryCatch
            (try $trycatch_0 (do
                    ;; startBlock type=NORMAL, label = If_19_0
                    (block $If_19_0
                        ;; writeIfAndStartTrueBlock
                        (if $if0 (ref.is_null (local.get $arg0))
                            (then
                                (local.set $phi2 (local.get $var0))
                                (local.set $phi3 (local.get $arg0))
                                (local.set $phi4 (local.get $arg1))
                                (local.set $phi5 (local.get $arg2))
                                (local.set $phi6 (local.get $arg3))
                                (local.set $phi7 (local.get $arg4))
                                (local.set $phi8 (local.get $arg5))
                                (local.set $phi9 (local.get $arg6))
                                (local.set $phi10 (local.get $arg7))
                                (br $If_19_0)
                                ;; Start else
                                )(else
                                (local.set $phi2 (local.get $var0))
                                (local.set $phi3 (local.get $arg0))
                                (local.set $phi4 (local.get $arg1))
                                (local.set $phi5 (local.get $arg2))
                                (local.set $phi6 (local.get $arg3))
                                (local.set $phi7 (local.get $arg4))
                                (local.set $phi8 (local.get $arg5))
                                (local.set $phi9 (local.get $arg6))
                                (local.set $phi10 (local.get $arg7))
                                (br $If_19_0)
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (ref.is_null (local.get $phi4))
                        (then
                            (drop (call $jdk$internal$misc$ScopedMemoryAccess_i))
                            (br $TryCatch_12_0)
                            ;; Start else
                            )(else
                            (drop (call $jdk$internal$misc$ScopedMemoryAccess_i))
                            (br $TryCatch_12_0)
                            ))
                    ;; finishIfBlock
                    )
                (catch $javaexception
                    ;; startCatchBlock
                    (global.set $lastcaughtexception (pop (ref null $java$lang$Object)))
                    (if $catchcheck_0 (call $instanceOf (global.get $lastcaughtexception) (struct.get $java$lang$Throwable_rtt $factoryFor (global.get $java$lang$Throwable_cls)))
                        (then
                            ;; startBlock type=NORMAL, label = TryCatch_13_0
                            (block $TryCatch_13_0
                                (local.set $var1 (global.get $lastcaughtexception))
                                (br $TryCatch_13_0)
                                )
                            ;; finishBlock
                            (throw $javaexception (local.get $var1))
                            ))
                    (rethrow $trycatch_0)
                    )
                )
            ;; finishTryCatch
            )
        ;; finishBlock
        ;; Here was a goto statement
        (return)
        (unreachable))
    (func $jdk$internal$util$ArraysSupport$V$$clinit$$$ (type $t541) (param $unused (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 i32)
        (local $var3 i32)
        (local $var4 i32)
        (local $var5 i32)
        (local $var6 i32)
        (local $var7 i32)
        (local $var8 i32)
        (local $var9 i32)
        (local $var10 i32)
        (local $var11 i32)
        (local $var12 i32)
        (local $var13 i32)
        (local $var14 i32)
        (local $var15 i32)
        (local $var16 i32)
        (local $var17 i32)
        (local $var18 i32)
        (local $phi19 (ref null $java$lang$Object))
        (local $var20 (ref null $java$lang$Object))
        (local $phi21 i32)
        (local $var22 (ref null $java$lang$Object))
        (local $phi23 i32)
        (local $var24 (ref null $java$lang$Object))
        (local $phi25 i32)
        (local $var26 (ref null $java$lang$Object))
        (local $phi27 i32)
        (local $var28 (ref null $java$lang$Object))
        (local $phi29 i32)
        (local $var30 (ref null $java$lang$Object))
        (local $phi31 i32)
        (local $var32 (ref null $java$lang$Object))
        (local $phi33 i32)
        (local $var34 (ref null $java$lang$Object))
        (local $phi35 i32)
        (local $var36 (ref null $java$lang$Object))
        (local $phi37 i32)
        (drop (call $jdk$internal$misc$Unsafe_i))
        (drop (call $jdk$internal$misc$Unsafe_i))
        (local.set $phi19 (struct.get $jdk$internal$misc$Unsafe_rtt $INSTANCE (global.get $jdk$internal$misc$Unsafe_cls)))
        (local.set $var0 (local.get $phi19))
        (drop (call $jdk$internal$util$ArraysSupport_i))
        (struct.set $jdk$internal$util$ArraysSupport_rtt $U (ref.cast (ref null $jdk$internal$util$ArraysSupport_rtt) (call $jdk$internal$util$ArraysSupport_i)) (ref.cast (ref null $java$lang$Object) (local.get $var0)))
        (drop (call $jdk$internal$util$ArraysSupport_i))
        (local.set $var1 (struct.get $jdk$internal$util$ArraysSupport_rtt $U (global.get $jdk$internal$util$ArraysSupport_cls)))
        (drop (call $jdk$internal$util$ArraysSupport_i))
        (struct.set $jdk$internal$util$ArraysSupport_rtt $BIG_ENDIAN (ref.cast (ref null $jdk$internal$util$ArraysSupport_rtt) (call $jdk$internal$util$ArraysSupport_i)) (i32.const 0))
        (local.set $var2 (struct.get $jdk$internal$misc$Unsafe_rtt $ARRAY_BOOLEAN_INDEX_SCALE (global.get $jdk$internal$misc$Unsafe_cls)))
        (drop (call $jdk$internal$util$ArraysSupport_i))
        ;; writeIfAndStartTrueBlock
        (if $if0 (i32.eq (i32.and (local.get $var2) (i32.sub (local.get $var2) (i32.const 1))) (i32.const 0))
            (then
                (drop (call $java$lang$Integer_i))
                (local.set $phi37 (call $java$lang$Integer$I$numberOfTrailingZeros$I (call $java$lang$Integer_i) (local.get $var2)))
                (local.set $var3 (local.get $phi37))
                (drop (call $jdk$internal$util$ArraysSupport_i))
                (struct.set $jdk$internal$util$ArraysSupport_rtt $LOG2_ARRAY_BOOLEAN_INDEX_SCALE (ref.cast (ref null $jdk$internal$util$ArraysSupport_rtt) (call $jdk$internal$util$ArraysSupport_i)) (local.get $var3))
                (local.set $var4 (struct.get $jdk$internal$misc$Unsafe_rtt $ARRAY_BYTE_INDEX_SCALE (global.get $jdk$internal$misc$Unsafe_cls)))
                (drop (call $jdk$internal$util$ArraysSupport_i))
                ;; writeIfAndStartTrueBlock
                (if $if1 (i32.eq (i32.and (local.get $var4) (i32.sub (local.get $var4) (i32.const 1))) (i32.const 0))
                    (then
                        (local.set $phi35 (call $java$lang$Integer$I$numberOfTrailingZeros$I (call $java$lang$Integer_i) (local.get $var4)))
                        (local.set $var5 (local.get $phi35))
                        (drop (call $jdk$internal$util$ArraysSupport_i))
                        (struct.set $jdk$internal$util$ArraysSupport_rtt $LOG2_ARRAY_BYTE_INDEX_SCALE (ref.cast (ref null $jdk$internal$util$ArraysSupport_rtt) (call $jdk$internal$util$ArraysSupport_i)) (local.get $var5))
                        (local.set $var6 (struct.get $jdk$internal$misc$Unsafe_rtt $ARRAY_CHAR_INDEX_SCALE (global.get $jdk$internal$misc$Unsafe_cls)))
                        (drop (call $jdk$internal$util$ArraysSupport_i))
                        ;; writeIfAndStartTrueBlock
                        (if $if2 (i32.eq (i32.and (local.get $var6) (i32.sub (local.get $var6) (i32.const 1))) (i32.const 0))
                            (then
                                (local.set $phi33 (call $java$lang$Integer$I$numberOfTrailingZeros$I (call $java$lang$Integer_i) (local.get $var6)))
                                (local.set $var7 (local.get $phi33))
                                (drop (call $jdk$internal$util$ArraysSupport_i))
                                (struct.set $jdk$internal$util$ArraysSupport_rtt $LOG2_ARRAY_CHAR_INDEX_SCALE (ref.cast (ref null $jdk$internal$util$ArraysSupport_rtt) (call $jdk$internal$util$ArraysSupport_i)) (local.get $var7))
                                (local.set $var8 (struct.get $jdk$internal$misc$Unsafe_rtt $ARRAY_SHORT_INDEX_SCALE (global.get $jdk$internal$misc$Unsafe_cls)))
                                (drop (call $jdk$internal$util$ArraysSupport_i))
                                ;; writeIfAndStartTrueBlock
                                (if $if3 (i32.eq (i32.and (local.get $var8) (i32.sub (local.get $var8) (i32.const 1))) (i32.const 0))
                                    (then
                                        (local.set $phi31 (call $java$lang$Integer$I$numberOfTrailingZeros$I (call $java$lang$Integer_i) (local.get $var8)))
                                        (local.set $var9 (local.get $phi31))
                                        (drop (call $jdk$internal$util$ArraysSupport_i))
                                        (struct.set $jdk$internal$util$ArraysSupport_rtt $LOG2_ARRAY_SHORT_INDEX_SCALE (ref.cast (ref null $jdk$internal$util$ArraysSupport_rtt) (call $jdk$internal$util$ArraysSupport_i)) (local.get $var9))
                                        (local.set $var10 (struct.get $jdk$internal$misc$Unsafe_rtt $ARRAY_INT_INDEX_SCALE (global.get $jdk$internal$misc$Unsafe_cls)))
                                        (drop (call $jdk$internal$util$ArraysSupport_i))
                                        ;; writeIfAndStartTrueBlock
                                        (if $if4 (i32.eq (i32.and (local.get $var10) (i32.sub (local.get $var10) (i32.const 1))) (i32.const 0))
                                            (then
                                                (local.set $phi29 (call $java$lang$Integer$I$numberOfTrailingZeros$I (call $java$lang$Integer_i) (local.get $var10)))
                                                (local.set $var11 (local.get $phi29))
                                                (drop (call $jdk$internal$util$ArraysSupport_i))
                                                (struct.set $jdk$internal$util$ArraysSupport_rtt $LOG2_ARRAY_INT_INDEX_SCALE (ref.cast (ref null $jdk$internal$util$ArraysSupport_rtt) (call $jdk$internal$util$ArraysSupport_i)) (local.get $var11))
                                                (local.set $var12 (struct.get $jdk$internal$misc$Unsafe_rtt $ARRAY_LONG_INDEX_SCALE (global.get $jdk$internal$misc$Unsafe_cls)))
                                                (drop (call $jdk$internal$util$ArraysSupport_i))
                                                ;; writeIfAndStartTrueBlock
                                                (if $if5 (i32.eq (i32.and (local.get $var12) (i32.sub (local.get $var12) (i32.const 1))) (i32.const 0))
                                                    (then
                                                        (local.set $phi27 (call $java$lang$Integer$I$numberOfTrailingZeros$I (call $java$lang$Integer_i) (local.get $var12)))
                                                        (local.set $var13 (local.get $phi27))
                                                        (drop (call $jdk$internal$util$ArraysSupport_i))
                                                        (struct.set $jdk$internal$util$ArraysSupport_rtt $LOG2_ARRAY_LONG_INDEX_SCALE (ref.cast (ref null $jdk$internal$util$ArraysSupport_rtt) (call $jdk$internal$util$ArraysSupport_i)) (local.get $var13))
                                                        (local.set $var14 (struct.get $jdk$internal$misc$Unsafe_rtt $ARRAY_FLOAT_INDEX_SCALE (global.get $jdk$internal$misc$Unsafe_cls)))
                                                        (drop (call $jdk$internal$util$ArraysSupport_i))
                                                        ;; writeIfAndStartTrueBlock
                                                        (if $if6 (i32.eq (i32.and (local.get $var14) (i32.sub (local.get $var14) (i32.const 1))) (i32.const 0))
                                                            (then
                                                                (local.set $phi25 (call $java$lang$Integer$I$numberOfTrailingZeros$I (call $java$lang$Integer_i) (local.get $var14)))
                                                                (local.set $var15 (local.get $phi25))
                                                                (drop (call $jdk$internal$util$ArraysSupport_i))
                                                                (struct.set $jdk$internal$util$ArraysSupport_rtt $LOG2_ARRAY_FLOAT_INDEX_SCALE (ref.cast (ref null $jdk$internal$util$ArraysSupport_rtt) (call $jdk$internal$util$ArraysSupport_i)) (local.get $var15))
                                                                (local.set $var16 (struct.get $jdk$internal$misc$Unsafe_rtt $ARRAY_DOUBLE_INDEX_SCALE (global.get $jdk$internal$misc$Unsafe_cls)))
                                                                (drop (call $jdk$internal$util$ArraysSupport_i))
                                                                ;; writeIfAndStartTrueBlock
                                                                (if $if7 (i32.eq (i32.and (local.get $var16) (i32.sub (local.get $var16) (i32.const 1))) (i32.const 0))
                                                                    (then
                                                                        (local.set $phi23 (call $java$lang$Integer$I$numberOfTrailingZeros$I (call $java$lang$Integer_i) (local.get $var16)))
                                                                        (local.set $var17 (local.get $phi23))
                                                                        (drop (call $jdk$internal$util$ArraysSupport_i))
                                                                        (struct.set $jdk$internal$util$ArraysSupport_rtt $LOG2_ARRAY_DOUBLE_INDEX_SCALE (ref.cast (ref null $jdk$internal$util$ArraysSupport_rtt) (call $jdk$internal$util$ArraysSupport_i)) (local.get $var17))
                                                                        (drop (call $jdk$internal$util$ArraysSupport_i))
                                                                        ;; writeIfAndStartTrueBlock
                                                                        (if $if8 (i32.eq (i32.and (i32.const 8) (i32.sub (i32.const 8) (i32.const 1))) (i32.const 0))
                                                                            (then
                                                                                (local.set $phi21 (call $java$lang$Integer$I$numberOfTrailingZeros$I (call $java$lang$Integer_i) (i32.const 8)))
                                                                                (local.set $var18 (local.get $phi21))
                                                                                (drop (call $jdk$internal$util$ArraysSupport_i))
                                                                                (struct.set $jdk$internal$util$ArraysSupport_rtt $LOG2_BYTE_BIT_SIZE (ref.cast (ref null $jdk$internal$util$ArraysSupport_rtt) (call $jdk$internal$util$ArraysSupport_i)) (local.get $var18))
                                                                                (return)
                                                                                ;; Start else
                                                                                )(else
                                                                                (local.set $var20 (struct.new $java$lang$Error (struct.get $java$lang$Error_rtt $factoryFor (global.get $java$lang$Error_cls)) (ref.func $java$lang$Error_vt) (ref.null noextern) (struct.get $java$lang$Error_rtt $classImplTypes (global.get $java$lang$Error_cls)) (ref.null none) (ref.null none)))
                                                                                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var20)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_92)))
                                                                                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var20)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                                                                (throw $javaexception (local.get $var20))
                                                                                ))
                                                                        ;; finishIfBlock
                                                                        ;; Start else
                                                                        )(else
                                                                        (local.set $var22 (struct.new $java$lang$Error (struct.get $java$lang$Error_rtt $factoryFor (global.get $java$lang$Error_cls)) (ref.func $java$lang$Error_vt) (ref.null noextern) (struct.get $java$lang$Error_rtt $classImplTypes (global.get $java$lang$Error_cls)) (ref.null none) (ref.null none)))
                                                                        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var22)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_92)))
                                                                        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var22)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                                                        (throw $javaexception (local.get $var22))
                                                                        ))
                                                                ;; finishIfBlock
                                                                ;; Start else
                                                                )(else
                                                                (local.set $var24 (struct.new $java$lang$Error (struct.get $java$lang$Error_rtt $factoryFor (global.get $java$lang$Error_cls)) (ref.func $java$lang$Error_vt) (ref.null noextern) (struct.get $java$lang$Error_rtt $classImplTypes (global.get $java$lang$Error_cls)) (ref.null none) (ref.null none)))
                                                                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var24)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_92)))
                                                                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var24)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                                                (throw $javaexception (local.get $var24))
                                                                ))
                                                        ;; finishIfBlock
                                                        ;; Start else
                                                        )(else
                                                        (local.set $var26 (struct.new $java$lang$Error (struct.get $java$lang$Error_rtt $factoryFor (global.get $java$lang$Error_cls)) (ref.func $java$lang$Error_vt) (ref.null noextern) (struct.get $java$lang$Error_rtt $classImplTypes (global.get $java$lang$Error_cls)) (ref.null none) (ref.null none)))
                                                        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var26)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_92)))
                                                        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var26)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                                        (throw $javaexception (local.get $var26))
                                                        ))
                                                ;; finishIfBlock
                                                ;; Start else
                                                )(else
                                                (local.set $var28 (struct.new $java$lang$Error (struct.get $java$lang$Error_rtt $factoryFor (global.get $java$lang$Error_cls)) (ref.func $java$lang$Error_vt) (ref.null noextern) (struct.get $java$lang$Error_rtt $classImplTypes (global.get $java$lang$Error_cls)) (ref.null none) (ref.null none)))
                                                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var28)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_92)))
                                                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var28)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                                (throw $javaexception (local.get $var28))
                                                ))
                                        ;; finishIfBlock
                                        ;; Start else
                                        )(else
                                        (local.set $var30 (struct.new $java$lang$Error (struct.get $java$lang$Error_rtt $factoryFor (global.get $java$lang$Error_cls)) (ref.func $java$lang$Error_vt) (ref.null noextern) (struct.get $java$lang$Error_rtt $classImplTypes (global.get $java$lang$Error_cls)) (ref.null none) (ref.null none)))
                                        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var30)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_92)))
                                        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var30)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                        (throw $javaexception (local.get $var30))
                                        ))
                                ;; finishIfBlock
                                ;; Start else
                                )(else
                                (local.set $var32 (struct.new $java$lang$Error (struct.get $java$lang$Error_rtt $factoryFor (global.get $java$lang$Error_cls)) (ref.func $java$lang$Error_vt) (ref.null noextern) (struct.get $java$lang$Error_rtt $classImplTypes (global.get $java$lang$Error_cls)) (ref.null none) (ref.null none)))
                                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var32)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_92)))
                                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var32)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                (throw $javaexception (local.get $var32))
                                ))
                        ;; finishIfBlock
                        ;; Start else
                        )(else
                        (local.set $var34 (struct.new $java$lang$Error (struct.get $java$lang$Error_rtt $factoryFor (global.get $java$lang$Error_cls)) (ref.func $java$lang$Error_vt) (ref.null noextern) (struct.get $java$lang$Error_rtt $classImplTypes (global.get $java$lang$Error_cls)) (ref.null none) (ref.null none)))
                        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var34)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_92)))
                        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var34)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                        (throw $javaexception (local.get $var34))
                        ))
                ;; finishIfBlock
                ;; Start else
                )(else
                (local.set $var36 (struct.new $java$lang$Error (struct.get $java$lang$Error_rtt $factoryFor (global.get $java$lang$Error_cls)) (ref.func $java$lang$Error_vt) (ref.null noextern) (struct.get $java$lang$Error_rtt $classImplTypes (global.get $java$lang$Error_cls)) (ref.null none) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var36)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_92)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var36)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var36))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $jdk$internal$util$ArraysSupport$I$exactLog2$I (type $t551) (param $unused (ref null $java$lang$Object)) (param $arg0 i32) (result i32)
        (local $var0 (ref null $java$lang$Object))
        ;; writeIfAndStartTrueBlock
        (if $if0 (i32.eq (i32.and (local.get $arg0) (i32.sub (local.get $arg0) (i32.const 1))) (i32.const 0))
            (then
                (drop (call $java$lang$Integer_i))
                (return (call $java$lang$Integer$I$numberOfTrailingZeros$I (call $java$lang$Integer_i) (local.get $arg0)))
                ;; Start else
                )(else
                (local.set $var0 (struct.new $java$lang$Error (struct.get $java$lang$Error_rtt $factoryFor (global.get $java$lang$Error_cls)) (ref.func $java$lang$Error_vt) (ref.null noextern) (struct.get $java$lang$Error_rtt $classImplTypes (global.get $java$lang$Error_cls)) (ref.null none) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_92)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var0))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $jdk$internal$util$ArraysSupport$I$vectorizedMismatch$Ljava$lang$Object$$J$Ljava$lang$Object$$J$I$I (type $t589) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 i64) (param $arg2 (ref null $java$lang$Object)) (param $arg3 i64) (param $arg4 i32) (param $arg5 i32) (result i32)
        (local $phi0 i32)
        (local $phi1 i32)
        (local $var2 i64)
        (local $var3 i64)
        (local $var4 i64)
        (local $var5 i64)
        (local $var6 i64)
        (local $var7 i32)
        (local $var8 i32)
        (local $phi9 i64)
        (local $phi10 i64)
        (local $phi11 i64)
        (local $phi12 i64)
        (local $phi13 i32)
        (local $var14 i32)
        (local $var15 i32)
        (local $var16 i32)
        (local $var17 i32)
        (local $var18 i32)
        (local $var19 i32)
        (local $var20 i64)
        (local $var21 i64)
        (local $var22 i32)
        (local $var23 i32)
        (local $var24 i32)
        (local $var25 i32)
        (local $var26 i32)
        (local $phi27 i32)
        (local $phi28 i32)
        (local $phi29 i64)
        (local $phi30 i32)
        (local $phi31 i32)
        (local $phi32 i32)
        (local $phi33 i32)
        (local $var34 i32)
        (local $var35 i32)
        (local $var36 i32)
        (local $var37 i32)
        (local $phi38 i32)
        (local $phi39 i32)
        (local $phi40 i32)
        (local $phi41 i32)
        (local $var42 i32)
        (local $var43 i32)
        (local $var44 i32)
        (local $phi45 i64)
        (local $phi46 i32)
        (local $phi47 i32)
        (local $var48 i32)
        (local $phi49 i32)
        (local $var50 i32)
        (local $var51 i32)
        (local $var52 i32)
        (local $phi53 i64)
        (local $phi54 i32)
        (local $phi55 i32)
        (local $var56 i32)
        (local $phi57 i32)
        (local $phi58 i64)
        (local $phi59 i64)
        (drop (call $jdk$internal$util$ArraysSupport_i))
        (local.set $phi0 (i32.sub (struct.get $jdk$internal$util$ArraysSupport_rtt $LOG2_ARRAY_LONG_INDEX_SCALE (global.get $jdk$internal$util$ArraysSupport_cls)) (local.get $arg5)))
        (local.set $phi1 (i32.const 0))
        ;; startBlock type=LOOP, label = L112260692
        (loop $L112260692
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ge_s (local.get $phi1) (i32.shr_s (local.get $arg4) (local.get $phi0)))
                (then
                    (local.set $var18 (i32.sub (local.get $arg4) (i32.shl (local.get $phi1) (local.get $phi0))))
                    (drop (call $jdk$internal$util$ArraysSupport_i))
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (i32.ge_s (local.get $arg5) (struct.get $jdk$internal$util$ArraysSupport_rtt $LOG2_ARRAY_INT_INDEX_SCALE (global.get $jdk$internal$util$ArraysSupport_cls)))
                        (then
                            (return (i32.xor (local.get $var18) (i32.const -1)))
                            ;; Start else
                            )(else
                            (drop (call $jdk$internal$util$ArraysSupport_i))
                            (local.set $var19 (i32.shl (i32.const 1) (i32.sub (struct.get $jdk$internal$util$ArraysSupport_rtt $LOG2_ARRAY_INT_INDEX_SCALE (global.get $jdk$internal$util$ArraysSupport_cls)) (local.get $arg5))))
                            ;; startBlock type=NORMAL, label = If_97_0
                            (block $If_97_0
                                ;; writeIfAndStartTrueBlock
                                (if $if2 (i32.lt_s (local.get $var18) (local.get $var19))
                                    (then
                                        (local.set $phi38 (local.get $var18))
                                        (local.set $phi39 (local.get $var19))
                                        (br $If_97_0)
                                        ;; Start else
                                        )(else
                                        (local.set $var20 (i64.extend_i32_s (local.get $phi1)))
                                        (drop (call $jdk$internal$util$ArraysSupport_i))
                                        (local.set $var21 (i64.shl (local.get $var20) (i64.extend_i32_s (struct.get $jdk$internal$util$ArraysSupport_rtt $LOG2_ARRAY_LONG_INDEX_SCALE (global.get $jdk$internal$util$ArraysSupport_cls)))))
                                        (drop (call $jdk$internal$util$ArraysSupport_i))
                                        (local.set $phi41 (i32.wrap_i64 (i64.add (local.get $arg1) (local.get $var21))))
                                        (local.set $var22 (local.get $phi41))
                                        (drop (call $jdk$internal$util$ArraysSupport_i))
                                        (local.set $phi40 (i32.wrap_i64 (i64.add (local.get $arg3) (local.get $var21))))
                                        (local.set $var23 (local.get $phi40))
                                        ;; writeIfAndStartTrueBlock
                                        (if $if3 (i32.eq (local.get $var22) (local.get $var23))
                                            (then
                                                (local.set $phi38 (i32.sub (local.get $var18) (local.get $var19)))
                                                (local.set $phi39 (local.get $var19))
                                                (br $If_97_0)
                                                ;; Start else
                                                )(else
                                                (local.set $var24 (i32.xor (local.get $var22) (local.get $var23)))
                                                (drop (call $jdk$internal$util$ArraysSupport_i))
                                                ;; startBlock type=NORMAL, label = If_124_0
                                                (block $If_124_0
                                                    ;; writeIfAndStartTrueBlock
                                                    (if $if4 (i32.eq (struct.get $jdk$internal$util$ArraysSupport_rtt $BIG_ENDIAN (global.get $jdk$internal$util$ArraysSupport_cls)) (i32.const 0))
                                                        (then
                                                            (drop (call $java$lang$Integer_i))
                                                            (local.set $var36 (call $java$lang$Integer$I$numberOfTrailingZeros$I (call $java$lang$Integer_i) (local.get $var24)))
                                                            (drop (call $jdk$internal$util$ArraysSupport_i))
                                                            (local.set $var37 (i32.shr_s (local.get $var36) (i32.add (struct.get $jdk$internal$util$ArraysSupport_rtt $LOG2_BYTE_BIT_SIZE (global.get $jdk$internal$util$ArraysSupport_cls)) (local.get $arg5))))
                                                            (local.set $phi27 (local.get $var18))
                                                            (local.set $phi28 (local.get $var19))
                                                            (local.set $phi29 (local.get $var21))
                                                            (local.set $phi30 (local.get $var22))
                                                            (local.set $phi31 (local.get $var23))
                                                            (local.set $phi32 (local.get $var24))
                                                            (local.set $phi33 (local.get $var37))
                                                            (br $If_124_0)
                                                            ;; Start else
                                                            )(else
                                                            (drop (call $java$lang$Integer_i))
                                                            (local.set $var25 (call $java$lang$Integer$I$numberOfLeadingZeros$I (call $java$lang$Integer_i) (local.get $var24)))
                                                            (drop (call $jdk$internal$util$ArraysSupport_i))
                                                            (local.set $var26 (i32.shr_s (local.get $var25) (i32.add (struct.get $jdk$internal$util$ArraysSupport_rtt $LOG2_BYTE_BIT_SIZE (global.get $jdk$internal$util$ArraysSupport_cls)) (local.get $arg5))))
                                                            ;; Here was a goto statement
                                                            (local.set $phi27 (local.get $var18))
                                                            (local.set $phi28 (local.get $var19))
                                                            (local.set $phi29 (local.get $var21))
                                                            (local.set $phi30 (local.get $var22))
                                                            (local.set $phi31 (local.get $var23))
                                                            (local.set $phi32 (local.get $var24))
                                                            (local.set $phi33 (local.get $var26))
                                                            (br $If_124_0)
                                                            ))
                                                    ;; finishIfBlock
                                                    )
                                                ;; finishBlock
                                                (local.set $var34 (local.get $phi33))
                                                (local.set $var35 (i32.shl (local.get $phi1) (local.get $phi0)))
                                                (return (i32.add (local.get $var35) (local.get $var34)))
                                                ))
                                        ;; finishIfBlock
                                        ))
                                ;; finishIfBlock
                                )
                            ;; finishBlock
                            (return (i32.xor (local.get $phi38) (i32.const -1)))
                            ))
                    ;; finishIfBlock
                    ;; Start else
                    )(else
                    (local.set $var2 (i64.extend_i32_s (local.get $phi1)))
                    (drop (call $jdk$internal$util$ArraysSupport_i))
                    (local.set $var3 (i64.shl (local.get $var2) (i64.extend_i32_s (struct.get $jdk$internal$util$ArraysSupport_rtt $LOG2_ARRAY_LONG_INDEX_SCALE (global.get $jdk$internal$util$ArraysSupport_cls)))))
                    (drop (call $jdk$internal$util$ArraysSupport_i))
                    (local.set $phi59 (i64.add (local.get $arg1) (local.get $var3)))
                    (local.set $var4 (local.get $phi59))
                    (drop (call $jdk$internal$util$ArraysSupport_i))
                    (local.set $phi58 (i64.add (local.get $arg3) (local.get $var3)))
                    (local.set $var5 (local.get $phi58))
                    ;; writeIfAndStartTrueBlock
                    (if $if5 (i32.eq (call $compare_i64 (local.get $var4) (local.get $var5)) (i32.const 0))
                        (then
                            (local.set $phi1 (i32.add (local.get $phi1) (i32.const 1)))
                            ;; Here was a goto statement
                            (br $L112260692)
                            ;; Start else
                            )(else
                            (local.set $var6 (i64.xor (local.get $var4) (local.get $var5)))
                            (drop (call $jdk$internal$util$ArraysSupport_i))
                            ;; startBlock type=NORMAL, label = If_43_0
                            (block $If_43_0
                                ;; writeIfAndStartTrueBlock
                                (if $if6 (i32.eq (struct.get $jdk$internal$util$ArraysSupport_rtt $BIG_ENDIAN (global.get $jdk$internal$util$ArraysSupport_cls)) (i32.const 0))
                                    (then
                                        (drop (call $java$lang$Long_i))
                                        (local.set $var42 (i32.wrap_i64 (local.get $var6)))
                                        ;; startBlock type=NORMAL, label = If_213_0
                                        (block $If_213_0
                                            ;; writeIfAndStartTrueBlock
                                            (if $if7 (i32.ne (local.get $var42) (i32.const 0))
                                                (then
                                                    (drop (call $java$lang$Integer_i))
                                                    (local.set $var48 (i32.add (i32.const 32) (call $java$lang$Integer$I$numberOfTrailingZeros$I (call $java$lang$Integer_i) (local.get $var42))))
                                                    (local.set $phi45 (local.get $var6))
                                                    (local.set $phi46 (local.get $var42))
                                                    (local.set $phi47 (local.get $var48))
                                                    (br $If_213_0)
                                                    ;; Start else
                                                    )(else
                                                    (local.set $var43 (i32.wrap_i64 (i64.shr_u (local.get $var6) (i64.extend_i32_s (i32.const 32)))))
                                                    (drop (call $java$lang$Integer_i))
                                                    (local.set $var44 (i32.add (i32.const 32) (call $java$lang$Integer$I$numberOfTrailingZeros$I (call $java$lang$Integer_i) (local.get $var43))))
                                                    ;; Here was a goto statement
                                                    (local.set $phi45 (local.get $var6))
                                                    (local.set $phi46 (local.get $var42))
                                                    (local.set $phi47 (local.get $var44))
                                                    (br $If_213_0)
                                                    ))
                                            ;; finishIfBlock
                                            )
                                        ;; finishBlock
                                        (local.set $phi49 (local.get $phi47))
                                        (local.set $var16 (local.get $phi49))
                                        (drop (call $jdk$internal$util$ArraysSupport_i))
                                        (local.set $var17 (i32.shr_s (local.get $var16) (i32.add (struct.get $jdk$internal$util$ArraysSupport_rtt $LOG2_BYTE_BIT_SIZE (global.get $jdk$internal$util$ArraysSupport_cls)) (local.get $arg5))))
                                        (local.set $phi9 (local.get $var3))
                                        (local.set $phi10 (local.get $var4))
                                        (local.set $phi11 (local.get $var5))
                                        (local.set $phi12 (local.get $var6))
                                        (local.set $phi13 (local.get $var17))
                                        (br $If_43_0)
                                        ;; Start else
                                        )(else
                                        (drop (call $java$lang$Long_i))
                                        (local.set $var50 (i32.wrap_i64 (i64.shr_u (local.get $var6) (i64.extend_i32_s (i32.const 32)))))
                                        ;; startBlock type=NORMAL, label = If_251_0
                                        (block $If_251_0
                                            ;; writeIfAndStartTrueBlock
                                            (if $if8 (i32.ne (local.get $var50) (i32.const 0))
                                                (then
                                                    (drop (call $java$lang$Integer_i))
                                                    (local.set $var56 (i32.add (i32.const 32) (call $java$lang$Integer$I$numberOfLeadingZeros$I (call $java$lang$Integer_i) (local.get $var50))))
                                                    (local.set $phi53 (local.get $var6))
                                                    (local.set $phi54 (local.get $var50))
                                                    (local.set $phi55 (local.get $var56))
                                                    (br $If_251_0)
                                                    ;; Start else
                                                    )(else
                                                    (local.set $var51 (i32.wrap_i64 (local.get $var6)))
                                                    (drop (call $java$lang$Integer_i))
                                                    (local.set $var52 (i32.add (i32.const 32) (call $java$lang$Integer$I$numberOfLeadingZeros$I (call $java$lang$Integer_i) (local.get $var51))))
                                                    ;; Here was a goto statement
                                                    (local.set $phi53 (local.get $var6))
                                                    (local.set $phi54 (local.get $var50))
                                                    (local.set $phi55 (local.get $var52))
                                                    (br $If_251_0)
                                                    ))
                                            ;; finishIfBlock
                                            )
                                        ;; finishBlock
                                        (local.set $phi57 (local.get $phi55))
                                        (local.set $var7 (local.get $phi57))
                                        (drop (call $jdk$internal$util$ArraysSupport_i))
                                        (local.set $var8 (i32.shr_s (local.get $var7) (i32.add (struct.get $jdk$internal$util$ArraysSupport_rtt $LOG2_BYTE_BIT_SIZE (global.get $jdk$internal$util$ArraysSupport_cls)) (local.get $arg5))))
                                        ;; Here was a goto statement
                                        (local.set $phi9 (local.get $var3))
                                        (local.set $phi10 (local.get $var4))
                                        (local.set $phi11 (local.get $var5))
                                        (local.set $phi12 (local.get $var6))
                                        (local.set $phi13 (local.get $var8))
                                        (br $If_43_0)
                                        ))
                                ;; finishIfBlock
                                )
                            ;; finishBlock
                            (local.set $var14 (local.get $phi13))
                            (local.set $var15 (i32.shl (local.get $phi1) (local.get $phi0)))
                            (return (i32.add (local.get $var15) (local.get $var14)))
                            ))
                    ;; finishIfBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (unreachable))
    (func $jdk$internal$util$ArraysSupport$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $jdk$internal$misc$InternalLock$V$$clinit$$$ (type $t541) (param $unused (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $phi4 (ref null $java$lang$Object))
        (drop (call $java$lang$System_i))
        (drop (call $java$lang$System_i))
        (local.set $var3 (struct.get $java$lang$System_rtt $PROPERTIES (global.get $java$lang$System_cls)))
        (local.set $phi4 (call $java$util$Properties$Ljava$lang$String$$getProperty$Ljava$lang$String$ (local.get $var3) (global.get $stringpool_64)))
        (local.set $var0 (local.get $phi4))
        ;; startBlock type=NORMAL, label = If_6_0
        (block $If_6_0
            ;; startBlock type=NORMAL, label = If_6_1
            (block $If_6_1
                ;; writeIfAndStartTrueBlock
                (if $if0 (ref.is_null (local.get $var0))
                    (then
                        (local.set $phi2 (local.get $var0))
                        (br $If_6_1)
                        ;; Start else
                        )(else
                        ;; startBlock type=NORMAL, label = If_9_0
                        (block $If_9_0
                            ;; writeIfAndStartTrueBlock
                            (if $if1 (i32.ne (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 38) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))) (i32.const 0))
                                (then
                                    (local.set $phi1 (local.get $var0))
                                    (br $If_9_0)
                                    ;; Start else
                                    )(else
                                    ;; writeIfAndStartTrueBlock
                                    (if $if2 (i32.eq (call $java$lang$String$Z$equals$Ljava$lang$Object$ (local.get $var0) (global.get $stringpool_65)) (i32.const 0))
                                        (then
                                            (local.set $phi2 (local.get $var0))
                                            (br $If_6_1)
                                            ;; Start else
                                            )(else
                                            (local.set $phi1 (local.get $var0))
                                            (br $If_9_0)
                                            ))
                                    ;; finishIfBlock
                                    ))
                            ;; finishIfBlock
                            )
                        ;; finishBlock
                        (drop (call $jdk$internal$misc$InternalLock_i))
                        (struct.set $jdk$internal$misc$InternalLock_rtt $CAN_USE_INTERNAL_LOCK (ref.cast (ref null $jdk$internal$misc$InternalLock_rtt) (call $jdk$internal$misc$InternalLock_i)) (i32.const 0))
                        ;; Here was a goto statement
                        (br $If_6_0)
                        ))
                ;; finishIfBlock
                )
            ;; finishBlock
            (drop (call $jdk$internal$misc$InternalLock_i))
            (struct.set $jdk$internal$misc$InternalLock_rtt $CAN_USE_INTERNAL_LOCK (ref.cast (ref null $jdk$internal$misc$InternalLock_rtt) (call $jdk$internal$misc$InternalLock_i)) (i32.const 1))
            (local.set $phi1 (local.get $phi2))
            (br $If_6_0)
            )
        ;; finishBlock
        (return)
        (unreachable))
    (func $jdk$internal$misc$InternalLock$Ljava$lang$Object$$newLockOr$Ljava$lang$Object$ (type $t559) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (drop (call $jdk$internal$misc$InternalLock_i))
        ;; startBlock type=NORMAL, label = If_5_0
        (block $If_5_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.eq (struct.get $jdk$internal$misc$InternalLock_rtt $CAN_USE_INTERNAL_LOCK (global.get $jdk$internal$misc$InternalLock_cls)) (i32.const 0))
                (then
                    (local.set $phi1 (local.get $arg0))
                    (local.set $phi2 (local.get $arg0))
                    (br $If_5_0)
                    ;; Start else
                    )(else
                    (drop (call $jdk$internal$misc$InternalLock_i))
                    (local.set $var0 (struct.new $jdk$internal$misc$InternalLock (struct.get $jdk$internal$misc$InternalLock_rtt $factoryFor (global.get $jdk$internal$misc$InternalLock_cls)) (ref.func $jdk$internal$misc$InternalLock_vt) (ref.null noextern) (struct.get $jdk$internal$misc$InternalLock_rtt $classImplTypes (global.get $jdk$internal$misc$InternalLock_cls)) (ref.null none)))
                    (struct.set $jdk$internal$misc$InternalLock $lock (ref.cast (ref null $jdk$internal$misc$InternalLock) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (struct.new $java$util$concurrent$locks$ReentrantLock (struct.get $java$util$concurrent$locks$ReentrantLock_rtt $factoryFor (global.get $java$util$concurrent$locks$ReentrantLock_cls)) (ref.func $java$util$concurrent$locks$ReentrantLock_vt) (ref.null noextern) (struct.get $java$util$concurrent$locks$ReentrantLock_rtt $classImplTypes (global.get $java$util$concurrent$locks$ReentrantLock_cls)))))
                    ;; Here was a goto statement
                    (local.set $phi1 (local.get $arg0))
                    (local.set $phi2 (local.get $var0))
                    (br $If_5_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi2))
        (unreachable))
    (func $jdk$internal$misc$InternalLock$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $jdk$internal$misc$InternalLock $lock (ref.cast (ref null $jdk$internal$misc$InternalLock) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (struct.new $java$util$concurrent$locks$ReentrantLock (struct.get $java$util$concurrent$locks$ReentrantLock_rtt $factoryFor (global.get $java$util$concurrent$locks$ReentrantLock_cls)) (ref.func $java$util$concurrent$locks$ReentrantLock_vt) (ref.null noextern) (struct.get $java$util$concurrent$locks$ReentrantLock_rtt $classImplTypes (global.get $java$util$concurrent$locks$ReentrantLock_cls)))))
        (return)
        (unreachable))
    (func $jdk$internal$misc$InternalLock$Ljdk$internal$misc$InternalLock$$newLockOrNull$$ (type $t553) (param $unused (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (drop (call $jdk$internal$misc$InternalLock_i))
        ;; startBlock type=NORMAL, label = If_4_0
        (block $If_4_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.eq (struct.get $jdk$internal$misc$InternalLock_rtt $CAN_USE_INTERNAL_LOCK (global.get $jdk$internal$misc$InternalLock_cls)) (i32.const 0))
                (then
                    (local.set $phi1 (ref.null none))
                    (br $If_4_0)
                    ;; Start else
                    )(else
                    (drop (call $jdk$internal$misc$InternalLock_i))
                    (local.set $var0 (struct.new $jdk$internal$misc$InternalLock (struct.get $jdk$internal$misc$InternalLock_rtt $factoryFor (global.get $jdk$internal$misc$InternalLock_cls)) (ref.func $jdk$internal$misc$InternalLock_vt) (ref.null noextern) (struct.get $jdk$internal$misc$InternalLock_rtt $classImplTypes (global.get $jdk$internal$misc$InternalLock_cls)) (ref.null none)))
                    (struct.set $jdk$internal$misc$InternalLock $lock (ref.cast (ref null $jdk$internal$misc$InternalLock) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (struct.new $java$util$concurrent$locks$ReentrantLock (struct.get $java$util$concurrent$locks$ReentrantLock_rtt $factoryFor (global.get $java$util$concurrent$locks$ReentrantLock_cls)) (ref.func $java$util$concurrent$locks$ReentrantLock_vt) (ref.null noextern) (struct.get $java$util$concurrent$locks$ReentrantLock_rtt $classImplTypes (global.get $java$util$concurrent$locks$ReentrantLock_cls)))))
                    ;; Here was a goto statement
                    (local.set $phi1 (local.get $var0))
                    (br $If_4_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi1))
        (unreachable))
    (func $de$mirkosertic$bytecoder$integrationtest$VueDemo$V$main$$Ljava$lang$String$ (type $t556) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (call $de$mirkosertic$bytecoder$api$vue$Vue$Lde$mirkosertic$bytecoder$api$vue$VueBuilder$$builder$$ (global.get $de$mirkosertic$bytecoder$api$vue$Vue_cls)))
        (call_indirect (type $t556) (local.get $var0) (global.get $stringpool_2) (call_ref $t0 (i32.const 108) (struct.get $java$lang$Object $vt_resolver (local.get $var0))))
        (call_indirect (type $t560) (call_indirect (type $t553) (local.get $var0) (call_ref $t0 (i32.const 109) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var0))))) (global.get $stringpool_3) (global.get $stringpool_4) (call_ref $t0 (i32.const 102) (struct.get $java$lang$Object $vt_resolver (call_indirect (type $t553) (local.get $var0) (call_ref $t0 (i32.const 109) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var0))))))))
        (call_indirect (type $t560) (local.get $var0) (global.get $stringpool_5) (struct.new $de$mirkosertic$bytecoder$integrationtest$VueDemo$1 (struct.get $de$mirkosertic$bytecoder$integrationtest$VueDemo$1_rtt $factoryFor (global.get $de$mirkosertic$bytecoder$integrationtest$VueDemo$1_cls)) (ref.func $de$mirkosertic$bytecoder$integrationtest$VueDemo$1_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$integrationtest$VueDemo$1_rtt $classImplTypes (global.get $de$mirkosertic$bytecoder$integrationtest$VueDemo$1_cls))) (call_ref $t0 (i32.const 110) (struct.get $java$lang$Object $vt_resolver (local.get $var0))))
        (local.set $var1 (struct.new $de$mirkosertic$bytecoder$integrationtest$VueDemo$MyVueInstance (struct.get $de$mirkosertic$bytecoder$integrationtest$VueDemo$MyVueInstance_rtt $factoryFor (global.get $de$mirkosertic$bytecoder$integrationtest$VueDemo$MyVueInstance_cls)) (ref.func $de$mirkosertic$bytecoder$integrationtest$VueDemo$MyVueInstance_vt) (struct.get $java$lang$Object $nativeObject (call_indirect (type $t553) (local.get $var0) (call_ref $t0 (i32.const 111) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var0)))))) (struct.get $de$mirkosertic$bytecoder$integrationtest$VueDemo$MyVueInstance_rtt $classImplTypes (global.get $de$mirkosertic$bytecoder$integrationtest$VueDemo$MyVueInstance_cls))))
        (return)
        (unreachable))
    (func $de$mirkosertic$bytecoder$integrationtest$VueDemo$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $jdk$internal$misc$CDS$V$$clinit$$$ (type $t541) (param $unused (ref null $java$lang$Object))
        (local $var0 i32)
        (local $var1 i32)
        (local $var2 i32)
        (local $var3 (ref null $java$lang$Object))
        (drop (call $jdk$internal$misc$CDS_i))
        (local.set $var0 (call $jdk$internal$misc$CDS$Z$isDumpingClassList0$$ (call $jdk$internal$misc$CDS_i)))
        (drop (call $jdk$internal$misc$CDS_i))
        (struct.set $jdk$internal$misc$CDS_rtt $isDumpingClassList (ref.cast (ref null $jdk$internal$misc$CDS_rtt) (call $jdk$internal$misc$CDS_i)) (local.get $var0))
        (drop (call $jdk$internal$misc$CDS_i))
        (local.set $var1 (call $jdk$internal$misc$CDS$Z$isDumpingArchive0$$ (call $jdk$internal$misc$CDS_i)))
        (drop (call $jdk$internal$misc$CDS_i))
        (struct.set $jdk$internal$misc$CDS_rtt $isDumpingArchive (ref.cast (ref null $jdk$internal$misc$CDS_rtt) (call $jdk$internal$misc$CDS_i)) (local.get $var1))
        (drop (call $jdk$internal$misc$CDS_i))
        (local.set $var2 (call $jdk$internal$misc$CDS$Z$isSharingEnabled0$$ (call $jdk$internal$misc$CDS_i)))
        (drop (call $jdk$internal$misc$CDS_i))
        (struct.set $jdk$internal$misc$CDS_rtt $isSharingEnabled (ref.cast (ref null $jdk$internal$misc$CDS_rtt) (call $jdk$internal$misc$CDS_i)) (local.get $var2))
        (local.set $var3 (struct.new $obj_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t549 (i32.const 6))))
        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var3))) (i32.const 0) (global.get $stringpool_43))
        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var3))) (i32.const 1) (global.get $stringpool_44))
        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var3))) (i32.const 2) (global.get $stringpool_45))
        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var3))) (i32.const 3) (global.get $stringpool_46))
        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var3))) (i32.const 4) (global.get $stringpool_47))
        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var3))) (i32.const 5) (global.get $stringpool_48))
        (drop (call $jdk$internal$misc$CDS_i))
        (struct.set $jdk$internal$misc$CDS_rtt $excludeFlags (ref.cast (ref null $jdk$internal$misc$CDS_rtt) (call $jdk$internal$misc$CDS_i)) (ref.cast (ref null $java$lang$Object) (local.get $var3)))
        (return)
        (unreachable))
    (func $jdk$internal$misc$CDS$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $jdk$internal$misc$Unsafe$V$$clinit$$$ (type $t541) (param $unused (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (drop (call $jdk$internal$misc$Unsafe_i))
        (local.set $var0 (struct.new $jdk$internal$misc$Unsafe (struct.get $jdk$internal$misc$Unsafe_rtt $factoryFor (global.get $jdk$internal$misc$Unsafe_cls)) (ref.func $jdk$internal$misc$Unsafe_vt) (ref.null noextern) (struct.get $jdk$internal$misc$Unsafe_rtt $classImplTypes (global.get $jdk$internal$misc$Unsafe_cls))))
        (drop (call $jdk$internal$misc$Unsafe_i))
        (struct.set $jdk$internal$misc$Unsafe_rtt $INSTANCE (ref.cast (ref null $jdk$internal$misc$Unsafe_rtt) (call $jdk$internal$misc$Unsafe_i)) (ref.cast (ref null $java$lang$Object) (local.get $var0)))
        (return)
        (unreachable))
    (func $jdk$internal$misc$Unsafe$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $jdk$internal$misc$Unsafe$Ljdk$internal$misc$Unsafe$$getUnsafe$$ (type $t553) (param $unused (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (drop (call $jdk$internal$misc$Unsafe_i))
        (return (struct.get $jdk$internal$misc$Unsafe_rtt $INSTANCE (global.get $jdk$internal$misc$Unsafe_cls)))
        (unreachable))
    (func $jdk$internal$misc$Unsafe$I$arrayBaseOffset$Ljava$lang$Class$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (return (i32.const 0))
        (unreachable))
    (func $jdk$internal$misc$Unsafe$I$arrayIndexScale$Ljava$lang$Class$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (return (i32.const 0))
        (unreachable))
    (func $jdk$internal$misc$Unsafe$Z$isBigEndian$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (return (i32.const 0))
        (unreachable))
    (func $jdk$internal$misc$Unsafe$V$storeFence$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $jdk$internal$misc$Unsafe$J$getLongUnaligned$Ljava$lang$Object$$J (type $t590) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 i64) (result i64)
        (return (local.get $arg1))
        (unreachable))
    (func $jdk$internal$misc$Unsafe$I$getIntUnaligned$Ljava$lang$Object$$J (type $t591) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 i64) (result i32)
        (return (i32.wrap_i64 (local.get $arg1)))
        (unreachable))
    (func $jdk$internal$misc$Unsafe$V$copyMemory$Ljava$lang$Object$$J$Ljava$lang$Object$$J$J (type $t592) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 i64) (param $arg2 (ref null $java$lang$Object)) (param $arg3 i64) (param $arg4 i64)
        (return)
        (unreachable))
    (func $jdk$internal$misc$Unsafe$V$copySwapMemory$Ljava$lang$Object$$J$Ljava$lang$Object$$J$J$J (type $t593) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 i64) (param $arg2 (ref null $java$lang$Object)) (param $arg3 i64) (param $arg4 i64) (param $arg5 i64)
        (return)
        (unreachable))
    (func $java$lang$Throwable$Ljava$lang$String$$getMessage$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (return (struct.get $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $thisref))))
        (unreachable))
    (func $java$lang$Throwable$V$$init$$Ljava$lang$String$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return)
        (unreachable))
    (func $java$lang$Throwable$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return)
        (unreachable))
    (func $java$lang$Throwable$Ljava$lang$Throwable$$initCause$Ljava$lang$Throwable$ (type $t559) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (return (ref.cast (ref null $java$lang$Object) (local.get $var0)))
        (unreachable))
    (func $java$lang$Throwable$V$$init$$Ljava$lang$Throwable$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (return)
        (unreachable))
    (func $java$util$Collections$V$$clinit$$$ (type $t541) (param $unused (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local.set $var0 (struct.new $java$util$Collections$EmptySet (struct.get $java$util$Collections$EmptySet_rtt $factoryFor (global.get $java$util$Collections$EmptySet_cls)) (ref.func $java$util$Collections$EmptySet_vt) (ref.null noextern) (struct.get $java$util$Collections$EmptySet_rtt $classImplTypes (global.get $java$util$Collections$EmptySet_cls))))
        (drop (call $java$util$Collections_i))
        (struct.set $java$util$Collections_rtt $EMPTY_SET (ref.cast (ref null $java$util$Collections_rtt) (call $java$util$Collections_i)) (ref.cast (ref null $java$lang$Object) (local.get $var0)))
        (local.set $var1 (struct.new $java$util$Collections$EmptyList (struct.get $java$util$Collections$EmptyList_rtt $factoryFor (global.get $java$util$Collections$EmptyList_cls)) (ref.func $java$util$Collections$EmptyList_vt) (ref.null noextern) (struct.get $java$util$Collections$EmptyList_rtt $classImplTypes (global.get $java$util$Collections$EmptyList_cls)) (i32.const 0)))
        (struct.set $java$util$AbstractList $modCount (ref.cast (ref null $java$util$AbstractList) (local.get $var1)) (i32.const 0))
        (drop (call $java$util$Collections_i))
        (struct.set $java$util$Collections_rtt $EMPTY_LIST (ref.cast (ref null $java$util$Collections_rtt) (call $java$util$Collections_i)) (ref.cast (ref null $java$lang$Object) (local.get $var1)))
        (local.set $var2 (struct.new $java$util$Collections$EmptyMap (struct.get $java$util$Collections$EmptyMap_rtt $factoryFor (global.get $java$util$Collections$EmptyMap_cls)) (ref.func $java$util$Collections$EmptyMap_vt) (ref.null noextern) (struct.get $java$util$Collections$EmptyMap_rtt $classImplTypes (global.get $java$util$Collections$EmptyMap_cls))))
        (drop (call $java$util$Collections_i))
        (struct.set $java$util$Collections_rtt $EMPTY_MAP (ref.cast (ref null $java$util$Collections_rtt) (call $java$util$Collections_i)) (ref.cast (ref null $java$lang$Object) (local.get $var2)))
        (return)
        (unreachable))
    (func $java$util$Collections$Ljava$util$Set$$synchronizedSet$Ljava$util$Set$$Ljava$lang$Object$ (type $t561) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local.set $var0 (struct.new $java$util$Collections$SynchronizedSet (struct.get $java$util$Collections$SynchronizedSet_rtt $factoryFor (global.get $java$util$Collections$SynchronizedSet_cls)) (ref.func $java$util$Collections$SynchronizedSet_vt) (ref.null noextern) (struct.get $java$util$Collections$SynchronizedSet_rtt $classImplTypes (global.get $java$util$Collections$SynchronizedSet_cls)) (ref.null none) (ref.null none)))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg0)))
            (then
                (struct.set $java$util$Collections$SynchronizedCollection $c (ref.cast (ref null $java$util$Collections$SynchronizedCollection) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.cast (ref null $java$lang$Object) (local.get $arg0))))
                ;; writeIfAndStartTrueBlock
                (if $if1 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg1)))
                    (then
                        (struct.set $java$util$Collections$SynchronizedCollection $mutex (ref.cast (ref null $java$util$Collections$SynchronizedCollection) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg1)))
                        (return (local.get $var0))
                        ;; Start else
                        )(else
                        (local.set $var1 (struct.new $java$lang$NullPointerException (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)) (ref.func $java$lang$NullPointerException_vt) (ref.null noextern) (struct.get $java$lang$NullPointerException_rtt $classImplTypes (global.get $java$lang$NullPointerException_cls)) (ref.null none) (ref.null none) (i32.const 0) (ref.null none)))
                        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                        (throw $javaexception (local.get $var1))
                        ))
                ;; finishIfBlock
                ;; Start else
                )(else
                (local.set $var2 (struct.new $java$lang$NullPointerException (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)) (ref.func $java$lang$NullPointerException_vt) (ref.null noextern) (struct.get $java$lang$NullPointerException_rtt $classImplTypes (global.get $java$lang$NullPointerException_cls)) (ref.null none) (ref.null none) (i32.const 0) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var2)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var2)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var2))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$util$Collections$Ljava$util$Iterator$$emptyIterator$$ (type $t553) (param $unused (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (drop (call $java$util$Collections$EmptyIterator_i))
        (return (struct.get $java$util$Collections$EmptyIterator_rtt $EMPTY_ITERATOR (global.get $java$util$Collections$EmptyIterator_cls)))
        (unreachable))
    (func $java$util$Collections$Ljava$util$Set$$emptySet$$ (type $t553) (param $unused (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (drop (call $java$util$Collections_i))
        (return (struct.get $java$util$Collections_rtt $EMPTY_SET (global.get $java$util$Collections_cls)))
        (unreachable))
    (func $java$util$Collections$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$util$Collections$Ljava$util$ListIterator$$emptyListIterator$$ (type $t553) (param $unused (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (drop (call $java$util$Collections$EmptyListIterator_i))
        (return (struct.get $java$util$Collections$EmptyListIterator_rtt $EMPTY_ITERATOR (global.get $java$util$Collections$EmptyListIterator_cls)))
        (unreachable))
    (func $java$lang$ClassLoader$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$nio$CharBuffer$V$$clinit$$$ (type $t541) (param $unused (ref null $java$lang$Object))
        (local $phi0 i32)
        (local $var1 (ref null $java$lang$Object))
        (local $var2 i64)
        ;; startBlock type=NORMAL, label = If_4_0
        (block $If_4_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ne (call $java$lang$Class$Z$desiredAssertionStatus$$ (call $java$nio$CharBuffer_i)) (i32.const 0))
                (then
                    (local.set $phi0 (i32.const 0))
                    (br $If_4_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi0 (i32.const 1))
                    (br $If_4_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (drop (call $java$nio$CharBuffer_i))
        (struct.set $java$nio$CharBuffer_rtt $$assertionsDisabled (ref.cast (ref null $java$nio$CharBuffer_rtt) (call $java$nio$CharBuffer_i)) (local.get $phi0))
        (drop (call $java$nio$CharBuffer_i))
        (local.set $var1 (struct.get $java$nio$Buffer_rtt $UNSAFE (global.get $java$nio$Buffer_cls)))
        (local.set $var2 (i64.extend_i32_s (i32.const 0)))
        (drop (call $java$nio$CharBuffer_i))
        (struct.set $java$nio$CharBuffer_rtt $ARRAY_BASE_OFFSET (ref.cast (ref null $java$nio$CharBuffer_rtt) (call $java$nio$CharBuffer_i)) (local.get $var2))
        (return)
        (unreachable))
    (func $java$nio$CharBuffer$Ljava$nio$CharBuffer$$allocate$I (type $t565) (param $unused (ref null $java$lang$Object)) (param $arg0 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        ;; writeIfAndStartTrueBlock
        (if $if0 (i32.ge_s (local.get $arg0) (i32.const 0))
            (then
                (drop (call $java$nio$HeapCharBuffer_i))
                (local.set $var0 (struct.new $java$nio$HeapCharBuffer (struct.get $java$nio$HeapCharBuffer_rtt $factoryFor (global.get $java$nio$HeapCharBuffer_cls)) (ref.func $java$nio$HeapCharBuffer_vt) (ref.null noextern) (struct.get $java$nio$HeapCharBuffer_rtt $classImplTypes (global.get $java$nio$HeapCharBuffer_cls)) (i32.const 0) (i32.const 0) (i32.const 0) (ref.null none) (i32.const 0) (i64.const 0) (ref.null none) (i32.const 0)))
                (local.set $var1 (struct.new $i32_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t7 (local.get $arg0))))
                (call $java$nio$Buffer$V$$init$$I$I$I$I$Ljava$lang$foreign$MemorySegment$ (local.get $var0) (i32.const -1) (i32.const 0) (local.get $arg0) (local.get $arg0) (ref.null none))
                (struct.set $java$nio$CharBuffer $hb (ref.cast (ref null $java$nio$CharBuffer) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $var1)))
                (struct.set $java$nio$CharBuffer $offset (ref.cast (ref null $java$nio$CharBuffer) (local.get $var0)) (i32.const 0))
                (drop (call $java$nio$HeapCharBuffer_i))
                (struct.set $java$nio$Buffer $address (ref.cast (ref null $java$nio$Buffer) (local.get $var0)) (struct.get $java$nio$HeapCharBuffer_rtt $ARRAY_BASE_OFFSET (global.get $java$nio$HeapCharBuffer_cls)))
                (return (local.get $var0))
                ;; Start else
                )(else
                (drop (call $java$nio$CharBuffer_i))
                (throw $javaexception (call $java$nio$Buffer$Ljava$lang$IllegalArgumentException$$createCapacityException$I (call $java$nio$CharBuffer_i) (local.get $arg0)))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$nio$CharBuffer$V$$init$$I$I$I$I$$C$I$Ljava$lang$foreign$MemorySegment$ (type $t594) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (param $arg1 i32) (param $arg2 i32) (param $arg3 i32) (param $arg4 (ref null $java$lang$Object)) (param $arg5 i32) (param $arg6 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (call $java$nio$Buffer$V$$init$$I$I$I$I$Ljava$lang$foreign$MemorySegment$ (local.get $var0) (local.get $arg0) (local.get $arg1) (local.get $arg2) (local.get $arg3) (local.get $arg6))
        (struct.set $java$nio$CharBuffer $hb (ref.cast (ref null $java$nio$CharBuffer) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg4)))
        (struct.set $java$nio$CharBuffer $offset (ref.cast (ref null $java$nio$CharBuffer) (local.get $var0)) (local.get $arg5))
        (return)
        (unreachable))
    (func $java$nio$CharBuffer$Ljava$nio$CharBuffer$$put$Ljava$lang$String$ (type $t559) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 i32)
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (call $java$lang$String$I$length$$ (local.get $arg0)))
        (return (call_indirect (type $t573) (local.get $var0) (local.get $arg0) (i32.const 0) (local.get $var1) (call_ref $t0 (i32.const 67) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
        (unreachable))
    (func $java$nio$CharBuffer$Ljava$nio$CharBuffer$$put$Ljava$lang$String$$I$I (type $t573) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 i32) (param $arg2 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 i32)
        (local $var2 i32)
        (local $var3 (ref null $java$lang$Object))
        (local $var4 i32)
        (local $var5 (ref null $java$lang$Object))
        (local $phi6 (ref null $java$lang$Object))
        (local $phi7 i32)
        (local $var8 (ref null $java$lang$Object))
        (local $var9 i32)
        (local $var10 i32)
        (local $var11 (ref null $java$lang$Object))
        (local $phi12 i32)
        (local $phi13 i32)
        (local $phi14 i32)
        (local $phi15 (ref null $java$lang$Object))
        (local $var16 (ref null $java$lang$Object))
        (local $var17 i32)
        (local $var18 i32)
        (local $var19 i32)
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (i32.sub (local.get $arg2) (local.get $arg1)))
        (local.set $var2 (call $java$lang$String$I$length$$ (local.get $arg0)))
        (drop (call $jdk$internal$util$Preconditions_i))
        ;; startBlock type=NORMAL, label = If_68_0
        (block $If_68_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.lt_s (i32.or (i32.or (local.get $var2) (local.get $arg1)) (local.get $var1)) (i32.const 0))
                (then
                    (local.set $phi12 (local.get $arg1))
                    (local.set $phi13 (local.get $var1))
                    (local.set $phi14 (local.get $var2))
                    (local.set $phi15 (ref.null none))
                    (br $If_68_0)
                    ;; Start else
                    )(else
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (i32.le_s (local.get $var1) (i32.sub (local.get $var2) (local.get $arg1)))
                        (then
                            ;; writeIfAndStartTrueBlock
                            (if $if2 (i32.eq (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 120) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))) (i32.const 0))
                                (then
                                    (local.set $var4 (i32.sub (local.get $arg2) (local.get $arg1)))
                                    ;; writeIfAndStartTrueBlock
                                    (if $if3 (i32.le_s (local.get $var4) (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 18) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
                                        (then
                                            (local.set $phi6 (local.get $var0))
                                            (local.set $phi7 (local.get $arg1))
                                            ;; startBlock type=LOOP, label = L1820148869
                                            (loop $L1820148869
                                                ;; writeIfAndStartTrueBlock
                                                (if $if4 (i32.ge_s (local.get $phi7) (local.get $arg2))
                                                    (then
                                                        (return (local.get $phi6))
                                                        ;; Start else
                                                        )(else
                                                        (local.set $var8 (local.get $phi6))
                                                        (local.set $var9 (local.get $phi7))
                                                        (local.set $var10 (call $java$lang$String$C$charAt$I (local.get $arg0) (local.get $var9)))
                                                        (local.set $var11 (call_indirect (type $t565) (local.get $var8) (local.get $var10) (call_ref $t0 (i32.const 134) (struct.get $java$lang$Object $vt_resolver (local.get $var8)))))
                                                        (local.set $phi7 (i32.add (local.get $phi7) (i32.const 1)))
                                                        ;; Here was a goto statement
                                                        (br $L1820148869)
                                                        ))
                                                ;; finishIfBlock
                                                )
                                            ;; finishBlock
                                            ;; Start else
                                            )(else
                                            (local.set $var5 (struct.new $java$nio$BufferOverflowException (struct.get $java$nio$BufferOverflowException_rtt $factoryFor (global.get $java$nio$BufferOverflowException_cls)) (ref.func $java$nio$BufferOverflowException_vt) (ref.null noextern) (struct.get $java$nio$BufferOverflowException_rtt $classImplTypes (global.get $java$nio$BufferOverflowException_cls)) (ref.null none) (ref.null none)))
                                            (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var5)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                            (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var5)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                            (throw $javaexception (local.get $var5))
                                            ))
                                    ;; finishIfBlock
                                    ;; Start else
                                    )(else
                                    (local.set $var3 (struct.new $java$nio$ReadOnlyBufferException (struct.get $java$nio$ReadOnlyBufferException_rtt $factoryFor (global.get $java$nio$ReadOnlyBufferException_cls)) (ref.func $java$nio$ReadOnlyBufferException_vt) (ref.null noextern) (struct.get $java$nio$ReadOnlyBufferException_rtt $classImplTypes (global.get $java$nio$ReadOnlyBufferException_cls)) (ref.null none) (ref.null none)))
                                    (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var3)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                    (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var3)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                    (throw $javaexception (local.get $var3))
                                    ))
                            ;; finishIfBlock
                            ;; Start else
                            )(else
                            (local.set $phi12 (local.get $arg1))
                            (local.set $phi13 (local.get $var1))
                            (local.set $phi14 (local.get $var2))
                            (local.set $phi15 (ref.null none))
                            (br $If_68_0)
                            ))
                    ;; finishIfBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (local.set $var16 (local.get $phi15))
        (local.set $var17 (local.get $phi12))
        (local.set $var18 (local.get $phi13))
        (local.set $var19 (local.get $phi14))
        (drop (call $jdk$internal$util$Preconditions_i))
        (throw $javaexception (call $jdk$internal$util$Preconditions$Ljava$lang$RuntimeException$$outOfBoundsCheckFromIndexSize$Ljava$util$function$BiFunction$$I$I$I (call $jdk$internal$util$Preconditions_i) (local.get $var16) (local.get $var17) (local.get $var18) (local.get $var19)))
        (unreachable))
    (func $java$nio$CharBuffer$Z$isEmpty$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 i32)
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = If_5_0
        (block $If_5_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ne (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 18) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))) (i32.const 0))
                (then
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (i32.const 0))
                    (br $If_5_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (i32.const 1))
                    (br $If_5_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi2))
        (unreachable))
    (func $java$nio$CharBuffer$I$length$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (return (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 18) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
        (unreachable))
    (func $java$nio$CharBuffer$V$$init$$I$I$I$I$Ljava$lang$foreign$MemorySegment$ (type $t574) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (param $arg1 i32) (param $arg2 i32) (param $arg3 i32) (param $arg4 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (call $java$nio$Buffer$V$$init$$I$I$I$I$Ljava$lang$foreign$MemorySegment$ (local.get $var0) (local.get $arg0) (local.get $arg1) (local.get $arg2) (local.get $arg3) (local.get $arg4))
        (struct.set $java$nio$CharBuffer $hb (ref.cast (ref null $java$nio$CharBuffer) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (struct.set $java$nio$CharBuffer $offset (ref.cast (ref null $java$nio$CharBuffer) (local.get $var0)) (i32.const 0))
        (return)
        (unreachable))
    (func $java$nio$CharBuffer$Ljava$nio$Buffer$$limit$I (type $t565) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (return (call $java$nio$CharBuffer$Ljava$nio$CharBuffer$$limit$I (local.get $var0) (local.get $arg0)))
        (unreachable))
    (func $java$nio$CharBuffer$Ljava$nio$CharBuffer$$limit$I (type $t565) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (call $java$nio$Buffer$Ljava$nio$Buffer$$limit$I (local.get $var0) (local.get $arg0)))
        (return (local.get $var0))
        (unreachable))
    (func $java$nio$CharBuffer$Ljava$nio$Buffer$$position$I (type $t565) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (return (call $java$nio$CharBuffer$Ljava$nio$CharBuffer$$position$I (local.get $var0) (local.get $arg0)))
        (unreachable))
    (func $java$nio$CharBuffer$Ljava$nio$CharBuffer$$position$I (type $t565) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (call $java$nio$Buffer$Ljava$nio$Buffer$$position$I (local.get $var0) (local.get $arg0)))
        (return (local.get $var0))
        (unreachable))
    (func $java$nio$CharBuffer$I$compareTo$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (return (call $java$nio$CharBuffer$I$compareTo$Ljava$nio$CharBuffer$ (local.get $var0) (local.get $var1)))
        (unreachable))
    (func $java$nio$CharBuffer$I$compareTo$Ljava$nio$CharBuffer$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 i32)
        (local $var2 i32)
        (local $var3 i32)
        (local $var4 i32)
        (local $var5 i32)
        (local $var6 i32)
        (local $var7 i32)
        (local $var8 i32)
        (local $var9 i32)
        (local $var10 i32)
        (local $var11 i32)
        (local $var12 i32)
        (local $phi13 i32)
        (local $phi14 i32)
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 20) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
        (local.set $var2 (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 22) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
        (local.set $var3 (i32.sub (local.get $var2) (local.get $var1)))
        (local.set $var4 (call_indirect (type $t555) (local.get $arg0) (call_ref $t0 (i32.const 20) (struct.get $java$lang$Object $vt_resolver (local.get $arg0)))))
        (local.set $var5 (call_indirect (type $t555) (local.get $arg0) (call_ref $t0 (i32.const 22) (struct.get $java$lang$Object $vt_resolver (local.get $arg0)))))
        (local.set $var6 (i32.sub (local.get $var5) (local.get $var4)))
        (drop (call $java$lang$Math_i))
        (local.set $var7 (call $java$lang$Math$I$min$I$I (call $java$lang$Math_i) (local.get $var3) (local.get $var6)))
        ;; writeIfAndStartTrueBlock
        (if $if0 (i32.ge_s (local.get $var7) (i32.const 0))
            (then
                (drop (call $java$nio$BufferMismatch_i))
                (local.set $var8 (call $java$nio$BufferMismatch$I$mismatch$Ljava$nio$CharBuffer$$I$Ljava$nio$CharBuffer$$I$I (call $java$nio$BufferMismatch_i) (local.get $var0) (local.get $var1) (local.get $arg0) (local.get $var4) (local.get $var7)))
                ;; writeIfAndStartTrueBlock
                (if $if1 (i32.lt_s (local.get $var8) (i32.const 0))
                    (then
                        (return (i32.sub (local.get $var3) (local.get $var6)))
                        ;; Start else
                        )(else
                        (local.set $var9 (i32.add (local.get $var1) (local.get $var8)))
                        (local.set $var10 (call_indirect (type $t551) (local.get $var0) (local.get $var9) (call_ref $t0 (i32.const 137) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
                        (local.set $var11 (i32.add (local.get $var4) (local.get $var8)))
                        (local.set $var12 (call_indirect (type $t551) (local.get $arg0) (local.get $var11) (call_ref $t0 (i32.const 137) (struct.get $java$lang$Object $vt_resolver (local.get $arg0)))))
                        (drop (call $java$nio$CharBuffer_i))
                        (local.set $phi14 (i32.sub (local.get $var10) (local.get $var12)))
                        (local.set $phi13 (local.get $phi14))
                        (return (local.get $phi13))
                        ))
                ;; finishIfBlock
                ;; Start else
                )(else
                (return (i32.const -1))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$nio$CharBuffer$Ljava$lang$Object$$base$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (return (struct.get $java$nio$CharBuffer $hb (ref.cast (ref null $java$nio$CharBuffer) (local.get $thisref))))
        (unreachable))
    (func $java$nio$CharBuffer$I$compare$C$C (type $t564) (param $unused (ref null $java$lang$Object)) (param $arg0 i32) (param $arg1 i32) (result i32)
        (local $phi0 i32)
        (local.set $phi0 (i32.sub (local.get $arg0) (local.get $arg1)))
        (return (local.get $phi0))
        (unreachable))
    (func $java$nio$CharBuffer$Ljava$lang$String$$toString$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 i32)
        (local $var2 i32)
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 20) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
        (local.set $var2 (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 22) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
        (return (call_indirect (type $t595) (local.get $var0) (local.get $var1) (local.get $var2) (call_ref $t0 (i32.const 138) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
        (unreachable))
    (func $java$nio$CharBuffer$Z$equals$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 i32)
        (local $var3 i32)
        (local $var4 i32)
        (local $var5 i32)
        (local $var6 i32)
        (local $var7 i32)
        (local $phi8 (ref null $java$lang$Object))
        (local $phi9 (ref null $java$lang$Object))
        (local $phi10 (ref null $java$lang$Object))
        (local $phi11 i32)
        (local $phi12 i32)
        (local $phi13 i32)
        (local $phi14 i32)
        (local $phi15 (ref null $java$lang$Object))
        (local $phi16 (ref null $java$lang$Object))
        (local $phi17 (ref null $java$lang$Object))
        (local $phi18 i32)
        (local $phi19 i32)
        (local $phi20 i32)
        (local $phi21 i32)
        (local $phi22 i32)
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.eq (local.get $var0) (local.get $arg0)))
            (then
                ;; writeIfAndStartTrueBlock
                (if $if1 (i32.ne (call $instanceOf (local.get $arg0) (i32.const 67)) (i32.const 0))
                    (then
                        (local.set $var1 (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
                        (local.set $var2 (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 20) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
                        (local.set $var3 (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 22) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
                        (local.set $var4 (i32.sub (local.get $var3) (local.get $var2)))
                        (local.set $var5 (call_indirect (type $t555) (local.get $var1) (call_ref $t0 (i32.const 20) (struct.get $java$lang$Object $vt_resolver (local.get $var1)))))
                        (local.set $var6 (call_indirect (type $t555) (local.get $var1) (call_ref $t0 (i32.const 22) (struct.get $java$lang$Object $vt_resolver (local.get $var1)))))
                        (local.set $var7 (i32.sub (local.get $var6) (local.get $var5)))
                        ;; startBlock type=NORMAL, label = If_37_0
                        (block $If_37_0
                            ;; writeIfAndStartTrueBlock
                            (if $if2 (i32.lt_s (local.get $var4) (i32.const 0))
                                (then
                                    (local.set $phi8 (local.get $var0))
                                    (local.set $phi9 (local.get $arg0))
                                    (local.set $phi10 (local.get $var1))
                                    (local.set $phi11 (local.get $var2))
                                    (local.set $phi12 (local.get $var4))
                                    (local.set $phi13 (local.get $var5))
                                    (local.set $phi14 (local.get $var7))
                                    (br $If_37_0)
                                    ;; Start else
                                    )(else
                                    ;; writeIfAndStartTrueBlock
                                    (if $if3 (i32.eq (local.get $var4) (local.get $var7))
                                        (then
                                            (drop (call $java$nio$BufferMismatch_i))
                                            ;; startBlock type=NORMAL, label = If_55_0
                                            (block $If_55_0
                                                ;; writeIfAndStartTrueBlock
                                                (if $if4 (i32.ge_s (call $java$nio$BufferMismatch$I$mismatch$Ljava$nio$CharBuffer$$I$Ljava$nio$CharBuffer$$I$I (call $java$nio$BufferMismatch_i) (local.get $var0) (local.get $var2) (local.get $var1) (local.get $var5) (local.get $var4)) (i32.const 0))
                                                    (then
                                                        (local.set $phi15 (local.get $var0))
                                                        (local.set $phi16 (local.get $arg0))
                                                        (local.set $phi17 (local.get $var1))
                                                        (local.set $phi18 (local.get $var2))
                                                        (local.set $phi19 (local.get $var4))
                                                        (local.set $phi20 (local.get $var5))
                                                        (local.set $phi21 (local.get $var7))
                                                        (local.set $phi22 (i32.const 0))
                                                        (br $If_55_0)
                                                        ;; Start else
                                                        )(else
                                                        ;; Here was a goto statement
                                                        (local.set $phi15 (local.get $var0))
                                                        (local.set $phi16 (local.get $arg0))
                                                        (local.set $phi17 (local.get $var1))
                                                        (local.set $phi18 (local.get $var2))
                                                        (local.set $phi19 (local.get $var4))
                                                        (local.set $phi20 (local.get $var5))
                                                        (local.set $phi21 (local.get $var7))
                                                        (local.set $phi22 (i32.const 1))
                                                        (br $If_55_0)
                                                        ))
                                                ;; finishIfBlock
                                                )
                                            ;; finishBlock
                                            (return (local.get $phi22))
                                            ;; Start else
                                            )(else
                                            (local.set $phi8 (local.get $var0))
                                            (local.set $phi9 (local.get $arg0))
                                            (local.set $phi10 (local.get $var1))
                                            (local.set $phi11 (local.get $var2))
                                            (local.set $phi12 (local.get $var4))
                                            (local.set $phi13 (local.get $var5))
                                            (local.set $phi14 (local.get $var7))
                                            (br $If_37_0)
                                            ))
                                    ;; finishIfBlock
                                    ))
                            ;; finishIfBlock
                            )
                        ;; finishBlock
                        (return (i32.const 0))
                        ;; Start else
                        )(else
                        (return (i32.const 0))
                        ))
                ;; finishIfBlock
                ;; Start else
                )(else
                (return (i32.const 1))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$nio$CharBuffer$I$hashCode$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 i32)
        (local $var2 i32)
        (local $phi3 (ref null $java$lang$Object))
        (local $phi4 i32)
        (local $phi5 i32)
        (local $phi6 i32)
        (local $var7 i32)
        (local $var8 (ref null $java$lang$Object))
        (local $var9 i32)
        (local $var10 i32)
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 20) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
        (local.set $var2 (i32.sub (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 22) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))) (i32.const 1)))
        (local.set $phi3 (local.get $var0))
        (local.set $phi4 (i32.const 1))
        (local.set $phi5 (local.get $var1))
        (local.set $phi6 (local.get $var2))
        ;; startBlock type=LOOP, label = L370092180
        (loop $L370092180
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.lt_s (local.get $phi6) (local.get $phi5))
                (then
                    (return (local.get $phi4))
                    ;; Start else
                    )(else
                    (local.set $var7 (i32.mul (i32.const 31) (local.get $phi4)))
                    (local.set $var8 (local.get $phi3))
                    (local.set $var9 (local.get $phi6))
                    (local.set $var10 (i32.add (local.get $var7) (call_indirect (type $t551) (local.get $var8) (local.get $var9) (call_ref $t0 (i32.const 137) (struct.get $java$lang$Object $vt_resolver (local.get $var8))))))
                    (local.set $phi6 (i32.add (local.get $phi6) (i32.const -1)))
                    ;; Here was a goto statement
                    (local.set $phi4 (local.get $var10))
                    (br $L370092180)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (unreachable))
    (func $java$nio$CharBuffer$Ljava$nio$CharBuffer$$put$$C (type $t559) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 i32)
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (array.len $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $arg0)))))
        (return (call_indirect (type $t573) (local.get $var0) (local.get $arg0) (i32.const 0) (local.get $var1) (call_ref $t0 (i32.const 74) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
        (unreachable))
    (func $java$nio$CharBuffer$Ljava$nio$CharBuffer$$put$$C$I$I (type $t573) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 i32) (param $arg2 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 i32)
        (local $var3 i32)
        (local $var4 i32)
        (local $var5 (ref null $java$lang$Object))
        (local $var6 (ref null $java$lang$Object))
        (local $var7 i32)
        (local $var8 (ref null $java$lang$Object))
        (local $phi9 i32)
        (local $phi10 i32)
        (local $phi11 i32)
        (local $phi12 (ref null $java$lang$Object))
        (local $var13 (ref null $java$lang$Object))
        (local $var14 i32)
        (local $var15 i32)
        (local $var16 i32)
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (i32.eq (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 120) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))) (i32.const 0))
            (then
                (local.set $var2 (array.len $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $arg0)))))
                (drop (call $jdk$internal$util$Preconditions_i))
                ;; startBlock type=NORMAL, label = If_56_0
                (block $If_56_0
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (i32.lt_s (i32.or (i32.or (local.get $var2) (local.get $arg1)) (local.get $arg2)) (i32.const 0))
                        (then
                            (local.set $phi9 (local.get $arg1))
                            (local.set $phi10 (local.get $arg2))
                            (local.set $phi11 (local.get $var2))
                            (local.set $phi12 (ref.null none))
                            (br $If_56_0)
                            ;; Start else
                            )(else
                            ;; writeIfAndStartTrueBlock
                            (if $if2 (i32.le_s (local.get $arg2) (i32.sub (local.get $var2) (local.get $arg1)))
                                (then
                                    (local.set $var3 (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 20) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
                                    (local.set $var4 (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 22) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
                                    ;; writeIfAndStartTrueBlock
                                    (if $if3 (i32.le_s (local.get $arg2) (i32.sub (local.get $var4) (local.get $var3)))
                                        (then
                                            (local.set $var6 (call $java$nio$CharBuffer$Ljava$nio$CharBuffer$$putArray$I$$C$I$I (local.get $var0) (local.get $var3) (local.get $arg0) (local.get $arg1) (local.get $arg2)))
                                            (local.set $var7 (i32.add (local.get $var3) (local.get $arg2)))
                                            (local.set $var8 (call $java$nio$Buffer$Ljava$nio$Buffer$$position$I (local.get $var0) (local.get $var7)))
                                            (return (local.get $var0))
                                            ;; Start else
                                            )(else
                                            (local.set $var5 (struct.new $java$nio$BufferOverflowException (struct.get $java$nio$BufferOverflowException_rtt $factoryFor (global.get $java$nio$BufferOverflowException_cls)) (ref.func $java$nio$BufferOverflowException_vt) (ref.null noextern) (struct.get $java$nio$BufferOverflowException_rtt $classImplTypes (global.get $java$nio$BufferOverflowException_cls)) (ref.null none) (ref.null none)))
                                            (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var5)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                            (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var5)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                            (throw $javaexception (local.get $var5))
                                            ))
                                    ;; finishIfBlock
                                    ;; Start else
                                    )(else
                                    (local.set $phi9 (local.get $arg1))
                                    (local.set $phi10 (local.get $arg2))
                                    (local.set $phi11 (local.get $var2))
                                    (local.set $phi12 (ref.null none))
                                    (br $If_56_0)
                                    ))
                            ;; finishIfBlock
                            ))
                    ;; finishIfBlock
                    )
                ;; finishBlock
                (local.set $var13 (local.get $phi12))
                (local.set $var14 (local.get $phi9))
                (local.set $var15 (local.get $phi10))
                (local.set $var16 (local.get $phi11))
                (drop (call $jdk$internal$util$Preconditions_i))
                (throw $javaexception (call $jdk$internal$util$Preconditions$Ljava$lang$RuntimeException$$outOfBoundsCheckFromIndexSize$Ljava$util$function$BiFunction$$I$I$I (call $jdk$internal$util$Preconditions_i) (local.get $var13) (local.get $var14) (local.get $var15) (local.get $var16)))
                ;; Start else
                )(else
                (local.set $var1 (struct.new $java$nio$ReadOnlyBufferException (struct.get $java$nio$ReadOnlyBufferException_rtt $factoryFor (global.get $java$nio$ReadOnlyBufferException_cls)) (ref.func $java$nio$ReadOnlyBufferException_vt) (ref.null noextern) (struct.get $java$nio$ReadOnlyBufferException_rtt $classImplTypes (global.get $java$nio$ReadOnlyBufferException_cls)) (ref.null none) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var1))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$nio$CharBuffer$Ljava$nio$CharBuffer$$putArray$I$$C$I$I (type $t596) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (param $arg1 (ref null $java$lang$Object)) (param $arg2 i32) (param $arg3 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 i64)
        (local $var2 i64)
        (local $var3 i64)
        (local $phi4 (ref null $java$lang$Object))
        (local $phi5 i32)
        (local $phi6 (ref null $java$lang$Object))
        (local $phi7 i32)
        (local $phi8 i32)
        (local $phi9 i64)
        (local $phi10 i64)
        (local $phi11 i64)
        (local $var12 (ref null $java$lang$Object))
        (local $var13 (ref null $java$lang$Object))
        (local $var14 (ref null $java$lang$Object))
        (local $var15 (ref null $java$lang$Object))
        (local $var16 (ref null $java$lang$Object))
        (local $var17 (ref null $java$lang$Object))
        (local $var18 (ref null $java$lang$Object))
        (local $var19 i64)
        (local $var20 (ref null $java$lang$Object))
        (local $var21 (ref null $java$lang$Object))
        (local $var22 (ref null $java$lang$Object))
        (local $var23 (ref null $java$lang$Object))
        (local $var24 i64)
        (local $phi25 (ref null $java$lang$Object))
        (local $phi26 i32)
        (local $phi27 (ref null $java$lang$Object))
        (local $phi28 i32)
        (local $phi29 i32)
        (local $var30 i32)
        (local $var31 i32)
        (local $var32 i32)
        (local $phi33 i32)
        (local $phi34 i32)
        (local $phi35 i32)
        (local $var36 (ref null $java$lang$Object))
        (local $var37 i32)
        (local $var38 i32)
        (local $var39 (ref null $java$lang$Object))
        (local $phi40 (ref null $java$lang$Object))
        (local $var41 (ref null $java$lang$Object))
        (local $var42 (ref null $java$lang$Object))
        (local $var43 (ref null $java$lang$Object))
        (local $var44 (ref null $java$lang$Object))
        (local $phi45 (ref null $java$lang$Object))
        (local $phi46 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = If_9_0
        (block $If_9_0
            ;; startBlock type=NORMAL, label = If_9_1
            (block $If_9_1
                ;; writeIfAndStartTrueBlock
                (if $if0 (i32.eq (call $java$nio$CharBuffer$Z$isAddressable$$ (local.get $var0)) (i32.const 0))
                    (then
                        (local.set $phi25 (local.get $var0))
                        (local.set $phi26 (local.get $arg0))
                        (local.set $phi27 (local.get $arg1))
                        (local.set $phi28 (local.get $arg2))
                        (local.set $phi29 (local.get $arg3))
                        (br $If_9_1)
                        ;; Start else
                        )(else
                        ;; writeIfAndStartTrueBlock
                        (if $if1 (i32.le_s (call $compare_i64 (i64.shl (i64.extend_i32_s (local.get $arg3)) (i64.extend_i32_s (i32.const 1))) (i64.const 6)) (i32.const 0))
                            (then
                                (local.set $phi25 (local.get $var0))
                                (local.set $phi26 (local.get $arg0))
                                (local.set $phi27 (local.get $arg1))
                                (local.set $phi28 (local.get $arg2))
                                (local.set $phi29 (local.get $arg3))
                                (br $If_9_1)
                                ;; Start else
                                )(else
                                (local.set $var1 (i64.add (struct.get $java$nio$Buffer $address (ref.cast (ref null $java$nio$Buffer) (local.get $var0))) (i64.shl (i64.extend_i32_s (local.get $arg0)) (i64.extend_i32_s (i32.const 1)))))
                                (drop (call $java$nio$CharBuffer_i))
                                (local.set $var2 (i64.add (struct.get $java$nio$CharBuffer_rtt $ARRAY_BASE_OFFSET (global.get $java$nio$CharBuffer_cls)) (i64.shl (i64.extend_i32_s (local.get $arg2)) (i64.extend_i32_s (i32.const 1)))))
                                (local.set $var3 (i64.shl (i64.extend_i32_s (local.get $arg3)) (i64.extend_i32_s (i32.const 1))))
                                (local.set $phi4 (local.get $var0))
                                (local.set $phi5 (local.get $arg0))
                                (local.set $phi6 (local.get $arg1))
                                (local.set $phi7 (local.get $arg2))
                                (local.set $phi8 (local.get $arg3))
                                (local.set $phi9 (local.get $var1))
                                (local.set $phi10 (local.get $var2))
                                (local.set $phi11 (local.get $var3))
                                ;; startBlock type=NORMAL, label = TryCatch_49_0
                                (block $TryCatch_49_0
                                    ;; startTryCatch
                                    (try $trycatch_0 (do
                                            (local.set $var13 (local.get $phi4))
                                            (local.set $var14 (call_indirect (type $t553) (local.get $var13) (call_ref $t0 (i32.const 136) (struct.get $java$lang$Object $vt_resolver (local.get $var13)))))
                                            (drop (call $java$nio$ByteOrder_i))
                                            (drop (call $java$nio$ByteOrder_i))
                                            (local.set $phi40 (struct.get $java$nio$ByteOrder_rtt $NATIVE_ORDER (global.get $java$nio$ByteOrder_cls)))
                                            ;; writeIfAndStartTrueBlock
                                            (if $if2 (ref.eq (local.get $var14) (local.get $phi40))
                                                (then
                                                    (drop (call $java$nio$CharBuffer_i))
                                                    (local.set $var20 (struct.get $java$nio$Buffer_rtt $SCOPED_MEMORY_ACCESS (global.get $java$nio$Buffer_cls)))
                                                    (local.set $var21 (local.get $phi4))
                                                    (local.set $var22 (call_indirect (type $t553) (local.get $var21) (call_ref $t0 (i32.const 24) (struct.get $java$lang$Object $vt_resolver (local.get $var21)))))
                                                    (local.set $var23 (local.get $phi6))
                                                    (local.set $var24 (local.get $phi10))
                                                    ;; Unable to assign [C to Ljava/lang/Object; for de.mirkosertic.bytecoder.core.ir.PHI@1273603d from de.mirkosertic.bytecoder.core.ir.ReadInstanceField@54f6f0fa
                                                    (local.set $var41 (local.get $phi45))
                                                    ;; startBlock type=NORMAL, label = TryCatch_170_0
                                                    (block $TryCatch_170_0
                                                        ;; startTryCatch
                                                        (try $trycatch_1 (do
                                                                (call $jdk$internal$misc$ScopedMemoryAccess$V$copyMemoryInternal$Ljdk$internal$foreign$MemorySessionImpl$$Ljdk$internal$foreign$MemorySessionImpl$$Ljava$lang$Object$$J$Ljava$lang$Object$$J$J (local.get $var20) (ref.null none) (local.get $var22) (local.get $var23) (local.get $var24) (local.get $var41) (local.get $phi9) (local.get $phi11))
                                                                (br $TryCatch_170_0)
                                                                )
                                                            (catch $javaexception
                                                                ;; startCatchBlock
                                                                (global.set $lastcaughtexception (pop (ref null $java$lang$Object)))
                                                                (if $catchcheck_0 (call $instanceOf (global.get $lastcaughtexception) (struct.get $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError_rtt $factoryFor (global.get $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError_cls)))
                                                                    (then
                                                                        (local.set $var42 (global.get $lastcaughtexception))
                                                                        (throw $javaexception (call $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError$Ljava$lang$RuntimeException$$newRuntimeException$$ (local.get $var42)))
                                                                        ))
                                                                (rethrow $trycatch_1)
                                                                )
                                                            )
                                                        ;; finishTryCatch
                                                        )
                                                    ;; finishBlock
                                                    ;; Here was a goto statement
                                                    (br $TryCatch_49_0)
                                                    ;; Start else
                                                    )(else
                                                    (drop (call $java$nio$CharBuffer_i))
                                                    (local.set $var15 (struct.get $java$nio$Buffer_rtt $SCOPED_MEMORY_ACCESS (global.get $java$nio$Buffer_cls)))
                                                    (local.set $var16 (local.get $phi4))
                                                    (local.set $var17 (call_indirect (type $t553) (local.get $var16) (call_ref $t0 (i32.const 24) (struct.get $java$lang$Object $vt_resolver (local.get $var16)))))
                                                    (local.set $var18 (local.get $phi6))
                                                    (local.set $var19 (local.get $phi10))
                                                    ;; Unable to assign [C to Ljava/lang/Object; for de.mirkosertic.bytecoder.core.ir.PHI@332cb6ee from de.mirkosertic.bytecoder.core.ir.ReadInstanceField@3ad74a3e
                                                    (local.set $var43 (local.get $phi46))
                                                    ;; startBlock type=NORMAL, label = TryCatch_181_0
                                                    (block $TryCatch_181_0
                                                        ;; startTryCatch
                                                        (try $trycatch_2 (do
                                                                (call $jdk$internal$misc$ScopedMemoryAccess$V$copySwapMemoryInternal$Ljdk$internal$foreign$MemorySessionImpl$$Ljdk$internal$foreign$MemorySessionImpl$$Ljava$lang$Object$$J$Ljava$lang$Object$$J$J$J (local.get $var15) (ref.null none) (local.get $var17) (local.get $var18) (local.get $var19) (local.get $var43) (local.get $phi9) (local.get $phi11) (i64.const 2))
                                                                (br $TryCatch_181_0)
                                                                )
                                                            (catch $javaexception
                                                                ;; startCatchBlock
                                                                (global.set $lastcaughtexception (pop (ref null $java$lang$Object)))
                                                                (if $catchcheck_1 (call $instanceOf (global.get $lastcaughtexception) (struct.get $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError_rtt $factoryFor (global.get $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError_cls)))
                                                                    (then
                                                                        (local.set $var44 (global.get $lastcaughtexception))
                                                                        (throw $javaexception (call $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError$Ljava$lang$RuntimeException$$newRuntimeException$$ (local.get $var44)))
                                                                        ))
                                                                (rethrow $trycatch_2)
                                                                )
                                                            )
                                                        ;; finishTryCatch
                                                        )
                                                    ;; finishBlock
                                                    ;; Here was a goto statement
                                                    ;; Here was a goto statement
                                                    (br $TryCatch_49_0)
                                                    ))
                                            ;; finishIfBlock
                                            )
                                        (catch $javaexception
                                            ;; startCatchBlock
                                            (global.set $lastcaughtexception (pop (ref null $java$lang$Object)))
                                            (if $catchcheck_2 (call $instanceOf (global.get $lastcaughtexception) (struct.get $java$lang$Throwable_rtt $factoryFor (global.get $java$lang$Throwable_cls)))
                                                (then
                                                    ;; startBlock type=NORMAL, label = TryCatch_50_0
                                                    (block $TryCatch_50_0
                                                        (local.set $var12 (global.get $lastcaughtexception))
                                                        (br $TryCatch_50_0)
                                                        )
                                                    ;; finishBlock
                                                    (throw $javaexception (local.get $var12))
                                                    ))
                                            (rethrow $trycatch_0)
                                            )
                                        )
                                    ;; finishTryCatch
                                    )
                                ;; finishBlock
                                ;; Here was a goto statement
                                ;; Here was a goto statement
                                (br $If_9_0)
                                ))
                        ;; finishIfBlock
                        ))
                ;; finishIfBlock
                )
            ;; finishBlock
            (local.set $var30 (i32.add (local.get $phi28) (local.get $phi29)))
            (local.set $var31 (local.get $phi28))
            (local.set $var32 (local.get $phi26))
            (local.set $phi33 (local.get $var30))
            (local.set $phi34 (local.get $var31))
            (local.set $phi35 (local.get $var32))
            ;; startBlock type=LOOP, label = L1653267545
            (loop $L1653267545
                ;; writeIfAndStartTrueBlock
                (if $if3 (i32.ge_s (local.get $phi34) (local.get $phi33))
                    (then
                        (local.set $phi4 (local.get $phi25))
                        (local.set $phi5 (local.get $phi26))
                        (local.set $phi6 (local.get $phi27))
                        (local.set $phi7 (local.get $phi28))
                        (local.set $phi8 (local.get $phi29))
                        (local.set $phi9 (i64.extend_i32_s (local.get $phi33)))
                        (local.set $phi10 (i64.extend_i32_s (local.get $phi35)))
                        (br $If_9_0)
                        ;; Start else
                        )(else
                        (local.set $var36 (local.get $phi25))
                        (local.set $var37 (local.get $phi35))
                        (local.set $var38 (array.get $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $phi27))) (local.get $phi34)))
                        (local.set $var39 (call_indirect (type $t595) (local.get $var36) (local.get $var37) (local.get $var38) (call_ref $t0 (i32.const 139) (struct.get $java$lang$Object $vt_resolver (local.get $var36)))))
                        (local.set $phi34 (i32.add (local.get $phi34) (i32.const 1)))
                        (local.set $phi35 (i32.add (local.get $phi35) (i32.const 1)))
                        ;; Here was a goto statement
                        (br $L1653267545)
                        ))
                ;; finishIfBlock
                )
            ;; finishBlock
            )
        ;; finishBlock
        (return (local.get $phi4))
        (unreachable))
    (func $java$nio$CharBuffer$Z$isAddressable$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (return (i32.const 1))
        (unreachable))
    (func $jdk$internal$util$Preconditions$2$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $jdk$internal$util$Preconditions$2$Ljava$lang$Object$$apply$Ljava$lang$Object$ (type $t559) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (return (call $jdk$internal$util$Preconditions$2$Ljava$lang$ArrayIndexOutOfBoundsException$$apply$Ljava$lang$String$ (local.get $var0) (local.get $var1)))
        (unreachable))
    (func $jdk$internal$util$Preconditions$2$Ljava$lang$ArrayIndexOutOfBoundsException$$apply$Ljava$lang$String$ (type $t559) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (struct.new $java$lang$ArrayIndexOutOfBoundsException (struct.get $java$lang$ArrayIndexOutOfBoundsException_rtt $factoryFor (global.get $java$lang$ArrayIndexOutOfBoundsException_cls)) (ref.func $java$lang$ArrayIndexOutOfBoundsException_vt) (ref.null noextern) (struct.get $java$lang$ArrayIndexOutOfBoundsException_rtt $classImplTypes (global.get $java$lang$ArrayIndexOutOfBoundsException_cls)) (ref.null none) (ref.null none)))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return (local.get $var0))
        (unreachable))
    (func $java$nio$charset$Charset$Ljava$nio$charset$Charset$$defaultCharset$$ (type $t553) (param $unused (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        ;; startBlock type=NORMAL, label = If_3_0
        (block $If_3_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (struct.get $java$nio$charset$Charset_rtt $defaultCharset (global.get $java$nio$charset$Charset_cls))))
                (then
                    (br $If_3_0)
                    ;; Start else
                    )(else
                    (local.set $var0 (struct.new $de$mirkosertic$bytecoder$classlib$BytecoderCharset (struct.get $de$mirkosertic$bytecoder$classlib$BytecoderCharset_rtt $factoryFor (global.get $de$mirkosertic$bytecoder$classlib$BytecoderCharset_cls)) (ref.func $de$mirkosertic$bytecoder$classlib$BytecoderCharset_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$BytecoderCharset_rtt $classImplTypes (global.get $de$mirkosertic$bytecoder$classlib$BytecoderCharset_cls)) (ref.null none) (ref.null none)))
                    (local.set $var1 (struct.new $obj_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t549 (i32.const 0))))
                    (struct.set $java$nio$charset$Charset $canonicalName (ref.cast (ref null $java$nio$charset$Charset) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_70)))
                    (struct.set $java$nio$charset$Charset $aliases (ref.cast (ref null $java$nio$charset$Charset) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $var1)))
                    (struct.set $java$nio$charset$Charset_rtt $defaultCharset (ref.cast (ref null $java$nio$charset$Charset_rtt) (global.get $java$nio$charset$Charset_cls)) (ref.cast (ref null $java$lang$Object) (local.get $var0)))
                    (br $If_3_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (struct.get $java$nio$charset$Charset_rtt $defaultCharset (global.get $java$nio$charset$Charset_cls)))
        (unreachable))
    (func $java$nio$charset$Charset$V$$init$$Ljava$lang$String$$$Ljava$lang$String$ (type $t560) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$nio$charset$Charset $canonicalName (ref.cast (ref null $java$nio$charset$Charset) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (struct.set $java$nio$charset$Charset $aliases (ref.cast (ref null $java$nio$charset$Charset) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg1)))
        (return)
        (unreachable))
    (func $java$nio$charset$Charset$Ljava$lang$String$$name$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (return (struct.get $java$nio$charset$Charset $canonicalName (ref.cast (ref null $java$nio$charset$Charset) (local.get $thisref))))
        (unreachable))
    (func $java$util$HashMap$EntryIterator$V$$init$$Ljava$util$HashMap$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (call $java$util$HashMap$HashIterator$V$$init$$Ljava$util$HashMap$ (local.get $thisref) (local.get $arg0))
        (return)
        (unreachable))
    (func $java$util$HashMap$EntryIterator$Ljava$lang$Object$$next$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (return (call $java$util$HashMap$EntryIterator$Ljava$util$Map$Entry$$next$$ (local.get $var0)))
        (unreachable))
    (func $java$util$HashMap$EntryIterator$Ljava$util$Map$Entry$$next$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (return (call_indirect (type $t553) (local.get $var0) (call_ref $t0 (i32.const 49) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
        (unreachable))
    (func $java$util$ImmutableCollections$MapN$MapNIterator$V$$init$$Ljava$util$ImmutableCollections$MapN$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$util$ImmutableCollections$MapN$MapNIterator $this$0 (ref.cast (ref null $java$util$ImmutableCollections$MapN$MapNIterator) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (struct.set $java$util$ImmutableCollections$MapN$MapNIterator $remaining (ref.cast (ref null $java$util$ImmutableCollections$MapN$MapNIterator) (local.get $var0)) (struct.get $java$util$ImmutableCollections$MapN $size (ref.cast (ref null $java$util$ImmutableCollections$MapN) (local.get $arg0))))
        (drop (call $java$util$ImmutableCollections_i))
        (struct.set $java$util$ImmutableCollections$MapN$MapNIterator $idx (ref.cast (ref null $java$util$ImmutableCollections$MapN$MapNIterator) (local.get $var0)) (i32.shl (i32.wrap_i64 (i64.shr_u (i64.mul (struct.get $java$util$ImmutableCollections_rtt $SALT32L (global.get $java$util$ImmutableCollections_cls)) (i64.extend_i32_s (i32.shr_s (array.len $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (struct.get $java$util$ImmutableCollections$MapN $table (ref.cast (ref null $java$util$ImmutableCollections$MapN) (local.get $arg0)))))) (i32.const 1)))) (i64.extend_i32_s (i32.const 32)))) (i32.const 1)))
        (return)
        (unreachable))
    (func $java$util$ImmutableCollections$MapN$MapNIterator$Z$hasNext$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 i32)
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = If_5_0
        (block $If_5_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.le_s (struct.get $java$util$ImmutableCollections$MapN$MapNIterator $remaining (ref.cast (ref null $java$util$ImmutableCollections$MapN$MapNIterator) (local.get $var0))) (i32.const 0))
                (then
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (i32.const 0))
                    (br $If_5_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (i32.const 1))
                    (br $If_5_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi2))
        (unreachable))
    (func $java$util$ImmutableCollections$MapN$MapNIterator$Ljava$lang$Object$$next$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (return (call $java$util$ImmutableCollections$MapN$MapNIterator$Ljava$util$Map$Entry$$next$$ (local.get $var0)))
        (unreachable))
    (func $java$util$ImmutableCollections$MapN$MapNIterator$Ljava$util$Map$Entry$$next$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 i32)
        (local $var5 (ref null $java$lang$Object))
        (local $var6 (ref null $java$lang$Object))
        (local $var7 (ref null $java$lang$Object))
        (local $var8 (ref null $java$lang$Object))
        (local $var9 (ref null $java$lang$Object))
        (local $var10 (ref null $java$lang$Object))
        (local $var11 (ref null $java$lang$Object))
        (local $var12 (ref null $java$lang$Object))
        (local $var13 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (i32.le_s (struct.get $java$util$ImmutableCollections$MapN$MapNIterator $remaining (ref.cast (ref null $java$util$ImmutableCollections$MapN$MapNIterator) (local.get $var0))) (i32.const 0))
            (then
                (local.set $var10 (struct.new $java$util$NoSuchElementException (struct.get $java$util$NoSuchElementException_rtt $factoryFor (global.get $java$util$NoSuchElementException_cls)) (ref.func $java$util$NoSuchElementException_vt) (ref.null noextern) (struct.get $java$util$NoSuchElementException_rtt $classImplTypes (global.get $java$util$NoSuchElementException_cls)) (ref.null none) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var10)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var10)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var10))
                ;; Start else
                )(else
                (local.set $phi1 (local.get $var0))
                ;; startBlock type=LOOP, label = L1451195084
                (loop $L1451195084
                    (local.set $var2 (struct.get $java$util$ImmutableCollections$MapN $table (ref.cast (ref null $java$util$ImmutableCollections$MapN) (struct.get $java$util$ImmutableCollections$MapN$MapNIterator $this$0 (ref.cast (ref null $java$util$ImmutableCollections$MapN$MapNIterator) (local.get $phi1))))))
                    (local.set $var3 (local.get $phi1))
                    (local.set $var4 (call $java$util$ImmutableCollections$MapN$MapNIterator$I$nextIndex$$ (local.get $var3)))
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (select (i32.const 0) (i32.const 1) (ref.is_null (array.get $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var2))) (local.get $var4))))
                        (then
                            (local.set $var5 (struct.new $java$util$KeyValueHolder (struct.get $java$util$KeyValueHolder_rtt $factoryFor (global.get $java$util$KeyValueHolder_cls)) (ref.func $java$util$KeyValueHolder_vt) (ref.null noextern) (struct.get $java$util$KeyValueHolder_rtt $classImplTypes (global.get $java$util$KeyValueHolder_cls)) (ref.null none) (ref.null none)))
                            (local.set $var6 (struct.get $java$util$ImmutableCollections$MapN $table (ref.cast (ref null $java$util$ImmutableCollections$MapN) (struct.get $java$util$ImmutableCollections$MapN$MapNIterator $this$0 (ref.cast (ref null $java$util$ImmutableCollections$MapN$MapNIterator) (local.get $phi1))))))
                            (local.set $var7 (array.get $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var6))) (local.get $var4)))
                            (local.set $var8 (struct.get $java$util$ImmutableCollections$MapN $table (ref.cast (ref null $java$util$ImmutableCollections$MapN) (struct.get $java$util$ImmutableCollections$MapN$MapNIterator $this$0 (ref.cast (ref null $java$util$ImmutableCollections$MapN$MapNIterator) (local.get $phi1))))))
                            (local.set $var11 (array.get $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var8))) (i32.add (local.get $var4) (i32.const 1))))
                            ;; writeIfAndStartTrueBlock
                            (if $if2 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var7)))
                                (then
                                    (struct.set $java$util$KeyValueHolder $key (ref.cast (ref null $java$util$KeyValueHolder) (local.get $var5)) (ref.cast (ref null $java$lang$Object) (local.get $var7)))
                                    ;; writeIfAndStartTrueBlock
                                    (if $if3 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var11)))
                                        (then
                                            (struct.set $java$util$KeyValueHolder $value (ref.cast (ref null $java$util$KeyValueHolder) (local.get $var5)) (ref.cast (ref null $java$lang$Object) (local.get $var11)))
                                            (local.set $var9 (local.get $phi1))
                                            (struct.set $java$util$ImmutableCollections$MapN$MapNIterator $remaining (ref.cast (ref null $java$util$ImmutableCollections$MapN$MapNIterator) (local.get $var9)) (i32.sub (struct.get $java$util$ImmutableCollections$MapN$MapNIterator $remaining (ref.cast (ref null $java$util$ImmutableCollections$MapN$MapNIterator) (local.get $var9))) (i32.const 1)))
                                            (return (local.get $var5))
                                            ;; Start else
                                            )(else
                                            (local.set $var12 (struct.new $java$lang$NullPointerException (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)) (ref.func $java$lang$NullPointerException_vt) (ref.null noextern) (struct.get $java$lang$NullPointerException_rtt $classImplTypes (global.get $java$lang$NullPointerException_cls)) (ref.null none) (ref.null none) (i32.const 0) (ref.null none)))
                                            (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var12)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                            (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var12)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                            (throw $javaexception (local.get $var12))
                                            ))
                                    ;; finishIfBlock
                                    ;; Start else
                                    )(else
                                    (local.set $var13 (struct.new $java$lang$NullPointerException (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)) (ref.func $java$lang$NullPointerException_vt) (ref.null noextern) (struct.get $java$lang$NullPointerException_rtt $classImplTypes (global.get $java$lang$NullPointerException_cls)) (ref.null none) (ref.null none) (i32.const 0) (ref.null none)))
                                    (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var13)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                    (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var13)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                    (throw $javaexception (local.get $var13))
                                    ))
                            ;; finishIfBlock
                            ;; Start else
                            )(else
                            ;; Here was a goto statement
                            (br $L1451195084)
                            ))
                    ;; finishIfBlock
                    )
                ;; finishBlock
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$util$ImmutableCollections$MapN$MapNIterator$I$nextIndex$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 i32)
        (local $var2 i32)
        (local $phi3 (ref null $java$lang$Object))
        (local $phi4 i32)
        (local $var5 (ref null $java$lang$Object))
        (local $var6 i32)
        (local $var7 i32)
        (local $var8 i32)
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (struct.get $java$util$ImmutableCollections$MapN$MapNIterator $idx (ref.cast (ref null $java$util$ImmutableCollections$MapN$MapNIterator) (local.get $var0))))
        (drop (call $java$util$ImmutableCollections_i))
        ;; startBlock type=NORMAL, label = If_10_0
        (block $If_10_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.eq (struct.get $java$util$ImmutableCollections_rtt $REVERSE (global.get $java$util$ImmutableCollections_cls)) (i32.const 0))
                (then
                    (local.set $var7 (i32.add (local.get $var1) (i32.const -2)))
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (i32.ge_s (local.get $var7) (i32.const 0))
                        (then
                            (local.set $phi3 (local.get $var0))
                            (local.set $phi4 (local.get $var7))
                            (br $If_10_0)
                            ;; Start else
                            )(else
                            (local.set $var8 (i32.sub (array.len $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (struct.get $java$util$ImmutableCollections$MapN $table (ref.cast (ref null $java$util$ImmutableCollections$MapN) (struct.get $java$util$ImmutableCollections$MapN$MapNIterator $this$0 (ref.cast (ref null $java$util$ImmutableCollections$MapN$MapNIterator) (local.get $var0)))))))) (i32.const 2)))
                            (local.set $phi3 (local.get $var0))
                            (local.set $phi4 (local.get $var8))
                            (br $If_10_0)
                            ))
                    ;; finishIfBlock
                    ;; Start else
                    )(else
                    (local.set $var2 (i32.add (local.get $var1) (i32.const 2)))
                    ;; writeIfAndStartTrueBlock
                    (if $if2 (i32.lt_s (local.get $var2) (array.len $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (struct.get $java$util$ImmutableCollections$MapN $table (ref.cast (ref null $java$util$ImmutableCollections$MapN) (struct.get $java$util$ImmutableCollections$MapN$MapNIterator $this$0 (ref.cast (ref null $java$util$ImmutableCollections$MapN$MapNIterator) (local.get $var0)))))))))
                        (then
                            (local.set $phi3 (local.get $var0))
                            (local.set $phi4 (local.get $var2))
                            (br $If_10_0)
                            ;; Start else
                            )(else
                            ;; Here was a goto statement
                            (local.set $phi3 (local.get $var0))
                            (local.set $phi4 (i32.const 0))
                            (br $If_10_0)
                            ))
                    ;; finishIfBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (local.set $var5 (local.get $phi3))
        (local.set $var6 (local.get $phi4))
        (struct.set $java$util$ImmutableCollections$MapN$MapNIterator $idx (ref.cast (ref null $java$util$ImmutableCollections$MapN$MapNIterator) (local.get $var5)) (local.get $var6))
        (return (local.get $var6))
        (unreachable))
    (func $java$lang$String$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$lang$String$Ljava$lang$String$$valueOf$Ljava$lang$Object$ (type $t559) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg0)))
            (then
                (return (call_indirect (type $t553) (local.get $arg0) (call_ref $t0 (i32.const 0) (struct.get $java$lang$Object $vt_resolver (local.get $arg0)))))
                ;; Start else
                )(else
                (return (global.get $stringpool_0))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$lang$String$Z$equals$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg0)))
            (then
                ;; writeIfAndStartTrueBlock
                (if $if1 (select (i32.const 0) (i32.const 1) (ref.eq (local.get $arg0) (local.get $var0)))
                    (then
                        (local.set $var1 (call_indirect (type $t553) (local.get $arg0) (call_ref $t0 (i32.const 0) (struct.get $java$lang$Object $vt_resolver (local.get $arg0)))))
                        (return (call $java$lang$String$Z$equals0$Ljava$lang$String$ (local.get $var0) (local.get $var1)))
                        ;; Start else
                        )(else
                        (return (i32.const 1))
                        ))
                ;; finishIfBlock
                ;; Start else
                )(else
                (return (i32.const 0))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$lang$String$I$hashCode$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 i32)
        (local $phi3 i32)
        (local $var4 i32)
        (local.set $var0 (local.get $thisref))
        (local.set $phi1 (call $java$lang$String$$B$getBytes$$ (local.get $var0)))
        (local.set $phi2 (i32.const 0))
        (local.set $phi3 (i32.const 0))
        ;; startBlock type=LOOP, label = L992170967
        (loop $L992170967
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ge_s (local.get $phi3) (array.len $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $phi1)))))
                (then
                    (return (local.get $phi2))
                    ;; Start else
                    )(else
                    (local.set $var4 (i32.add (i32.mul (i32.const 31) (local.get $phi2)) (array.get $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $phi1))) (local.get $phi3))))
                    (local.set $phi3 (i32.add (local.get $phi3) (i32.const 1)))
                    ;; Here was a goto statement
                    (local.set $phi2 (local.get $var4))
                    (br $L992170967)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (unreachable))
    (func $java$lang$String$I$compareTo$Ljava$lang$String$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $var3 i32)
        (local $var4 i32)
        (local $var5 i32)
        (local $phi6 (ref null $java$lang$Object))
        (local $phi7 (ref null $java$lang$Object))
        (local $phi8 i32)
        (local $phi9 i32)
        (local $phi10 i32)
        (local $phi11 (ref null $java$lang$Object))
        (local $phi12 (ref null $java$lang$Object))
        (local $phi13 i32)
        (local $var14 i32)
        (local $var15 i32)
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (call $java$lang$String$$C$toCharArray$$ (local.get $var0)))
        (local.set $var2 (call $java$lang$String$$C$toCharArray$$ (local.get $arg0)))
        (local.set $var3 (array.len $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $var1)))))
        (local.set $var4 (array.len $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $var2)))))
        (drop (call $java$lang$Math_i))
        (local.set $var5 (call $java$lang$Math$I$min$I$I (call $java$lang$Math_i) (local.get $var3) (local.get $var4)))
        (local.set $phi6 (local.get $var1))
        (local.set $phi7 (local.get $var2))
        (local.set $phi8 (local.get $var3))
        (local.set $phi9 (local.get $var4))
        (local.set $phi10 (local.get $var5))
        (local.set $phi11 (local.get $var1))
        (local.set $phi12 (local.get $var2))
        (local.set $phi13 (i32.const 0))
        ;; startBlock type=LOOP, label = L1704512280
        (loop $L1704512280
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ge_s (local.get $phi13) (local.get $phi10))
                (then
                    (return (i32.sub (local.get $phi8) (local.get $phi9)))
                    ;; Start else
                    )(else
                    (local.set $var14 (array.get $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $phi11))) (local.get $phi13)))
                    (local.set $var15 (array.get $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $phi12))) (local.get $phi13)))
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (i32.eq (local.get $var14) (local.get $var15))
                        (then
                            (local.set $phi13 (i32.add (local.get $phi13) (i32.const 1)))
                            ;; Here was a goto statement
                            (br $L1704512280)
                            ;; Start else
                            )(else
                            (return (i32.sub (local.get $var14) (local.get $var15)))
                            ))
                    ;; finishIfBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (unreachable))
    (func $java$lang$String$I$compareTo$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (return (call $java$lang$String$I$compareTo$Ljava$lang$String$ (local.get $var0) (local.get $var1)))
        (unreachable))
    (func $java$lang$String$Ljava$lang$String$$toString$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (return (ref.cast (ref null $java$lang$Object) (local.get $thisref)))
        (unreachable))
    (func $java$lang$String$V$$init$$$C$I$I (type $t585) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 i32) (param $arg2 i32)
        (call $java$lang$String$V$initializeWith$$C$I$I (local.get $thisref) (local.get $arg0) (local.get $arg1) (local.get $arg2))
        (return)
        (unreachable))
    (func $java$lang$Thread$Ljava$lang$Thread$$currentThread$$ (type $t553) (param $unused (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        ;; startBlock type=NORMAL, label = If_3_0
        (block $If_3_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (struct.get $java$lang$Thread_rtt $MAIN_THREAD (global.get $java$lang$Thread_cls))))
                (then
                    (br $If_3_0)
                    ;; Start else
                    )(else
                    (drop (call $java$lang$ThreadGroup_i))
                    (local.set $var0 (struct.new $java$lang$ThreadGroup (struct.get $java$lang$ThreadGroup_rtt $factoryFor (global.get $java$lang$ThreadGroup_cls)) (ref.func $java$lang$ThreadGroup_vt) (ref.null noextern) (struct.get $java$lang$ThreadGroup_rtt $classImplTypes (global.get $java$lang$ThreadGroup_cls)) (ref.null none) (ref.null none)))
                    (drop (call $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup_i))
                    (local.set $var2 (ref.cast (ref null $java$lang$Object) (struct.get $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup_rtt $SYSTEM (global.get $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup_cls))))
                    (struct.set $java$lang$ThreadGroup $name (ref.cast (ref null $java$lang$ThreadGroup) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_68)))
                    (struct.set $java$lang$ThreadGroup $parent (ref.cast (ref null $java$lang$ThreadGroup) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $var2)))
                    (local.set $var1 (struct.new $java$lang$Thread (struct.get $java$lang$Thread_rtt $factoryFor (global.get $java$lang$Thread_cls)) (ref.func $java$lang$Thread_vt) (ref.null noextern) (struct.get $java$lang$Thread_rtt $classImplTypes (global.get $java$lang$Thread_cls)) (ref.null none) (ref.null none) (ref.null none)))
                    (struct.set $java$lang$Thread $threadGroup (ref.cast (ref null $java$lang$Thread) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (local.get $var0)))
                    (struct.set $java$lang$Thread $runnable (ref.cast (ref null $java$lang$Thread) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                    (struct.set $java$lang$Thread $name (ref.cast (ref null $java$lang$Thread) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_68)))
                    (struct.set $java$lang$Thread_rtt $MAIN_THREAD (ref.cast (ref null $java$lang$Thread_rtt) (global.get $java$lang$Thread_cls)) (ref.cast (ref null $java$lang$Object) (local.get $var1)))
                    (br $If_3_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (struct.get $java$lang$Thread_rtt $MAIN_THREAD (global.get $java$lang$Thread_cls)))
        (unreachable))
    (func $java$lang$Thread$V$$init$$Ljava$lang$ThreadGroup$$Ljava$lang$String$ (type $t560) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Thread $threadGroup (ref.cast (ref null $java$lang$Thread) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (struct.set $java$lang$Thread $runnable (ref.cast (ref null $java$lang$Thread) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (struct.set $java$lang$Thread $name (ref.cast (ref null $java$lang$Thread) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg1)))
        (return)
        (unreachable))
    (func $java$lang$Thread$Z$isVirtual$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (return (i32.const 0))
        (unreachable))
    (func $java$lang$Thread$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Thread $runnable (ref.cast (ref null $java$lang$Thread) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (drop (call $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup_i))
        (struct.set $java$lang$Thread $threadGroup (ref.cast (ref null $java$lang$Thread) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.cast (ref null $java$lang$Object) (struct.get $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup_rtt $SYSTEM (global.get $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup_cls)))))
        (struct.set $java$lang$Thread $name (ref.cast (ref null $java$lang$Thread) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_102)))
        (return)
        (unreachable))
    (func $jdk$internal$util$Preconditions$1$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $jdk$internal$util$Preconditions$1$Ljava$lang$Object$$apply$Ljava$lang$Object$ (type $t559) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (return (call $jdk$internal$util$Preconditions$1$Ljava$lang$StringIndexOutOfBoundsException$$apply$Ljava$lang$String$ (local.get $var0) (local.get $var1)))
        (unreachable))
    (func $jdk$internal$util$Preconditions$1$Ljava$lang$StringIndexOutOfBoundsException$$apply$Ljava$lang$String$ (type $t559) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (struct.new $java$lang$StringIndexOutOfBoundsException (struct.get $java$lang$StringIndexOutOfBoundsException_rtt $factoryFor (global.get $java$lang$StringIndexOutOfBoundsException_cls)) (ref.func $java$lang$StringIndexOutOfBoundsException_vt) (ref.null noextern) (struct.get $java$lang$StringIndexOutOfBoundsException_rtt $classImplTypes (global.get $java$lang$StringIndexOutOfBoundsException_cls)) (ref.null none) (ref.null none)))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return (local.get $var0))
        (unreachable))
    (func $java$io$PrintStream$1$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$util$HashMap$Node$V$$init$$I$Ljava$lang$Object$$Ljava$lang$Object$$Ljava$util$HashMap$Node$ (type $t598) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (param $arg1 (ref null $java$lang$Object)) (param $arg2 (ref null $java$lang$Object)) (param $arg3 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$util$HashMap$Node $hash (ref.cast (ref null $java$util$HashMap$Node) (local.get $var0)) (local.get $arg0))
        (struct.set $java$util$HashMap$Node $key (ref.cast (ref null $java$util$HashMap$Node) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg1)))
        (struct.set $java$util$HashMap$Node $value (ref.cast (ref null $java$util$HashMap$Node) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg2)))
        (struct.set $java$util$HashMap$Node $next (ref.cast (ref null $java$util$HashMap$Node) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg3)))
        (return)
        (unreachable))
    (func $java$util$HashMap$Node$Ljava$lang$String$$toString$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $var6 (ref null $java$lang$Object))
        (local $var7 (ref null $java$lang$Object))
        (local $phi8 (ref null $java$lang$Object))
        (local $var9 (ref null $java$lang$Object))
        (local $phi10 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (struct.new $java$lang$StringBuilder (struct.get $java$lang$StringBuilder_rtt $factoryFor (global.get $java$lang$StringBuilder_cls)) (ref.func $java$lang$StringBuilder_vt) (ref.null noextern) (struct.get $java$lang$StringBuilder_rtt $classImplTypes (global.get $java$lang$StringBuilder_cls))))
        (call $java$lang$StringBuilder$V$initializeWith$I (local.get $var1) (i32.const 10))
        (local.set $var2 (struct.get $java$util$HashMap$Node $key (ref.cast (ref null $java$util$HashMap$Node) (local.get $var0))))
        ;; startBlock type=NORMAL, label = If_37_0
        (block $If_37_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (ref.is_null (local.get $var2))
                (then
                    (local.set $phi10 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var1) (global.get $stringpool_0)))
                    (br $If_37_0)
                    ;; Start else
                    )(else
                    (local.set $var9 (call_indirect (type $t553) (local.get $var2) (call_ref $t0 (i32.const 0) (struct.get $java$lang$Object $vt_resolver (local.get $var2)))))
                    (local.set $phi10 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var1) (local.get $var9)))
                    (br $If_37_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (local.set $var3 (local.get $phi10))
        (local.set $var4 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var3) (global.get $stringpool_99)))
        (local.set $var5 (struct.get $java$util$HashMap$Node $value (ref.cast (ref null $java$util$HashMap$Node) (local.get $var0))))
        ;; startBlock type=NORMAL, label = If_26_0
        (block $If_26_0
            ;; writeIfAndStartTrueBlock
            (if $if1 (ref.is_null (local.get $var5))
                (then
                    (local.set $phi8 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var4) (global.get $stringpool_0)))
                    (br $If_26_0)
                    ;; Start else
                    )(else
                    (local.set $var7 (call_indirect (type $t553) (local.get $var5) (call_ref $t0 (i32.const 0) (struct.get $java$lang$Object $vt_resolver (local.get $var5)))))
                    (local.set $phi8 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var4) (local.get $var7)))
                    (br $If_26_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (local.set $var6 (local.get $phi8))
        (return (call $java$lang$StringBuilder$Ljava$lang$String$$toString$$ (local.get $var6)))
        (unreachable))
    (func $java$util$HashMap$Node$Z$equals$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $phi6 (ref null $java$lang$Object))
        (local $phi7 (ref null $java$lang$Object))
        (local $phi8 (ref null $java$lang$Object))
        (local $phi9 i32)
        (local $phi10 (ref null $java$lang$Object))
        (local $phi11 (ref null $java$lang$Object))
        (local $phi12 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.eq (local.get $arg0) (local.get $var0)))
            (then
                ;; startBlock type=NORMAL, label = If_11_0
                (block $If_11_0
                    ;; startBlock type=NORMAL, label = If_11_1
                    (block $If_11_1
                        ;; writeIfAndStartTrueBlock
                        (if $if1 (i32.eq (call $instanceOf (local.get $arg0) (i32.const 57)) (i32.const 0))
                            (then
                                (local.set $phi10 (local.get $var0))
                                (local.set $phi11 (local.get $arg0))
                                (br $If_11_1)
                                ;; Start else
                                )(else
                                (local.set $var1 (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
                                (local.set $var2 (struct.get $java$util$HashMap$Node $key (ref.cast (ref null $java$util$HashMap$Node) (local.get $var0))))
                                (local.set $var3 (call_indirect (type $t553) (local.get $var1) (call_ref $t0 (i32.const 92) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var1))))))
                                ;; writeIfAndStartTrueBlock
                                (if $if2 (i32.eq (call $java$util$Objects$Z$equals$Ljava$lang$Object$$Ljava$lang$Object$ (global.get $java$util$Objects_cls) (local.get $var2) (local.get $var3)) (i32.const 0))
                                    (then
                                        (local.set $phi10 (local.get $var0))
                                        (local.set $phi11 (local.get $arg0))
                                        (local.set $phi12 (local.get $var1))
                                        (br $If_11_1)
                                        ;; Start else
                                        )(else
                                        (local.set $var4 (struct.get $java$util$HashMap$Node $value (ref.cast (ref null $java$util$HashMap$Node) (local.get $var0))))
                                        (local.set $var5 (call_indirect (type $t553) (local.get $var1) (call_ref $t0 (i32.const 93) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var1))))))
                                        ;; writeIfAndStartTrueBlock
                                        (if $if3 (i32.eq (call $java$util$Objects$Z$equals$Ljava$lang$Object$$Ljava$lang$Object$ (global.get $java$util$Objects_cls) (local.get $var4) (local.get $var5)) (i32.const 0))
                                            (then
                                                (local.set $phi10 (local.get $var0))
                                                (local.set $phi11 (local.get $arg0))
                                                (local.set $phi12 (local.get $var1))
                                                (br $If_11_1)
                                                ;; Start else
                                                )(else
                                                ;; Here was a goto statement
                                                (local.set $phi6 (local.get $var0))
                                                (local.set $phi7 (local.get $arg0))
                                                (local.set $phi8 (local.get $var1))
                                                (local.set $phi9 (i32.const 1))
                                                (br $If_11_0)
                                                ))
                                        ;; finishIfBlock
                                        ))
                                ;; finishIfBlock
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    (local.set $phi6 (local.get $phi10))
                    (local.set $phi7 (local.get $phi11))
                    (local.set $phi8 (local.get $phi12))
                    (local.set $phi9 (i32.const 0))
                    (br $If_11_0)
                    )
                ;; finishBlock
                (return (local.get $phi9))
                ;; Start else
                )(else
                (return (i32.const 1))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$util$HashMap$Node$I$hashCode$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 i32)
        (local $var3 (ref null $java$lang$Object))
        (local $var4 i32)
        (local $phi5 (ref null $java$lang$Object))
        (local $phi6 i32)
        (local $phi7 i32)
        (local $var8 i32)
        (local $phi9 (ref null $java$lang$Object))
        (local $phi10 i32)
        (local $phi11 i32)
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (struct.get $java$util$HashMap$Node $key (ref.cast (ref null $java$util$HashMap$Node) (local.get $var0))))
        ;; startBlock type=NORMAL, label = If_30_0
        (block $If_30_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (ref.is_null (local.get $var1))
                (then
                    (local.set $phi9 (local.get $var1))
                    (local.set $phi10 (i32.const 0))
                    (br $If_30_0)
                    ;; Start else
                    )(else
                    (local.set $var8 (call_indirect (type $t555) (local.get $var1) (call_ref $t0 (i32.const 2) (struct.get $java$lang$Object $vt_resolver (local.get $var1)))))
                    ;; Here was a goto statement
                    (local.set $phi9 (local.get $var1))
                    (local.set $phi10 (local.get $var8))
                    (br $If_30_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (local.set $phi11 (local.get $phi10))
        (local.set $var2 (local.get $phi11))
        (local.set $var3 (struct.get $java$util$HashMap$Node $value (ref.cast (ref null $java$util$HashMap$Node) (local.get $var0))))
        ;; startBlock type=NORMAL, label = If_14_0
        (block $If_14_0
            ;; writeIfAndStartTrueBlock
            (if $if1 (ref.is_null (local.get $var3))
                (then
                    (local.set $phi5 (local.get $var3))
                    (local.set $phi6 (i32.const 0))
                    (br $If_14_0)
                    ;; Start else
                    )(else
                    (local.set $var4 (call_indirect (type $t555) (local.get $var3) (call_ref $t0 (i32.const 2) (struct.get $java$lang$Object $vt_resolver (local.get $var3)))))
                    ;; Here was a goto statement
                    (local.set $phi5 (local.get $var3))
                    (local.set $phi6 (local.get $var4))
                    (br $If_14_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (local.set $phi7 (local.get $phi6))
        (return (i32.xor (local.get $var2) (local.get $phi7)))
        (unreachable))
    (func $java$util$HashMap$Node$Ljava$lang$Object$$getKey$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (return (struct.get $java$util$HashMap$Node $key (ref.cast (ref null $java$util$HashMap$Node) (local.get $thisref))))
        (unreachable))
    (func $java$util$HashMap$Node$Ljava$lang$Object$$getValue$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (return (struct.get $java$util$HashMap$Node $value (ref.cast (ref null $java$util$HashMap$Node) (local.get $thisref))))
        (unreachable))
    (func $java$lang$StringBuilder$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (call $java$lang$StringBuilder$V$initializeWith$I (local.get $thisref) (i32.const 10))
        (return)
        (unreachable))
    (func $java$lang$StringBuilder$V$$init$$I (type $t575) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32)
        (call $java$lang$StringBuilder$V$initializeWith$I (local.get $thisref) (local.get $arg0))
        (return)
        (unreachable))
    (func $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$I (type $t565) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (drop (call $java$lang$Integer_i))
        (drop (call $java$lang$Integer_i))
        (local.set $phi2 (call $java$lang$Integer$Ljava$lang$String$$toString$I$I (call $java$lang$Integer_i) (local.get $arg0) (i32.const 10)))
        (local.set $var1 (local.get $phi2))
        (return (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var0) (local.get $var1)))
        (unreachable))
    (func $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$F (type $t568) (param $thisref (ref null $java$lang$Object)) (param $arg0 f32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (drop (call $java$lang$Float_i))
        (local.set $var1 (call $java$lang$Float$Ljava$lang$String$$toString$F (call $java$lang$Float_i) (local.get $arg0)))
        (return (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var0) (local.get $var1)))
        (unreachable))
    (func $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$Object$ (type $t559) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (ref.is_null (local.get $arg0))
            (then
                (return (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var0) (global.get $stringpool_0)))
                ;; Start else
                )(else
                (local.set $var1 (call_indirect (type $t553) (local.get $arg0) (call_ref $t0 (i32.const 0) (struct.get $java$lang$Object $vt_resolver (local.get $arg0)))))
                (return (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var0) (local.get $var1)))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$C (type $t565) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (call $java$lang$Character$Ljava$lang$String$$toString$C (global.get $java$lang$Character_cls) (local.get $arg0)))
        (return (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var0) (local.get $var1)))
        (unreachable))
    (func $java$util$AbstractMap$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$util$AbstractMap$Ljava$lang$String$$toString$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $phi5 (ref null $java$lang$Object))
        (local $phi6 (ref null $java$lang$Object))
        (local $phi7 (ref null $java$lang$Object))
        (local $var8 (ref null $java$lang$Object))
        (local $var9 (ref null $java$lang$Object))
        (local $var10 (ref null $java$lang$Object))
        (local $var11 (ref null $java$lang$Object))
        (local $var12 (ref null $java$lang$Object))
        (local $phi13 (ref null $java$lang$Object))
        (local $phi14 (ref null $java$lang$Object))
        (local $phi15 (ref null $java$lang$Object))
        (local $phi16 (ref null $java$lang$Object))
        (local $phi17 (ref null $java$lang$Object))
        (local $var18 (ref null $java$lang$Object))
        (local $var19 (ref null $java$lang$Object))
        (local $var20 (ref null $java$lang$Object))
        (local $var21 (ref null $java$lang$Object))
        (local $phi22 (ref null $java$lang$Object))
        (local $phi23 (ref null $java$lang$Object))
        (local $var24 (ref null $java$lang$Object))
        (local $var25 (ref null $java$lang$Object))
        (local $var26 (ref null $java$lang$Object))
        (local $var27 (ref null $java$lang$Object))
        (local $var28 (ref null $java$lang$Object))
        (local $var29 (ref null $java$lang$Object))
        (local $var30 (ref null $java$lang$Object))
        (local $var31 (ref null $java$lang$Object))
        (local $var32 (ref null $java$lang$Object))
        (local $phi33 (ref null $java$lang$Object))
        (local $var34 (ref null $java$lang$Object))
        (local $phi35 (ref null $java$lang$Object))
        (local $var36 (ref null $java$lang$Object))
        (local $phi37 (ref null $java$lang$Object))
        (local $var38 (ref null $java$lang$Object))
        (local $var39 (ref null $java$lang$Object))
        (local $phi40 (ref null $java$lang$Object))
        (local $var41 (ref null $java$lang$Object))
        (local $phi42 (ref null $java$lang$Object))
        (local $var43 (ref null $java$lang$Object))
        (local $var44 (ref null $java$lang$Object))
        (local $phi45 (ref null $java$lang$Object))
        (local $var46 (ref null $java$lang$Object))
        (local $phi47 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (call_indirect (type $t553) (local.get $var0) (call_ref $t0 (i32.const 125) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
        (local.set $var2 (call_indirect (type $t553) (local.get $var1) (call_ref $t0 (i32.const 146) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var1))))))
        ;; writeIfAndStartTrueBlock
        (if $if0 (i32.ne (call_indirect (type $t555) (local.get $var2) (call_ref $t0 (i32.const 48) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var2))))) (i32.const 0))
            (then
                (local.set $var3 (struct.new $java$lang$StringBuilder (struct.get $java$lang$StringBuilder_rtt $factoryFor (global.get $java$lang$StringBuilder_cls)) (ref.func $java$lang$StringBuilder_vt) (ref.null noextern) (struct.get $java$lang$StringBuilder_rtt $classImplTypes (global.get $java$lang$StringBuilder_cls))))
                (call $java$lang$StringBuilder$V$initializeWith$I (local.get $var3) (i32.const 10))
                (local.set $var46 (call $java$lang$Character$Ljava$lang$String$$toString$C (global.get $java$lang$Character_cls) (i32.const 123)))
                (local.set $phi47 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var3) (local.get $var46)))
                (local.set $var4 (local.get $phi47))
                (local.set $phi5 (local.get $var0))
                (local.set $phi6 (local.get $var2))
                (local.set $phi7 (local.get $var3))
                ;; startBlock type=LOOP, label = L1530308621
                (loop $L1530308621
                    (local.set $var8 (local.get $phi6))
                    (local.set $var9 (ref.cast (ref null $java$lang$Object) (call_indirect (type $t553) (local.get $var8) (call_ref $t0 (i32.const 80) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var8)))))))
                    (local.set $var10 (call_indirect (type $t553) (local.get $var9) (call_ref $t0 (i32.const 92) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var9))))))
                    (local.set $var11 (call_indirect (type $t553) (local.get $var9) (call_ref $t0 (i32.const 93) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var9))))))
                    (local.set $var12 (local.get $phi7))
                    ;; startBlock type=NORMAL, label = If_41_0
                    (block $If_41_0
                        ;; writeIfAndStartTrueBlock
                        (if $if1 (select (i32.const 0) (i32.const 1) (ref.eq (local.get $var10) (local.get $phi5)))
                            (then
                                (local.set $phi13 (local.get $var9))
                                (local.set $phi14 (local.get $var10))
                                (local.set $phi15 (local.get $var11))
                                (local.set $phi16 (local.get $var12))
                                (local.set $phi17 (local.get $var10))
                                (br $If_41_0)
                                ;; Start else
                                )(else
                                ;; Here was a goto statement
                                (local.set $phi13 (local.get $var9))
                                (local.set $phi14 (local.get $var10))
                                (local.set $phi15 (local.get $var11))
                                (local.set $phi16 (local.get $var12))
                                (local.set $phi17 (global.get $stringpool_101))
                                (br $If_41_0)
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    (local.set $var43 (local.get $phi16))
                    ;; startBlock type=NORMAL, label = If_152_0
                    (block $If_152_0
                        ;; writeIfAndStartTrueBlock
                        (if $if2 (ref.is_null (local.get $phi17))
                            (then
                                (local.set $phi45 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var43) (global.get $stringpool_0)))
                                (br $If_152_0)
                                ;; Start else
                                )(else
                                (local.set $var44 (call_indirect (type $t553) (local.get $phi17) (call_ref $t0 (i32.const 0) (struct.get $java$lang$Object $vt_resolver (local.get $phi17)))))
                                (local.set $phi45 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var43) (local.get $var44)))
                                (br $If_152_0)
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    (local.set $var18 (local.get $phi45))
                    (local.set $var19 (local.get $phi7))
                    (local.set $var41 (call $java$lang$Character$Ljava$lang$String$$toString$C (global.get $java$lang$Character_cls) (i32.const 61)))
                    (local.set $phi42 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var19) (local.get $var41)))
                    (local.set $var20 (local.get $phi42))
                    (local.set $var21 (local.get $phi7))
                    ;; startBlock type=NORMAL, label = If_60_0
                    (block $If_60_0
                        ;; writeIfAndStartTrueBlock
                        (if $if3 (select (i32.const 0) (i32.const 1) (ref.eq (local.get $phi15) (local.get $phi5)))
                            (then
                                (local.set $var31 (local.get $phi15))
                                (local.set $phi22 (local.get $var21))
                                (local.set $phi23 (local.get $var31))
                                (br $If_60_0)
                                ;; Start else
                                )(else
                                ;; Here was a goto statement
                                (local.set $phi22 (local.get $var21))
                                (local.set $phi23 (global.get $stringpool_101))
                                (br $If_60_0)
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    (local.set $var38 (local.get $phi22))
                    ;; startBlock type=NORMAL, label = If_133_0
                    (block $If_133_0
                        ;; writeIfAndStartTrueBlock
                        (if $if4 (ref.is_null (local.get $phi23))
                            (then
                                (local.set $phi40 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var38) (global.get $stringpool_0)))
                                (br $If_133_0)
                                ;; Start else
                                )(else
                                (local.set $var39 (call_indirect (type $t553) (local.get $phi23) (call_ref $t0 (i32.const 0) (struct.get $java$lang$Object $vt_resolver (local.get $phi23)))))
                                (local.set $phi40 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var38) (local.get $var39)))
                                (br $If_133_0)
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    (local.set $var24 (local.get $phi40))
                    (local.set $var25 (local.get $phi6))
                    ;; writeIfAndStartTrueBlock
                    (if $if5 (i32.ne (call_indirect (type $t555) (local.get $var25) (call_ref $t0 (i32.const 48) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var25))))) (i32.const 0))
                        (then
                            (local.set $var28 (local.get $phi7))
                            (local.set $var34 (call $java$lang$Character$Ljava$lang$String$$toString$C (global.get $java$lang$Character_cls) (i32.const 44)))
                            (local.set $phi35 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var28) (local.get $var34)))
                            (local.set $var29 (local.get $phi35))
                            (local.set $var32 (call $java$lang$Character$Ljava$lang$String$$toString$C (global.get $java$lang$Character_cls) (i32.const 32)))
                            (local.set $phi33 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var29) (local.get $var32)))
                            (local.set $var30 (local.get $phi33))
                            ;; Here was a goto statement
                            (br $L1530308621)
                            ;; Start else
                            )(else
                            (local.set $var26 (local.get $phi7))
                            (local.set $var36 (call $java$lang$Character$Ljava$lang$String$$toString$C (global.get $java$lang$Character_cls) (i32.const 125)))
                            (local.set $phi37 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var26) (local.get $var36)))
                            (local.set $var27 (local.get $phi37))
                            (return (call $java$lang$StringBuilder$Ljava$lang$String$$toString$$ (local.get $var27)))
                            ))
                    ;; finishIfBlock
                    )
                ;; finishBlock
                ;; Start else
                )(else
                (return (global.get $stringpool_100))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$util$AbstractMap$Z$equals$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 i32)
        (local $phi3 (ref null $java$lang$Object))
        (local $phi4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $var6 (ref null $java$lang$Object))
        (local $phi7 (ref null $java$lang$Object))
        (local $var8 (ref null $java$lang$Object))
        (local $var9 (ref null $java$lang$Object))
        (local $var10 (ref null $java$lang$Object))
        (local $var11 (ref null $java$lang$Object))
        (local $var12 (ref null $java$lang$Object))
        (local $var13 (ref null $java$lang$Object))
        (local $var14 (ref null $java$lang$Object))
        (local $phi15 (ref null $java$lang$Object))
        (local $phi16 (ref null $java$lang$Object))
        (local $phi17 (ref null $java$lang$Object))
        (local $phi18 (ref null $java$lang$Object))
        (local $phi19 (ref null $java$lang$Object))
        (local $phi20 (ref null $java$lang$Object))
        (local $phi21 (ref null $java$lang$Object))
        (local $phi22 (ref null $java$lang$Object))
        (local $phi23 (ref null $java$lang$Object))
        (local $var24 (ref null $java$lang$Object))
        (local $var25 (ref null $java$lang$Object))
        (local $var26 (ref null $java$lang$Object))
        (local $var27 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.eq (local.get $arg0) (local.get $var0)))
            (then
                ;; writeIfAndStartTrueBlock
                (if $if1 (i32.eq (call $instanceOf (local.get $arg0) (i32.const 15)) (i32.const 0))
                    (then
                        (return (i32.const 0))
                        ;; Start else
                        )(else
                        (local.set $var1 (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
                        ;; Here was a goto statement
                        (local.set $var2 (call_indirect (type $t555) (local.get $var1) (call_ref $t0 (i32.const 100) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var1))))))
                        ;; writeIfAndStartTrueBlock
                        (if $if2 (i32.eq (local.get $var2) (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 100) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
                            (then
                                (local.set $phi3 (local.get $var0))
                                (local.set $phi4 (local.get $var1))
                                ;; startBlock type=NORMAL, label = TryCatch_28_0
                                (block $TryCatch_28_0
                                    ;; startBlock type=NORMAL, label = TryCatch_28_1
                                    (block $TryCatch_28_1
                                        ;; startTryCatch
                                        (try $trycatch_0 (do
                                                (local.set $var5 (local.get $phi3))
                                                (local.set $var6 (call_indirect (type $t553) (local.get $var5) (call_ref $t0 (i32.const 125) (struct.get $java$lang$Object $vt_resolver (local.get $var5)))))
                                                (local.set $phi7 (call_indirect (type $t553) (local.get $var6) (call_ref $t0 (i32.const 146) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var6))))))
                                                ;; startBlock type=LOOP, label = L1414797244
                                                (loop $L1414797244
                                                    (local.set $var8 (local.get $phi7))
                                                    ;; writeIfAndStartTrueBlock
                                                    (if $if3 (i32.eq (call_indirect (type $t555) (local.get $var8) (call_ref $t0 (i32.const 48) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var8))))) (i32.const 0))
                                                        (then
                                                            ;; Here was a goto statement
                                                            (return (i32.const 1))
                                                            ;; Start else
                                                            )(else
                                                            (local.set $var9 (local.get $phi7))
                                                            (local.set $var10 (ref.cast (ref null $java$lang$Object) (call_indirect (type $t553) (local.get $var9) (call_ref $t0 (i32.const 80) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var9)))))))
                                                            (local.set $var11 (call_indirect (type $t553) (local.get $var10) (call_ref $t0 (i32.const 92) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var10))))))
                                                            (local.set $var12 (call_indirect (type $t553) (local.get $var10) (call_ref $t0 (i32.const 93) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var10))))))
                                                            ;; startBlock type=NORMAL, label = If_58_0
                                                            (block $If_58_0
                                                                ;; writeIfAndStartTrueBlock
                                                                (if $if4 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var12)))
                                                                    (then
                                                                        (local.set $phi21 (local.get $var10))
                                                                        (local.set $phi22 (local.get $var11))
                                                                        (local.set $phi23 (local.get $var12))
                                                                        ;; startBlock type=NORMAL, label = TryCatch_86_0
                                                                        (block $TryCatch_86_0
                                                                            ;; startTryCatch
                                                                            (try $trycatch_1 (do
                                                                                    (local.set $var24 (local.get $phi23))
                                                                                    (local.set $var25 (local.get $phi4))
                                                                                    (local.set $var26 (local.get $phi22))
                                                                                    (local.set $var27 (call_indirect (type $t559) (local.get $var25) (local.get $var26) (call_ref $t0 (i32.const 123) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var25))))))
                                                                                    ;; writeIfAndStartTrueBlock
                                                                                    (if $if5 (i32.ne (call_indirect (type $t554) (local.get $var24) (local.get $var27) (call_ref $t0 (i32.const 1) (struct.get $java$lang$Object $vt_resolver (local.get $var24)))) (i32.const 0))
                                                                                        (then
                                                                                            (local.set $phi18 (local.get $phi21))
                                                                                            (local.set $phi19 (local.get $phi22))
                                                                                            (local.set $phi20 (local.get $phi23))
                                                                                            (br $If_58_0)
                                                                                            ;; Start else
                                                                                            )(else
                                                                                            (br $TryCatch_86_0)
                                                                                            ))
                                                                                    ;; finishIfBlock
                                                                                    )
                                                                                (catch $javaexception
                                                                                    ;; startCatchBlock
                                                                                    (global.set $lastcaughtexception (pop (ref null $java$lang$Object)))
                                                                                    (if $catchcheck_0 (call $instanceOf (global.get $lastcaughtexception) (struct.get $java$lang$ClassCastException_rtt $factoryFor (global.get $java$lang$ClassCastException_cls)))
                                                                                        (then
                                                                                            (return (i32.const 0))
                                                                                            ))
                                                                                    (if $catchcheck_1 (call $instanceOf (global.get $lastcaughtexception) (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)))
                                                                                        (then
                                                                                            (return (i32.const 0))
                                                                                            ))
                                                                                    (rethrow $trycatch_1)
                                                                                    )
                                                                                )
                                                                            ;; finishTryCatch
                                                                            )
                                                                        ;; finishBlock
                                                                        (return (i32.const 0))
                                                                        ;; Start else
                                                                        )(else
                                                                        (local.set $var13 (local.get $phi4))
                                                                        ;; startBlock type=NORMAL, label = If_63_0
                                                                        (block $If_63_0
                                                                            ;; writeIfAndStartTrueBlock
                                                                            (if $if6 (select (i32.const 0) (i32.const 1) (ref.is_null (call_indirect (type $t559) (local.get $var13) (local.get $var11) (call_ref $t0 (i32.const 123) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var13)))))))
                                                                                (then
                                                                                    (local.set $phi15 (local.get $var10))
                                                                                    (local.set $phi16 (local.get $var11))
                                                                                    (local.set $phi17 (local.get $var12))
                                                                                    (br $If_63_0)
                                                                                    ;; Start else
                                                                                    )(else
                                                                                    (local.set $var14 (local.get $phi4))
                                                                                    ;; writeIfAndStartTrueBlock
                                                                                    (if $if7 (i32.ne (call_indirect (type $t554) (local.get $var14) (local.get $var11) (call_ref $t0 (i32.const 124) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var14))))) (i32.const 0))
                                                                                        (then
                                                                                            (local.set $phi18 (local.get $var10))
                                                                                            (local.set $phi19 (local.get $var11))
                                                                                            (local.set $phi20 (local.get $var12))
                                                                                            (br $If_58_0)
                                                                                            ;; Start else
                                                                                            )(else
                                                                                            (local.set $phi15 (local.get $var10))
                                                                                            (local.set $phi16 (local.get $var11))
                                                                                            (local.set $phi17 (local.get $var12))
                                                                                            (br $If_63_0)
                                                                                            ))
                                                                                    ;; finishIfBlock
                                                                                    ))
                                                                            ;; finishIfBlock
                                                                            )
                                                                        ;; finishBlock
                                                                        (br $TryCatch_28_1)
                                                                        ))
                                                                ;; finishIfBlock
                                                                )
                                                            ;; finishBlock
                                                            ;; startTryCatch
                                                            (try $trycatch_2 (do
                                                                    ;; Here was a goto statement
                                                                    (br $L1414797244)
                                                                    )
                                                                (catch $javaexception
                                                                    ;; startCatchBlock
                                                                    (global.set $lastcaughtexception (pop (ref null $java$lang$Object)))
                                                                    (if $catchcheck_2 (call $instanceOf (global.get $lastcaughtexception) (struct.get $java$lang$ClassCastException_rtt $factoryFor (global.get $java$lang$ClassCastException_cls)))
                                                                        (then
                                                                            (return (i32.const 0))
                                                                            ))
                                                                    (if $catchcheck_3 (call $instanceOf (global.get $lastcaughtexception) (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)))
                                                                        (then
                                                                            (return (i32.const 0))
                                                                            ))
                                                                    (rethrow $trycatch_2)
                                                                    )
                                                                )
                                                            ;; finishTryCatch
                                                            ))
                                                    ;; finishIfBlock
                                                    )
                                                ;; finishBlock
                                                )
                                            (catch $javaexception
                                                ;; startCatchBlock
                                                (global.set $lastcaughtexception (pop (ref null $java$lang$Object)))
                                                (if $catchcheck_4 (call $instanceOf (global.get $lastcaughtexception) (struct.get $java$lang$ClassCastException_rtt $factoryFor (global.get $java$lang$ClassCastException_cls)))
                                                    (then
                                                        (return (i32.const 0))
                                                        ))
                                                (if $catchcheck_5 (call $instanceOf (global.get $lastcaughtexception) (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)))
                                                    (then
                                                        (return (i32.const 0))
                                                        ))
                                                (rethrow $trycatch_0)
                                                )
                                            )
                                        ;; finishTryCatch
                                        )
                                    ;; finishBlock
                                    (return (i32.const 0))
                                    )
                                ;; finishBlock
                                (return (i32.const 0))
                                ;; Start else
                                )(else
                                (return (i32.const 0))
                                ))
                        ;; finishIfBlock
                        ))
                ;; finishIfBlock
                ;; Start else
                )(else
                (return (i32.const 1))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$util$AbstractMap$I$size$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (call_indirect (type $t553) (local.get $var0) (call_ref $t0 (i32.const 125) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
        (return (call_indirect (type $t555) (local.get $var1) (call_ref $t0 (i32.const 100) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var1))))))
        (unreachable))
    (func $java$util$AbstractMap$I$hashCode$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $phi3 i32)
        (local $phi4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $var6 (ref null $java$lang$Object))
        (local $var7 (ref null $java$lang$Object))
        (local $var8 i32)
        (local $var9 i32)
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (call_indirect (type $t553) (local.get $var0) (call_ref $t0 (i32.const 125) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
        (local.set $var2 (call_indirect (type $t553) (local.get $var1) (call_ref $t0 (i32.const 146) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var1))))))
        (local.set $phi3 (i32.const 0))
        (local.set $phi4 (local.get $var2))
        ;; startBlock type=LOOP, label = L2125995679
        (loop $L2125995679
            (local.set $var5 (local.get $phi4))
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.eq (call_indirect (type $t555) (local.get $var5) (call_ref $t0 (i32.const 48) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var5))))) (i32.const 0))
                (then
                    (return (local.get $phi3))
                    ;; Start else
                    )(else
                    (local.set $var6 (local.get $phi4))
                    (local.set $var7 (ref.cast (ref null $java$lang$Object) (call_indirect (type $t553) (local.get $var6) (call_ref $t0 (i32.const 80) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var6)))))))
                    (local.set $var8 (local.get $phi3))
                    (local.set $var9 (i32.add (local.get $var8) (call_indirect (type $t555) (local.get $var7) (call_ref $t0 (i32.const 2) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var7)))))))
                    ;; Here was a goto statement
                    (local.set $phi3 (local.get $var9))
                    (br $L2125995679)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (unreachable))
    (func $java$util$AbstractMap$Ljava$lang$Object$$put$Ljava$lang$Object$$Ljava$lang$Object$ (type $t561) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (struct.new $java$lang$UnsupportedOperationException (struct.get $java$lang$UnsupportedOperationException_rtt $factoryFor (global.get $java$lang$UnsupportedOperationException_cls)) (ref.func $java$lang$UnsupportedOperationException_vt) (ref.null noextern) (struct.get $java$lang$UnsupportedOperationException_rtt $classImplTypes (global.get $java$lang$UnsupportedOperationException_cls)) (ref.null none) (ref.null none)))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (throw $javaexception (local.get $var0))
        (unreachable))
    (func $de$mirkosertic$bytecoder$api$vue$VueData$V$setProperty$Ljava$lang$String$$Ljava$lang$String$ (type $t560) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object))
        (call $de$mirkosertic$bytecoder$api$vue$VueData$V$setProperty$Ljava$lang$String$$Ljava$lang$String$_delegate (struct.get $java$lang$Object $nativeObject (local.get $thisref)) (struct.get $java$lang$Object $nativeObject (local.get $arg0)) (struct.get $java$lang$Object $nativeObject (local.get $arg1)))
        )
    (func $java$lang$Number$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$lang$Number$S$shortValue$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (return (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 131) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
        (unreachable))
    (func $java$lang$Number$B$byteValue$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (return (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 131) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
        (unreachable))
    (func $java$util$Collections$EmptyIterator$V$$clinit$$$ (type $t541) (param $unused (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (drop (call $java$util$Collections$EmptyIterator_i))
        (local.set $var0 (struct.new $java$util$Collections$EmptyIterator (struct.get $java$util$Collections$EmptyIterator_rtt $factoryFor (global.get $java$util$Collections$EmptyIterator_cls)) (ref.func $java$util$Collections$EmptyIterator_vt) (ref.null noextern) (struct.get $java$util$Collections$EmptyIterator_rtt $classImplTypes (global.get $java$util$Collections$EmptyIterator_cls))))
        (drop (call $java$util$Collections$EmptyIterator_i))
        (struct.set $java$util$Collections$EmptyIterator_rtt $EMPTY_ITERATOR (ref.cast (ref null $java$util$Collections$EmptyIterator_rtt) (call $java$util$Collections$EmptyIterator_i)) (ref.cast (ref null $java$lang$Object) (local.get $var0)))
        (return)
        (unreachable))
    (func $java$util$Collections$EmptyIterator$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$util$Collections$EmptyIterator$Z$hasNext$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (return (i32.const 0))
        (unreachable))
    (func $java$util$Collections$EmptyIterator$Ljava$lang$Object$$next$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (struct.new $java$util$NoSuchElementException (struct.get $java$util$NoSuchElementException_rtt $factoryFor (global.get $java$util$NoSuchElementException_cls)) (ref.func $java$util$NoSuchElementException_vt) (ref.null noextern) (struct.get $java$util$NoSuchElementException_rtt $classImplTypes (global.get $java$util$NoSuchElementException_cls)) (ref.null none) (ref.null none)))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (throw $javaexception (local.get $var0))
        (unreachable))
    (func $java$util$Hashtable$V$$init$$Ljava$lang$Void$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$util$Hashtable $modCount (ref.cast (ref null $java$util$Hashtable) (local.get $var0)) (i32.const 0))
        (return)
        (unreachable))
    (func $java$util$ImmutableCollections$SetN$SetNIterator$V$$init$$Ljava$util$ImmutableCollections$SetN$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$util$ImmutableCollections$SetN$SetNIterator $this$0 (ref.cast (ref null $java$util$ImmutableCollections$SetN$SetNIterator) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (struct.set $java$util$ImmutableCollections$SetN$SetNIterator $remaining (ref.cast (ref null $java$util$ImmutableCollections$SetN$SetNIterator) (local.get $var0)) (struct.get $java$util$ImmutableCollections$SetN $size (ref.cast (ref null $java$util$ImmutableCollections$SetN) (local.get $arg0))))
        (drop (call $java$util$ImmutableCollections_i))
        (struct.set $java$util$ImmutableCollections$SetN$SetNIterator $idx (ref.cast (ref null $java$util$ImmutableCollections$SetN$SetNIterator) (local.get $var0)) (i32.wrap_i64 (i64.shr_u (i64.mul (struct.get $java$util$ImmutableCollections_rtt $SALT32L (global.get $java$util$ImmutableCollections_cls)) (i64.extend_i32_s (array.len $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (struct.get $java$util$ImmutableCollections$SetN $elements (ref.cast (ref null $java$util$ImmutableCollections$SetN) (local.get $arg0)))))))) (i64.extend_i32_s (i32.const 32)))))
        (return)
        (unreachable))
    (func $java$util$ImmutableCollections$SetN$SetNIterator$Z$hasNext$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 i32)
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = If_5_0
        (block $If_5_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.le_s (struct.get $java$util$ImmutableCollections$SetN$SetNIterator $remaining (ref.cast (ref null $java$util$ImmutableCollections$SetN$SetNIterator) (local.get $var0))) (i32.const 0))
                (then
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (i32.const 0))
                    (br $If_5_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (i32.const 1))
                    (br $If_5_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi2))
        (unreachable))
    (func $java$util$ImmutableCollections$SetN$SetNIterator$Ljava$lang$Object$$next$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 i32)
        (local $var2 i32)
        (local $phi3 (ref null $java$lang$Object))
        (local $phi4 i32)
        (local $phi5 i32)
        (local $phi6 i32)
        (local $var7 (ref null $java$lang$Object))
        (local $var8 (ref null $java$lang$Object))
        (local $var9 (ref null $java$lang$Object))
        (local $var10 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (i32.le_s (struct.get $java$util$ImmutableCollections$SetN$SetNIterator $remaining (ref.cast (ref null $java$util$ImmutableCollections$SetN$SetNIterator) (local.get $var0))) (i32.const 0))
            (then
                (local.set $var10 (struct.new $java$util$NoSuchElementException (struct.get $java$util$NoSuchElementException_rtt $factoryFor (global.get $java$util$NoSuchElementException_cls)) (ref.func $java$util$NoSuchElementException_vt) (ref.null noextern) (struct.get $java$util$NoSuchElementException_rtt $classImplTypes (global.get $java$util$NoSuchElementException_cls)) (ref.null none) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var10)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var10)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var10))
                ;; Start else
                )(else
                (local.set $var1 (struct.get $java$util$ImmutableCollections$SetN$SetNIterator $idx (ref.cast (ref null $java$util$ImmutableCollections$SetN$SetNIterator) (local.get $var0))))
                (local.set $var2 (array.len $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (struct.get $java$util$ImmutableCollections$SetN $elements (ref.cast (ref null $java$util$ImmutableCollections$SetN) (struct.get $java$util$ImmutableCollections$SetN$SetNIterator $this$0 (ref.cast (ref null $java$util$ImmutableCollections$SetN$SetNIterator) (local.get $var0)))))))))
                (local.set $phi3 (local.get $var0))
                (local.set $phi4 (local.get $var1))
                (local.set $phi5 (local.get $var2))
                ;; startBlock type=LOOP, label = L606656447
                (loop $L606656447
                    (drop (call $java$util$ImmutableCollections_i))
                    ;; startBlock type=NORMAL, label = If_23_0
                    (block $If_23_0
                        ;; writeIfAndStartTrueBlock
                        (if $if1 (i32.eq (struct.get $java$util$ImmutableCollections_rtt $REVERSE (global.get $java$util$ImmutableCollections_cls)) (i32.const 0))
                            (then
                                (local.set $phi4 (i32.add (local.get $phi4) (i32.const -1)))
                                ;; writeIfAndStartTrueBlock
                                (if $if2 (i32.ge_s (local.get $phi4) (i32.const 0))
                                    (then
                                        (local.set $phi6 (local.get $phi4))
                                        (br $If_23_0)
                                        ;; Start else
                                        )(else
                                        (local.set $phi6 (i32.sub (local.get $phi5) (i32.const 1)))
                                        (br $If_23_0)
                                        ))
                                ;; finishIfBlock
                                ;; Start else
                                )(else
                                (local.set $phi4 (i32.add (local.get $phi4) (i32.const 1)))
                                ;; writeIfAndStartTrueBlock
                                (if $if3 (i32.lt_s (local.get $phi4) (local.get $phi5))
                                    (then
                                        (local.set $phi6 (local.get $phi4))
                                        (br $If_23_0)
                                        ;; Start else
                                        )(else
                                        ;; Here was a goto statement
                                        (local.set $phi6 (i32.const 0))
                                        (br $If_23_0)
                                        ))
                                ;; finishIfBlock
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    (local.set $var7 (array.get $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (struct.get $java$util$ImmutableCollections$SetN $elements (ref.cast (ref null $java$util$ImmutableCollections$SetN) (struct.get $java$util$ImmutableCollections$SetN$SetNIterator $this$0 (ref.cast (ref null $java$util$ImmutableCollections$SetN$SetNIterator) (local.get $phi3))))))) (local.get $phi6)))
                    ;; writeIfAndStartTrueBlock
                    (if $if4 (ref.is_null (local.get $var7))
                        (then
                            (local.set $phi4 (local.get $phi6))
                            (br $L606656447)
                            ;; Start else
                            )(else
                            (local.set $var8 (local.get $phi3))
                            (struct.set $java$util$ImmutableCollections$SetN$SetNIterator $idx (ref.cast (ref null $java$util$ImmutableCollections$SetN$SetNIterator) (local.get $var8)) (local.get $phi6))
                            (local.set $var9 (local.get $phi3))
                            (struct.set $java$util$ImmutableCollections$SetN$SetNIterator $remaining (ref.cast (ref null $java$util$ImmutableCollections$SetN$SetNIterator) (local.get $var9)) (i32.sub (struct.get $java$util$ImmutableCollections$SetN$SetNIterator $remaining (ref.cast (ref null $java$util$ImmutableCollections$SetN$SetNIterator) (local.get $var9))) (i32.const 1)))
                            (return (local.get $var7))
                            ))
                    ;; finishIfBlock
                    )
                ;; finishBlock
                ))
        ;; finishIfBlock
        (unreachable))
    (func $de$mirkosertic$bytecoder$classlib$VM$1$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$lang$ref$WeakReference$V$$init$$Ljava$lang$Object$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $de$mirkosertic$bytecoder$classlib$java$lang$ref$TReference $referent (ref.cast (ref null $de$mirkosertic$bytecoder$classlib$java$lang$ref$TReference) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (return)
        (unreachable))
    (func $jdk$internal$util$Preconditions$4$V$$init$$Ljava$util$function$Function$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $jdk$internal$util$Preconditions$4 $val$f (ref.cast (ref null $jdk$internal$util$Preconditions$4) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (return)
        (unreachable))
    (func $jdk$internal$util$Preconditions$4$Ljava$lang$Object$$apply$Ljava$lang$Object$$Ljava$lang$Object$ (type $t561) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (local.set $var2 (ref.cast (ref null $java$lang$Object) (local.get $arg1)))
        (return (call $jdk$internal$util$Preconditions$4$Ljava$lang$RuntimeException$$apply$Ljava$lang$String$$Ljava$util$List$ (local.get $var0) (local.get $var1) (local.get $var2)))
        (unreachable))
    (func $jdk$internal$util$Preconditions$4$Ljava$lang$RuntimeException$$apply$Ljava$lang$String$$Ljava$util$List$ (type $t561) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (struct.get $jdk$internal$util$Preconditions$4 $val$f (ref.cast (ref null $jdk$internal$util$Preconditions$4) (local.get $thisref))))
        (drop (call $jdk$internal$util$Preconditions_i))
        (local.set $var1 (call $jdk$internal$util$Preconditions$Ljava$lang$String$$outOfBoundsMessage$Ljava$lang$String$$Ljava$util$List$ (call $jdk$internal$util$Preconditions_i) (local.get $arg0) (local.get $arg1)))
        (return (ref.cast (ref null $java$lang$Object) (call_indirect (type $t559) (local.get $var0) (local.get $var1) (call_ref $t0 (i32.const 77) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var0)))))))
        (unreachable))
    (func $java$util$KeyValueHolder$V$$init$$Ljava$lang$Object$$Ljava$lang$Object$ (type $t560) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg0)))
            (then
                (struct.set $java$util$KeyValueHolder $key (ref.cast (ref null $java$util$KeyValueHolder) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
                ;; writeIfAndStartTrueBlock
                (if $if1 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg1)))
                    (then
                        (struct.set $java$util$KeyValueHolder $value (ref.cast (ref null $java$util$KeyValueHolder) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg1)))
                        (return)
                        ;; Start else
                        )(else
                        (local.set $var1 (struct.new $java$lang$NullPointerException (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)) (ref.func $java$lang$NullPointerException_vt) (ref.null noextern) (struct.get $java$lang$NullPointerException_rtt $classImplTypes (global.get $java$lang$NullPointerException_cls)) (ref.null none) (ref.null none) (i32.const 0) (ref.null none)))
                        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                        (throw $javaexception (local.get $var1))
                        ))
                ;; finishIfBlock
                ;; Start else
                )(else
                (local.set $var2 (struct.new $java$lang$NullPointerException (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)) (ref.func $java$lang$NullPointerException_vt) (ref.null noextern) (struct.get $java$lang$NullPointerException_rtt $classImplTypes (global.get $java$lang$NullPointerException_cls)) (ref.null none) (ref.null none) (i32.const 0) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var2)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var2)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var2))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$util$KeyValueHolder$Ljava$lang$String$$toString$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $var6 (ref null $java$lang$Object))
        (local $var7 (ref null $java$lang$Object))
        (local $phi8 (ref null $java$lang$Object))
        (local $var9 (ref null $java$lang$Object))
        (local $phi10 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (struct.new $java$lang$StringBuilder (struct.get $java$lang$StringBuilder_rtt $factoryFor (global.get $java$lang$StringBuilder_cls)) (ref.func $java$lang$StringBuilder_vt) (ref.null noextern) (struct.get $java$lang$StringBuilder_rtt $classImplTypes (global.get $java$lang$StringBuilder_cls))))
        (call $java$lang$StringBuilder$V$initializeWith$I (local.get $var1) (i32.const 10))
        (local.set $var2 (struct.get $java$util$KeyValueHolder $key (ref.cast (ref null $java$util$KeyValueHolder) (local.get $var0))))
        ;; startBlock type=NORMAL, label = If_37_0
        (block $If_37_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (ref.is_null (local.get $var2))
                (then
                    (local.set $phi10 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var1) (global.get $stringpool_0)))
                    (br $If_37_0)
                    ;; Start else
                    )(else
                    (local.set $var9 (call_indirect (type $t553) (local.get $var2) (call_ref $t0 (i32.const 0) (struct.get $java$lang$Object $vt_resolver (local.get $var2)))))
                    (local.set $phi10 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var1) (local.get $var9)))
                    (br $If_37_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (local.set $var3 (local.get $phi10))
        (local.set $var4 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var3) (global.get $stringpool_99)))
        (local.set $var5 (struct.get $java$util$KeyValueHolder $value (ref.cast (ref null $java$util$KeyValueHolder) (local.get $var0))))
        ;; startBlock type=NORMAL, label = If_26_0
        (block $If_26_0
            ;; writeIfAndStartTrueBlock
            (if $if1 (ref.is_null (local.get $var5))
                (then
                    (local.set $phi8 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var4) (global.get $stringpool_0)))
                    (br $If_26_0)
                    ;; Start else
                    )(else
                    (local.set $var7 (call_indirect (type $t553) (local.get $var5) (call_ref $t0 (i32.const 0) (struct.get $java$lang$Object $vt_resolver (local.get $var5)))))
                    (local.set $phi8 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var4) (local.get $var7)))
                    (br $If_26_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (local.set $var6 (local.get $phi8))
        (return (call $java$lang$StringBuilder$Ljava$lang$String$$toString$$ (local.get $var6)))
        (unreachable))
    (func $java$util$KeyValueHolder$Z$equals$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $phi6 (ref null $java$lang$Object))
        (local $phi7 (ref null $java$lang$Object))
        (local $phi8 (ref null $java$lang$Object))
        (local $phi9 i32)
        (local $phi10 (ref null $java$lang$Object))
        (local $phi11 (ref null $java$lang$Object))
        (local $phi12 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = If_7_0
        (block $If_7_0
            ;; startBlock type=NORMAL, label = If_7_1
            (block $If_7_1
                ;; writeIfAndStartTrueBlock
                (if $if0 (i32.eq (call $instanceOf (local.get $arg0) (i32.const 57)) (i32.const 0))
                    (then
                        (local.set $phi10 (local.get $var0))
                        (local.set $phi11 (local.get $arg0))
                        (br $If_7_1)
                        ;; Start else
                        )(else
                        (local.set $var1 (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
                        (local.set $var2 (struct.get $java$util$KeyValueHolder $key (ref.cast (ref null $java$util$KeyValueHolder) (local.get $var0))))
                        (local.set $var3 (call_indirect (type $t553) (local.get $var1) (call_ref $t0 (i32.const 92) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var1))))))
                        ;; writeIfAndStartTrueBlock
                        (if $if1 (i32.eq (call_indirect (type $t554) (local.get $var2) (local.get $var3) (call_ref $t0 (i32.const 1) (struct.get $java$lang$Object $vt_resolver (local.get $var2)))) (i32.const 0))
                            (then
                                (local.set $phi10 (local.get $var0))
                                (local.set $phi11 (local.get $arg0))
                                (local.set $phi12 (local.get $var1))
                                (br $If_7_1)
                                ;; Start else
                                )(else
                                (local.set $var4 (struct.get $java$util$KeyValueHolder $value (ref.cast (ref null $java$util$KeyValueHolder) (local.get $var0))))
                                (local.set $var5 (call_indirect (type $t553) (local.get $var1) (call_ref $t0 (i32.const 93) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var1))))))
                                ;; writeIfAndStartTrueBlock
                                (if $if2 (i32.eq (call_indirect (type $t554) (local.get $var4) (local.get $var5) (call_ref $t0 (i32.const 1) (struct.get $java$lang$Object $vt_resolver (local.get $var4)))) (i32.const 0))
                                    (then
                                        (local.set $phi10 (local.get $var0))
                                        (local.set $phi11 (local.get $arg0))
                                        (local.set $phi12 (local.get $var1))
                                        (br $If_7_1)
                                        ;; Start else
                                        )(else
                                        ;; Here was a goto statement
                                        (local.set $phi6 (local.get $var0))
                                        (local.set $phi7 (local.get $arg0))
                                        (local.set $phi8 (local.get $var1))
                                        (local.set $phi9 (i32.const 1))
                                        (br $If_7_0)
                                        ))
                                ;; finishIfBlock
                                ))
                        ;; finishIfBlock
                        ))
                ;; finishIfBlock
                )
            ;; finishBlock
            (local.set $phi6 (local.get $phi10))
            (local.set $phi7 (local.get $phi11))
            (local.set $phi8 (local.get $phi12))
            (local.set $phi9 (i32.const 0))
            (br $If_7_0)
            )
        ;; finishBlock
        (return (local.get $phi9))
        (unreachable))
    (func $java$util$KeyValueHolder$I$hashCode$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 i32)
        (local $var3 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (struct.get $java$util$KeyValueHolder $key (ref.cast (ref null $java$util$KeyValueHolder) (local.get $var0))))
        (local.set $var2 (call_indirect (type $t555) (local.get $var1) (call_ref $t0 (i32.const 2) (struct.get $java$lang$Object $vt_resolver (local.get $var1)))))
        (local.set $var3 (struct.get $java$util$KeyValueHolder $value (ref.cast (ref null $java$util$KeyValueHolder) (local.get $var0))))
        (return (i32.xor (local.get $var2) (call_indirect (type $t555) (local.get $var3) (call_ref $t0 (i32.const 2) (struct.get $java$lang$Object $vt_resolver (local.get $var3))))))
        (unreachable))
    (func $java$util$KeyValueHolder$Ljava$lang$Object$$getKey$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (return (struct.get $java$util$KeyValueHolder $key (ref.cast (ref null $java$util$KeyValueHolder) (local.get $thisref))))
        (unreachable))
    (func $java$util$KeyValueHolder$Ljava$lang$Object$$getValue$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (return (struct.get $java$util$KeyValueHolder $value (ref.cast (ref null $java$util$KeyValueHolder) (local.get $thisref))))
        (unreachable))
    (func $java$lang$Exception$V$$init$$Ljava$lang$String$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return)
        (unreachable))
    (func $java$lang$Exception$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return)
        (unreachable))
    (func $java$lang$Exception$V$$init$$Ljava$lang$Throwable$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (return)
        (unreachable))
    (func $de$mirkosertic$bytecoder$classlib$BytecoderCharsetEncoder$V$$init$$Ljava$nio$charset$Charset$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (struct.new $i32_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t7 (i32.const 1))))
        (array.set $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $var1))) (i32.const 0) (i32.const 63))
        (call $java$nio$charset$CharsetEncoder$V$$init$$Ljava$nio$charset$Charset$$F$F$$B (local.get $var0) (local.get $arg0) (f32.const 1.1) (f32.const 3.0) (local.get $var1))
        (return)
        (unreachable))
    (func $java$nio$Buffer$1$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $jdk$internal$util$Preconditions$3$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $jdk$internal$util$Preconditions$3$Ljava$lang$Object$$apply$Ljava$lang$Object$ (type $t559) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (return (call $jdk$internal$util$Preconditions$3$Ljava$lang$IndexOutOfBoundsException$$apply$Ljava$lang$String$ (local.get $var0) (local.get $var1)))
        (unreachable))
    (func $jdk$internal$util$Preconditions$3$Ljava$lang$IndexOutOfBoundsException$$apply$Ljava$lang$String$ (type $t559) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (struct.new $java$lang$IndexOutOfBoundsException (struct.get $java$lang$IndexOutOfBoundsException_rtt $factoryFor (global.get $java$lang$IndexOutOfBoundsException_cls)) (ref.func $java$lang$IndexOutOfBoundsException_vt) (ref.null noextern) (struct.get $java$lang$IndexOutOfBoundsException_rtt $classImplTypes (global.get $java$lang$IndexOutOfBoundsException_cls)) (ref.null none) (ref.null none)))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return (local.get $var0))
        (unreachable))
    (func $de$mirkosertic$bytecoder$api$vue$VueBuilder$V$bindToTemplateSelector$Ljava$lang$String$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (call $de$mirkosertic$bytecoder$api$vue$VueBuilder$V$bindToTemplateSelector$Ljava$lang$String$_delegate (struct.get $java$lang$Object $nativeObject (local.get $thisref)) (struct.get $java$lang$Object $nativeObject (local.get $arg0)))
        )
    (func $de$mirkosertic$bytecoder$api$vue$VueBuilder$Lde$mirkosertic$bytecoder$api$vue$VueData$$data$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (return (struct.new $de$mirkosertic$bytecoder$api$vue$VueData (struct.get $de$mirkosertic$bytecoder$api$vue$VueData_rtt $factoryFor (global.get $de$mirkosertic$bytecoder$api$vue$VueData_cls)) (ref.func $de$mirkosertic$bytecoder$api$vue$VueData_vt) (call $de$mirkosertic$bytecoder$api$vue$VueBuilder$Lde$mirkosertic$bytecoder$api$vue$VueData$$data$$_delegate (struct.get $java$lang$Object $nativeObject (local.get $thisref))) (struct.get $de$mirkosertic$bytecoder$api$vue$VueData_rtt $classImplTypes (global.get $de$mirkosertic$bytecoder$api$vue$VueData_cls))))
        )
    (func $de$mirkosertic$bytecoder$api$vue$VueBuilder$V$addEventListener$Ljava$lang$String$$Lde$mirkosertic$bytecoder$api$vue$VueEventListener$ (type $t560) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object))
        (call $de$mirkosertic$bytecoder$api$vue$VueBuilder$V$addEventListener$Ljava$lang$String$$Lde$mirkosertic$bytecoder$api$vue$VueEventListener$_delegate (struct.get $java$lang$Object $nativeObject (local.get $thisref)) (struct.get $java$lang$Object $nativeObject (local.get $arg0)) (local.get $arg1))
        )
    (func $de$mirkosertic$bytecoder$api$vue$VueBuilder$Lde$mirkosertic$bytecoder$api$vue$VueInstance$$build$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (return (struct.new $de$mirkosertic$bytecoder$api$vue$VueInstance (struct.get $de$mirkosertic$bytecoder$api$vue$VueInstance_rtt $factoryFor (global.get $de$mirkosertic$bytecoder$api$vue$VueInstance_cls)) (ref.func $de$mirkosertic$bytecoder$api$vue$VueInstance_vt) (call $de$mirkosertic$bytecoder$api$vue$VueBuilder$Lde$mirkosertic$bytecoder$api$vue$VueInstance$$build$$_delegate (struct.get $java$lang$Object $nativeObject (local.get $thisref))) (struct.get $de$mirkosertic$bytecoder$api$vue$VueInstance_rtt $classImplTypes (global.get $de$mirkosertic$bytecoder$api$vue$VueInstance_cls))))
        )
    (func $java$util$concurrent$locks$ReentrantLock$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$nio$ByteBuffer$V$$clinit$$$ (type $t541) (param $unused (ref null $java$lang$Object))
        (local $phi0 i32)
        (local $var1 (ref null $java$lang$Object))
        (local $var2 i64)
        ;; startBlock type=NORMAL, label = If_4_0
        (block $If_4_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ne (call $java$lang$Class$Z$desiredAssertionStatus$$ (call $java$nio$ByteBuffer_i)) (i32.const 0))
                (then
                    (local.set $phi0 (i32.const 0))
                    (br $If_4_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi0 (i32.const 1))
                    (br $If_4_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (drop (call $java$nio$ByteBuffer_i))
        (struct.set $java$nio$ByteBuffer_rtt $$assertionsDisabled (ref.cast (ref null $java$nio$ByteBuffer_rtt) (call $java$nio$ByteBuffer_i)) (local.get $phi0))
        (drop (call $java$nio$ByteBuffer_i))
        (local.set $var1 (struct.get $java$nio$Buffer_rtt $UNSAFE (global.get $java$nio$Buffer_cls)))
        (local.set $var2 (i64.extend_i32_s (i32.const 0)))
        (drop (call $java$nio$ByteBuffer_i))
        (struct.set $java$nio$ByteBuffer_rtt $ARRAY_BASE_OFFSET (ref.cast (ref null $java$nio$ByteBuffer_rtt) (call $java$nio$ByteBuffer_i)) (local.get $var2))
        (return)
        (unreachable))
    (func $java$nio$ByteBuffer$Ljava$nio$ByteBuffer$$wrap$$B (type $t559) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 i32)
        (local.set $var0 (array.len $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $arg0)))))
        (drop (call $java$nio$ByteBuffer_i))
        (return (call $java$nio$ByteBuffer$Ljava$nio$ByteBuffer$$wrap$$B$I$I (call $java$nio$ByteBuffer_i) (local.get $arg0) (i32.const 0) (local.get $var0)))
        (unreachable))
    (func $java$nio$ByteBuffer$Ljava$nio$ByteBuffer$$wrap$$B$I$I (type $t573) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 i32) (param $arg2 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        ;; startBlock type=NORMAL, label = TryCatch_4_0
        (block $TryCatch_4_0
            ;; startTryCatch
            (try $trycatch_0 (do
                    (drop (call $java$nio$HeapByteBuffer_i))
                    (local.set $var1 (struct.new $java$nio$HeapByteBuffer (struct.get $java$nio$HeapByteBuffer_rtt $factoryFor (global.get $java$nio$HeapByteBuffer_cls)) (ref.func $java$nio$HeapByteBuffer_vt) (ref.null noextern) (struct.get $java$nio$HeapByteBuffer_rtt $classImplTypes (global.get $java$nio$HeapByteBuffer_cls)) (i32.const 0) (i32.const 0) (i32.const 0) (ref.null none) (i32.const 0) (i64.const 0) (i32.const 0) (i32.const 0) (ref.null none) (i32.const 0)))
                    (call $java$nio$ByteBuffer$V$$init$$I$I$I$I$$B$I$Ljava$lang$foreign$MemorySegment$ (local.get $var1) (i32.const -1) (local.get $arg1) (i32.add (local.get $arg1) (local.get $arg2)) (array.len $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $arg0)))) (local.get $arg0) (i32.const 0) (ref.null none))
                    (drop (call $java$nio$HeapByteBuffer_i))
                    (struct.set $java$nio$Buffer $address (ref.cast (ref null $java$nio$Buffer) (local.get $var1)) (struct.get $java$nio$HeapByteBuffer_rtt $ARRAY_BASE_OFFSET (global.get $java$nio$HeapByteBuffer_cls)))
                    (br $TryCatch_4_0)
                    )
                (catch $javaexception
                    ;; startCatchBlock
                    (global.set $lastcaughtexception (pop (ref null $java$lang$Object)))
                    (if $catchcheck_0 (call $instanceOf (global.get $lastcaughtexception) (struct.get $java$lang$IllegalArgumentException_rtt $factoryFor (global.get $java$lang$IllegalArgumentException_cls)))
                        (then
                            (local.set $var0 (struct.new $java$lang$IndexOutOfBoundsException (struct.get $java$lang$IndexOutOfBoundsException_rtt $factoryFor (global.get $java$lang$IndexOutOfBoundsException_cls)) (ref.func $java$lang$IndexOutOfBoundsException_vt) (ref.null noextern) (struct.get $java$lang$IndexOutOfBoundsException_rtt $classImplTypes (global.get $java$lang$IndexOutOfBoundsException_cls)) (ref.null none) (ref.null none)))
                            (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                            (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                            (throw $javaexception (local.get $var0))
                            ))
                    (rethrow $trycatch_0)
                    )
                )
            ;; finishTryCatch
            )
        ;; finishBlock
        (return (local.get $var1))
        (unreachable))
    (func $java$nio$ByteBuffer$V$$init$$I$I$I$I$$B$I$Ljava$lang$foreign$MemorySegment$ (type $t594) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (param $arg1 i32) (param $arg2 i32) (param $arg3 i32) (param $arg4 (ref null $java$lang$Object)) (param $arg5 i32) (param $arg6 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 i32)
        (local $phi3 i32)
        (local $phi4 i32)
        (local $phi5 i32)
        (local $phi6 (ref null $java$lang$Object))
        (local $phi7 i32)
        (local $phi8 (ref null $java$lang$Object))
        (local $phi9 (ref null $java$lang$Object))
        (local $phi10 i32)
        (local $var11 (ref null $java$lang$Object))
        (local $var12 (ref null $java$lang$Object))
        (local $phi13 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (call $java$nio$Buffer$V$$init$$I$I$I$I$Ljava$lang$foreign$MemorySegment$ (local.get $var0) (local.get $arg0) (local.get $arg1) (local.get $arg2) (local.get $arg3) (local.get $arg6))
        (struct.set $java$nio$ByteBuffer $bigEndian (ref.cast (ref null $java$nio$ByteBuffer) (local.get $var0)) (i32.const 1))
        (drop (call $java$nio$ByteOrder_i))
        (drop (call $java$nio$ByteOrder_i))
        (local.set $phi13 (struct.get $java$nio$ByteOrder_rtt $NATIVE_ORDER (global.get $java$nio$ByteOrder_cls)))
        ;; startBlock type=NORMAL, label = If_17_0
        (block $If_17_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (select (i32.const 0) (i32.const 1) (ref.eq (local.get $phi13) (struct.get $java$nio$ByteOrder_rtt $BIG_ENDIAN (global.get $java$nio$ByteOrder_cls))))
                (then
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (local.get $arg0))
                    (local.set $phi3 (local.get $arg1))
                    (local.set $phi4 (local.get $arg2))
                    (local.set $phi5 (local.get $arg3))
                    (local.set $phi6 (local.get $arg4))
                    (local.set $phi7 (local.get $arg5))
                    (local.set $phi8 (local.get $arg6))
                    (local.set $phi9 (local.get $var0))
                    (local.set $phi10 (i32.const 0))
                    (br $If_17_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (local.get $arg0))
                    (local.set $phi3 (local.get $arg1))
                    (local.set $phi4 (local.get $arg2))
                    (local.set $phi5 (local.get $arg3))
                    (local.set $phi6 (local.get $arg4))
                    (local.set $phi7 (local.get $arg5))
                    (local.set $phi8 (local.get $arg6))
                    (local.set $phi9 (local.get $var0))
                    (local.set $phi10 (i32.const 1))
                    (br $If_17_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (struct.set $java$nio$ByteBuffer $nativeByteOrder (ref.cast (ref null $java$nio$ByteBuffer) (local.get $phi9)) (local.get $phi10))
        (local.set $var11 (local.get $phi1))
        (struct.set $java$nio$ByteBuffer $hb (ref.cast (ref null $java$nio$ByteBuffer) (local.get $var11)) (ref.cast (ref null $java$lang$Object) (local.get $phi6)))
        (local.set $var12 (local.get $phi1))
        (struct.set $java$nio$ByteBuffer $offset (ref.cast (ref null $java$nio$ByteBuffer) (local.get $var12)) (local.get $phi7))
        (return)
        (unreachable))
    (func $java$nio$ByteBuffer$Ljava$nio$ByteBuffer$$allocate$I (type $t565) (param $unused (ref null $java$lang$Object)) (param $arg0 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        ;; writeIfAndStartTrueBlock
        (if $if0 (i32.ge_s (local.get $arg0) (i32.const 0))
            (then
                (drop (call $java$nio$HeapByteBuffer_i))
                (local.set $var0 (struct.new $java$nio$HeapByteBuffer (struct.get $java$nio$HeapByteBuffer_rtt $factoryFor (global.get $java$nio$HeapByteBuffer_cls)) (ref.func $java$nio$HeapByteBuffer_vt) (ref.null noextern) (struct.get $java$nio$HeapByteBuffer_rtt $classImplTypes (global.get $java$nio$HeapByteBuffer_cls)) (i32.const 0) (i32.const 0) (i32.const 0) (ref.null none) (i32.const 0) (i64.const 0) (i32.const 0) (i32.const 0) (ref.null none) (i32.const 0)))
                (call $java$nio$ByteBuffer$V$$init$$I$I$I$I$$B$I$Ljava$lang$foreign$MemorySegment$ (local.get $var0) (i32.const -1) (i32.const 0) (local.get $arg0) (local.get $arg0) (struct.new $i32_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t7 (local.get $arg0))) (i32.const 0) (ref.null none))
                (drop (call $java$nio$HeapByteBuffer_i))
                (struct.set $java$nio$Buffer $address (ref.cast (ref null $java$nio$Buffer) (local.get $var0)) (struct.get $java$nio$HeapByteBuffer_rtt $ARRAY_BASE_OFFSET (global.get $java$nio$HeapByteBuffer_cls)))
                (return (local.get $var0))
                ;; Start else
                )(else
                (drop (call $java$nio$ByteBuffer_i))
                (throw $javaexception (call $java$nio$Buffer$Ljava$lang$IllegalArgumentException$$createCapacityException$I (call $java$nio$ByteBuffer_i) (local.get $arg0)))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$nio$ByteBuffer$Ljava$nio$ByteBuffer$$position$I (type $t565) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (call $java$nio$Buffer$Ljava$nio$Buffer$$position$I (local.get $var0) (local.get $arg0)))
        (return (local.get $var0))
        (unreachable))
    (func $java$nio$ByteBuffer$V$$init$$I$I$I$I$Ljava$lang$foreign$MemorySegment$ (type $t574) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (param $arg1 i32) (param $arg2 i32) (param $arg3 i32) (param $arg4 (ref null $java$lang$Object))
        (call $java$nio$ByteBuffer$V$$init$$I$I$I$I$$B$I$Ljava$lang$foreign$MemorySegment$ (local.get $thisref) (local.get $arg0) (local.get $arg1) (local.get $arg2) (local.get $arg3) (ref.null none) (i32.const 0) (local.get $arg4))
        (return)
        (unreachable))
    (func $java$nio$ByteBuffer$Ljava$nio$Buffer$$limit$I (type $t565) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (return (call $java$nio$ByteBuffer$Ljava$nio$ByteBuffer$$limit$I (local.get $var0) (local.get $arg0)))
        (unreachable))
    (func $java$nio$ByteBuffer$Ljava$nio$ByteBuffer$$limit$I (type $t565) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (call $java$nio$Buffer$Ljava$nio$Buffer$$limit$I (local.get $var0) (local.get $arg0)))
        (return (local.get $var0))
        (unreachable))
    (func $java$nio$ByteBuffer$Ljava$nio$Buffer$$position$I (type $t565) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (return (call $java$nio$ByteBuffer$Ljava$nio$ByteBuffer$$position$I (local.get $var0) (local.get $arg0)))
        (unreachable))
    (func $java$nio$ByteBuffer$I$compareTo$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (return (call $java$nio$ByteBuffer$I$compareTo$Ljava$nio$ByteBuffer$ (local.get $var0) (local.get $var1)))
        (unreachable))
    (func $java$nio$ByteBuffer$I$compareTo$Ljava$nio$ByteBuffer$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 i32)
        (local $var2 i32)
        (local $var3 i32)
        (local $var4 i32)
        (local $var5 i32)
        (local $var6 i32)
        (local $var7 i32)
        (local $var8 i32)
        (local $var9 i32)
        (local $var10 i32)
        (local $var11 i32)
        (local $var12 i32)
        (local $phi13 i32)
        (local $phi14 i32)
        (local $phi15 i32)
        (local $phi16 i32)
        (local $phi17 i32)
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 20) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
        (local.set $var2 (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 22) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
        (local.set $var3 (i32.sub (local.get $var2) (local.get $var1)))
        (local.set $var4 (call_indirect (type $t555) (local.get $arg0) (call_ref $t0 (i32.const 20) (struct.get $java$lang$Object $vt_resolver (local.get $arg0)))))
        (local.set $var5 (call_indirect (type $t555) (local.get $arg0) (call_ref $t0 (i32.const 22) (struct.get $java$lang$Object $vt_resolver (local.get $arg0)))))
        (local.set $var6 (i32.sub (local.get $var5) (local.get $var4)))
        (drop (call $java$lang$Math_i))
        (local.set $var7 (call $java$lang$Math$I$min$I$I (call $java$lang$Math_i) (local.get $var3) (local.get $var6)))
        ;; writeIfAndStartTrueBlock
        (if $if0 (i32.ge_s (local.get $var7) (i32.const 0))
            (then
                (drop (call $java$nio$BufferMismatch_i))
                (local.set $var8 (call $java$nio$BufferMismatch$I$mismatch$Ljava$nio$ByteBuffer$$I$Ljava$nio$ByteBuffer$$I$I (call $java$nio$BufferMismatch_i) (local.get $var0) (local.get $var1) (local.get $arg0) (local.get $var4) (local.get $var7)))
                ;; writeIfAndStartTrueBlock
                (if $if1 (i32.lt_s (local.get $var8) (i32.const 0))
                    (then
                        (return (i32.sub (local.get $var3) (local.get $var6)))
                        ;; Start else
                        )(else
                        (local.set $var9 (i32.add (local.get $var1) (local.get $var8)))
                        (local.set $var10 (call_indirect (type $t551) (local.get $var0) (local.get $var9) (call_ref $t0 (i32.const 121) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
                        (local.set $var11 (i32.add (local.get $var4) (local.get $var8)))
                        (local.set $var12 (call_indirect (type $t551) (local.get $arg0) (local.get $var11) (call_ref $t0 (i32.const 121) (struct.get $java$lang$Object $vt_resolver (local.get $arg0)))))
                        (drop (call $java$nio$ByteBuffer_i))
                        (drop (call $java$lang$Byte_i))
                        ;; startBlock type=NORMAL, label = If_60_0
                        (block $If_60_0
                            ;; writeIfAndStartTrueBlock
                            (if $if2 (i32.ge_s (local.get $var10) (local.get $var12))
                                (then
                                    ;; writeIfAndStartTrueBlock
                                    (if $if3 (i32.ne (local.get $var10) (local.get $var12))
                                        (then
                                            (local.set $phi14 (local.get $var10))
                                            (local.set $phi15 (local.get $var12))
                                            (local.set $phi16 (i32.const 1))
                                            (br $If_60_0)
                                            ;; Start else
                                            )(else
                                            ;; Here was a goto statement
                                            (local.set $phi14 (local.get $var10))
                                            (local.set $phi15 (local.get $var12))
                                            (local.set $phi16 (i32.const 0))
                                            (br $If_60_0)
                                            ))
                                    ;; finishIfBlock
                                    ;; Start else
                                    )(else
                                    ;; Here was a goto statement
                                    (local.set $phi14 (local.get $var10))
                                    (local.set $phi15 (local.get $var12))
                                    (local.set $phi16 (i32.const -1))
                                    (br $If_60_0)
                                    ))
                            ;; finishIfBlock
                            )
                        ;; finishBlock
                        (local.set $phi17 (local.get $phi16))
                        (local.set $phi13 (local.get $phi17))
                        (return (local.get $phi13))
                        ))
                ;; finishIfBlock
                ;; Start else
                )(else
                (return (i32.const -1))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$nio$ByteBuffer$Ljava$lang$Object$$base$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (return (struct.get $java$nio$ByteBuffer $hb (ref.cast (ref null $java$nio$ByteBuffer) (local.get $thisref))))
        (unreachable))
    (func $java$nio$ByteBuffer$I$compare$B$B (type $t564) (param $unused (ref null $java$lang$Object)) (param $arg0 i32) (param $arg1 i32) (result i32)
        (drop (call $java$lang$Byte_i))
        (return (call $java$lang$Byte$I$compare$B$B (call $java$lang$Byte_i) (local.get $arg0) (local.get $arg1)))
        (unreachable))
    (func $java$nio$ByteBuffer$Ljava$lang$String$$toString$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 i32)
        (local $var5 (ref null $java$lang$Object))
        (local $var6 (ref null $java$lang$Object))
        (local $var7 i32)
        (local $var8 (ref null $java$lang$Object))
        (local $var9 (ref null $java$lang$Object))
        (local $var10 i32)
        (local $var11 (ref null $java$lang$Object))
        (local $var12 (ref null $java$lang$Object))
        (local $var13 (ref null $java$lang$Object))
        (local $phi14 (ref null $java$lang$Object))
        (local $var15 (ref null $java$lang$Object))
        (local $phi16 (ref null $java$lang$Object))
        (local $var17 (ref null $java$lang$Object))
        (local $phi18 (ref null $java$lang$Object))
        (local $phi19 (ref null $java$lang$Object))
        (local $phi20 (ref null $java$lang$Object))
        (local $phi21 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (struct.new $java$lang$StringBuilder (struct.get $java$lang$StringBuilder_rtt $factoryFor (global.get $java$lang$StringBuilder_cls)) (ref.func $java$lang$StringBuilder_vt) (ref.null noextern) (struct.get $java$lang$StringBuilder_rtt $classImplTypes (global.get $java$lang$StringBuilder_cls))))
        (call $java$lang$StringBuilder$V$initializeWith$I (local.get $var1) (i32.const 10))
        (local.set $var2 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var1) (global.get $stringpool_1)))
        (local.set $var3 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var2) (global.get $stringpool_94)))
        (local.set $var4 (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 20) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
        (drop (call $java$lang$Integer_i))
        (drop (call $java$lang$Integer_i))
        (local.set $phi19 (call $java$lang$Integer$Ljava$lang$String$$toString$I$I (call $java$lang$Integer_i) (local.get $var4) (i32.const 10)))
        (local.set $var17 (local.get $phi19))
        (local.set $phi18 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var3) (local.get $var17)))
        (local.set $var5 (local.get $phi18))
        (local.set $var6 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var5) (global.get $stringpool_95)))
        (local.set $var7 (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 22) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
        (drop (call $java$lang$Integer_i))
        (local.set $phi20 (call $java$lang$Integer$Ljava$lang$String$$toString$I$I (call $java$lang$Integer_i) (local.get $var7) (i32.const 10)))
        (local.set $var15 (local.get $phi20))
        (local.set $phi16 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var6) (local.get $var15)))
        (local.set $var8 (local.get $phi16))
        (local.set $var9 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var8) (global.get $stringpool_96)))
        (local.set $var10 (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 25) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
        (drop (call $java$lang$Integer_i))
        (local.set $phi21 (call $java$lang$Integer$Ljava$lang$String$$toString$I$I (call $java$lang$Integer_i) (local.get $var10) (i32.const 10)))
        (local.set $var13 (local.get $phi21))
        (local.set $phi14 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var9) (local.get $var13)))
        (local.set $var11 (local.get $phi14))
        (local.set $var12 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var11) (global.get $stringpool_83)))
        (return (call $java$lang$StringBuilder$Ljava$lang$String$$toString$$ (local.get $var12)))
        (unreachable))
    (func $java$nio$ByteBuffer$Z$equals$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 i32)
        (local $var3 i32)
        (local $var4 i32)
        (local $var5 i32)
        (local $var6 i32)
        (local $var7 i32)
        (local $phi8 (ref null $java$lang$Object))
        (local $phi9 (ref null $java$lang$Object))
        (local $phi10 (ref null $java$lang$Object))
        (local $phi11 i32)
        (local $phi12 i32)
        (local $phi13 i32)
        (local $phi14 i32)
        (local $phi15 (ref null $java$lang$Object))
        (local $phi16 (ref null $java$lang$Object))
        (local $phi17 (ref null $java$lang$Object))
        (local $phi18 i32)
        (local $phi19 i32)
        (local $phi20 i32)
        (local $phi21 i32)
        (local $phi22 i32)
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.eq (local.get $var0) (local.get $arg0)))
            (then
                ;; writeIfAndStartTrueBlock
                (if $if1 (i32.ne (call $instanceOf (local.get $arg0) (i32.const 100)) (i32.const 0))
                    (then
                        (local.set $var1 (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
                        (local.set $var2 (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 20) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
                        (local.set $var3 (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 22) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
                        (local.set $var4 (i32.sub (local.get $var3) (local.get $var2)))
                        (local.set $var5 (call_indirect (type $t555) (local.get $var1) (call_ref $t0 (i32.const 20) (struct.get $java$lang$Object $vt_resolver (local.get $var1)))))
                        (local.set $var6 (call_indirect (type $t555) (local.get $var1) (call_ref $t0 (i32.const 22) (struct.get $java$lang$Object $vt_resolver (local.get $var1)))))
                        (local.set $var7 (i32.sub (local.get $var6) (local.get $var5)))
                        ;; startBlock type=NORMAL, label = If_37_0
                        (block $If_37_0
                            ;; writeIfAndStartTrueBlock
                            (if $if2 (i32.lt_s (local.get $var4) (i32.const 0))
                                (then
                                    (local.set $phi8 (local.get $var0))
                                    (local.set $phi9 (local.get $arg0))
                                    (local.set $phi10 (local.get $var1))
                                    (local.set $phi11 (local.get $var2))
                                    (local.set $phi12 (local.get $var4))
                                    (local.set $phi13 (local.get $var5))
                                    (local.set $phi14 (local.get $var7))
                                    (br $If_37_0)
                                    ;; Start else
                                    )(else
                                    ;; writeIfAndStartTrueBlock
                                    (if $if3 (i32.eq (local.get $var4) (local.get $var7))
                                        (then
                                            (drop (call $java$nio$BufferMismatch_i))
                                            ;; startBlock type=NORMAL, label = If_55_0
                                            (block $If_55_0
                                                ;; writeIfAndStartTrueBlock
                                                (if $if4 (i32.ge_s (call $java$nio$BufferMismatch$I$mismatch$Ljava$nio$ByteBuffer$$I$Ljava$nio$ByteBuffer$$I$I (call $java$nio$BufferMismatch_i) (local.get $var0) (local.get $var2) (local.get $var1) (local.get $var5) (local.get $var4)) (i32.const 0))
                                                    (then
                                                        (local.set $phi15 (local.get $var0))
                                                        (local.set $phi16 (local.get $arg0))
                                                        (local.set $phi17 (local.get $var1))
                                                        (local.set $phi18 (local.get $var2))
                                                        (local.set $phi19 (local.get $var4))
                                                        (local.set $phi20 (local.get $var5))
                                                        (local.set $phi21 (local.get $var7))
                                                        (local.set $phi22 (i32.const 0))
                                                        (br $If_55_0)
                                                        ;; Start else
                                                        )(else
                                                        ;; Here was a goto statement
                                                        (local.set $phi15 (local.get $var0))
                                                        (local.set $phi16 (local.get $arg0))
                                                        (local.set $phi17 (local.get $var1))
                                                        (local.set $phi18 (local.get $var2))
                                                        (local.set $phi19 (local.get $var4))
                                                        (local.set $phi20 (local.get $var5))
                                                        (local.set $phi21 (local.get $var7))
                                                        (local.set $phi22 (i32.const 1))
                                                        (br $If_55_0)
                                                        ))
                                                ;; finishIfBlock
                                                )
                                            ;; finishBlock
                                            (return (local.get $phi22))
                                            ;; Start else
                                            )(else
                                            (local.set $phi8 (local.get $var0))
                                            (local.set $phi9 (local.get $arg0))
                                            (local.set $phi10 (local.get $var1))
                                            (local.set $phi11 (local.get $var2))
                                            (local.set $phi12 (local.get $var4))
                                            (local.set $phi13 (local.get $var5))
                                            (local.set $phi14 (local.get $var7))
                                            (br $If_37_0)
                                            ))
                                    ;; finishIfBlock
                                    ))
                            ;; finishIfBlock
                            )
                        ;; finishBlock
                        (return (i32.const 0))
                        ;; Start else
                        )(else
                        (return (i32.const 0))
                        ))
                ;; finishIfBlock
                ;; Start else
                )(else
                (return (i32.const 1))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$nio$ByteBuffer$I$hashCode$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 i32)
        (local $var2 i32)
        (local $phi3 (ref null $java$lang$Object))
        (local $phi4 i32)
        (local $phi5 i32)
        (local $phi6 i32)
        (local $var7 i32)
        (local $var8 (ref null $java$lang$Object))
        (local $var9 i32)
        (local $var10 i32)
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 20) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
        (local.set $var2 (i32.sub (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 22) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))) (i32.const 1)))
        (local.set $phi3 (local.get $var0))
        (local.set $phi4 (i32.const 1))
        (local.set $phi5 (local.get $var1))
        (local.set $phi6 (local.get $var2))
        ;; startBlock type=LOOP, label = L282020043
        (loop $L282020043
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.lt_s (local.get $phi6) (local.get $phi5))
                (then
                    (return (local.get $phi4))
                    ;; Start else
                    )(else
                    (local.set $var7 (i32.mul (i32.const 31) (local.get $phi4)))
                    (local.set $var8 (local.get $phi3))
                    (local.set $var9 (local.get $phi6))
                    (local.set $var10 (i32.add (local.get $var7) (call_indirect (type $t551) (local.get $var8) (local.get $var9) (call_ref $t0 (i32.const 121) (struct.get $java$lang$Object $vt_resolver (local.get $var8))))))
                    (local.set $phi6 (i32.add (local.get $phi6) (i32.const -1)))
                    ;; Here was a goto statement
                    (local.set $phi4 (local.get $var10))
                    (br $L282020043)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (unreachable))
    (func $java$nio$ByteBuffer$Ljava$nio$ByteBuffer$$get$$B$I$I (type $t573) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 i32) (param $arg2 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 i32)
        (local $var2 i32)
        (local $var3 i32)
        (local $var4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $var6 i32)
        (local $var7 (ref null $java$lang$Object))
        (local $phi8 i32)
        (local $phi9 i32)
        (local $phi10 i32)
        (local $phi11 (ref null $java$lang$Object))
        (local $var12 (ref null $java$lang$Object))
        (local $var13 i32)
        (local $var14 i32)
        (local $var15 i32)
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (array.len $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $arg0)))))
        (drop (call $jdk$internal$util$Preconditions_i))
        ;; startBlock type=NORMAL, label = If_43_0
        (block $If_43_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.lt_s (i32.or (i32.or (local.get $var1) (local.get $arg1)) (local.get $arg2)) (i32.const 0))
                (then
                    (local.set $phi8 (local.get $arg1))
                    (local.set $phi9 (local.get $arg2))
                    (local.set $phi10 (local.get $var1))
                    (local.set $phi11 (ref.null none))
                    (br $If_43_0)
                    ;; Start else
                    )(else
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (i32.le_s (local.get $arg2) (i32.sub (local.get $var1) (local.get $arg1)))
                        (then
                            (local.set $var2 (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 20) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
                            (local.set $var3 (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 22) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
                            ;; writeIfAndStartTrueBlock
                            (if $if2 (i32.le_s (local.get $arg2) (i32.sub (local.get $var3) (local.get $var2)))
                                (then
                                    (local.set $var5 (call $java$nio$ByteBuffer$Ljava$nio$ByteBuffer$$getArray$I$$B$I$I (local.get $var0) (local.get $var2) (local.get $arg0) (local.get $arg1) (local.get $arg2)))
                                    (local.set $var6 (i32.add (local.get $var2) (local.get $arg2)))
                                    (local.set $var7 (call $java$nio$Buffer$Ljava$nio$Buffer$$position$I (local.get $var0) (local.get $var6)))
                                    (return (local.get $var0))
                                    ;; Start else
                                    )(else
                                    (local.set $var4 (struct.new $java$nio$BufferUnderflowException (struct.get $java$nio$BufferUnderflowException_rtt $factoryFor (global.get $java$nio$BufferUnderflowException_cls)) (ref.func $java$nio$BufferUnderflowException_vt) (ref.null noextern) (struct.get $java$nio$BufferUnderflowException_rtt $classImplTypes (global.get $java$nio$BufferUnderflowException_cls)) (ref.null none) (ref.null none)))
                                    (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var4)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                    (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var4)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                    (throw $javaexception (local.get $var4))
                                    ))
                            ;; finishIfBlock
                            ;; Start else
                            )(else
                            (local.set $phi8 (local.get $arg1))
                            (local.set $phi9 (local.get $arg2))
                            (local.set $phi10 (local.get $var1))
                            (local.set $phi11 (ref.null none))
                            (br $If_43_0)
                            ))
                    ;; finishIfBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (local.set $var12 (local.get $phi11))
        (local.set $var13 (local.get $phi8))
        (local.set $var14 (local.get $phi9))
        (local.set $var15 (local.get $phi10))
        (drop (call $jdk$internal$util$Preconditions_i))
        (throw $javaexception (call $jdk$internal$util$Preconditions$Ljava$lang$RuntimeException$$outOfBoundsCheckFromIndexSize$Ljava$util$function$BiFunction$$I$I$I (call $jdk$internal$util$Preconditions_i) (local.get $var12) (local.get $var13) (local.get $var14) (local.get $var15)))
        (unreachable))
    (func $java$nio$ByteBuffer$Ljava$nio$ByteBuffer$$getArray$I$$B$I$I (type $t596) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (param $arg1 (ref null $java$lang$Object)) (param $arg2 i32) (param $arg3 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 i64)
        (local $var2 i64)
        (local $var3 i64)
        (local $phi4 (ref null $java$lang$Object))
        (local $phi5 i32)
        (local $phi6 (ref null $java$lang$Object))
        (local $phi7 i32)
        (local $phi8 i32)
        (local $phi9 i64)
        (local $phi10 i64)
        (local $phi11 i64)
        (local $var12 (ref null $java$lang$Object))
        (local $var13 (ref null $java$lang$Object))
        (local $var14 (ref null $java$lang$Object))
        (local $var15 (ref null $java$lang$Object))
        (local $var16 i32)
        (local $phi17 (ref null $java$lang$Object))
        (local $phi18 i32)
        (local $phi19 i32)
        (local $phi20 i32)
        (local $var21 i32)
        (local $var22 (ref null $java$lang$Object))
        (local $var23 i32)
        (local $var24 (ref null $java$lang$Object))
        (local $var25 (ref null $java$lang$Object))
        (local $phi26 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = If_13_0
        (block $If_13_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.le_s (call $compare_i64 (i64.shl (i64.extend_i32_s (local.get $arg3)) (i64.extend_i32_s (i32.const 0))) (i64.const 6)) (i32.const 0))
                (then
                    (local.set $var16 (i32.add (local.get $arg2) (local.get $arg3)))
                    (local.set $phi17 (local.get $var0))
                    (local.set $phi18 (local.get $var16))
                    (local.set $phi19 (local.get $arg2))
                    (local.set $phi20 (local.get $arg0))
                    ;; startBlock type=LOOP, label = L1747038227
                    (loop $L1747038227
                        ;; writeIfAndStartTrueBlock
                        (if $if1 (i32.ge_s (local.get $phi19) (local.get $phi18))
                            (then
                                (local.set $phi4 (local.get $phi17))
                                (local.set $phi5 (local.get $arg0))
                                (local.set $phi6 (local.get $arg1))
                                (local.set $phi7 (local.get $arg2))
                                (local.set $phi8 (local.get $arg3))
                                (local.set $phi9 (i64.extend_i32_s (local.get $phi18)))
                                (local.set $phi10 (i64.extend_i32_s (local.get $phi20)))
                                (br $If_13_0)
                                ;; Start else
                                )(else
                                (local.set $var21 (local.get $phi19))
                                (local.set $var22 (local.get $phi17))
                                (local.set $var23 (local.get $phi20))
                                (array.set $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $arg1))) (local.get $var21) (call_indirect (type $t551) (local.get $var22) (local.get $var23) (call_ref $t0 (i32.const 121) (struct.get $java$lang$Object $vt_resolver (local.get $var22)))))
                                (local.set $phi19 (i32.add (local.get $phi19) (i32.const 1)))
                                (local.set $phi20 (i32.add (local.get $phi20) (i32.const 1)))
                                ;; Here was a goto statement
                                (br $L1747038227)
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    ;; Start else
                    )(else
                    (local.set $var1 (i64.add (struct.get $java$nio$Buffer $address (ref.cast (ref null $java$nio$Buffer) (local.get $var0))) (i64.shl (i64.extend_i32_s (local.get $arg0)) (i64.extend_i32_s (i32.const 0)))))
                    (drop (call $java$nio$ByteBuffer_i))
                    (local.set $var2 (i64.add (struct.get $java$nio$ByteBuffer_rtt $ARRAY_BASE_OFFSET (global.get $java$nio$ByteBuffer_cls)) (i64.shl (i64.extend_i32_s (local.get $arg2)) (i64.extend_i32_s (i32.const 0)))))
                    (local.set $var3 (i64.shl (i64.extend_i32_s (local.get $arg3)) (i64.extend_i32_s (i32.const 0))))
                    (local.set $phi4 (local.get $var0))
                    (local.set $phi5 (local.get $arg0))
                    (local.set $phi6 (local.get $arg1))
                    (local.set $phi7 (local.get $arg2))
                    (local.set $phi8 (local.get $arg3))
                    (local.set $phi9 (local.get $var1))
                    (local.set $phi10 (local.get $var2))
                    (local.set $phi11 (local.get $var3))
                    ;; startBlock type=NORMAL, label = TryCatch_45_0
                    (block $TryCatch_45_0
                        ;; startTryCatch
                        (try $trycatch_0 (do
                                (drop (call $java$nio$ByteBuffer_i))
                                (local.set $var13 (struct.get $java$nio$Buffer_rtt $SCOPED_MEMORY_ACCESS (global.get $java$nio$Buffer_cls)))
                                (local.set $var14 (local.get $phi4))
                                (local.set $var15 (call_indirect (type $t553) (local.get $var14) (call_ref $t0 (i32.const 24) (struct.get $java$lang$Object $vt_resolver (local.get $var14)))))
                                ;; Unable to assign [B to Ljava/lang/Object; for de.mirkosertic.bytecoder.core.ir.PHI@6dfa09a8 from de.mirkosertic.bytecoder.core.ir.ReadInstanceField@27d55f0f
                                (local.set $var24 (local.get $phi26))
                                ;; startBlock type=NORMAL, label = TryCatch_113_0
                                (block $TryCatch_113_0
                                    ;; startTryCatch
                                    (try $trycatch_1 (do
                                            (call $jdk$internal$misc$ScopedMemoryAccess$V$copyMemoryInternal$Ljdk$internal$foreign$MemorySessionImpl$$Ljdk$internal$foreign$MemorySessionImpl$$Ljava$lang$Object$$J$Ljava$lang$Object$$J$J (local.get $var13) (local.get $var15) (ref.null none) (local.get $var24) (local.get $phi9) (local.get $phi6) (local.get $phi10) (local.get $phi11))
                                            (br $TryCatch_113_0)
                                            )
                                        (catch $javaexception
                                            ;; startCatchBlock
                                            (global.set $lastcaughtexception (pop (ref null $java$lang$Object)))
                                            (if $catchcheck_0 (call $instanceOf (global.get $lastcaughtexception) (struct.get $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError_rtt $factoryFor (global.get $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError_cls)))
                                                (then
                                                    (local.set $var25 (global.get $lastcaughtexception))
                                                    (throw $javaexception (call $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError$Ljava$lang$RuntimeException$$newRuntimeException$$ (local.get $var25)))
                                                    ))
                                            (rethrow $trycatch_1)
                                            )
                                        )
                                    ;; finishTryCatch
                                    )
                                ;; finishBlock
                                ;; Here was a goto statement
                                (br $TryCatch_45_0)
                                )
                            (catch $javaexception
                                ;; startCatchBlock
                                (global.set $lastcaughtexception (pop (ref null $java$lang$Object)))
                                (if $catchcheck_1 (call $instanceOf (global.get $lastcaughtexception) (struct.get $java$lang$Throwable_rtt $factoryFor (global.get $java$lang$Throwable_cls)))
                                    (then
                                        ;; startBlock type=NORMAL, label = TryCatch_46_0
                                        (block $TryCatch_46_0
                                            (local.set $var12 (global.get $lastcaughtexception))
                                            (br $TryCatch_46_0)
                                            )
                                        ;; finishBlock
                                        (throw $javaexception (local.get $var12))
                                        ))
                                (rethrow $trycatch_0)
                                )
                            )
                        ;; finishTryCatch
                        )
                    ;; finishBlock
                    ;; Here was a goto statement
                    ;; Here was a goto statement
                    (br $If_13_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi4))
        (unreachable))
    (func $java$util$AbstractList$Itr$V$$init$$Ljava$util$AbstractList$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$util$AbstractList$Itr $this$0 (ref.cast (ref null $java$util$AbstractList$Itr) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (struct.set $java$util$AbstractList$Itr $cursor (ref.cast (ref null $java$util$AbstractList$Itr) (local.get $var0)) (i32.const 0))
        (struct.set $java$util$AbstractList$Itr $lastRet (ref.cast (ref null $java$util$AbstractList$Itr) (local.get $var0)) (i32.const -1))
        (struct.set $java$util$AbstractList$Itr $expectedModCount (ref.cast (ref null $java$util$AbstractList$Itr) (local.get $var0)) (struct.get $java$util$AbstractList $modCount (ref.cast (ref null $java$util$AbstractList) (struct.get $java$util$AbstractList$Itr $this$0 (ref.cast (ref null $java$util$AbstractList$Itr) (local.get $var0))))))
        (return)
        (unreachable))
    (func $java$util$AbstractList$Itr$Z$hasNext$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 i32)
        (local $var2 (ref null $java$lang$Object))
        (local $phi3 (ref null $java$lang$Object))
        (local $phi4 i32)
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (struct.get $java$util$AbstractList$Itr $cursor (ref.cast (ref null $java$util$AbstractList$Itr) (local.get $var0))))
        (local.set $var2 (struct.get $java$util$AbstractList$Itr $this$0 (ref.cast (ref null $java$util$AbstractList$Itr) (local.get $var0))))
        ;; startBlock type=NORMAL, label = If_11_0
        (block $If_11_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.eq (local.get $var1) (call_indirect (type $t555) (local.get $var2) (call_ref $t0 (i32.const 100) (struct.get $java$lang$Object $vt_resolver (local.get $var2)))))
                (then
                    (local.set $phi3 (local.get $var0))
                    (local.set $phi4 (i32.const 0))
                    (br $If_11_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi3 (local.get $var0))
                    (local.set $phi4 (i32.const 1))
                    (br $If_11_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi4))
        (unreachable))
    (func $java$util$AbstractList$Itr$Ljava$lang$Object$$next$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 i32)
        (local $var5 (ref null $java$lang$Object))
        (local $var6 (ref null $java$lang$Object))
        (local $var7 (ref null $java$lang$Object))
        (local $var8 (ref null $java$lang$Object))
        (local $var9 (ref null $java$lang$Object))
        (local $var10 i32)
        (local $var11 (ref null $java$lang$Object))
        (local $var12 i32)
        (local $var13 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var12 (struct.get $java$util$AbstractList $modCount (ref.cast (ref null $java$util$AbstractList) (struct.get $java$util$AbstractList$Itr $this$0 (ref.cast (ref null $java$util$AbstractList$Itr) (local.get $var0))))))
        ;; writeIfAndStartTrueBlock
        (if $if0 (i32.eq (local.get $var12) (struct.get $java$util$AbstractList$Itr $expectedModCount (ref.cast (ref null $java$util$AbstractList$Itr) (local.get $var0))))
            (then
                (local.set $phi1 (local.get $var0))
                ;; startBlock type=NORMAL, label = TryCatch_5_0
                (block $TryCatch_5_0
                    ;; startTryCatch
                    (try $trycatch_0 (do
                            (local.set $var4 (struct.get $java$util$AbstractList$Itr $cursor (ref.cast (ref null $java$util$AbstractList$Itr) (local.get $phi1))))
                            (local.set $var5 (struct.get $java$util$AbstractList$Itr $this$0 (ref.cast (ref null $java$util$AbstractList$Itr) (local.get $phi1))))
                            (local.set $var6 (call_indirect (type $t565) (local.get $var5) (local.get $var4) (call_ref $t0 (i32.const 179) (struct.get $java$lang$Object $vt_resolver (local.get $var5)))))
                            (local.set $var7 (local.get $phi1))
                            (struct.set $java$util$AbstractList$Itr $lastRet (ref.cast (ref null $java$util$AbstractList$Itr) (local.get $var7)) (local.get $var4))
                            (local.set $var8 (local.get $phi1))
                            (struct.set $java$util$AbstractList$Itr $cursor (ref.cast (ref null $java$util$AbstractList$Itr) (local.get $var8)) (i32.add (local.get $var4) (i32.const 1)))
                            (br $TryCatch_5_0)
                            )
                        (catch $javaexception
                            ;; startCatchBlock
                            (global.set $lastcaughtexception (pop (ref null $java$lang$Object)))
                            (if $catchcheck_0 (call $instanceOf (global.get $lastcaughtexception) (struct.get $java$lang$IndexOutOfBoundsException_rtt $factoryFor (global.get $java$lang$IndexOutOfBoundsException_cls)))
                                (then
                                    (local.set $var2 (global.get $lastcaughtexception))
                                    (local.set $var9 (local.get $phi1))
                                    (local.set $var10 (struct.get $java$util$AbstractList $modCount (ref.cast (ref null $java$util$AbstractList) (struct.get $java$util$AbstractList$Itr $this$0 (ref.cast (ref null $java$util$AbstractList$Itr) (local.get $var9))))))
                                    ;; writeIfAndStartTrueBlock
                                    (if $if1 (i32.eq (local.get $var10) (struct.get $java$util$AbstractList$Itr $expectedModCount (ref.cast (ref null $java$util$AbstractList$Itr) (local.get $var9))))
                                        (then
                                            (local.set $var3 (struct.new $java$util$NoSuchElementException (struct.get $java$util$NoSuchElementException_rtt $factoryFor (global.get $java$util$NoSuchElementException_cls)) (ref.func $java$util$NoSuchElementException_vt) (ref.null noextern) (struct.get $java$util$NoSuchElementException_rtt $classImplTypes (global.get $java$util$NoSuchElementException_cls)) (ref.null none) (ref.null none)))
                                            (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var3)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                            (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var3)) (ref.cast (ref null $java$lang$Object) (local.get $var2)))
                                            (throw $javaexception (local.get $var3))
                                            ;; Start else
                                            )(else
                                            (local.set $var11 (struct.new $java$util$ConcurrentModificationException (struct.get $java$util$ConcurrentModificationException_rtt $factoryFor (global.get $java$util$ConcurrentModificationException_cls)) (ref.func $java$util$ConcurrentModificationException_vt) (ref.null noextern) (struct.get $java$util$ConcurrentModificationException_rtt $classImplTypes (global.get $java$util$ConcurrentModificationException_cls)) (ref.null none) (ref.null none)))
                                            (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var11)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                            (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var11)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                            (throw $javaexception (local.get $var11))
                                            ))
                                    ;; finishIfBlock
                                    ))
                            (rethrow $trycatch_0)
                            )
                        )
                    ;; finishTryCatch
                    )
                ;; finishBlock
                (return (local.get $var6))
                ;; Start else
                )(else
                (local.set $var13 (struct.new $java$util$ConcurrentModificationException (struct.get $java$util$ConcurrentModificationException_rtt $factoryFor (global.get $java$util$ConcurrentModificationException_cls)) (ref.func $java$util$ConcurrentModificationException_vt) (ref.null noextern) (struct.get $java$util$ConcurrentModificationException_rtt $classImplTypes (global.get $java$util$ConcurrentModificationException_cls)) (ref.null none) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var13)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var13)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var13))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$util$AbstractList$Itr$V$checkForComodification$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 i32)
        (local $var2 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (struct.get $java$util$AbstractList $modCount (ref.cast (ref null $java$util$AbstractList) (struct.get $java$util$AbstractList$Itr $this$0 (ref.cast (ref null $java$util$AbstractList$Itr) (local.get $var0))))))
        ;; writeIfAndStartTrueBlock
        (if $if0 (i32.eq (local.get $var1) (struct.get $java$util$AbstractList$Itr $expectedModCount (ref.cast (ref null $java$util$AbstractList$Itr) (local.get $var0))))
            (then
                (return)
                ;; Start else
                )(else
                (local.set $var2 (struct.new $java$util$ConcurrentModificationException (struct.get $java$util$ConcurrentModificationException_rtt $factoryFor (global.get $java$util$ConcurrentModificationException_cls)) (ref.func $java$util$ConcurrentModificationException_vt) (ref.null noextern) (struct.get $java$util$ConcurrentModificationException_rtt $classImplTypes (global.get $java$util$ConcurrentModificationException_cls)) (ref.null none) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var2)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var2)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var2))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $de$mirkosertic$bytecoder$classlib$BytecoderCharsetDecoder$V$$init$$Ljava$nio$charset$Charset$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (call $java$nio$charset$CharsetDecoder$V$$init$$Ljava$nio$charset$Charset$$F$F$Ljava$lang$String$ (local.get $thisref) (local.get $arg0) (f32.const 1.1) (f32.const 3.0) (global.get $stringpool_85))
        (return)
        (unreachable))
    (func $de$mirkosertic$bytecoder$classlib$BytecoderCharsetDecoder$Ljava$nio$charset$CoderResult$$decodeLoop$Ljava$nio$ByteBuffer$$Ljava$nio$CharBuffer$ (type $t561) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 i32)
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $var6 (ref null $java$lang$Object))
        (local $var7 (ref null $java$lang$Object))
        (local $phi8 (ref null $java$lang$Object))
        (local $phi9 (ref null $java$lang$Object))
        (local $phi10 (ref null $java$lang$Object))
        (local $phi11 (ref null $java$lang$Object))
        (local $phi12 i32)
        (local $phi13 (ref null $java$lang$Object))
        (local $phi14 (ref null $java$lang$Object))
        (local $var15 i32)
        (local $phi16 (ref null $java$lang$Object))
        (local $phi17 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (call_indirect (type $t553) (local.get $var0) (call_ref $t0 (i32.const 5) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
        ;; startBlock type=NORMAL, label = If_10_0
        (block $If_10_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.eq (call_indirect (type $t555) (local.get $arg0) (call_ref $t0 (i32.const 19) (struct.get $java$lang$Object $vt_resolver (local.get $arg0)))) (i32.const 0))
                (then
                    (local.set $phi8 (local.get $var0))
                    (local.set $phi9 (local.get $arg0))
                    (local.set $phi10 (local.get $arg1))
                    (local.set $phi11 (local.get $var1))
                    (br $If_10_0)
                    ;; Start else
                    )(else
                    (local.set $var2 (call_indirect (type $t555) (local.get $arg0) (call_ref $t0 (i32.const 18) (struct.get $java$lang$Object $vt_resolver (local.get $arg0)))))
                    (local.set $var3 (struct.new $i32_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t7 (local.get $var2))))
                    (local.set $var4 (call_indirect (type $t573) (local.get $arg0) (local.get $var3) (i32.const 0) (local.get $var2) (call_ref $t0 (i32.const 115) (struct.get $java$lang$Object $vt_resolver (local.get $arg0)))))
                    (local.set $phi17 (struct.get $java$nio$charset$Charset $canonicalName (ref.cast (ref null $java$nio$charset$Charset) (local.get $var1))))
                    (local.set $var5 (local.get $phi17))
                    (local.set $var6 (call $de$mirkosertic$bytecoder$classlib$BytecoderCharsetDecoder$$C$decodeFromBytes$Ljava$lang$String$$$B (local.get $var0) (local.get $var5) (local.get $var3)))
                    (local.set $var15 (array.len $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $var6)))))
                    (local.set $phi16 (call_indirect (type $t573) (local.get $arg1) (local.get $var6) (i32.const 0) (local.get $var15) (call_ref $t0 (i32.const 74) (struct.get $java$lang$Object $vt_resolver (local.get $arg1)))))
                    (local.set $var7 (local.get $phi16))
                    (local.set $phi8 (local.get $var0))
                    (local.set $phi9 (local.get $arg0))
                    (local.set $phi10 (local.get $arg1))
                    (local.set $phi11 (local.get $var1))
                    (local.set $phi12 (local.get $var2))
                    (local.set $phi13 (local.get $var3))
                    (local.set $phi14 (local.get $var6))
                    (br $If_10_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (drop (call $java$nio$charset$CoderResult_i))
        (return (struct.get $java$nio$charset$CoderResult_rtt $UNDERFLOW (global.get $java$nio$charset$CoderResult_cls)))
        (unreachable))
    (func $java$lang$Error$V$$init$$Ljava$lang$String$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return)
        (unreachable))
    (func $java$lang$Error$V$$init$$Ljava$lang$Throwable$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (return)
        (unreachable))
    (func $java$lang$Error$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return)
        (unreachable))
    (func $java$io$Writer$V$$init$$Ljava$lang$Object$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg0)))
            (then
                (struct.set $java$io$Writer $lock (ref.cast (ref null $java$io$Writer) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
                (return)
                ;; Start else
                )(else
                (local.set $var1 (struct.new $java$lang$NullPointerException (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)) (ref.func $java$lang$NullPointerException_vt) (ref.null noextern) (struct.get $java$lang$NullPointerException_rtt $classImplTypes (global.get $java$lang$NullPointerException_cls)) (ref.null none) (ref.null none) (i32.const 0) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var1))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$io$Writer$V$$init$$Ljava$io$Writer$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 (ref null $java$lang$Object))
        (local $phi4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $var6 (ref null $java$lang$Object))
        (local $phi7 (ref null $java$lang$Object))
        (local $phi8 (ref null $java$lang$Object))
        (local $phi9 (ref null $java$lang$Object))
        (local $var10 (ref null $java$lang$Object))
        (local $var11 (ref null $java$lang$Object))
        (local $phi12 (ref null $java$lang$Object))
        (local $phi13 (ref null $java$lang$Object))
        (local $phi14 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (call $runtimetypeof (local.get $arg0)))
        ;; startBlock type=NORMAL, label = If_11_0
        (block $If_11_0
            ;; startBlock type=NORMAL, label = If_11_1
            (block $If_11_1
                ;; writeIfAndStartTrueBlock
                (if $if0 (select (i32.const 0) (i32.const 1) (ref.eq (call $runtimetypeof (local.get $var0)) (global.get $java$io$BufferedWriter_cls)))
                    (then
                        (local.set $phi7 (local.get $var0))
                        (local.set $phi8 (local.get $arg0))
                        (local.set $phi9 (local.get $var1))
                        (br $If_11_1)
                        ;; Start else
                        )(else
                        ;; startBlock type=NORMAL, label = If_15_0
                        (block $If_15_0
                            ;; writeIfAndStartTrueBlock
                            (if $if1 (ref.eq (local.get $var1) (global.get $java$io$OutputStreamWriter_cls))
                                (then
                                    (local.set $phi2 (local.get $var0))
                                    (local.set $phi3 (local.get $arg0))
                                    (local.set $phi4 (local.get $var1))
                                    (br $If_15_0)
                                    ;; Start else
                                    )(else
                                    ;; writeIfAndStartTrueBlock
                                    (if $if2 (select (i32.const 0) (i32.const 1) (ref.eq (local.get $var1) (global.get $java$io$FileWriter_cls)))
                                        (then
                                            (local.set $phi7 (local.get $var0))
                                            (local.set $phi8 (local.get $arg0))
                                            (local.set $phi9 (local.get $var1))
                                            (br $If_11_1)
                                            ;; Start else
                                            )(else
                                            (local.set $phi2 (local.get $var0))
                                            (local.set $phi3 (local.get $arg0))
                                            (local.set $phi4 (local.get $var1))
                                            (br $If_15_0)
                                            ))
                                    ;; finishIfBlock
                                    ))
                            ;; finishIfBlock
                            )
                        ;; finishBlock
                        (local.set $var5 (local.get $phi2))
                        (local.set $var6 (local.get $phi3))
                        (drop (call $jdk$internal$misc$InternalLock_i))
                        (drop (call $jdk$internal$misc$InternalLock_i))
                        ;; startBlock type=NORMAL, label = If_59_0
                        (block $If_59_0
                            ;; writeIfAndStartTrueBlock
                            (if $if3 (i32.eq (struct.get $jdk$internal$misc$InternalLock_rtt $CAN_USE_INTERNAL_LOCK (global.get $jdk$internal$misc$InternalLock_cls)) (i32.const 0))
                                (then
                                    (local.set $phi12 (local.get $var6))
                                    (local.set $phi13 (local.get $var6))
                                    (br $If_59_0)
                                    ;; Start else
                                    )(else
                                    (drop (call $jdk$internal$misc$InternalLock_i))
                                    (local.set $var11 (struct.new $jdk$internal$misc$InternalLock (struct.get $jdk$internal$misc$InternalLock_rtt $factoryFor (global.get $jdk$internal$misc$InternalLock_cls)) (ref.func $jdk$internal$misc$InternalLock_vt) (ref.null noextern) (struct.get $jdk$internal$misc$InternalLock_rtt $classImplTypes (global.get $jdk$internal$misc$InternalLock_cls)) (ref.null none)))
                                    (struct.set $jdk$internal$misc$InternalLock $lock (ref.cast (ref null $jdk$internal$misc$InternalLock) (local.get $var11)) (ref.cast (ref null $java$lang$Object) (struct.new $java$util$concurrent$locks$ReentrantLock (struct.get $java$util$concurrent$locks$ReentrantLock_rtt $factoryFor (global.get $java$util$concurrent$locks$ReentrantLock_cls)) (ref.func $java$util$concurrent$locks$ReentrantLock_vt) (ref.null noextern) (struct.get $java$util$concurrent$locks$ReentrantLock_rtt $classImplTypes (global.get $java$util$concurrent$locks$ReentrantLock_cls)))))
                                    ;; Here was a goto statement
                                    (local.set $phi12 (local.get $var6))
                                    (local.set $phi13 (local.get $var11))
                                    (br $If_59_0)
                                    ))
                            ;; finishIfBlock
                            )
                        ;; finishBlock
                        (local.set $phi14 (local.get $phi13))
                        (struct.set $java$io$Writer $lock (ref.cast (ref null $java$io$Writer) (local.get $var5)) (ref.cast (ref null $java$lang$Object) (local.get $phi14)))
                        ;; Here was a goto statement
                        (br $If_11_0)
                        ))
                ;; finishIfBlock
                )
            ;; finishBlock
            (local.set $var10 (local.get $phi7))
            (struct.set $java$io$Writer $lock (ref.cast (ref null $java$io$Writer) (local.get $var10)) (ref.cast (ref null $java$lang$Object) (local.get $phi8)))
            (local.set $phi2 (local.get $phi7))
            (local.set $phi3 (local.get $phi8))
            (local.set $phi4 (local.get $phi9))
            (br $If_11_0)
            )
        ;; finishBlock
        (return)
        (unreachable))
    (func $java$io$Writer$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$io$Writer $lock (ref.cast (ref null $java$io$Writer) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $var0)))
        (return)
        (unreachable))
    (func $java$nio$HeapByteBuffer$V$$clinit$$$ (type $t541) (param $unused (ref null $java$lang$Object))
        (local $phi0 i32)
        (local $var1 (ref null $java$lang$Object))
        (local $var2 i64)
        (local $var3 (ref null $java$lang$Object))
        (local $var4 i64)
        ;; startBlock type=NORMAL, label = If_4_0
        (block $If_4_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ne (call $java$lang$Class$Z$desiredAssertionStatus$$ (call $java$nio$HeapByteBuffer_i)) (i32.const 0))
                (then
                    (local.set $phi0 (i32.const 0))
                    (br $If_4_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi0 (i32.const 1))
                    (br $If_4_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (drop (call $java$nio$HeapByteBuffer_i))
        (struct.set $java$nio$HeapByteBuffer_rtt $$assertionsDisabled (ref.cast (ref null $java$nio$HeapByteBuffer_rtt) (call $java$nio$HeapByteBuffer_i)) (local.get $phi0))
        (drop (call $java$nio$HeapByteBuffer_i))
        (local.set $var1 (struct.get $java$nio$Buffer_rtt $UNSAFE (global.get $java$nio$Buffer_cls)))
        (local.set $var2 (i64.extend_i32_s (i32.const 0)))
        (drop (call $java$nio$HeapByteBuffer_i))
        (struct.set $java$nio$HeapByteBuffer_rtt $ARRAY_BASE_OFFSET (ref.cast (ref null $java$nio$HeapByteBuffer_rtt) (call $java$nio$HeapByteBuffer_i)) (local.get $var2))
        (drop (call $java$nio$HeapByteBuffer_i))
        (local.set $var3 (struct.get $java$nio$Buffer_rtt $UNSAFE (global.get $java$nio$Buffer_cls)))
        (local.set $var4 (i64.extend_i32_s (i32.const 0)))
        (drop (call $java$nio$HeapByteBuffer_i))
        (struct.set $java$nio$HeapByteBuffer_rtt $ARRAY_INDEX_SCALE (ref.cast (ref null $java$nio$HeapByteBuffer_rtt) (call $java$nio$HeapByteBuffer_i)) (local.get $var4))
        (return)
        (unreachable))
    (func $java$nio$HeapByteBuffer$V$$init$$$B$I$I$Ljava$lang$foreign$MemorySegment$ (type $t604) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 i32) (param $arg2 i32) (param $arg3 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (call $java$nio$ByteBuffer$V$$init$$I$I$I$I$$B$I$Ljava$lang$foreign$MemorySegment$ (local.get $var0) (i32.const -1) (local.get $arg1) (i32.add (local.get $arg1) (local.get $arg2)) (array.len $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $arg0)))) (local.get $arg0) (i32.const 0) (local.get $arg3))
        (drop (call $java$nio$HeapByteBuffer_i))
        (struct.set $java$nio$Buffer $address (ref.cast (ref null $java$nio$Buffer) (local.get $var0)) (struct.get $java$nio$HeapByteBuffer_rtt $ARRAY_BASE_OFFSET (global.get $java$nio$HeapByteBuffer_cls)))
        (return)
        (unreachable))
    (func $java$nio$HeapByteBuffer$V$$init$$I$I$Ljava$lang$foreign$MemorySegment$ (type $t605) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (param $arg1 i32) (param $arg2 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (call $java$nio$ByteBuffer$V$$init$$I$I$I$I$$B$I$Ljava$lang$foreign$MemorySegment$ (local.get $var0) (i32.const -1) (i32.const 0) (local.get $arg1) (local.get $arg0) (struct.new $i32_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t7 (local.get $arg0))) (i32.const 0) (local.get $arg2))
        (drop (call $java$nio$HeapByteBuffer_i))
        (struct.set $java$nio$Buffer $address (ref.cast (ref null $java$nio$Buffer) (local.get $var0)) (struct.get $java$nio$HeapByteBuffer_rtt $ARRAY_BASE_OFFSET (global.get $java$nio$HeapByteBuffer_cls)))
        (return)
        (unreachable))
    (func $java$nio$HeapByteBuffer$Z$isReadOnly$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (return (i32.const 0))
        (unreachable))
    (func $java$nio$HeapByteBuffer$B$get$I (type $t551) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 i32)
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (struct.get $java$nio$ByteBuffer $hb (ref.cast (ref null $java$nio$ByteBuffer) (local.get $var0))))
        (local.set $var2 (call_indirect (type $t551) (local.get $var0) (local.get $arg0) (call_ref $t0 (i32.const 26) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
        (return (array.get $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $var1))) (call $java$nio$HeapByteBuffer$I$ix$I (local.get $var0) (local.get $var2))))
        (unreachable))
    (func $java$nio$HeapByteBuffer$I$ix$I (type $t551) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (result i32)
        (return (i32.add (local.get $arg0) (struct.get $java$nio$ByteBuffer $offset (ref.cast (ref null $java$nio$ByteBuffer) (local.get $thisref)))))
        (unreachable))
    (func $java$nio$HeapByteBuffer$Ljava$nio$ByteBuffer$$get$$B$I$I (type $t573) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 i32) (param $arg2 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 i32)
        (local $var2 i32)
        (local $var3 i32)
        (local $var4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $var6 i32)
        (local $var7 (ref null $java$lang$Object))
        (local $phi8 i32)
        (local $phi9 i32)
        (local $phi10 i32)
        (local $phi11 (ref null $java$lang$Object))
        (local $var12 (ref null $java$lang$Object))
        (local $var13 i32)
        (local $var14 i32)
        (local $var15 i32)
        (local $var16 i32)
        (local $phi17 i32)
        (local $phi18 i32)
        (local.set $var0 (local.get $thisref))
        (call_indirect (type $t541) (local.get $var0) (call_ref $t0 (i32.const 21) (struct.get $java$lang$Object $vt_resolver (local.get $var0))))
        (local.set $var1 (array.len $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $arg0)))))
        (drop (call $jdk$internal$util$Preconditions_i))
        ;; startBlock type=NORMAL, label = If_44_0
        (block $If_44_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.lt_s (i32.or (i32.or (local.get $var1) (local.get $arg1)) (local.get $arg2)) (i32.const 0))
                (then
                    (local.set $phi8 (local.get $arg1))
                    (local.set $phi9 (local.get $arg2))
                    (local.set $phi10 (local.get $var1))
                    (local.set $phi11 (ref.null none))
                    (br $If_44_0)
                    ;; Start else
                    )(else
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (i32.le_s (local.get $arg2) (i32.sub (local.get $var1) (local.get $arg1)))
                        (then
                            (local.set $var2 (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 20) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
                            (local.set $var3 (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 22) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
                            ;; writeIfAndStartTrueBlock
                            (if $if2 (i32.le_s (local.get $arg2) (i32.sub (local.get $var3) (local.get $var2)))
                                (then
                                    (local.set $var5 (struct.get $java$nio$ByteBuffer $hb (ref.cast (ref null $java$nio$ByteBuffer) (local.get $var0))))
                                    (local.set $phi18 (i32.add (local.get $var2) (struct.get $java$nio$ByteBuffer $offset (ref.cast (ref null $java$nio$ByteBuffer) (local.get $var0)))))
                                    (local.set $var16 (local.get $phi18))
                                    (local.set $phi17 (i32.const 0))
                                    ;; startBlock type=LOOP, label = L627184073_24
                                    (loop $L627184073_24
                                        ;; writeIfAndStartTrueBlock
                                        (if $if3 (i32.ge_s (local.get $phi17) (local.get $arg2))
                                            (then
                                                (local.set $var6 (i32.add (local.get $var2) (local.get $arg2)))
                                                (local.set $var7 (call_indirect (type $t565) (local.get $var0) (local.get $var6) (call_ref $t0 (i32.const 112) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
                                                (return (local.get $var0))
                                                ;; Start else
                                                )(else
                                                (array.set $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $arg0))) (i32.add (local.get $arg1) (local.get $phi17)) (array.get $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $var5))) (i32.add (local.get $var16) (local.get $phi17))))
                                                (local.set $phi17 (i32.add (local.get $phi17) (i32.const 1)))
                                                ;; Here was a goto statement
                                                (br $L627184073_24)
                                                ))
                                        ;; finishIfBlock
                                        )
                                    ;; finishBlock
                                    ;; Start else
                                    )(else
                                    (local.set $var4 (struct.new $java$nio$BufferUnderflowException (struct.get $java$nio$BufferUnderflowException_rtt $factoryFor (global.get $java$nio$BufferUnderflowException_cls)) (ref.func $java$nio$BufferUnderflowException_vt) (ref.null noextern) (struct.get $java$nio$BufferUnderflowException_rtt $classImplTypes (global.get $java$nio$BufferUnderflowException_cls)) (ref.null none) (ref.null none)))
                                    (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var4)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                    (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var4)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                    (throw $javaexception (local.get $var4))
                                    ))
                            ;; finishIfBlock
                            ;; Start else
                            )(else
                            (local.set $phi8 (local.get $arg1))
                            (local.set $phi9 (local.get $arg2))
                            (local.set $phi10 (local.get $var1))
                            (local.set $phi11 (ref.null none))
                            (br $If_44_0)
                            ))
                    ;; finishIfBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (local.set $var12 (local.get $phi11))
        (local.set $var13 (local.get $phi8))
        (local.set $var14 (local.get $phi9))
        (local.set $var15 (local.get $phi10))
        (drop (call $jdk$internal$util$Preconditions_i))
        (throw $javaexception (call $jdk$internal$util$Preconditions$Ljava$lang$RuntimeException$$outOfBoundsCheckFromIndexSize$Ljava$util$function$BiFunction$$I$I$I (call $jdk$internal$util$Preconditions_i) (local.get $var12) (local.get $var13) (local.get $var14) (local.get $var15)))
        (unreachable))
    (func $java$util$concurrent$ConcurrentHashMap$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (struct.new $java$util$HashMap (struct.get $java$util$HashMap_rtt $factoryFor (global.get $java$util$HashMap_cls)) (ref.func $java$util$HashMap_vt) (ref.null noextern) (struct.get $java$util$HashMap_rtt $classImplTypes (global.get $java$util$HashMap_cls)) (f32.const 0.0) (i32.const 0) (i32.const 0) (ref.null none) (i32.const 0) (ref.null none)))
        (struct.set $java$util$HashMap $loadFactor (ref.cast (ref null $java$util$HashMap) (local.get $var1)) (f32.const 0.75))
        (struct.set $java$util$concurrent$ConcurrentHashMap $delegate (ref.cast (ref null $java$util$concurrent$ConcurrentHashMap) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $var1)))
        (return)
        (unreachable))
    (func $java$util$concurrent$ConcurrentHashMap$V$$init$$I (type $t575) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (struct.new $java$util$HashMap (struct.get $java$util$HashMap_rtt $factoryFor (global.get $java$util$HashMap_cls)) (ref.func $java$util$HashMap_vt) (ref.null noextern) (struct.get $java$util$HashMap_rtt $classImplTypes (global.get $java$util$HashMap_cls)) (f32.const 0.0) (i32.const 0) (i32.const 0) (ref.null none) (i32.const 0) (ref.null none)))
        (call $java$util$HashMap$V$$init$$I$F (local.get $var1) (local.get $arg0) (f32.const 0.75))
        (struct.set $java$util$concurrent$ConcurrentHashMap $delegate (ref.cast (ref null $java$util$concurrent$ConcurrentHashMap) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $var1)))
        (return)
        (unreachable))
    (func $java$util$concurrent$ConcurrentHashMap$Ljava$lang$Object$$put$Ljava$lang$Object$$Ljava$lang$Object$ (type $t561) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (struct.get $java$util$concurrent$ConcurrentHashMap $delegate (ref.cast (ref null $java$util$concurrent$ConcurrentHashMap) (local.get $thisref))))
        (return (call_indirect (type $t561) (local.get $var0) (local.get $arg0) (local.get $arg1) (call_ref $t0 (i32.const 101) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var0))))))
        (unreachable))
    (func $java$util$concurrent$ConcurrentHashMap$Ljava$lang$Object$$get$Ljava$lang$Object$ (type $t559) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (struct.get $java$util$concurrent$ConcurrentHashMap $delegate (ref.cast (ref null $java$util$concurrent$ConcurrentHashMap) (local.get $thisref))))
        (return (call_indirect (type $t559) (local.get $var0) (local.get $arg0) (call_ref $t0 (i32.const 123) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var0))))))
        (unreachable))
    (func $java$util$concurrent$ConcurrentHashMap$Ljava$lang$Object$$computeIfAbsent$Ljava$lang$Object$$Ljava$util$function$Function$ (type $t561) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (struct.get $java$util$concurrent$ConcurrentHashMap $delegate (ref.cast (ref null $java$util$concurrent$ConcurrentHashMap) (local.get $thisref))))
        (return (call_indirect (type $t561) (local.get $var0) (local.get $arg0) (local.get $arg1) (call_ref $t0 (i32.const 12) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var0))))))
        (unreachable))
    (func $java$util$concurrent$ConcurrentHashMap$Ljava$lang$String$$toString$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (struct.get $java$util$concurrent$ConcurrentHashMap $delegate (ref.cast (ref null $java$util$concurrent$ConcurrentHashMap) (local.get $thisref))))
        (return (call_indirect (type $t553) (local.get $var0) (call_ref $t0 (i32.const 0) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
        (unreachable))
    (func $java$util$concurrent$ConcurrentHashMap$Z$equals$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (struct.get $java$util$concurrent$ConcurrentHashMap $delegate (ref.cast (ref null $java$util$concurrent$ConcurrentHashMap) (local.get $thisref))))
        (return (call_indirect (type $t554) (local.get $var0) (local.get $arg0) (call_ref $t0 (i32.const 1) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var0))))))
        (unreachable))
    (func $java$util$concurrent$ConcurrentHashMap$I$hashCode$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (struct.get $java$util$concurrent$ConcurrentHashMap $delegate (ref.cast (ref null $java$util$concurrent$ConcurrentHashMap) (local.get $thisref))))
        (return (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 2) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var0))))))
        (unreachable))
    (func $java$util$concurrent$ConcurrentHashMap$I$size$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (struct.get $java$util$concurrent$ConcurrentHashMap $delegate (ref.cast (ref null $java$util$concurrent$ConcurrentHashMap) (local.get $thisref))))
        (return (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 100) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var0))))))
        (unreachable))
    (func $java$util$concurrent$ConcurrentHashMap$Z$containsKey$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (struct.get $java$util$concurrent$ConcurrentHashMap $delegate (ref.cast (ref null $java$util$concurrent$ConcurrentHashMap) (local.get $thisref))))
        (return (call_indirect (type $t554) (local.get $var0) (local.get $arg0) (call_ref $t0 (i32.const 124) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var0))))))
        (unreachable))
    (func $java$util$concurrent$ConcurrentHashMap$Ljava$util$Set$$entrySet$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (struct.get $java$util$concurrent$ConcurrentHashMap $delegate (ref.cast (ref null $java$util$concurrent$ConcurrentHashMap) (local.get $thisref))))
        (return (call_indirect (type $t553) (local.get $var0) (call_ref $t0 (i32.const 125) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var0))))))
        (unreachable))
    (func $java$util$concurrent$ConcurrentHashMap$Z$isEmpty$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (struct.get $java$util$concurrent$ConcurrentHashMap $delegate (ref.cast (ref null $java$util$concurrent$ConcurrentHashMap) (local.get $thisref))))
        (return (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 38) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var0))))))
        (unreachable))
    (func $java$util$ImmutableCollections$AbstractImmutableMap$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$util$ImmutableCollections$AbstractImmutableMap$Ljava$lang$Object$$computeIfAbsent$Ljava$lang$Object$$Ljava$util$function$Function$ (type $t561) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (drop (call $java$util$ImmutableCollections_i))
        (local.set $var0 (struct.new $java$lang$UnsupportedOperationException (struct.get $java$lang$UnsupportedOperationException_rtt $factoryFor (global.get $java$lang$UnsupportedOperationException_cls)) (ref.func $java$lang$UnsupportedOperationException_vt) (ref.null noextern) (struct.get $java$lang$UnsupportedOperationException_rtt $classImplTypes (global.get $java$lang$UnsupportedOperationException_cls)) (ref.null none) (ref.null none)))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (local.set $phi1 (local.get $var0))
        (throw $javaexception (local.get $phi1))
        (unreachable))
    (func $java$util$ImmutableCollections$AbstractImmutableMap$Ljava$lang$Object$$put$Ljava$lang$Object$$Ljava$lang$Object$ (type $t561) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (drop (call $java$util$ImmutableCollections_i))
        (local.set $var0 (struct.new $java$lang$UnsupportedOperationException (struct.get $java$lang$UnsupportedOperationException_rtt $factoryFor (global.get $java$lang$UnsupportedOperationException_cls)) (ref.func $java$lang$UnsupportedOperationException_vt) (ref.null noextern) (struct.get $java$lang$UnsupportedOperationException_rtt $classImplTypes (global.get $java$lang$UnsupportedOperationException_cls)) (ref.null none) (ref.null none)))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (local.set $phi1 (local.get $var0))
        (throw $javaexception (local.get $phi1))
        (unreachable))
    (func $java$util$AbstractCollection$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$util$AbstractCollection$Ljava$lang$String$$toString$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $phi4 (ref null $java$lang$Object))
        (local $phi5 (ref null $java$lang$Object))
        (local $phi6 (ref null $java$lang$Object))
        (local $var7 (ref null $java$lang$Object))
        (local $var8 (ref null $java$lang$Object))
        (local $var9 (ref null $java$lang$Object))
        (local $phi10 (ref null $java$lang$Object))
        (local $phi11 (ref null $java$lang$Object))
        (local $phi12 (ref null $java$lang$Object))
        (local $var13 (ref null $java$lang$Object))
        (local $var14 (ref null $java$lang$Object))
        (local $var15 (ref null $java$lang$Object))
        (local $var16 (ref null $java$lang$Object))
        (local $var17 (ref null $java$lang$Object))
        (local $var18 (ref null $java$lang$Object))
        (local $var19 (ref null $java$lang$Object))
        (local $var20 (ref null $java$lang$Object))
        (local $phi21 (ref null $java$lang$Object))
        (local $var22 (ref null $java$lang$Object))
        (local $phi23 (ref null $java$lang$Object))
        (local $var24 (ref null $java$lang$Object))
        (local $phi25 (ref null $java$lang$Object))
        (local $var26 (ref null $java$lang$Object))
        (local $var27 (ref null $java$lang$Object))
        (local $phi28 (ref null $java$lang$Object))
        (local $var29 (ref null $java$lang$Object))
        (local $phi30 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (call_indirect (type $t553) (local.get $var0) (call_ref $t0 (i32.const 146) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
        ;; writeIfAndStartTrueBlock
        (if $if0 (i32.ne (call_indirect (type $t555) (local.get $var1) (call_ref $t0 (i32.const 48) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var1))))) (i32.const 0))
            (then
                (local.set $var2 (struct.new $java$lang$StringBuilder (struct.get $java$lang$StringBuilder_rtt $factoryFor (global.get $java$lang$StringBuilder_cls)) (ref.func $java$lang$StringBuilder_vt) (ref.null noextern) (struct.get $java$lang$StringBuilder_rtt $classImplTypes (global.get $java$lang$StringBuilder_cls))))
                (call $java$lang$StringBuilder$V$initializeWith$I (local.get $var2) (i32.const 10))
                (local.set $var29 (call $java$lang$Character$Ljava$lang$String$$toString$C (global.get $java$lang$Character_cls) (i32.const 91)))
                (local.set $phi30 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var2) (local.get $var29)))
                (local.set $var3 (local.get $phi30))
                (local.set $phi4 (local.get $var0))
                (local.set $phi5 (local.get $var1))
                (local.set $phi6 (local.get $var2))
                ;; startBlock type=LOOP, label = L926593443
                (loop $L926593443
                    (local.set $var7 (local.get $phi5))
                    (local.set $var8 (call_indirect (type $t553) (local.get $var7) (call_ref $t0 (i32.const 80) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var7))))))
                    (local.set $var9 (local.get $phi6))
                    ;; startBlock type=NORMAL, label = If_31_0
                    (block $If_31_0
                        ;; writeIfAndStartTrueBlock
                        (if $if1 (select (i32.const 0) (i32.const 1) (ref.eq (local.get $var8) (local.get $phi4)))
                            (then
                                (local.set $phi10 (local.get $var8))
                                (local.set $phi11 (local.get $var9))
                                (local.set $phi12 (local.get $var8))
                                (br $If_31_0)
                                ;; Start else
                                )(else
                                ;; Here was a goto statement
                                (local.set $phi10 (local.get $var8))
                                (local.set $phi11 (local.get $var9))
                                (local.set $phi12 (global.get $stringpool_98))
                                (br $If_31_0)
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    (local.set $var26 (local.get $phi11))
                    ;; startBlock type=NORMAL, label = If_95_0
                    (block $If_95_0
                        ;; writeIfAndStartTrueBlock
                        (if $if2 (ref.is_null (local.get $phi12))
                            (then
                                (local.set $phi28 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var26) (global.get $stringpool_0)))
                                (br $If_95_0)
                                ;; Start else
                                )(else
                                (local.set $var27 (call_indirect (type $t553) (local.get $phi12) (call_ref $t0 (i32.const 0) (struct.get $java$lang$Object $vt_resolver (local.get $phi12)))))
                                (local.set $phi28 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var26) (local.get $var27)))
                                (br $If_95_0)
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    (local.set $var13 (local.get $phi28))
                    (local.set $var14 (local.get $phi5))
                    ;; writeIfAndStartTrueBlock
                    (if $if3 (i32.ne (call_indirect (type $t555) (local.get $var14) (call_ref $t0 (i32.const 48) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var14))))) (i32.const 0))
                        (then
                            (local.set $var17 (local.get $phi6))
                            (local.set $var22 (call $java$lang$Character$Ljava$lang$String$$toString$C (global.get $java$lang$Character_cls) (i32.const 44)))
                            (local.set $phi23 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var17) (local.get $var22)))
                            (local.set $var18 (local.get $phi23))
                            (local.set $var20 (call $java$lang$Character$Ljava$lang$String$$toString$C (global.get $java$lang$Character_cls) (i32.const 32)))
                            (local.set $phi21 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var18) (local.get $var20)))
                            (local.set $var19 (local.get $phi21))
                            ;; Here was a goto statement
                            (br $L926593443)
                            ;; Start else
                            )(else
                            (local.set $var15 (local.get $phi6))
                            (local.set $var24 (call $java$lang$Character$Ljava$lang$String$$toString$C (global.get $java$lang$Character_cls) (i32.const 93)))
                            (local.set $phi25 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var15) (local.get $var24)))
                            (local.set $var16 (local.get $phi25))
                            (return (call $java$lang$StringBuilder$Ljava$lang$String$$toString$$ (local.get $var16)))
                            ))
                    ;; finishIfBlock
                    )
                ;; finishBlock
                ;; Start else
                )(else
                (return (global.get $stringpool_97))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$util$AbstractCollection$Z$contains$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 (ref null $java$lang$Object))
        (local $phi4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $var6 (ref null $java$lang$Object))
        (local $phi7 (ref null $java$lang$Object))
        (local $phi8 (ref null $java$lang$Object))
        (local $var9 (ref null $java$lang$Object))
        (local $var10 (ref null $java$lang$Object))
        (local $var11 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (call_indirect (type $t553) (local.get $var0) (call_ref $t0 (i32.const 146) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
        ;; startBlock type=NORMAL, label = If_8_0
        (block $If_8_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg0)))
                (then
                    (local.set $phi7 (local.get $var0))
                    (local.set $phi8 (local.get $var1))
                    ;; startBlock type=LOOP, label = L910517336
                    (loop $L910517336
                        (local.set $var9 (local.get $phi8))
                        ;; writeIfAndStartTrueBlock
                        (if $if1 (i32.eq (call_indirect (type $t555) (local.get $var9) (call_ref $t0 (i32.const 48) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var9))))) (i32.const 0))
                            (then
                                (local.set $phi2 (local.get $phi7))
                                (local.set $phi3 (local.get $arg0))
                                (local.set $phi4 (local.get $phi8))
                                (br $If_8_0)
                                ;; Start else
                                )(else
                                (local.set $var10 (local.get $phi8))
                                (local.set $var11 (call_indirect (type $t553) (local.get $var10) (call_ref $t0 (i32.const 80) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var10))))))
                                ;; writeIfAndStartTrueBlock
                                (if $if2 (i32.eq (call_indirect (type $t554) (local.get $arg0) (local.get $var11) (call_ref $t0 (i32.const 1) (struct.get $java$lang$Object $vt_resolver (local.get $arg0)))) (i32.const 0))
                                    (then
                                        (br $L910517336)
                                        ;; Start else
                                        )(else
                                        (return (i32.const 1))
                                        ))
                                ;; finishIfBlock
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    ;; Start else
                    )(else
                    (local.set $phi2 (local.get $var0))
                    (local.set $phi3 (local.get $arg0))
                    (local.set $phi4 (local.get $var1))
                    ;; startBlock type=LOOP, label = L1271306434
                    (loop $L1271306434
                        (local.set $var5 (local.get $phi4))
                        ;; writeIfAndStartTrueBlock
                        (if $if3 (i32.eq (call_indirect (type $t555) (local.get $var5) (call_ref $t0 (i32.const 48) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var5))))) (i32.const 0))
                            (then
                                (br $If_8_0)
                                ;; Start else
                                )(else
                                (local.set $var6 (local.get $phi4))
                                ;; writeIfAndStartTrueBlock
                                (if $if4 (select (i32.const 0) (i32.const 1) (ref.is_null (call_indirect (type $t553) (local.get $var6) (call_ref $t0 (i32.const 80) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var6)))))))
                                    (then
                                        (br $L1271306434)
                                        ;; Start else
                                        )(else
                                        (return (i32.const 1))
                                        ))
                                ;; finishIfBlock
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (i32.const 0))
        (unreachable))
    (func $java$util$AbstractCollection$Z$containsAll$Ljava$util$Collection$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $var6 (ref null $java$lang$Object))
        (local $var7 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (call_indirect (type $t553) (local.get $arg0) (call_ref $t0 (i32.const 146) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $arg0))))))
        (local.set $phi2 (local.get $var0))
        (local.set $phi3 (local.get $var1))
        ;; startBlock type=LOOP, label = L59599393
        (loop $L59599393
            (local.set $var4 (local.get $phi3))
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.eq (call_indirect (type $t555) (local.get $var4) (call_ref $t0 (i32.const 48) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var4))))) (i32.const 0))
                (then
                    (return (i32.const 1))
                    ;; Start else
                    )(else
                    (local.set $var5 (local.get $phi3))
                    (local.set $var6 (call_indirect (type $t553) (local.get $var5) (call_ref $t0 (i32.const 80) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var5))))))
                    (local.set $var7 (local.get $phi2))
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (i32.ne (call_indirect (type $t554) (local.get $var7) (local.get $var6) (call_ref $t0 (i32.const 126) (struct.get $java$lang$Object $vt_resolver (local.get $var7)))) (i32.const 0))
                        (then
                            ;; Here was a goto statement
                            (br $L59599393)
                            ;; Start else
                            )(else
                            (return (i32.const 0))
                            ))
                    ;; finishIfBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (unreachable))
    (func $java$util$AbstractCollection$Z$isEmpty$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 i32)
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = If_5_0
        (block $If_5_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ne (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 100) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))) (i32.const 0))
                (then
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (i32.const 0))
                    (br $If_5_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (i32.const 1))
                    (br $If_5_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi2))
        (unreachable))
    (func $java$util$AbstractList$ListItr$V$$init$$Ljava$util$AbstractList$$I (type $t606) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 i32)
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$util$AbstractList$ListItr $this$0 (ref.cast (ref null $java$util$AbstractList$ListItr) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (struct.set $java$util$AbstractList$Itr $this$0 (ref.cast (ref null $java$util$AbstractList$Itr) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (struct.set $java$util$AbstractList$Itr $cursor (ref.cast (ref null $java$util$AbstractList$Itr) (local.get $var0)) (i32.const 0))
        (struct.set $java$util$AbstractList$Itr $lastRet (ref.cast (ref null $java$util$AbstractList$Itr) (local.get $var0)) (i32.const -1))
        (struct.set $java$util$AbstractList$Itr $expectedModCount (ref.cast (ref null $java$util$AbstractList$Itr) (local.get $var0)) (struct.get $java$util$AbstractList $modCount (ref.cast (ref null $java$util$AbstractList) (struct.get $java$util$AbstractList$Itr $this$0 (ref.cast (ref null $java$util$AbstractList$Itr) (local.get $var0))))))
        (struct.set $java$util$AbstractList$Itr $cursor (ref.cast (ref null $java$util$AbstractList$Itr) (local.get $var0)) (local.get $arg1))
        (return)
        (unreachable))
    (func $java$util$AbstractList$ListItr$I$previousIndex$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (return (i32.sub (struct.get $java$util$AbstractList$Itr $cursor (ref.cast (ref null $java$util$AbstractList$Itr) (local.get $thisref))) (i32.const 1)))
        (unreachable))
    (func $java$nio$charset$CoderMalfunctionError$V$$init$$Ljava$lang$Exception$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (return)
        (unreachable))
    (func $java$lang$Long$V$$clinit$$$ (type $t541) (param $unused (ref null $java$lang$Object))
        (drop (call $java$lang$Long_i))
        (struct.set $java$lang$Long_rtt $TYPE (ref.cast (ref null $java$lang$Long_rtt) (call $java$lang$Long_i)) (ref.cast (ref null $java$lang$Object) (global.get $primitive_long)))
        (return)
        (unreachable))
    (func $java$lang$Long$Ljava$lang$Long$$valueOf$J (type $t567) (param $unused (ref null $java$lang$Object)) (param $arg0 i64) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (drop (call $java$lang$Long_i))
        (local.set $var0 (struct.new $java$lang$Long (struct.get $java$lang$Long_rtt $factoryFor (global.get $java$lang$Long_cls)) (ref.func $java$lang$Long_vt) (ref.null noextern) (struct.get $java$lang$Long_rtt $classImplTypes (global.get $java$lang$Long_cls)) (i64.const 0)))
        (struct.set $java$lang$Long $value (ref.cast (ref null $java$lang$Long) (local.get $var0)) (local.get $arg0))
        (return (local.get $var0))
        (unreachable))
    (func $java$lang$Long$V$$init$$J (type $t607) (param $thisref (ref null $java$lang$Object)) (param $arg0 i64)
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Long $value (ref.cast (ref null $java$lang$Long) (local.get $var0)) (local.get $arg0))
        (return)
        (unreachable))
    (func $java$lang$Long$I$compareTo$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (return (call $java$lang$Long$I$compareTo$Ljava$lang$Long$ (local.get $var0) (local.get $var1)))
        (unreachable))
    (func $java$lang$Long$I$compareTo$Ljava$lang$Long$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 i64)
        (local $var1 i64)
        (local $phi2 i64)
        (local.set $var0 (struct.get $java$lang$Long $value (ref.cast (ref null $java$lang$Long) (local.get $thisref))))
        (local.set $phi2 (struct.get $java$lang$Long $value (ref.cast (ref null $java$lang$Long) (local.get $arg0))))
        (local.set $var1 (local.get $phi2))
        (drop (call $java$lang$Long_i))
        (return (call $java$lang$Long$I$compare$J$J (call $java$lang$Long_i) (local.get $var0) (local.get $var1)))
        (unreachable))
    (func $java$lang$Long$J$longValue$$ (type $t562) (param $thisref (ref null $java$lang$Object)) (result i64)
        (return (struct.get $java$lang$Long $value (ref.cast (ref null $java$lang$Long) (local.get $thisref))))
        (unreachable))
    (func $java$lang$Long$I$compare$J$J (type $t608) (param $unused (ref null $java$lang$Object)) (param $arg0 i64) (param $arg1 i64) (result i32)
        (local $phi0 i64)
        (local $phi1 i64)
        (local $phi2 i32)
        ;; startBlock type=NORMAL, label = If_4_0
        (block $If_4_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ge_s (call $compare_i64 (local.get $arg0) (local.get $arg1)) (i32.const 0))
                (then
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (i32.ne (call $compare_i64 (local.get $arg0) (local.get $arg1)) (i32.const 0))
                        (then
                            (local.set $phi0 (local.get $arg0))
                            (local.set $phi1 (local.get $arg1))
                            (local.set $phi2 (i32.const 1))
                            (br $If_4_0)
                            ;; Start else
                            )(else
                            ;; Here was a goto statement
                            (local.set $phi0 (local.get $arg0))
                            (local.set $phi1 (local.get $arg1))
                            (local.set $phi2 (i32.const 0))
                            (br $If_4_0)
                            ))
                    ;; finishIfBlock
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi0 (local.get $arg0))
                    (local.set $phi1 (local.get $arg1))
                    (local.set $phi2 (i32.const -1))
                    (br $If_4_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi2))
        (unreachable))
    (func $java$lang$Long$I$numberOfLeadingZeros$J (type $t609) (param $unused (ref null $java$lang$Object)) (param $arg0 i64) (result i32)
        (local $var0 i32)
        (local $var1 i32)
        (local $var2 i32)
        (local $phi3 i64)
        (local $phi4 i32)
        (local $phi5 i32)
        (local $var6 i32)
        (local.set $var0 (i32.wrap_i64 (i64.shr_u (local.get $arg0) (i64.extend_i32_s (i32.const 32)))))
        ;; startBlock type=NORMAL, label = If_7_0
        (block $If_7_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ne (local.get $var0) (i32.const 0))
                (then
                    (drop (call $java$lang$Integer_i))
                    (local.set $var6 (i32.add (i32.const 32) (call $java$lang$Integer$I$numberOfLeadingZeros$I (call $java$lang$Integer_i) (local.get $var0))))
                    (local.set $phi3 (local.get $arg0))
                    (local.set $phi4 (local.get $var0))
                    (local.set $phi5 (local.get $var6))
                    (br $If_7_0)
                    ;; Start else
                    )(else
                    (local.set $var1 (i32.wrap_i64 (local.get $arg0)))
                    (drop (call $java$lang$Integer_i))
                    (local.set $var2 (i32.add (i32.const 32) (call $java$lang$Integer$I$numberOfLeadingZeros$I (call $java$lang$Integer_i) (local.get $var1))))
                    ;; Here was a goto statement
                    (local.set $phi3 (local.get $arg0))
                    (local.set $phi4 (local.get $var0))
                    (local.set $phi5 (local.get $var2))
                    (br $If_7_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi5))
        (unreachable))
    (func $java$lang$Long$I$numberOfTrailingZeros$J (type $t609) (param $unused (ref null $java$lang$Object)) (param $arg0 i64) (result i32)
        (local $var0 i32)
        (local $var1 i32)
        (local $var2 i32)
        (local $phi3 i64)
        (local $phi4 i32)
        (local $phi5 i32)
        (local $var6 i32)
        (local.set $var0 (i32.wrap_i64 (local.get $arg0)))
        ;; startBlock type=NORMAL, label = If_5_0
        (block $If_5_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ne (local.get $var0) (i32.const 0))
                (then
                    (drop (call $java$lang$Integer_i))
                    (local.set $var6 (i32.add (i32.const 32) (call $java$lang$Integer$I$numberOfTrailingZeros$I (call $java$lang$Integer_i) (local.get $var0))))
                    (local.set $phi3 (local.get $arg0))
                    (local.set $phi4 (local.get $var0))
                    (local.set $phi5 (local.get $var6))
                    (br $If_5_0)
                    ;; Start else
                    )(else
                    (local.set $var1 (i32.wrap_i64 (i64.shr_u (local.get $arg0) (i64.extend_i32_s (i32.const 32)))))
                    (drop (call $java$lang$Integer_i))
                    (local.set $var2 (i32.add (i32.const 32) (call $java$lang$Integer$I$numberOfTrailingZeros$I (call $java$lang$Integer_i) (local.get $var1))))
                    ;; Here was a goto statement
                    (local.set $phi3 (local.get $arg0))
                    (local.set $phi4 (local.get $var0))
                    (local.set $phi5 (local.get $var2))
                    (br $If_5_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi5))
        (unreachable))
    (func $java$lang$Long$I$intValue$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (return (i32.wrap_i64 (struct.get $java$lang$Long $value (ref.cast (ref null $java$lang$Long) (local.get $thisref)))))
        (unreachable))
    (func $java$lang$Long$Ljava$lang$String$$toString$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 i64)
        (local.set $var0 (struct.get $java$lang$Long $value (ref.cast (ref null $java$lang$Long) (local.get $thisref))))
        (drop (call $java$lang$Long_i))
        (return (call $java$lang$Long$Ljava$lang$String$$toString$J$I (call $java$lang$Long_i) (local.get $var0) (i32.const 10)))
        (unreachable))
    (func $java$lang$Long$Z$equals$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 i64)
        (local $phi5 (ref null $java$lang$Object))
        (local $phi6 (ref null $java$lang$Object))
        (local $phi7 (ref null $java$lang$Object))
        (local $phi8 i32)
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.eq (local.get $var0) (local.get $arg0)))
            (then
                ;; startBlock type=NORMAL, label = If_9_0
                (block $If_9_0
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (ref.is_null (local.get $arg0))
                        (then
                            (local.set $phi1 (local.get $var0))
                            (local.set $phi2 (local.get $arg0))
                            (br $If_9_0)
                            ;; Start else
                            )(else
                            ;; writeIfAndStartTrueBlock
                            (if $if2 (ref.eq (call $runtimetypeof (local.get $var0)) (call $runtimetypeof (local.get $arg0)))
                                (then
                                    (local.set $var3 (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
                                    (local.set $var4 (struct.get $java$lang$Long $value (ref.cast (ref null $java$lang$Long) (local.get $var0))))
                                    ;; startBlock type=NORMAL, label = If_28_0
                                    (block $If_28_0
                                        ;; writeIfAndStartTrueBlock
                                        (if $if3 (i32.ne (call $compare_i64 (local.get $var4) (call $java$lang$Long$J$longValue$$ (local.get $var3))) (i32.const 0))
                                            (then
                                                (local.set $phi5 (local.get $var0))
                                                (local.set $phi6 (local.get $arg0))
                                                (local.set $phi7 (local.get $var3))
                                                (local.set $phi8 (i32.const 0))
                                                (br $If_28_0)
                                                ;; Start else
                                                )(else
                                                ;; Here was a goto statement
                                                (local.set $phi5 (local.get $var0))
                                                (local.set $phi6 (local.get $arg0))
                                                (local.set $phi7 (local.get $var3))
                                                (local.set $phi8 (i32.const 1))
                                                (br $If_28_0)
                                                ))
                                        ;; finishIfBlock
                                        )
                                    ;; finishBlock
                                    (return (local.get $phi8))
                                    ;; Start else
                                    )(else
                                    (local.set $phi1 (local.get $var0))
                                    (local.set $phi2 (local.get $arg0))
                                    (br $If_9_0)
                                    ))
                            ;; finishIfBlock
                            ))
                    ;; finishIfBlock
                    )
                ;; finishBlock
                (return (i32.const 0))
                ;; Start else
                )(else
                (return (i32.const 1))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$lang$Long$I$hashCode$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (return (i32.wrap_i64 (struct.get $java$lang$Long $value (ref.cast (ref null $java$lang$Long) (local.get $thisref)))))
        (unreachable))
    (func $de$mirkosertic$bytecoder$classlib$BytecoderCharset$V$$init$$Ljava$lang$String$$$Ljava$lang$String$ (type $t560) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$nio$charset$Charset $canonicalName (ref.cast (ref null $java$nio$charset$Charset) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (struct.set $java$nio$charset$Charset $aliases (ref.cast (ref null $java$nio$charset$Charset) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg1)))
        (return)
        (unreachable))
    (func $de$mirkosertic$bytecoder$classlib$BytecoderCharset$Ljava$nio$charset$CharsetDecoder$$newDecoder$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (drop (call $de$mirkosertic$bytecoder$classlib$BytecoderCharsetDecoder_i))
        (local.set $var1 (struct.new $de$mirkosertic$bytecoder$classlib$BytecoderCharsetDecoder (struct.get $de$mirkosertic$bytecoder$classlib$BytecoderCharsetDecoder_rtt $factoryFor (global.get $de$mirkosertic$bytecoder$classlib$BytecoderCharsetDecoder_cls)) (ref.func $de$mirkosertic$bytecoder$classlib$BytecoderCharsetDecoder_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$BytecoderCharsetDecoder_rtt $classImplTypes (global.get $de$mirkosertic$bytecoder$classlib$BytecoderCharsetDecoder_cls)) (ref.null none) (ref.null none) (f32.const 0.0) (i32.const 0) (ref.null none) (ref.null none) (f32.const 0.0)))
        (call $java$nio$charset$CharsetDecoder$V$$init$$Ljava$nio$charset$Charset$$F$F$Ljava$lang$String$ (local.get $var1) (local.get $var0) (f32.const 1.1) (f32.const 3.0) (global.get $stringpool_85))
        (return (local.get $var1))
        (unreachable))
    (func $de$mirkosertic$bytecoder$classlib$BytecoderCharset$Ljava$nio$charset$CharsetEncoder$$newEncoder$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (drop (call $de$mirkosertic$bytecoder$classlib$BytecoderCharsetEncoder_i))
        (local.set $var1 (struct.new $de$mirkosertic$bytecoder$classlib$BytecoderCharsetEncoder (struct.get $de$mirkosertic$bytecoder$classlib$BytecoderCharsetEncoder_rtt $factoryFor (global.get $de$mirkosertic$bytecoder$classlib$BytecoderCharsetEncoder_cls)) (ref.func $de$mirkosertic$bytecoder$classlib$BytecoderCharsetEncoder_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$BytecoderCharsetEncoder_rtt $classImplTypes (global.get $de$mirkosertic$bytecoder$classlib$BytecoderCharsetEncoder_cls)) (ref.null none) (ref.null none) (i32.const 0) (ref.null none) (ref.null none) (ref.null none) (f32.const 0.0) (f32.const 0.0)))
        (local.set $var2 (struct.new $i32_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t7 (i32.const 1))))
        (array.set $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $var2))) (i32.const 0) (i32.const 63))
        (call $java$nio$charset$CharsetEncoder$V$$init$$Ljava$nio$charset$Charset$$F$F$$B (local.get $var1) (local.get $var0) (f32.const 1.1) (f32.const 3.0) (local.get $var2))
        (return (local.get $var1))
        (unreachable))
    (func $java$nio$HeapCharBuffer$V$$clinit$$$ (type $t541) (param $unused (ref null $java$lang$Object))
        (local $phi0 i32)
        (local $var1 (ref null $java$lang$Object))
        (local $var2 i64)
        (local $var3 (ref null $java$lang$Object))
        (local $var4 i64)
        ;; startBlock type=NORMAL, label = If_4_0
        (block $If_4_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ne (call $java$lang$Class$Z$desiredAssertionStatus$$ (call $java$nio$HeapCharBuffer_i)) (i32.const 0))
                (then
                    (local.set $phi0 (i32.const 0))
                    (br $If_4_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi0 (i32.const 1))
                    (br $If_4_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (drop (call $java$nio$HeapCharBuffer_i))
        (struct.set $java$nio$HeapCharBuffer_rtt $$assertionsDisabled (ref.cast (ref null $java$nio$HeapCharBuffer_rtt) (call $java$nio$HeapCharBuffer_i)) (local.get $phi0))
        (drop (call $java$nio$HeapCharBuffer_i))
        (local.set $var1 (struct.get $java$nio$Buffer_rtt $UNSAFE (global.get $java$nio$Buffer_cls)))
        (local.set $var2 (i64.extend_i32_s (i32.const 0)))
        (drop (call $java$nio$HeapCharBuffer_i))
        (struct.set $java$nio$HeapCharBuffer_rtt $ARRAY_BASE_OFFSET (ref.cast (ref null $java$nio$HeapCharBuffer_rtt) (call $java$nio$HeapCharBuffer_i)) (local.get $var2))
        (drop (call $java$nio$HeapCharBuffer_i))
        (local.set $var3 (struct.get $java$nio$Buffer_rtt $UNSAFE (global.get $java$nio$Buffer_cls)))
        (local.set $var4 (i64.extend_i32_s (i32.const 0)))
        (drop (call $java$nio$HeapCharBuffer_i))
        (struct.set $java$nio$HeapCharBuffer_rtt $ARRAY_INDEX_SCALE (ref.cast (ref null $java$nio$HeapCharBuffer_rtt) (call $java$nio$HeapCharBuffer_i)) (local.get $var4))
        (return)
        (unreachable))
    (func $java$nio$HeapCharBuffer$V$$init$$I$I$Ljava$lang$foreign$MemorySegment$ (type $t605) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (param $arg1 i32) (param $arg2 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (struct.new $i32_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t7 (local.get $arg0))))
        (call $java$nio$Buffer$V$$init$$I$I$I$I$Ljava$lang$foreign$MemorySegment$ (local.get $var0) (i32.const -1) (i32.const 0) (local.get $arg1) (local.get $arg0) (local.get $arg2))
        (struct.set $java$nio$CharBuffer $hb (ref.cast (ref null $java$nio$CharBuffer) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $var1)))
        (struct.set $java$nio$CharBuffer $offset (ref.cast (ref null $java$nio$CharBuffer) (local.get $var0)) (i32.const 0))
        (drop (call $java$nio$HeapCharBuffer_i))
        (struct.set $java$nio$Buffer $address (ref.cast (ref null $java$nio$Buffer) (local.get $var0)) (struct.get $java$nio$HeapCharBuffer_rtt $ARRAY_BASE_OFFSET (global.get $java$nio$HeapCharBuffer_cls)))
        (return)
        (unreachable))
    (func $java$nio$HeapCharBuffer$Z$isReadOnly$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (return (i32.const 0))
        (unreachable))
    (func $java$nio$HeapCharBuffer$Ljava$nio$CharBuffer$$put$Ljava$lang$String$$I$I (type $t573) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 i32) (param $arg2 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 i32)
        (local $var2 i32)
        (local $var3 i32)
        (local $var4 i32)
        (local $var5 i32)
        (local $phi6 (ref null $java$lang$Object))
        (local $phi7 (ref null $java$lang$Object))
        (local $phi8 i32)
        (local $phi9 i32)
        (local $phi10 i32)
        (local $phi11 i32)
        (local $phi12 i32)
        (local $phi13 i32)
        (local $var14 i32)
        (local $var15 i32)
        (local $var16 (ref null $java$lang$Object))
        (local $var17 (ref null $java$lang$Object))
        (local $var18 i32)
        (local $var19 i32)
        (local $var20 (ref null $java$lang$Object))
        (local $var21 (ref null $java$lang$Object))
        (local $var22 i32)
        (local $var23 (ref null $java$lang$Object))
        (local $var24 i32)
        (local $var25 (ref null $java$lang$Object))
        (local $phi26 i32)
        (local $phi27 i32)
        (local $phi28 i32)
        (local $phi29 (ref null $java$lang$Object))
        (local $var30 (ref null $java$lang$Object))
        (local $var31 i32)
        (local $var32 i32)
        (local $var33 i32)
        (local.set $var0 (local.get $thisref))
        (call_indirect (type $t541) (local.get $var0) (call_ref $t0 (i32.const 21) (struct.get $java$lang$Object $vt_resolver (local.get $var0))))
        (local.set $var1 (i32.sub (local.get $arg2) (local.get $arg1)))
        (local.set $var2 (call $java$lang$String$I$length$$ (local.get $arg0)))
        (drop (call $jdk$internal$util$Preconditions_i))
        ;; startBlock type=NORMAL, label = If_96_0
        (block $If_96_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.lt_s (i32.or (i32.or (local.get $var2) (local.get $arg1)) (local.get $var1)) (i32.const 0))
                (then
                    (local.set $phi26 (local.get $arg1))
                    (local.set $phi27 (local.get $var1))
                    (local.set $phi28 (local.get $var2))
                    (local.set $phi29 (ref.null none))
                    (br $If_96_0)
                    ;; Start else
                    )(else
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (i32.le_s (local.get $var1) (i32.sub (local.get $var2) (local.get $arg1)))
                        (then
                            (local.set $var3 (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 20) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
                            (local.set $var4 (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 22) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
                            ;; startBlock type=NORMAL, label = If_20_0
                            (block $If_20_0
                                ;; writeIfAndStartTrueBlock
                                (if $if2 (i32.gt_s (local.get $var3) (local.get $var4))
                                    (then
                                        (local.set $phi6 (local.get $var0))
                                        (local.set $phi7 (local.get $arg0))
                                        (local.set $phi8 (local.get $arg1))
                                        (local.set $phi9 (local.get $arg2))
                                        (local.set $phi10 (local.get $var1))
                                        (local.set $phi11 (local.get $var3))
                                        (local.set $phi12 (local.get $var4))
                                        (local.set $phi13 (i32.const 0))
                                        (br $If_20_0)
                                        ;; Start else
                                        )(else
                                        (local.set $var5 (i32.sub (local.get $var4) (local.get $var3)))
                                        ;; Here was a goto statement
                                        (local.set $phi6 (local.get $var0))
                                        (local.set $phi7 (local.get $arg0))
                                        (local.set $phi8 (local.get $arg1))
                                        (local.set $phi9 (local.get $arg2))
                                        (local.set $phi10 (local.get $var1))
                                        (local.set $phi11 (local.get $var3))
                                        (local.set $phi12 (local.get $var4))
                                        (local.set $phi13 (local.get $var5))
                                        (br $If_20_0)
                                        ))
                                ;; finishIfBlock
                                )
                            ;; finishBlock
                            (local.set $var14 (local.get $phi13))
                            (local.set $var15 (local.get $phi10))
                            ;; writeIfAndStartTrueBlock
                            (if $if3 (i32.le_s (local.get $var15) (local.get $var14))
                                (then
                                    (local.set $var17 (local.get $phi7))
                                    (local.set $var18 (local.get $phi8))
                                    (local.set $var19 (local.get $phi9))
                                    (local.set $var20 (struct.get $java$nio$CharBuffer $hb (ref.cast (ref null $java$nio$CharBuffer) (local.get $phi6))))
                                    (local.set $var21 (local.get $phi6))
                                    (local.set $var22 (local.get $phi11))
                                    (call $java$lang$String$V$getChars$I$I$$C$I (local.get $var17) (local.get $var18) (local.get $var19) (local.get $var20) (call $java$nio$HeapCharBuffer$I$ix$I (local.get $var21) (local.get $var22)))
                                    (local.set $var23 (local.get $phi6))
                                    (local.set $var24 (i32.add (local.get $phi11) (local.get $phi10)))
                                    (local.set $var25 (call_indirect (type $t565) (local.get $var23) (local.get $var24) (call_ref $t0 (i32.const 69) (struct.get $java$lang$Object $vt_resolver (local.get $var23)))))
                                    (return (local.get $phi6))
                                    ;; Start else
                                    )(else
                                    (local.set $var16 (struct.new $java$nio$BufferOverflowException (struct.get $java$nio$BufferOverflowException_rtt $factoryFor (global.get $java$nio$BufferOverflowException_cls)) (ref.func $java$nio$BufferOverflowException_vt) (ref.null noextern) (struct.get $java$nio$BufferOverflowException_rtt $classImplTypes (global.get $java$nio$BufferOverflowException_cls)) (ref.null none) (ref.null none)))
                                    (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var16)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                    (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var16)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                    (throw $javaexception (local.get $var16))
                                    ))
                            ;; finishIfBlock
                            ;; Start else
                            )(else
                            (local.set $phi26 (local.get $arg1))
                            (local.set $phi27 (local.get $var1))
                            (local.set $phi28 (local.get $var2))
                            (local.set $phi29 (ref.null none))
                            (br $If_96_0)
                            ))
                    ;; finishIfBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (local.set $var30 (local.get $phi29))
        (local.set $var31 (local.get $phi26))
        (local.set $var32 (local.get $phi27))
        (local.set $var33 (local.get $phi28))
        (drop (call $jdk$internal$util$Preconditions_i))
        (throw $javaexception (call $jdk$internal$util$Preconditions$Ljava$lang$RuntimeException$$outOfBoundsCheckFromIndexSize$Ljava$util$function$BiFunction$$I$I$I (call $jdk$internal$util$Preconditions_i) (local.get $var30) (local.get $var31) (local.get $var32) (local.get $var33)))
        (unreachable))
    (func $java$nio$HeapCharBuffer$I$ix$I (type $t551) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (result i32)
        (return (i32.add (local.get $arg0) (struct.get $java$nio$CharBuffer $offset (ref.cast (ref null $java$nio$CharBuffer) (local.get $thisref)))))
        (unreachable))
    (func $java$nio$HeapCharBuffer$Ljava$nio$CharBuffer$$put$C (type $t565) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 i32)
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (struct.get $java$nio$CharBuffer $hb (ref.cast (ref null $java$nio$CharBuffer) (local.get $var0))))
        (local.set $var2 (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 23) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
        (array.set $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $var1))) (call $java$nio$HeapCharBuffer$I$ix$I (local.get $var0) (local.get $var2)) (local.get $arg0))
        (return (local.get $var0))
        (unreachable))
    (func $java$nio$HeapCharBuffer$Ljava$nio$ByteOrder$$charRegionOrder$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (return (call $java$nio$HeapCharBuffer$Ljava$nio$ByteOrder$$order$$ (local.get $var0)))
        (unreachable))
    (func $java$nio$HeapCharBuffer$Ljava$nio$ByteOrder$$order$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $phi0 (ref null $java$lang$Object))
        (drop (call $java$nio$ByteOrder_i))
        (drop (call $java$nio$ByteOrder_i))
        (local.set $phi0 (struct.get $java$nio$ByteOrder_rtt $NATIVE_ORDER (global.get $java$nio$ByteOrder_cls)))
        (return (local.get $phi0))
        (unreachable))
    (func $java$nio$HeapCharBuffer$C$get$I (type $t551) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 i32)
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (struct.get $java$nio$CharBuffer $hb (ref.cast (ref null $java$nio$CharBuffer) (local.get $var0))))
        (local.set $var2 (call_indirect (type $t551) (local.get $var0) (local.get $arg0) (call_ref $t0 (i32.const 26) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
        (return (array.get $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $var1))) (call $java$nio$HeapCharBuffer$I$ix$I (local.get $var0) (local.get $var2))))
        (unreachable))
    (func $java$nio$HeapCharBuffer$Ljava$lang$String$$toString$I$I (type $t595) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (param $arg1 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = TryCatch_6_0
        (block $TryCatch_6_0
            ;; startTryCatch
            (try $trycatch_0 (do
                    (local.set $var2 (struct.new $java$lang$String (struct.get $java$lang$String_rtt $factoryFor (global.get $java$lang$String_cls)) (ref.func $java$lang$String_vt) (ref.null noextern) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
                    (local.set $var3 (struct.get $java$nio$CharBuffer $hb (ref.cast (ref null $java$nio$CharBuffer) (local.get $var0))))
                    (call $java$lang$String$V$initializeWith$$C$I$I (local.get $var2) (local.get $var3) (i32.add (local.get $arg0) (struct.get $java$nio$CharBuffer $offset (ref.cast (ref null $java$nio$CharBuffer) (local.get $var0)))) (i32.sub (local.get $arg1) (local.get $arg0)))
                    (br $TryCatch_6_0)
                    )
                (catch $javaexception
                    ;; startCatchBlock
                    (global.set $lastcaughtexception (pop (ref null $java$lang$Object)))
                    (if $catchcheck_0 (call $instanceOf (global.get $lastcaughtexception) (struct.get $java$lang$StringIndexOutOfBoundsException_rtt $factoryFor (global.get $java$lang$StringIndexOutOfBoundsException_cls)))
                        (then
                            (local.set $var1 (struct.new $java$lang$IndexOutOfBoundsException (struct.get $java$lang$IndexOutOfBoundsException_rtt $factoryFor (global.get $java$lang$IndexOutOfBoundsException_cls)) (ref.func $java$lang$IndexOutOfBoundsException_vt) (ref.null noextern) (struct.get $java$lang$IndexOutOfBoundsException_rtt $classImplTypes (global.get $java$lang$IndexOutOfBoundsException_cls)) (ref.null none) (ref.null none)))
                            (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                            (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                            (throw $javaexception (local.get $var1))
                            ))
                    (rethrow $trycatch_0)
                    )
                )
            ;; finishTryCatch
            )
        ;; finishBlock
        (return (local.get $var2))
        (unreachable))
    (func $java$nio$HeapCharBuffer$Ljava$nio$CharBuffer$$put$$C$I$I (type $t573) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 i32) (param $arg2 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 i32)
        (local $var2 i32)
        (local $var3 i32)
        (local $var4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $var6 i32)
        (local $var7 (ref null $java$lang$Object))
        (local $phi8 i32)
        (local $phi9 i32)
        (local $phi10 i32)
        (local $phi11 (ref null $java$lang$Object))
        (local $var12 (ref null $java$lang$Object))
        (local $var13 i32)
        (local $var14 i32)
        (local $var15 i32)
        (local $var16 i32)
        (local $phi17 i32)
        (local $phi18 i32)
        (local.set $var0 (local.get $thisref))
        (call_indirect (type $t541) (local.get $var0) (call_ref $t0 (i32.const 21) (struct.get $java$lang$Object $vt_resolver (local.get $var0))))
        (local.set $var1 (array.len $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $arg0)))))
        (drop (call $jdk$internal$util$Preconditions_i))
        ;; startBlock type=NORMAL, label = If_44_0
        (block $If_44_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.lt_s (i32.or (i32.or (local.get $var1) (local.get $arg1)) (local.get $arg2)) (i32.const 0))
                (then
                    (local.set $phi8 (local.get $arg1))
                    (local.set $phi9 (local.get $arg2))
                    (local.set $phi10 (local.get $var1))
                    (local.set $phi11 (ref.null none))
                    (br $If_44_0)
                    ;; Start else
                    )(else
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (i32.le_s (local.get $arg2) (i32.sub (local.get $var1) (local.get $arg1)))
                        (then
                            (local.set $var2 (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 20) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
                            (local.set $var3 (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 22) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
                            ;; writeIfAndStartTrueBlock
                            (if $if2 (i32.le_s (local.get $arg2) (i32.sub (local.get $var3) (local.get $var2)))
                                (then
                                    (local.set $var5 (struct.get $java$nio$CharBuffer $hb (ref.cast (ref null $java$nio$CharBuffer) (local.get $var0))))
                                    (local.set $phi18 (i32.add (local.get $var2) (struct.get $java$nio$CharBuffer $offset (ref.cast (ref null $java$nio$CharBuffer) (local.get $var0)))))
                                    (local.set $var16 (local.get $phi18))
                                    (local.set $phi17 (i32.const 0))
                                    ;; startBlock type=LOOP, label = L723415724_24
                                    (loop $L723415724_24
                                        ;; writeIfAndStartTrueBlock
                                        (if $if3 (i32.ge_s (local.get $phi17) (local.get $arg2))
                                            (then
                                                (local.set $var6 (i32.add (local.get $var2) (local.get $arg2)))
                                                (local.set $var7 (call_indirect (type $t565) (local.get $var0) (local.get $var6) (call_ref $t0 (i32.const 69) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
                                                (return (local.get $var0))
                                                ;; Start else
                                                )(else
                                                (array.set $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $var5))) (i32.add (local.get $var16) (local.get $phi17)) (array.get $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $arg0))) (i32.add (local.get $arg1) (local.get $phi17))))
                                                (local.set $phi17 (i32.add (local.get $phi17) (i32.const 1)))
                                                ;; Here was a goto statement
                                                (br $L723415724_24)
                                                ))
                                        ;; finishIfBlock
                                        )
                                    ;; finishBlock
                                    ;; Start else
                                    )(else
                                    (local.set $var4 (struct.new $java$nio$BufferOverflowException (struct.get $java$nio$BufferOverflowException_rtt $factoryFor (global.get $java$nio$BufferOverflowException_cls)) (ref.func $java$nio$BufferOverflowException_vt) (ref.null noextern) (struct.get $java$nio$BufferOverflowException_rtt $classImplTypes (global.get $java$nio$BufferOverflowException_cls)) (ref.null none) (ref.null none)))
                                    (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var4)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                    (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var4)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                    (throw $javaexception (local.get $var4))
                                    ))
                            ;; finishIfBlock
                            ;; Start else
                            )(else
                            (local.set $phi8 (local.get $arg1))
                            (local.set $phi9 (local.get $arg2))
                            (local.set $phi10 (local.get $var1))
                            (local.set $phi11 (ref.null none))
                            (br $If_44_0)
                            ))
                    ;; finishIfBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (local.set $var12 (local.get $phi11))
        (local.set $var13 (local.get $phi8))
        (local.set $var14 (local.get $phi9))
        (local.set $var15 (local.get $phi10))
        (drop (call $jdk$internal$util$Preconditions_i))
        (throw $javaexception (call $jdk$internal$util$Preconditions$Ljava$lang$RuntimeException$$outOfBoundsCheckFromIndexSize$Ljava$util$function$BiFunction$$I$I$I (call $jdk$internal$util$Preconditions_i) (local.get $var12) (local.get $var13) (local.get $var14) (local.get $var15)))
        (unreachable))
    (func $java$nio$HeapCharBuffer$Ljava$nio$CharBuffer$$put$I$C (type $t595) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (param $arg1 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 i32)
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (struct.get $java$nio$CharBuffer $hb (ref.cast (ref null $java$nio$CharBuffer) (local.get $var0))))
        (local.set $var2 (call_indirect (type $t551) (local.get $var0) (local.get $arg0) (call_ref $t0 (i32.const 26) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
        (array.set $t7 (struct.get $i32_array $data (ref.cast (ref null $i32_array) (local.get $var1))) (call $java$nio$HeapCharBuffer$I$ix$I (local.get $var0) (local.get $var2)) (local.get $arg1))
        (return (local.get $var0))
        (unreachable))
    (func $java$lang$Byte$V$$clinit$$$ (type $t541) (param $unused (ref null $java$lang$Object))
        (drop (call $java$lang$Byte_i))
        (struct.set $java$lang$Byte_rtt $TYPE (ref.cast (ref null $java$lang$Byte_rtt) (call $java$lang$Byte_i)) (ref.cast (ref null $java$lang$Object) (global.get $primitive_byte)))
        (return)
        (unreachable))
    (func $java$lang$Byte$Ljava$lang$Byte$$valueOf$B (type $t565) (param $unused (ref null $java$lang$Object)) (param $arg0 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (drop (call $java$lang$Byte_i))
        (local.set $var0 (struct.new $java$lang$Byte (struct.get $java$lang$Byte_rtt $factoryFor (global.get $java$lang$Byte_cls)) (ref.func $java$lang$Byte_vt) (ref.null noextern) (struct.get $java$lang$Byte_rtt $classImplTypes (global.get $java$lang$Byte_cls)) (i32.const 0)))
        (struct.set $java$lang$Byte $value (ref.cast (ref null $java$lang$Byte) (local.get $var0)) (local.get $arg0))
        (return (local.get $var0))
        (unreachable))
    (func $java$lang$Byte$V$$init$$B (type $t575) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32)
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Byte $value (ref.cast (ref null $java$lang$Byte) (local.get $var0)) (local.get $arg0))
        (return)
        (unreachable))
    (func $java$lang$Byte$I$compare$B$B (type $t564) (param $unused (ref null $java$lang$Object)) (param $arg0 i32) (param $arg1 i32) (result i32)
        (local $phi0 i32)
        (local $phi1 i32)
        (local $phi2 i32)
        ;; startBlock type=NORMAL, label = If_3_0
        (block $If_3_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ge_s (local.get $arg0) (local.get $arg1))
                (then
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (i32.ne (local.get $arg0) (local.get $arg1))
                        (then
                            (local.set $phi0 (local.get $arg0))
                            (local.set $phi1 (local.get $arg1))
                            (local.set $phi2 (i32.const 1))
                            (br $If_3_0)
                            ;; Start else
                            )(else
                            ;; Here was a goto statement
                            (local.set $phi0 (local.get $arg0))
                            (local.set $phi1 (local.get $arg1))
                            (local.set $phi2 (i32.const 0))
                            (br $If_3_0)
                            ))
                    ;; finishIfBlock
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi0 (local.get $arg0))
                    (local.set $phi1 (local.get $arg1))
                    (local.set $phi2 (i32.const -1))
                    (br $If_3_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi2))
        (unreachable))
    (func $java$lang$Byte$I$compareTo$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (return (call $java$lang$Byte$I$compareTo$Ljava$lang$Byte$ (local.get $var0) (local.get $var1)))
        (unreachable))
    (func $java$lang$Byte$I$compareTo$Ljava$lang$Byte$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 i32)
        (local $var1 i32)
        (local $phi2 i32)
        (local $phi3 i32)
        (local $phi4 i32)
        (local $phi5 i32)
        (local.set $var0 (struct.get $java$lang$Byte $value (ref.cast (ref null $java$lang$Byte) (local.get $thisref))))
        (local.set $var1 (call_indirect (type $t555) (local.get $arg0) (call_ref $t0 (i32.const 104) (struct.get $java$lang$Object $vt_resolver (local.get $arg0)))))
        (drop (call $java$lang$Byte_i))
        ;; startBlock type=NORMAL, label = If_11_0
        (block $If_11_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ge_s (local.get $var0) (local.get $var1))
                (then
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (i32.ne (local.get $var0) (local.get $var1))
                        (then
                            (local.set $phi2 (local.get $var0))
                            (local.set $phi3 (local.get $var1))
                            (local.set $phi4 (i32.const 1))
                            (br $If_11_0)
                            ;; Start else
                            )(else
                            ;; Here was a goto statement
                            (local.set $phi2 (local.get $var0))
                            (local.set $phi3 (local.get $var1))
                            (local.set $phi4 (i32.const 0))
                            (br $If_11_0)
                            ))
                    ;; finishIfBlock
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi2 (local.get $var0))
                    (local.set $phi3 (local.get $var1))
                    (local.set $phi4 (i32.const -1))
                    (br $If_11_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (local.set $phi5 (local.get $phi4))
        (return (local.get $phi5))
        (unreachable))
    (func $java$lang$Byte$I$intValue$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (return (struct.get $java$lang$Byte $value (ref.cast (ref null $java$lang$Byte) (local.get $thisref))))
        (unreachable))
    (func $java$lang$Byte$Ljava$lang$String$$toString$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 i32)
        (local.set $var0 (struct.get $java$lang$Byte $value (ref.cast (ref null $java$lang$Byte) (local.get $thisref))))
        (drop (call $java$lang$Byte_i))
        (return (call $java$lang$Byte$Ljava$lang$String$$toString$B$I (call $java$lang$Byte_i) (local.get $var0) (i32.const 10)))
        (unreachable))
    (func $java$lang$Byte$Z$equals$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 i32)
        (local $phi5 (ref null $java$lang$Object))
        (local $phi6 (ref null $java$lang$Object))
        (local $phi7 (ref null $java$lang$Object))
        (local $phi8 i32)
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.eq (local.get $var0) (local.get $arg0)))
            (then
                ;; startBlock type=NORMAL, label = If_9_0
                (block $If_9_0
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (ref.is_null (local.get $arg0))
                        (then
                            (local.set $phi1 (local.get $var0))
                            (local.set $phi2 (local.get $arg0))
                            (br $If_9_0)
                            ;; Start else
                            )(else
                            ;; writeIfAndStartTrueBlock
                            (if $if2 (ref.eq (call $runtimetypeof (local.get $var0)) (call $runtimetypeof (local.get $arg0)))
                                (then
                                    (local.set $var3 (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
                                    (local.set $var4 (struct.get $java$lang$Byte $value (ref.cast (ref null $java$lang$Byte) (local.get $var0))))
                                    ;; startBlock type=NORMAL, label = If_27_0
                                    (block $If_27_0
                                        ;; writeIfAndStartTrueBlock
                                        (if $if3 (i32.ne (local.get $var4) (call_indirect (type $t555) (local.get $var3) (call_ref $t0 (i32.const 104) (struct.get $java$lang$Object $vt_resolver (local.get $var3)))))
                                            (then
                                                (local.set $phi5 (local.get $var0))
                                                (local.set $phi6 (local.get $arg0))
                                                (local.set $phi7 (local.get $var3))
                                                (local.set $phi8 (i32.const 0))
                                                (br $If_27_0)
                                                ;; Start else
                                                )(else
                                                ;; Here was a goto statement
                                                (local.set $phi5 (local.get $var0))
                                                (local.set $phi6 (local.get $arg0))
                                                (local.set $phi7 (local.get $var3))
                                                (local.set $phi8 (i32.const 1))
                                                (br $If_27_0)
                                                ))
                                        ;; finishIfBlock
                                        )
                                    ;; finishBlock
                                    (return (local.get $phi8))
                                    ;; Start else
                                    )(else
                                    (local.set $phi1 (local.get $var0))
                                    (local.set $phi2 (local.get $arg0))
                                    (br $If_9_0)
                                    ))
                            ;; finishIfBlock
                            ))
                    ;; finishIfBlock
                    )
                ;; finishBlock
                (return (i32.const 0))
                ;; Start else
                )(else
                (return (i32.const 1))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$lang$Byte$I$hashCode$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (return (struct.get $java$lang$Byte $value (ref.cast (ref null $java$lang$Byte) (local.get $thisref))))
        (unreachable))
    (func $java$util$Properties$V$$clinit$$$ (type $t541) (param $unused (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (drop (call $jdk$internal$misc$Unsafe_i))
        (drop (call $jdk$internal$misc$Unsafe_i))
        (local.set $phi1 (struct.get $jdk$internal$misc$Unsafe_rtt $INSTANCE (global.get $jdk$internal$misc$Unsafe_cls)))
        (local.set $var0 (local.get $phi1))
        (drop (call $java$util$Properties_i))
        (struct.set $java$util$Properties_rtt $UNSAFE (ref.cast (ref null $java$util$Properties_rtt) (call $java$util$Properties_i)) (ref.cast (ref null $java$lang$Object) (local.get $var0)))
        (return)
        (unreachable))
    (func $java$util$Properties$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$util$Hashtable $modCount (ref.cast (ref null $java$util$Hashtable) (local.get $var0)) (i32.const 0))
        (local.set $var1 (struct.new $java$util$concurrent$ConcurrentHashMap (struct.get $java$util$concurrent$ConcurrentHashMap_rtt $factoryFor (global.get $java$util$concurrent$ConcurrentHashMap_cls)) (ref.func $java$util$concurrent$ConcurrentHashMap_vt) (ref.null noextern) (struct.get $java$util$concurrent$ConcurrentHashMap_rtt $classImplTypes (global.get $java$util$concurrent$ConcurrentHashMap_cls)) (ref.null none)))
        (local.set $var2 (struct.new $java$util$HashMap (struct.get $java$util$HashMap_rtt $factoryFor (global.get $java$util$HashMap_cls)) (ref.func $java$util$HashMap_vt) (ref.null noextern) (struct.get $java$util$HashMap_rtt $classImplTypes (global.get $java$util$HashMap_cls)) (f32.const 0.0) (i32.const 0) (i32.const 0) (ref.null none) (i32.const 0) (ref.null none)))
        (call $java$util$HashMap$V$$init$$I$F (local.get $var2) (i32.const 8) (f32.const 0.75))
        (struct.set $java$util$concurrent$ConcurrentHashMap $delegate (ref.cast (ref null $java$util$concurrent$ConcurrentHashMap) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (local.get $var2)))
        (struct.set $java$util$Properties $map (ref.cast (ref null $java$util$Properties) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $var1)))
        (struct.set $java$util$Properties $defaults (ref.cast (ref null $java$util$Properties) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (drop (call $java$util$Properties_i))
        (return)
        (unreachable))
    (func $java$util$Properties$V$$init$$Ljava$util$Properties$$I (type $t606) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$util$Hashtable $modCount (ref.cast (ref null $java$util$Hashtable) (local.get $var0)) (i32.const 0))
        (local.set $var1 (struct.new $java$util$concurrent$ConcurrentHashMap (struct.get $java$util$concurrent$ConcurrentHashMap_rtt $factoryFor (global.get $java$util$concurrent$ConcurrentHashMap_cls)) (ref.func $java$util$concurrent$ConcurrentHashMap_vt) (ref.null noextern) (struct.get $java$util$concurrent$ConcurrentHashMap_rtt $classImplTypes (global.get $java$util$concurrent$ConcurrentHashMap_cls)) (ref.null none)))
        (local.set $var2 (struct.new $java$util$HashMap (struct.get $java$util$HashMap_rtt $factoryFor (global.get $java$util$HashMap_cls)) (ref.func $java$util$HashMap_vt) (ref.null noextern) (struct.get $java$util$HashMap_rtt $classImplTypes (global.get $java$util$HashMap_cls)) (f32.const 0.0) (i32.const 0) (i32.const 0) (ref.null none) (i32.const 0) (ref.null none)))
        (call $java$util$HashMap$V$$init$$I$F (local.get $var2) (local.get $arg1) (f32.const 0.75))
        (struct.set $java$util$concurrent$ConcurrentHashMap $delegate (ref.cast (ref null $java$util$concurrent$ConcurrentHashMap) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (local.get $var2)))
        (struct.set $java$util$Properties $map (ref.cast (ref null $java$util$Properties) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $var1)))
        (struct.set $java$util$Properties $defaults (ref.cast (ref null $java$util$Properties) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (drop (call $java$util$Properties_i))
        (return)
        (unreachable))
    (func $java$util$Properties$Ljava$lang$Object$$setProperty$Ljava$lang$String$$Ljava$lang$String$ (type $t561) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (return (call $java$util$Properties$Ljava$lang$Object$$put$Ljava$lang$Object$$Ljava$lang$Object$ (local.get $var0) (local.get $arg0) (local.get $arg1)))
        (unreachable))
    (func $java$util$Properties$Ljava$lang$Object$$put$Ljava$lang$Object$$Ljava$lang$Object$ (type $t561) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (struct.get $java$util$Properties $map (ref.cast (ref null $java$util$Properties) (local.get $thisref))))
        (return (call $java$util$concurrent$ConcurrentHashMap$Ljava$lang$Object$$put$Ljava$lang$Object$$Ljava$lang$Object$ (local.get $var0) (local.get $arg0) (local.get $arg1)))
        (unreachable))
    (func $java$util$Properties$Ljava$lang$String$$getProperty$Ljava$lang$String$ (type $t559) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $phi3 (ref null $java$lang$Object))
        (local $phi4 (ref null $java$lang$Object))
        (local $phi5 (ref null $java$lang$Object))
        (local $phi6 (ref null $java$lang$Object))
        (local $var7 (ref null $java$lang$Object))
        (local $var8 (ref null $java$lang$Object))
        (local $var9 (ref null $java$lang$Object))
        (local $var10 (ref null $java$lang$Object))
        (local $phi11 (ref null $java$lang$Object))
        (local $phi12 (ref null $java$lang$Object))
        (local $phi13 (ref null $java$lang$Object))
        (local $phi14 (ref null $java$lang$Object))
        (local $phi15 (ref null $java$lang$Object))
        (local $var16 (ref null $java$lang$Object))
        (local $var17 (ref null $java$lang$Object))
        (local $phi18 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var17 (struct.get $java$util$concurrent$ConcurrentHashMap $delegate (ref.cast (ref null $java$util$concurrent$ConcurrentHashMap) (struct.get $java$util$Properties $map (ref.cast (ref null $java$util$Properties) (local.get $var0))))))
        (local.set $phi18 (call_indirect (type $t559) (local.get $var17) (local.get $arg0) (call_ref $t0 (i32.const 123) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var17))))))
        (local.set $var1 (local.get $phi18))
        ;; startBlock type=NORMAL, label = If_10_0
        (block $If_10_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.eq (call $instanceOf (local.get $var1) (i32.const 74)) (i32.const 0))
                (then
                    (local.set $phi3 (local.get $var0))
                    (local.set $phi4 (local.get $arg0))
                    (local.set $phi5 (local.get $var1))
                    (local.set $phi6 (ref.null none))
                    (br $If_10_0)
                    ;; Start else
                    )(else
                    (local.set $var2 (ref.cast (ref null $java$lang$Object) (local.get $var1)))
                    ;; Here was a goto statement
                    (local.set $phi3 (local.get $var0))
                    (local.set $phi4 (local.get $arg0))
                    (local.set $phi5 (local.get $var1))
                    (local.set $phi6 (local.get $var2))
                    (br $If_10_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (local.set $var7 (local.get $phi6))
        ;; startBlock type=NORMAL, label = If_24_0
        (block $If_24_0
            ;; startBlock type=NORMAL, label = If_24_1
            (block $If_24_1
                ;; writeIfAndStartTrueBlock
                (if $if1 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var7)))
                    (then
                        (local.set $phi14 (local.get $var7))
                        (br $If_24_1)
                        ;; Start else
                        )(else
                        (local.set $var8 (struct.get $java$util$Properties $defaults (ref.cast (ref null $java$util$Properties) (local.get $phi3))))
                        ;; writeIfAndStartTrueBlock
                        (if $if2 (ref.is_null (local.get $var8))
                            (then
                                (local.set $phi14 (local.get $var7))
                                (local.set $phi15 (local.get $var8))
                                (br $If_24_1)
                                ;; Start else
                                )(else
                                (local.set $var9 (local.get $phi4))
                                (local.set $var10 (call $java$util$Properties$Ljava$lang$String$$getProperty$Ljava$lang$String$ (local.get $var8) (local.get $var9)))
                                ;; Here was a goto statement
                                (local.set $phi11 (local.get $var7))
                                (local.set $phi12 (local.get $var8))
                                (local.set $phi13 (local.get $var10))
                                (br $If_24_0)
                                ))
                        ;; finishIfBlock
                        ))
                ;; finishIfBlock
                )
            ;; finishBlock
            (local.set $var16 (local.get $phi14))
            (local.set $phi11 (local.get $phi14))
            (local.set $phi12 (local.get $phi15))
            (local.set $phi13 (local.get $var16))
            (br $If_24_0)
            )
        ;; finishBlock
        (return (local.get $phi13))
        (unreachable))
    (func $java$util$Properties$Ljava$lang$Object$$computeIfAbsent$Ljava$lang$Object$$Ljava$util$function$Function$ (type $t561) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (struct.get $java$util$Properties $map (ref.cast (ref null $java$util$Properties) (local.get $thisref))))
        (return (call $java$util$concurrent$ConcurrentHashMap$Ljava$lang$Object$$computeIfAbsent$Ljava$lang$Object$$Ljava$util$function$Function$ (local.get $var0) (local.get $arg0) (local.get $arg1)))
        (unreachable))
    (func $java$util$Properties$Ljava$lang$Object$$get$Ljava$lang$Object$ (type $t559) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (struct.get $java$util$Properties $map (ref.cast (ref null $java$util$Properties) (local.get $thisref))))
        (return (call $java$util$concurrent$ConcurrentHashMap$Ljava$lang$Object$$get$Ljava$lang$Object$ (local.get $var0) (local.get $arg0)))
        (unreachable))
    (func $java$util$Properties$Ljava$lang$String$$toString$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (struct.get $java$util$Properties $map (ref.cast (ref null $java$util$Properties) (local.get $thisref))))
        (return (call $java$util$concurrent$ConcurrentHashMap$Ljava$lang$String$$toString$$ (local.get $var0)))
        (unreachable))
    (func $java$util$Properties$Z$equals$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (struct.get $java$util$Properties $map (ref.cast (ref null $java$util$Properties) (local.get $thisref))))
        (return (call $java$util$concurrent$ConcurrentHashMap$Z$equals$Ljava$lang$Object$ (local.get $var0) (local.get $arg0)))
        (unreachable))
    (func $java$util$Properties$I$hashCode$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (struct.get $java$util$Properties $map (ref.cast (ref null $java$util$Properties) (local.get $thisref))))
        (return (call $java$util$concurrent$ConcurrentHashMap$I$hashCode$$ (local.get $var0)))
        (unreachable))
    (func $java$util$Properties$I$size$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (struct.get $java$util$Properties $map (ref.cast (ref null $java$util$Properties) (local.get $thisref))))
        (return (call $java$util$concurrent$ConcurrentHashMap$I$size$$ (local.get $var0)))
        (unreachable))
    (func $java$util$Properties$Z$containsKey$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (struct.get $java$util$Properties $map (ref.cast (ref null $java$util$Properties) (local.get $thisref))))
        (return (call $java$util$concurrent$ConcurrentHashMap$Z$containsKey$Ljava$lang$Object$ (local.get $var0) (local.get $arg0)))
        (unreachable))
    (func $java$util$Properties$Ljava$util$Set$$entrySet$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $phi5 (ref null $java$lang$Object))
        (local $var6 (ref null $java$lang$Object))
        (local $phi7 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (struct.new $java$util$Properties$EntrySet (struct.get $java$util$Properties$EntrySet_rtt $factoryFor (global.get $java$util$Properties$EntrySet_cls)) (ref.func $java$util$Properties$EntrySet_vt) (ref.null noextern) (struct.get $java$util$Properties$EntrySet_rtt $classImplTypes (global.get $java$util$Properties$EntrySet_cls)) (ref.null none)))
        (local.set $var6 (struct.get $java$util$concurrent$ConcurrentHashMap $delegate (ref.cast (ref null $java$util$concurrent$ConcurrentHashMap) (struct.get $java$util$Properties $map (ref.cast (ref null $java$util$Properties) (local.get $var0))))))
        (local.set $phi7 (call_indirect (type $t553) (local.get $var6) (call_ref $t0 (i32.const 125) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var6))))))
        (struct.set $java$util$Properties$EntrySet $entrySet (ref.cast (ref null $java$util$Properties$EntrySet) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (local.get $phi7)))
        (drop (call $java$util$Collections_i))
        (local.set $var2 (struct.new $java$util$Collections$SynchronizedSet (struct.get $java$util$Collections$SynchronizedSet_rtt $factoryFor (global.get $java$util$Collections$SynchronizedSet_cls)) (ref.func $java$util$Collections$SynchronizedSet_vt) (ref.null noextern) (struct.get $java$util$Collections$SynchronizedSet_rtt $classImplTypes (global.get $java$util$Collections$SynchronizedSet_cls)) (ref.null none) (ref.null none)))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var1)))
            (then
                (struct.set $java$util$Collections$SynchronizedCollection $c (ref.cast (ref null $java$util$Collections$SynchronizedCollection) (local.get $var2)) (ref.cast (ref null $java$lang$Object) (ref.cast (ref null $java$lang$Object) (local.get $var1))))
                ;; writeIfAndStartTrueBlock
                (if $if1 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var0)))
                    (then
                        (struct.set $java$util$Collections$SynchronizedCollection $mutex (ref.cast (ref null $java$util$Collections$SynchronizedCollection) (local.get $var2)) (ref.cast (ref null $java$lang$Object) (local.get $var0)))
                        (local.set $phi5 (local.get $var2))
                        (return (local.get $phi5))
                        ;; Start else
                        )(else
                        (local.set $var3 (struct.new $java$lang$NullPointerException (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)) (ref.func $java$lang$NullPointerException_vt) (ref.null noextern) (struct.get $java$lang$NullPointerException_rtt $classImplTypes (global.get $java$lang$NullPointerException_cls)) (ref.null none) (ref.null none) (i32.const 0) (ref.null none)))
                        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var3)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var3)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                        (throw $javaexception (local.get $var3))
                        ))
                ;; finishIfBlock
                ;; Start else
                )(else
                (local.set $var4 (struct.new $java$lang$NullPointerException (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)) (ref.func $java$lang$NullPointerException_vt) (ref.null noextern) (struct.get $java$lang$NullPointerException_rtt $classImplTypes (global.get $java$lang$NullPointerException_cls)) (ref.null none) (ref.null none) (i32.const 0) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var4)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var4)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var4))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$util$Properties$Z$isEmpty$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (struct.get $java$util$Properties $map (ref.cast (ref null $java$util$Properties) (local.get $thisref))))
        (return (call $java$util$concurrent$ConcurrentHashMap$Z$isEmpty$$ (local.get $var0)))
        (unreachable))
    (func $java$lang$RuntimeException$V$$init$$Ljava$lang$String$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return)
        (unreachable))
    (func $java$lang$RuntimeException$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return)
        (unreachable))
    (func $java$lang$RuntimeException$V$$init$$Ljava$lang$Throwable$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (return)
        (unreachable))
    (func $java$lang$Float$V$$clinit$$$ (type $t541) (param $unused (ref null $java$lang$Object))
        (drop (call $java$lang$Float_i))
        (struct.set $java$lang$Float_rtt $TYPE (ref.cast (ref null $java$lang$Float_rtt) (call $java$lang$Float_i)) (ref.cast (ref null $java$lang$Object) (global.get $primitive_float)))
        (return)
        (unreachable))
    (func $java$lang$Float$Ljava$lang$Float$$valueOf$F (type $t568) (param $unused (ref null $java$lang$Object)) (param $arg0 f32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (drop (call $java$lang$Float_i))
        (local.set $var0 (struct.new $java$lang$Float (struct.get $java$lang$Float_rtt $factoryFor (global.get $java$lang$Float_cls)) (ref.func $java$lang$Float_vt) (ref.null noextern) (struct.get $java$lang$Float_rtt $classImplTypes (global.get $java$lang$Float_cls)) (f32.const 0.0)))
        (struct.set $java$lang$Float $value (ref.cast (ref null $java$lang$Float) (local.get $var0)) (local.get $arg0))
        (return (local.get $var0))
        (unreachable))
    (func $java$lang$Float$V$$init$$F (type $t611) (param $thisref (ref null $java$lang$Object)) (param $arg0 f32)
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Float $value (ref.cast (ref null $java$lang$Float) (local.get $var0)) (local.get $arg0))
        (return)
        (unreachable))
    (func $java$lang$Float$I$compareTo$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (return (call $java$lang$Float$I$compareTo$Ljava$lang$Float$ (local.get $var0) (local.get $var1)))
        (unreachable))
    (func $java$lang$Float$I$compareTo$Ljava$lang$Float$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 f32)
        (local $var1 f32)
        (local $phi2 f32)
        (local.set $var0 (struct.get $java$lang$Float $value (ref.cast (ref null $java$lang$Float) (local.get $thisref))))
        (local.set $phi2 (struct.get $java$lang$Float $value (ref.cast (ref null $java$lang$Float) (local.get $arg0))))
        (local.set $var1 (local.get $phi2))
        (drop (call $java$lang$Float_i))
        (return (call $java$lang$Float$I$compare$F$F (call $java$lang$Float_i) (local.get $var0) (local.get $var1)))
        (unreachable))
    (func $java$lang$Float$F$floatValue$$ (type $t576) (param $thisref (ref null $java$lang$Object)) (result f32)
        (return (struct.get $java$lang$Float $value (ref.cast (ref null $java$lang$Float) (local.get $thisref))))
        (unreachable))
    (func $java$lang$Float$I$compare$F$F (type $t613) (param $unused (ref null $java$lang$Object)) (param $arg0 f32) (param $arg1 f32) (result i32)
        (local $phi0 f32)
        (local $phi1 f32)
        (local $phi2 i32)
        ;; startBlock type=NORMAL, label = If_4_0
        (block $If_4_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ge_s (call $compare_f32 (local.get $arg0) (local.get $arg1)) (i32.const 0))
                (then
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (i32.ne (call $compare_f32 (local.get $arg0) (local.get $arg1)) (i32.const 0))
                        (then
                            (local.set $phi0 (local.get $arg0))
                            (local.set $phi1 (local.get $arg1))
                            (local.set $phi2 (i32.const 1))
                            (br $If_4_0)
                            ;; Start else
                            )(else
                            ;; Here was a goto statement
                            (local.set $phi0 (local.get $arg0))
                            (local.set $phi1 (local.get $arg1))
                            (local.set $phi2 (i32.const 0))
                            (br $If_4_0)
                            ))
                    ;; finishIfBlock
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi0 (local.get $arg0))
                    (local.set $phi1 (local.get $arg1))
                    (local.set $phi2 (i32.const -1))
                    (br $If_4_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi2))
        (unreachable))
    (func $java$lang$Float$I$intValue$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (return (i32.trunc_f32_s (struct.get $java$lang$Float $value (ref.cast (ref null $java$lang$Float) (local.get $thisref)))))
        (unreachable))
    (func $java$lang$Float$Ljava$lang$String$$toString$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 f32)
        (local.set $var0 (struct.get $java$lang$Float $value (ref.cast (ref null $java$lang$Float) (local.get $thisref))))
        (drop (call $java$lang$Float_i))
        (return (call $java$lang$Float$Ljava$lang$String$$toString$F (call $java$lang$Float_i) (local.get $var0)))
        (unreachable))
    (func $java$lang$Float$Z$equals$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 f32)
        (local $phi5 (ref null $java$lang$Object))
        (local $phi6 (ref null $java$lang$Object))
        (local $phi7 (ref null $java$lang$Object))
        (local $phi8 i32)
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.eq (local.get $var0) (local.get $arg0)))
            (then
                ;; startBlock type=NORMAL, label = If_9_0
                (block $If_9_0
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (ref.is_null (local.get $arg0))
                        (then
                            (local.set $phi1 (local.get $var0))
                            (local.set $phi2 (local.get $arg0))
                            (br $If_9_0)
                            ;; Start else
                            )(else
                            ;; writeIfAndStartTrueBlock
                            (if $if2 (ref.eq (call $runtimetypeof (local.get $var0)) (call $runtimetypeof (local.get $arg0)))
                                (then
                                    (local.set $var3 (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
                                    (local.set $var4 (struct.get $java$lang$Float $value (ref.cast (ref null $java$lang$Float) (local.get $var0))))
                                    ;; startBlock type=NORMAL, label = If_28_0
                                    (block $If_28_0
                                        ;; writeIfAndStartTrueBlock
                                        (if $if3 (i32.ne (call $compare_f32 (local.get $var4) (call $java$lang$Float$F$floatValue$$ (local.get $var3))) (i32.const 0))
                                            (then
                                                (local.set $phi5 (local.get $var0))
                                                (local.set $phi6 (local.get $arg0))
                                                (local.set $phi7 (local.get $var3))
                                                (local.set $phi8 (i32.const 0))
                                                (br $If_28_0)
                                                ;; Start else
                                                )(else
                                                ;; Here was a goto statement
                                                (local.set $phi5 (local.get $var0))
                                                (local.set $phi6 (local.get $arg0))
                                                (local.set $phi7 (local.get $var3))
                                                (local.set $phi8 (i32.const 1))
                                                (br $If_28_0)
                                                ))
                                        ;; finishIfBlock
                                        )
                                    ;; finishBlock
                                    (return (local.get $phi8))
                                    ;; Start else
                                    )(else
                                    (local.set $phi1 (local.get $var0))
                                    (local.set $phi2 (local.get $arg0))
                                    (br $If_9_0)
                                    ))
                            ;; finishIfBlock
                            ))
                    ;; finishIfBlock
                    )
                ;; finishBlock
                (return (i32.const 0))
                ;; Start else
                )(else
                (return (i32.const 1))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$lang$Float$I$hashCode$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (return (i32.trunc_f32_s (struct.get $java$lang$Float $value (ref.cast (ref null $java$lang$Float) (local.get $thisref)))))
        (unreachable))
    (func $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError$Ljava$lang$RuntimeException$$newRuntimeException$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (struct.get $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError $runtimeExceptionSupplier (ref.cast (ref null $jdk$internal$misc$ScopedMemoryAccess$ScopedAccessError) (local.get $thisref))))
        (return (ref.cast (ref null $java$lang$Object) (call_indirect (type $t553) (local.get $var0) (call_ref $t0 (i32.const 13) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var0)))))))
        (unreachable))
    (func $java$util$Collections$SynchronizedCollection$V$$init$$Ljava$util$Collection$$Ljava$lang$Object$ (type $t560) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg0)))
            (then
                (struct.set $java$util$Collections$SynchronizedCollection $c (ref.cast (ref null $java$util$Collections$SynchronizedCollection) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.cast (ref null $java$lang$Object) (local.get $arg0))))
                ;; writeIfAndStartTrueBlock
                (if $if1 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg1)))
                    (then
                        (struct.set $java$util$Collections$SynchronizedCollection $mutex (ref.cast (ref null $java$util$Collections$SynchronizedCollection) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg1)))
                        (return)
                        ;; Start else
                        )(else
                        (local.set $var1 (struct.new $java$lang$NullPointerException (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)) (ref.func $java$lang$NullPointerException_vt) (ref.null noextern) (struct.get $java$lang$NullPointerException_rtt $classImplTypes (global.get $java$lang$NullPointerException_cls)) (ref.null none) (ref.null none) (i32.const 0) (ref.null none)))
                        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                        (throw $javaexception (local.get $var1))
                        ))
                ;; finishIfBlock
                ;; Start else
                )(else
                (local.set $var2 (struct.new $java$lang$NullPointerException (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)) (ref.func $java$lang$NullPointerException_vt) (ref.null noextern) (struct.get $java$lang$NullPointerException_rtt $classImplTypes (global.get $java$lang$NullPointerException_cls)) (ref.null none) (ref.null none) (i32.const 0) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var2)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var2)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var2))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$util$Collections$SynchronizedCollection$Ljava$util$Iterator$$iterator$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (struct.get $java$util$Collections$SynchronizedCollection $c (ref.cast (ref null $java$util$Collections$SynchronizedCollection) (local.get $thisref))))
        (return (call_indirect (type $t553) (local.get $var0) (call_ref $t0 (i32.const 146) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var0))))))
        (unreachable))
    (func $java$util$Collections$SynchronizedCollection$I$size$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $var6 i32)
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (struct.get $java$util$Collections$SynchronizedCollection $mutex (ref.cast (ref null $java$util$Collections$SynchronizedCollection) (local.get $var0))))
        ;; Monitor enter on de.mirkosertic.bytecoder.core.ir.Variable@fb030af
        (local.set $phi2 (local.get $var0))
        (local.set $phi3 (local.get $var1))
        ;; startBlock type=NORMAL, label = TryCatch_10_0
        (block $TryCatch_10_0
            ;; startTryCatch
            (try $trycatch_0 (do
                    (local.set $var5 (struct.get $java$util$Collections$SynchronizedCollection $c (ref.cast (ref null $java$util$Collections$SynchronizedCollection) (local.get $phi2))))
                    (local.set $var6 (call_indirect (type $t555) (local.get $var5) (call_ref $t0 (i32.const 100) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var5))))))
                    ;; Monitor exit on de.mirkosertic.bytecoder.core.ir.PHI@22eda290
                    (br $TryCatch_10_0)
                    )
                (catch $javaexception
                    ;; startCatchBlock
                    (global.set $lastcaughtexception (pop (ref null $java$lang$Object)))
                    (if $catchcheck_0 (call $instanceOf (global.get $lastcaughtexception) (struct.get $java$lang$Throwable_rtt $factoryFor (global.get $java$lang$Throwable_cls)))
                        (then
                            ;; startBlock type=NORMAL, label = TryCatch_11_0
                            (block $TryCatch_11_0
                                (local.set $var4 (global.get $lastcaughtexception))
                                ;; Monitor exit on de.mirkosertic.bytecoder.core.ir.PHI@22eda290
                                (br $TryCatch_11_0)
                                )
                            ;; finishBlock
                            (throw $javaexception (local.get $var4))
                            ))
                    (rethrow $trycatch_0)
                    )
                )
            ;; finishTryCatch
            )
        ;; finishBlock
        (return (local.get $var6))
        (unreachable))
    (func $java$util$Collections$SynchronizedCollection$Z$isEmpty$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $var6 i32)
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (struct.get $java$util$Collections$SynchronizedCollection $mutex (ref.cast (ref null $java$util$Collections$SynchronizedCollection) (local.get $var0))))
        ;; Monitor enter on de.mirkosertic.bytecoder.core.ir.Variable@d89d960
        (local.set $phi2 (local.get $var0))
        (local.set $phi3 (local.get $var1))
        ;; startBlock type=NORMAL, label = TryCatch_10_0
        (block $TryCatch_10_0
            ;; startTryCatch
            (try $trycatch_0 (do
                    (local.set $var5 (struct.get $java$util$Collections$SynchronizedCollection $c (ref.cast (ref null $java$util$Collections$SynchronizedCollection) (local.get $phi2))))
                    (local.set $var6 (call_indirect (type $t555) (local.get $var5) (call_ref $t0 (i32.const 38) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var5))))))
                    ;; Monitor exit on de.mirkosertic.bytecoder.core.ir.PHI@3d673339
                    (br $TryCatch_10_0)
                    )
                (catch $javaexception
                    ;; startCatchBlock
                    (global.set $lastcaughtexception (pop (ref null $java$lang$Object)))
                    (if $catchcheck_0 (call $instanceOf (global.get $lastcaughtexception) (struct.get $java$lang$Throwable_rtt $factoryFor (global.get $java$lang$Throwable_cls)))
                        (then
                            ;; startBlock type=NORMAL, label = TryCatch_11_0
                            (block $TryCatch_11_0
                                (local.set $var4 (global.get $lastcaughtexception))
                                ;; Monitor exit on de.mirkosertic.bytecoder.core.ir.PHI@3d673339
                                (br $TryCatch_11_0)
                                )
                            ;; finishBlock
                            (throw $javaexception (local.get $var4))
                            ))
                    (rethrow $trycatch_0)
                    )
                )
            ;; finishTryCatch
            )
        ;; finishBlock
        (return (local.get $var6))
        (unreachable))
    (func $java$util$Collections$SynchronizedCollection$Ljava$lang$String$$toString$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $var6 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (struct.get $java$util$Collections$SynchronizedCollection $mutex (ref.cast (ref null $java$util$Collections$SynchronizedCollection) (local.get $var0))))
        ;; Monitor enter on de.mirkosertic.bytecoder.core.ir.Variable@7c7b9943
        (local.set $phi2 (local.get $var0))
        (local.set $phi3 (local.get $var1))
        ;; startBlock type=NORMAL, label = TryCatch_10_0
        (block $TryCatch_10_0
            ;; startTryCatch
            (try $trycatch_0 (do
                    (local.set $var5 (struct.get $java$util$Collections$SynchronizedCollection $c (ref.cast (ref null $java$util$Collections$SynchronizedCollection) (local.get $phi2))))
                    (local.set $var6 (call_indirect (type $t553) (local.get $var5) (call_ref $t0 (i32.const 0) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var5))))))
                    ;; Monitor exit on de.mirkosertic.bytecoder.core.ir.PHI@49b71306
                    (br $TryCatch_10_0)
                    )
                (catch $javaexception
                    ;; startCatchBlock
                    (global.set $lastcaughtexception (pop (ref null $java$lang$Object)))
                    (if $catchcheck_0 (call $instanceOf (global.get $lastcaughtexception) (struct.get $java$lang$Throwable_rtt $factoryFor (global.get $java$lang$Throwable_cls)))
                        (then
                            ;; startBlock type=NORMAL, label = TryCatch_11_0
                            (block $TryCatch_11_0
                                (local.set $var4 (global.get $lastcaughtexception))
                                ;; Monitor exit on de.mirkosertic.bytecoder.core.ir.PHI@49b71306
                                (br $TryCatch_11_0)
                                )
                            ;; finishBlock
                            (throw $javaexception (local.get $var4))
                            ))
                    (rethrow $trycatch_0)
                    )
                )
            ;; finishTryCatch
            )
        ;; finishBlock
        (return (local.get $var6))
        (unreachable))
    (func $java$lang$VirtualMachineError$V$$init$$Ljava$lang$String$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return)
        (unreachable))
    (func $java$lang$VirtualMachineError$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return)
        (unreachable))
    (func $java$lang$VirtualMachineError$V$$init$$Ljava$lang$Throwable$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (return)
        (unreachable))
    (func $java$lang$Integer$V$$clinit$$$ (type $t541) (param $unused (ref null $java$lang$Object))
        (drop (call $java$lang$Integer_i))
        (struct.set $java$lang$Integer_rtt $TYPE (ref.cast (ref null $java$lang$Integer_rtt) (call $java$lang$Integer_i)) (ref.cast (ref null $java$lang$Object) (global.get $primitive_int)))
        (return)
        (unreachable))
    (func $java$lang$Integer$Ljava$lang$Integer$$valueOf$I (type $t565) (param $unused (ref null $java$lang$Object)) (param $arg0 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (drop (call $java$lang$Integer_i))
        (local.set $var0 (struct.new $java$lang$Integer (struct.get $java$lang$Integer_rtt $factoryFor (global.get $java$lang$Integer_cls)) (ref.func $java$lang$Integer_vt) (ref.null noextern) (struct.get $java$lang$Integer_rtt $classImplTypes (global.get $java$lang$Integer_cls)) (i32.const 0)))
        (struct.set $java$lang$Integer $value (ref.cast (ref null $java$lang$Integer) (local.get $var0)) (local.get $arg0))
        (return (local.get $var0))
        (unreachable))
    (func $java$lang$Integer$V$$init$$I (type $t575) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32)
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Integer $value (ref.cast (ref null $java$lang$Integer) (local.get $var0)) (local.get $arg0))
        (return)
        (unreachable))
    (func $java$lang$Integer$Ljava$lang$String$$toString$I (type $t565) (param $unused (ref null $java$lang$Object)) (param $arg0 i32) (result (ref null $java$lang$Object))
        (drop (call $java$lang$Integer_i))
        (return (call $java$lang$Integer$Ljava$lang$String$$toString$I$I (call $java$lang$Integer_i) (local.get $arg0) (i32.const 10)))
        (unreachable))
    (func $java$lang$Integer$I$intValue$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (return (struct.get $java$lang$Integer $value (ref.cast (ref null $java$lang$Integer) (local.get $thisref))))
        (unreachable))
    (func $java$lang$Integer$I$numberOfLeadingZeros$I (type $t551) (param $unused (ref null $java$lang$Object)) (param $arg0 i32) (result i32)
        (local $var0 i32)
        (local $phi1 i32)
        (local $phi2 i32)
        (local $phi3 i32)
        (local $phi4 i32)
        (local $phi5 i32)
        ;; writeIfAndStartTrueBlock
        (if $if0 (i32.ne (local.get $arg0) (i32.const 0))
            (then
                ;; startBlock type=NORMAL, label = If_10_0
                (block $If_10_0
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (i32.ne (i32.shr_u (local.get $arg0) (i32.const 16)) (i32.const 0))
                        (then
                            (local.set $phi1 (local.get $arg0))
                            (local.set $phi2 (i32.const 1))
                            (br $If_10_0)
                            ;; Start else
                            )(else
                            (local.set $var0 (i32.add (i32.const 1) (i32.const 16)))
                            (local.set $phi1 (i32.shl (local.get $arg0) (i32.const 16)))
                            (local.set $phi2 (local.get $var0))
                            (br $If_10_0)
                            ))
                    ;; finishIfBlock
                    )
                ;; finishBlock
                ;; startBlock type=NORMAL, label = If_24_0
                (block $If_24_0
                    ;; writeIfAndStartTrueBlock
                    (if $if2 (i32.ne (i32.shr_u (local.get $phi1) (i32.const 24)) (i32.const 0))
                        (then
                            (local.set $phi3 (local.get $phi1))
                            (br $If_24_0)
                            ;; Start else
                            )(else
                            (local.set $phi2 (i32.add (local.get $phi2) (i32.const 8)))
                            (local.set $phi3 (i32.shl (local.get $phi1) (i32.const 8)))
                            (br $If_24_0)
                            ))
                    ;; finishIfBlock
                    )
                ;; finishBlock
                ;; startBlock type=NORMAL, label = If_36_0
                (block $If_36_0
                    ;; writeIfAndStartTrueBlock
                    (if $if3 (i32.ne (i32.shr_u (local.get $phi3) (i32.const 28)) (i32.const 0))
                        (then
                            (local.set $phi4 (local.get $phi3))
                            (br $If_36_0)
                            ;; Start else
                            )(else
                            (local.set $phi2 (i32.add (local.get $phi2) (i32.const 4)))
                            (local.set $phi4 (i32.shl (local.get $phi3) (i32.const 4)))
                            (br $If_36_0)
                            ))
                    ;; finishIfBlock
                    )
                ;; finishBlock
                ;; startBlock type=NORMAL, label = If_48_0
                (block $If_48_0
                    ;; writeIfAndStartTrueBlock
                    (if $if4 (i32.ne (i32.shr_u (local.get $phi4) (i32.const 30)) (i32.const 0))
                        (then
                            (local.set $phi5 (local.get $phi4))
                            (br $If_48_0)
                            ;; Start else
                            )(else
                            (local.set $phi2 (i32.add (local.get $phi2) (i32.const 2)))
                            (local.set $phi5 (i32.shl (local.get $phi4) (i32.const 2)))
                            (br $If_48_0)
                            ))
                    ;; finishIfBlock
                    )
                ;; finishBlock
                (return (i32.sub (local.get $phi2) (i32.shr_u (local.get $phi5) (i32.const 31))))
                ;; Start else
                )(else
                (return (i32.const 32))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$lang$Integer$I$signum$I (type $t551) (param $unused (ref null $java$lang$Object)) (param $arg0 i32) (result i32)
        ;; writeIfAndStartTrueBlock
        (if $if0 (i32.ge_s (local.get $arg0) (i32.const 0))
            (then
                ;; writeIfAndStartTrueBlock
                (if $if1 (i32.le_s (local.get $arg0) (i32.const 0))
                    (then
                        (return (i32.const 0))
                        ;; Start else
                        )(else
                        (return (i32.const 1))
                        ))
                ;; finishIfBlock
                ;; Start else
                )(else
                (return (i32.const -1))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$lang$Integer$I$numberOfTrailingZeros$I (type $t551) (param $unused (ref null $java$lang$Object)) (param $arg0 i32) (result i32)
        (local $var0 i32)
        (local $var1 i32)
        (local $phi2 i32)
        (local $phi3 i32)
        (local $phi4 i32)
        (local $var5 i32)
        (local $var6 i32)
        (local $phi7 i32)
        (local $phi8 i32)
        (local $phi9 i32)
        (local $var10 i32)
        (local $var11 i32)
        (local $phi12 i32)
        (local $phi13 i32)
        (local $phi14 i32)
        (local $var15 i32)
        (local $var16 i32)
        (local $phi17 i32)
        (local $phi18 i32)
        (local $phi19 i32)
        ;; writeIfAndStartTrueBlock
        (if $if0 (i32.ne (local.get $arg0) (i32.const 0))
            (then
                (local.set $var0 (i32.shl (local.get $arg0) (i32.const 16)))
                ;; startBlock type=NORMAL, label = If_12_0
                (block $If_12_0
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (i32.eq (local.get $var0) (i32.const 0))
                        (then
                            (local.set $phi2 (local.get $arg0))
                            (local.set $phi3 (local.get $var0))
                            (local.set $phi4 (i32.const 31))
                            (br $If_12_0)
                            ;; Start else
                            )(else
                            (local.set $var1 (i32.sub (i32.const 31) (i32.const 16)))
                            (local.set $phi2 (local.get $var0))
                            (local.set $phi3 (local.get $var0))
                            (local.set $phi4 (local.get $var1))
                            (br $If_12_0)
                            ))
                    ;; finishIfBlock
                    )
                ;; finishBlock
                (local.set $var5 (i32.shl (local.get $phi2) (i32.const 8)))
                ;; startBlock type=NORMAL, label = If_27_0
                (block $If_27_0
                    ;; writeIfAndStartTrueBlock
                    (if $if2 (i32.eq (local.get $var5) (i32.const 0))
                        (then
                            (local.set $phi7 (local.get $phi2))
                            (local.set $phi8 (local.get $var5))
                            (local.set $phi9 (local.get $phi4))
                            (br $If_27_0)
                            ;; Start else
                            )(else
                            (local.set $var6 (i32.sub (local.get $phi4) (i32.const 8)))
                            (local.set $phi7 (local.get $var5))
                            (local.set $phi8 (local.get $var5))
                            (local.set $phi9 (local.get $var6))
                            (br $If_27_0)
                            ))
                    ;; finishIfBlock
                    )
                ;; finishBlock
                (local.set $var10 (i32.shl (local.get $phi7) (i32.const 4)))
                ;; startBlock type=NORMAL, label = If_42_0
                (block $If_42_0
                    ;; writeIfAndStartTrueBlock
                    (if $if3 (i32.eq (local.get $var10) (i32.const 0))
                        (then
                            (local.set $phi12 (local.get $phi7))
                            (local.set $phi13 (local.get $var10))
                            (local.set $phi14 (local.get $phi9))
                            (br $If_42_0)
                            ;; Start else
                            )(else
                            (local.set $var11 (i32.sub (local.get $phi9) (i32.const 4)))
                            (local.set $phi12 (local.get $var10))
                            (local.set $phi13 (local.get $var10))
                            (local.set $phi14 (local.get $var11))
                            (br $If_42_0)
                            ))
                    ;; finishIfBlock
                    )
                ;; finishBlock
                (local.set $var15 (i32.shl (local.get $phi12) (i32.const 2)))
                ;; startBlock type=NORMAL, label = If_57_0
                (block $If_57_0
                    ;; writeIfAndStartTrueBlock
                    (if $if4 (i32.eq (local.get $var15) (i32.const 0))
                        (then
                            (local.set $phi17 (local.get $phi12))
                            (local.set $phi18 (local.get $var15))
                            (local.set $phi19 (local.get $phi14))
                            (br $If_57_0)
                            ;; Start else
                            )(else
                            (local.set $var16 (i32.sub (local.get $phi14) (i32.const 2)))
                            (local.set $phi17 (local.get $var15))
                            (local.set $phi18 (local.get $var15))
                            (local.set $phi19 (local.get $var16))
                            (br $If_57_0)
                            ))
                    ;; finishIfBlock
                    )
                ;; finishBlock
                (return (i32.sub (local.get $phi19) (i32.shr_u (i32.shl (local.get $phi17) (i32.const 1)) (i32.const 31))))
                ;; Start else
                )(else
                (return (i32.const 32))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$lang$Integer$I$compareTo$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (return (call $java$lang$Integer$I$compareTo$Ljava$lang$Integer$ (local.get $var0) (local.get $var1)))
        (unreachable))
    (func $java$lang$Integer$I$compareTo$Ljava$lang$Integer$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 i32)
        (local $var1 i32)
        (local $phi2 i32)
        (local.set $var0 (struct.get $java$lang$Integer $value (ref.cast (ref null $java$lang$Integer) (local.get $thisref))))
        (local.set $phi2 (struct.get $java$lang$Integer $value (ref.cast (ref null $java$lang$Integer) (local.get $arg0))))
        (local.set $var1 (local.get $phi2))
        (drop (call $java$lang$Integer_i))
        (return (call $java$lang$Integer$I$compare$I$I (call $java$lang$Integer_i) (local.get $var0) (local.get $var1)))
        (unreachable))
    (func $java$lang$Integer$I$compare$I$I (type $t564) (param $unused (ref null $java$lang$Object)) (param $arg0 i32) (param $arg1 i32) (result i32)
        (local $phi0 i32)
        (local $phi1 i32)
        (local $phi2 i32)
        ;; startBlock type=NORMAL, label = If_3_0
        (block $If_3_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ge_s (local.get $arg0) (local.get $arg1))
                (then
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (i32.ne (local.get $arg0) (local.get $arg1))
                        (then
                            (local.set $phi0 (local.get $arg0))
                            (local.set $phi1 (local.get $arg1))
                            (local.set $phi2 (i32.const 1))
                            (br $If_3_0)
                            ;; Start else
                            )(else
                            ;; Here was a goto statement
                            (local.set $phi0 (local.get $arg0))
                            (local.set $phi1 (local.get $arg1))
                            (local.set $phi2 (i32.const 0))
                            (br $If_3_0)
                            ))
                    ;; finishIfBlock
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi0 (local.get $arg0))
                    (local.set $phi1 (local.get $arg1))
                    (local.set $phi2 (i32.const -1))
                    (br $If_3_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi2))
        (unreachable))
    (func $java$lang$Integer$Ljava$lang$String$$toString$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 i32)
        (local.set $var0 (struct.get $java$lang$Integer $value (ref.cast (ref null $java$lang$Integer) (local.get $thisref))))
        (drop (call $java$lang$Integer_i))
        (return (call $java$lang$Integer$Ljava$lang$String$$toString$I$I (call $java$lang$Integer_i) (local.get $var0) (i32.const 10)))
        (unreachable))
    (func $java$lang$Integer$Z$equals$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 i32)
        (local $phi5 (ref null $java$lang$Object))
        (local $phi6 (ref null $java$lang$Object))
        (local $phi7 (ref null $java$lang$Object))
        (local $phi8 i32)
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.eq (local.get $var0) (local.get $arg0)))
            (then
                ;; startBlock type=NORMAL, label = If_9_0
                (block $If_9_0
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (ref.is_null (local.get $arg0))
                        (then
                            (local.set $phi1 (local.get $var0))
                            (local.set $phi2 (local.get $arg0))
                            (br $If_9_0)
                            ;; Start else
                            )(else
                            ;; writeIfAndStartTrueBlock
                            (if $if2 (ref.eq (call $runtimetypeof (local.get $var0)) (call $runtimetypeof (local.get $arg0)))
                                (then
                                    (local.set $var3 (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
                                    (local.set $var4 (struct.get $java$lang$Integer $value (ref.cast (ref null $java$lang$Integer) (local.get $var0))))
                                    ;; startBlock type=NORMAL, label = If_27_0
                                    (block $If_27_0
                                        ;; writeIfAndStartTrueBlock
                                        (if $if3 (i32.ne (local.get $var4) (call $java$lang$Integer$I$intValue$$ (local.get $var3)))
                                            (then
                                                (local.set $phi5 (local.get $var0))
                                                (local.set $phi6 (local.get $arg0))
                                                (local.set $phi7 (local.get $var3))
                                                (local.set $phi8 (i32.const 0))
                                                (br $If_27_0)
                                                ;; Start else
                                                )(else
                                                ;; Here was a goto statement
                                                (local.set $phi5 (local.get $var0))
                                                (local.set $phi6 (local.get $arg0))
                                                (local.set $phi7 (local.get $var3))
                                                (local.set $phi8 (i32.const 1))
                                                (br $If_27_0)
                                                ))
                                        ;; finishIfBlock
                                        )
                                    ;; finishBlock
                                    (return (local.get $phi8))
                                    ;; Start else
                                    )(else
                                    (local.set $phi1 (local.get $var0))
                                    (local.set $phi2 (local.get $arg0))
                                    (br $If_9_0)
                                    ))
                            ;; finishIfBlock
                            ))
                    ;; finishIfBlock
                    )
                ;; finishBlock
                (return (i32.const 0))
                ;; Start else
                )(else
                (return (i32.const 1))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$lang$Integer$I$hashCode$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (return (struct.get $java$lang$Integer $value (ref.cast (ref null $java$lang$Integer) (local.get $thisref))))
        (unreachable))
    (func $java$lang$AssertionError$V$$init$$Ljava$lang$Object$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $phi3 (ref null $java$lang$Object))
        (local $phi4 (ref null $java$lang$Object))
        (local $phi5 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = If_24_0
        (block $If_24_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg0)))
                (then
                    (local.set $phi5 (call_indirect (type $t553) (local.get $arg0) (call_ref $t0 (i32.const 0) (struct.get $java$lang$Object $vt_resolver (local.get $arg0)))))
                    (br $If_24_0)
                    ;; Start else
                    )(else
                    (local.set $phi5 (global.get $stringpool_0))
                    (br $If_24_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $phi5)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        ;; startBlock type=NORMAL, label = If_7_0
        (block $If_7_0
            ;; writeIfAndStartTrueBlock
            (if $if1 (i32.eq (call $instanceOf (local.get $arg0) (i32.const 62)) (i32.const 0))
                (then
                    (local.set $phi3 (local.get $var0))
                    (local.set $phi4 (local.get $arg0))
                    (br $If_7_0)
                    ;; Start else
                    )(else
                    (local.set $var1 (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
                    (local.set $var2 (call_indirect (type $t559) (local.get $var0) (local.get $var1) (call_ref $t0 (i32.const 65) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
                    (local.set $phi3 (local.get $var0))
                    (local.set $phi4 (local.get $arg0))
                    (br $If_7_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return)
        (unreachable))
    (func $java$lang$AssertionError$V$$init$$Ljava$lang$String$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return)
        (unreachable))
    (func $java$lang$AssertionError$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return)
        (unreachable))
    (func $java$util$ImmutableCollections$ListItr$V$$init$$Ljava$util$List$$I (type $t606) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 i32)
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$util$ImmutableCollections$ListItr $list (ref.cast (ref null $java$util$ImmutableCollections$ListItr) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (struct.set $java$util$ImmutableCollections$ListItr $size (ref.cast (ref null $java$util$ImmutableCollections$ListItr) (local.get $var0)) (local.get $arg1))
        (struct.set $java$util$ImmutableCollections$ListItr $cursor (ref.cast (ref null $java$util$ImmutableCollections$ListItr) (local.get $var0)) (i32.const 0))
        (struct.set $java$util$ImmutableCollections$ListItr $isListIterator (ref.cast (ref null $java$util$ImmutableCollections$ListItr) (local.get $var0)) (i32.const 0))
        (return)
        (unreachable))
    (func $java$util$ImmutableCollections$ListItr$Z$hasNext$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 i32)
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 i32)
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (struct.get $java$util$ImmutableCollections$ListItr $cursor (ref.cast (ref null $java$util$ImmutableCollections$ListItr) (local.get $var0))))
        ;; startBlock type=NORMAL, label = If_8_0
        (block $If_8_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.eq (local.get $var1) (struct.get $java$util$ImmutableCollections$ListItr $size (ref.cast (ref null $java$util$ImmutableCollections$ListItr) (local.get $var0))))
                (then
                    (local.set $phi2 (local.get $var0))
                    (local.set $phi3 (i32.const 0))
                    (br $If_8_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi2 (local.get $var0))
                    (local.set $phi3 (i32.const 1))
                    (br $If_8_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi3))
        (unreachable))
    (func $java$util$ImmutableCollections$ListItr$Ljava$lang$Object$$next$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 i32)
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = TryCatch_4_0
        (block $TryCatch_4_0
            ;; startTryCatch
            (try $trycatch_0 (do
                    (local.set $var2 (struct.get $java$util$ImmutableCollections$ListItr $cursor (ref.cast (ref null $java$util$ImmutableCollections$ListItr) (local.get $var0))))
                    (local.set $var3 (struct.get $java$util$ImmutableCollections$ListItr $list (ref.cast (ref null $java$util$ImmutableCollections$ListItr) (local.get $var0))))
                    (local.set $var4 (call_indirect (type $t565) (local.get $var3) (local.get $var2) (call_ref $t0 (i32.const 179) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var3))))))
                    (struct.set $java$util$ImmutableCollections$ListItr $cursor (ref.cast (ref null $java$util$ImmutableCollections$ListItr) (local.get $var0)) (i32.add (local.get $var2) (i32.const 1)))
                    (br $TryCatch_4_0)
                    )
                (catch $javaexception
                    ;; startCatchBlock
                    (global.set $lastcaughtexception (pop (ref null $java$lang$Object)))
                    (if $catchcheck_0 (call $instanceOf (global.get $lastcaughtexception) (struct.get $java$lang$IndexOutOfBoundsException_rtt $factoryFor (global.get $java$lang$IndexOutOfBoundsException_cls)))
                        (then
                            (local.set $var1 (struct.new $java$util$NoSuchElementException (struct.get $java$util$NoSuchElementException_rtt $factoryFor (global.get $java$util$NoSuchElementException_cls)) (ref.func $java$util$NoSuchElementException_vt) (ref.null noextern) (struct.get $java$util$NoSuchElementException_rtt $classImplTypes (global.get $java$util$NoSuchElementException_cls)) (ref.null none) (ref.null none)))
                            (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                            (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                            (throw $javaexception (local.get $var1))
                            ))
                    (rethrow $trycatch_0)
                    )
                )
            ;; finishTryCatch
            )
        ;; finishBlock
        (return (local.get $var4))
        (unreachable))
    (func $java$util$ImmutableCollections$ListItr$I$previousIndex$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (i32.ne (struct.get $java$util$ImmutableCollections$ListItr $isListIterator (ref.cast (ref null $java$util$ImmutableCollections$ListItr) (local.get $var0))) (i32.const 0))
            (then
                (return (i32.sub (struct.get $java$util$ImmutableCollections$ListItr $cursor (ref.cast (ref null $java$util$ImmutableCollections$ListItr) (local.get $var0))) (i32.const 1)))
                ;; Start else
                )(else
                (drop (call $java$util$ImmutableCollections_i))
                (local.set $var1 (struct.new $java$lang$UnsupportedOperationException (struct.get $java$lang$UnsupportedOperationException_rtt $factoryFor (global.get $java$lang$UnsupportedOperationException_cls)) (ref.func $java$lang$UnsupportedOperationException_vt) (ref.null noextern) (struct.get $java$lang$UnsupportedOperationException_rtt $classImplTypes (global.get $java$lang$UnsupportedOperationException_cls)) (ref.null none) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (local.set $phi2 (local.get $var1))
                (throw $javaexception (local.get $phi2))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$io$InputStream$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$io$OutputStream$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$util$Collections$EmptyListIterator$V$$clinit$$$ (type $t541) (param $unused (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (drop (call $java$util$Collections$EmptyListIterator_i))
        (local.set $var0 (struct.new $java$util$Collections$EmptyListIterator (struct.get $java$util$Collections$EmptyListIterator_rtt $factoryFor (global.get $java$util$Collections$EmptyListIterator_cls)) (ref.func $java$util$Collections$EmptyListIterator_vt) (ref.null noextern) (struct.get $java$util$Collections$EmptyListIterator_rtt $classImplTypes (global.get $java$util$Collections$EmptyListIterator_cls))))
        (drop (call $java$util$Collections$EmptyListIterator_i))
        (struct.set $java$util$Collections$EmptyListIterator_rtt $EMPTY_ITERATOR (ref.cast (ref null $java$util$Collections$EmptyListIterator_rtt) (call $java$util$Collections$EmptyListIterator_i)) (ref.cast (ref null $java$lang$Object) (local.get $var0)))
        (return)
        (unreachable))
    (func $java$util$Collections$EmptyListIterator$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$util$Collections$EmptyListIterator$I$previousIndex$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (return (i32.const -1))
        (unreachable))
    (func $java$util$LinkedHashMap$Entry$V$$init$$I$Ljava$lang$Object$$Ljava$lang$Object$$Ljava$util$HashMap$Node$ (type $t598) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (param $arg1 (ref null $java$lang$Object)) (param $arg2 (ref null $java$lang$Object)) (param $arg3 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$util$HashMap$Node $hash (ref.cast (ref null $java$util$HashMap$Node) (local.get $var0)) (local.get $arg0))
        (struct.set $java$util$HashMap$Node $key (ref.cast (ref null $java$util$HashMap$Node) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg1)))
        (struct.set $java$util$HashMap$Node $value (ref.cast (ref null $java$util$HashMap$Node) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg2)))
        (struct.set $java$util$HashMap$Node $next (ref.cast (ref null $java$util$HashMap$Node) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg3)))
        (return)
        (unreachable))
    (func $java$util$HashMap$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$util$HashMap $loadFactor (ref.cast (ref null $java$util$HashMap) (local.get $var0)) (f32.const 0.75))
        (return)
        (unreachable))
    (func $java$util$HashMap$V$$init$$I (type $t575) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32)
        (call $java$util$HashMap$V$$init$$I$F (local.get $thisref) (local.get $arg0) (f32.const 0.75))
        (return)
        (unreachable))
    (func $java$util$HashMap$V$$init$$I$F (type $t614) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (param $arg1 f32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $phi5 (ref null $java$lang$Object))
        (local $phi6 i32)
        (local $phi7 f32)
        (local $var8 f32)
        (local $var9 (ref null $java$lang$Object))
        (local $var10 (ref null $java$lang$Object))
        (local $var11 (ref null $java$lang$Object))
        (local $var12 f32)
        (local $var13 (ref null $java$lang$Object))
        (local $var14 (ref null $java$lang$Object))
        (local $var15 (ref null $java$lang$Object))
        (local $var16 i32)
        (local $var17 (ref null $java$lang$Object))
        (local $phi18 (ref null $java$lang$Object))
        (local $var19 (ref null $java$lang$Object))
        (local $phi20 (ref null $java$lang$Object))
        (local $phi21 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (i32.ge_s (local.get $arg0) (i32.const 0))
            (then
                ;; startBlock type=NORMAL, label = If_26_0
                (block $If_26_0
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (i32.le_s (local.get $arg0) (i32.const 1073741824))
                        (then
                            (local.set $phi5 (local.get $var0))
                            (local.set $phi6 (local.get $arg0))
                            (local.set $phi7 (local.get $arg1))
                            (br $If_26_0)
                            ;; Start else
                            )(else
                            (local.set $phi5 (local.get $var0))
                            (local.set $phi6 (i32.const 1073741824))
                            (local.set $phi7 (local.get $arg1))
                            (br $If_26_0)
                            ))
                    ;; finishIfBlock
                    )
                ;; finishBlock
                ;; startBlock type=NORMAL, label = If_35_0
                (block $If_35_0
                    ;; writeIfAndStartTrueBlock
                    (if $if2 (i32.le_s (call $compare_f32 (local.get $phi7) (f32.const 0.0)) (i32.const 0))
                        (then
                            (br $If_35_0)
                            ;; Start else
                            )(else
                            (local.set $var8 (local.get $phi7))
                            (drop (call $java$lang$Float_i))
                            ;; writeIfAndStartTrueBlock
                            (if $if3 (i32.eq (call $java$lang$Float$Z$isNaN$F (call $java$lang$Float_i) (local.get $var8)) (i32.const 0))
                                (then
                                    (local.set $var14 (local.get $phi5))
                                    (struct.set $java$util$HashMap $loadFactor (ref.cast (ref null $java$util$HashMap) (local.get $var14)) (local.get $phi7))
                                    (local.set $var15 (local.get $phi5))
                                    (local.set $var16 (local.get $phi6))
                                    (struct.set $java$util$HashMap $threshold (ref.cast (ref null $java$util$HashMap) (local.get $var15)) (call $java$util$HashMap$I$tableSizeFor$I (global.get $java$util$HashMap_cls) (local.get $var16)))
                                    (return)
                                    ;; Start else
                                    )(else
                                    (br $If_35_0)
                                    ))
                            ;; finishIfBlock
                            ))
                    ;; finishIfBlock
                    )
                ;; finishBlock
                (local.set $var9 (struct.new $java$lang$IllegalArgumentException (struct.get $java$lang$IllegalArgumentException_rtt $factoryFor (global.get $java$lang$IllegalArgumentException_cls)) (ref.func $java$lang$IllegalArgumentException_vt) (ref.null noextern) (struct.get $java$lang$IllegalArgumentException_rtt $classImplTypes (global.get $java$lang$IllegalArgumentException_cls)) (ref.null none) (ref.null none)))
                (local.set $var10 (struct.new $java$lang$StringBuilder (struct.get $java$lang$StringBuilder_rtt $factoryFor (global.get $java$lang$StringBuilder_cls)) (ref.func $java$lang$StringBuilder_vt) (ref.null noextern) (struct.get $java$lang$StringBuilder_rtt $classImplTypes (global.get $java$lang$StringBuilder_cls))))
                (call $java$lang$StringBuilder$V$initializeWith$I (local.get $var10) (i32.const 10))
                (local.set $var11 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var10) (global.get $stringpool_59)))
                (local.set $var12 (local.get $phi7))
                (drop (call $java$lang$Float_i))
                (local.set $var17 (call $java$lang$Float$Ljava$lang$String$$toString$F (call $java$lang$Float_i) (local.get $var12)))
                (local.set $phi18 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var11) (local.get $var17)))
                (local.set $var13 (local.get $phi18))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var9)) (ref.cast (ref null $java$lang$Object) (call $java$lang$StringBuilder$Ljava$lang$String$$toString$$ (local.get $var13))))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var9)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var9))
                ;; Start else
                )(else
                (local.set $var1 (struct.new $java$lang$IllegalArgumentException (struct.get $java$lang$IllegalArgumentException_rtt $factoryFor (global.get $java$lang$IllegalArgumentException_cls)) (ref.func $java$lang$IllegalArgumentException_vt) (ref.null noextern) (struct.get $java$lang$IllegalArgumentException_rtt $classImplTypes (global.get $java$lang$IllegalArgumentException_cls)) (ref.null none) (ref.null none)))
                (local.set $var2 (struct.new $java$lang$StringBuilder (struct.get $java$lang$StringBuilder_rtt $factoryFor (global.get $java$lang$StringBuilder_cls)) (ref.func $java$lang$StringBuilder_vt) (ref.null noextern) (struct.get $java$lang$StringBuilder_rtt $classImplTypes (global.get $java$lang$StringBuilder_cls))))
                (call $java$lang$StringBuilder$V$initializeWith$I (local.get $var2) (i32.const 10))
                (local.set $var3 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var2) (global.get $stringpool_58)))
                (drop (call $java$lang$Integer_i))
                (drop (call $java$lang$Integer_i))
                (local.set $phi21 (call $java$lang$Integer$Ljava$lang$String$$toString$I$I (call $java$lang$Integer_i) (local.get $arg0) (i32.const 10)))
                (local.set $var19 (local.get $phi21))
                (local.set $phi20 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var3) (local.get $var19)))
                (local.set $var4 (local.get $phi20))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (call $java$lang$StringBuilder$Ljava$lang$String$$toString$$ (local.get $var4))))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var1))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$util$HashMap$I$tableSizeFor$I (type $t551) (param $unused (ref null $java$lang$Object)) (param $arg0 i32) (result i32)
        (local $var0 i32)
        (local $var1 i32)
        (local $phi2 i32)
        (local $phi3 i32)
        (local $phi4 i32)
        (local $var5 i32)
        (local.set $var0 (i32.sub (local.get $arg0) (i32.const 1)))
        (drop (call $java$lang$Integer_i))
        (local.set $var1 (i32.shr_u (i32.const -1) (call $java$lang$Integer$I$numberOfLeadingZeros$I (call $java$lang$Integer_i) (local.get $var0))))
        ;; startBlock type=NORMAL, label = If_13_0
        (block $If_13_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ge_s (local.get $var1) (i32.const 0))
                (then
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (i32.lt_s (local.get $var1) (i32.const 1073741824))
                        (then
                            (local.set $var5 (i32.add (local.get $var1) (i32.const 1)))
                            (local.set $phi2 (local.get $arg0))
                            (local.set $phi3 (local.get $var1))
                            (local.set $phi4 (local.get $var5))
                            (br $If_13_0)
                            ;; Start else
                            )(else
                            ;; Here was a goto statement
                            (local.set $phi2 (local.get $arg0))
                            (local.set $phi3 (local.get $var1))
                            (local.set $phi4 (i32.const 1073741824))
                            (br $If_13_0)
                            ))
                    ;; finishIfBlock
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi2 (local.get $arg0))
                    (local.set $phi3 (local.get $var1))
                    (local.set $phi4 (i32.const 1))
                    (br $If_13_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi4))
        (unreachable))
    (func $java$util$HashMap$Ljava$lang$Object$$computeIfAbsent$Ljava$lang$Object$$Ljava$util$function$Function$ (type $t561) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 i32)
        (local $var3 i32)
        (local $var4 (ref null $java$lang$Object))
        (local $var5 i32)
        (local $phi6 (ref null $java$lang$Object))
        (local $phi7 (ref null $java$lang$Object))
        (local $phi8 (ref null $java$lang$Object))
        (local $phi9 i32)
        (local $phi10 (ref null $java$lang$Object))
        (local $phi11 i32)
        (local $phi12 (ref null $java$lang$Object))
        (local $phi13 (ref null $java$lang$Object))
        (local $var14 (ref null $java$lang$Object))
        (local $var15 (ref null $java$lang$Object))
        (local $var16 i32)
        (local $phi17 (ref null $java$lang$Object))
        (local $phi18 i32)
        (local $var19 (ref null $java$lang$Object))
        (local $var20 i32)
        (local $var21 (ref null $java$lang$Object))
        (local $var22 (ref null $java$lang$Object))
        (local $var23 i32)
        (local $var24 (ref null $java$lang$Object))
        (local $var25 (ref null $java$lang$Object))
        (local $phi26 (ref null $java$lang$Object))
        (local $phi27 i32)
        (local $phi28 (ref null $java$lang$Object))
        (local $phi29 (ref null $java$lang$Object))
        (local $var30 (ref null $java$lang$Object))
        (local $phi31 (ref null $java$lang$Object))
        (local $var32 i32)
        (local $var33 (ref null $java$lang$Object))
        (local $var34 (ref null $java$lang$Object))
        (local $var35 (ref null $java$lang$Object))
        (local $var36 (ref null $java$lang$Object))
        (local $var37 (ref null $java$lang$Object))
        (local $var38 (ref null $java$lang$Object))
        (local $var39 (ref null $java$lang$Object))
        (local $var40 (ref null $java$lang$Object))
        (local $var41 i32)
        (local $var42 (ref null $java$lang$Object))
        (local $var43 (ref null $java$lang$Object))
        (local $phi44 i32)
        (local $phi45 (ref null $java$lang$Object))
        (local $var46 (ref null $java$lang$Object))
        (local $var47 (ref null $java$lang$Object))
        (local $var48 (ref null $java$lang$Object))
        (local $var49 i32)
        (local $var50 (ref null $java$lang$Object))
        (local $var51 i32)
        (local $var52 (ref null $java$lang$Object))
        (local $var53 (ref null $java$lang$Object))
        (local $phi54 (ref null $java$lang$Object))
        (local $phi55 i32)
        (local $phi56 (ref null $java$lang$Object))
        (local $var57 (ref null $java$lang$Object))
        (local $var58 (ref null $java$lang$Object))
        (local $phi59 (ref null $java$lang$Object))
        (local $var60 (ref null $java$lang$Object))
        (local $phi61 (ref null $java$lang$Object))
        (local $var62 (ref null $java$lang$Object))
        (local $var63 (ref null $java$lang$Object))
        (local $var64 (ref null $java$lang$Object))
        (local $var65 (ref null $java$lang$Object))
        (local $phi66 (ref null $java$lang$Object))
        (local $phi67 i32)
        (local $phi68 (ref null $java$lang$Object))
        (local $phi69 (ref null $java$lang$Object))
        (local $var70 i32)
        (local $var71 (ref null $java$lang$Object))
        (local $phi72 (ref null $java$lang$Object))
        (local $phi73 (ref null $java$lang$Object))
        (local $phi74 i32)
        (local $var75 i32)
        (local $var76 i32)
        (local $phi77 i32)
        (local $phi78 (ref null $java$lang$Object))
        (local $var79 (ref null $java$lang$Object))
        (local $phi80 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg1)))
            (then
                ;; startBlock type=NORMAL, label = If_313_0
                (block $If_313_0
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg0)))
                        (then
                            (local.set $var75 (call_indirect (type $t555) (local.get $arg0) (call_ref $t0 (i32.const 2) (struct.get $java$lang$Object $vt_resolver (local.get $arg0)))))
                            (local.set $var76 (i32.xor (local.get $var75) (i32.shr_u (local.get $var75) (i32.const 16))))
                            (local.set $phi73 (local.get $arg0))
                            (local.set $phi74 (local.get $var76))
                            (br $If_313_0)
                            ;; Start else
                            )(else
                            ;; Here was a goto statement
                            (local.set $phi73 (local.get $arg0))
                            (local.set $phi74 (i32.const 0))
                            (br $If_313_0)
                            ))
                    ;; finishIfBlock
                    )
                ;; finishBlock
                (local.set $phi77 (local.get $phi74))
                (local.set $var2 (local.get $phi77))
                (local.set $var3 (struct.get $java$util$HashMap $size (ref.cast (ref null $java$util$HashMap) (local.get $var0))))
                ;; startBlock type=NORMAL, label = If_22_0
                (block $If_22_0
                    ;; startBlock type=NORMAL, label = If_22_1
                    (block $If_22_1
                        ;; writeIfAndStartTrueBlock
                        (if $if2 (i32.gt_s (local.get $var3) (struct.get $java$util$HashMap $threshold (ref.cast (ref null $java$util$HashMap) (local.get $var0))))
                            (then
                                (local.set $phi6 (local.get $var0))
                                (local.set $phi7 (local.get $arg0))
                                (local.set $phi8 (local.get $arg1))
                                (local.set $phi9 (local.get $var2))
                                (local.set $phi11 (i32.const 0))
                                (local.set $phi12 (ref.null none))
                                (local.set $phi13 (ref.null none))
                                (br $If_22_1)
                                ;; Start else
                                )(else
                                (local.set $var4 (struct.get $java$util$HashMap $table (ref.cast (ref null $java$util$HashMap) (local.get $var0))))
                                ;; writeIfAndStartTrueBlock
                                (if $if3 (ref.is_null (local.get $var4))
                                    (then
                                        (local.set $phi6 (local.get $var0))
                                        (local.set $phi7 (local.get $arg0))
                                        (local.set $phi8 (local.get $arg1))
                                        (local.set $phi9 (local.get $var2))
                                        (local.set $phi10 (local.get $var4))
                                        (local.set $phi11 (i32.const 0))
                                        (local.set $phi12 (ref.null none))
                                        (local.set $phi13 (ref.null none))
                                        (br $If_22_1)
                                        ;; Start else
                                        )(else
                                        (local.set $var5 (array.len $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var4)))))
                                        ;; writeIfAndStartTrueBlock
                                        (if $if4 (i32.ne (local.get $var5) (i32.const 0))
                                            (then
                                                (local.set $phi6 (local.get $var0))
                                                (local.set $phi7 (local.get $arg0))
                                                (local.set $phi8 (local.get $arg1))
                                                (local.set $phi9 (local.get $var2))
                                                (local.set $phi17 (local.get $var4))
                                                (local.set $phi18 (local.get $var5))
                                                (local.set $phi11 (i32.const 0))
                                                (local.set $phi12 (ref.null none))
                                                (local.set $phi13 (ref.null none))
                                                (br $If_22_0)
                                                ;; Start else
                                                )(else
                                                (local.set $phi6 (local.get $var0))
                                                (local.set $phi7 (local.get $arg0))
                                                (local.set $phi8 (local.get $arg1))
                                                (local.set $phi9 (local.get $var2))
                                                (local.set $phi10 (local.get $var4))
                                                (local.set $phi11 (i32.const 0))
                                                (local.set $phi12 (ref.null none))
                                                (local.set $phi13 (ref.null none))
                                                (br $If_22_1)
                                                ))
                                        ;; finishIfBlock
                                        ))
                                ;; finishIfBlock
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    (local.set $var14 (local.get $phi6))
                    (local.set $var15 (call $java$util$HashMap$$Ljava$util$HashMap$Node$$resize$$ (local.get $var14)))
                    (local.set $var16 (array.len $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var15)))))
                    (local.set $phi17 (local.get $var15))
                    (local.set $phi18 (local.get $var16))
                    (br $If_22_0)
                    )
                ;; finishBlock
                (local.set $var19 (local.get $phi17))
                (local.set $var20 (i32.and (i32.sub (local.get $phi18) (i32.const 1)) (local.get $phi9)))
                (local.set $var21 (array.get $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var19))) (local.get $var20)))
                ;; startBlock type=NORMAL, label = If_65_0
                (block $If_65_0
                    ;; writeIfAndStartTrueBlock
                    (if $if5 (ref.is_null (local.get $var21))
                        (then
                            (local.set $phi26 (local.get $var21))
                            (local.set $phi27 (local.get $var20))
                            (local.set $phi28 (local.get $phi12))
                            (local.set $phi29 (local.get $phi13))
                            (br $If_65_0)
                            ;; Start else
                            )(else
                            ;; startBlock type=NORMAL, label = If_69_0
                            (block $If_69_0
                                ;; writeIfAndStartTrueBlock
                                (if $if6 (i32.eq (call $instanceOf (local.get $var21) (i32.const 152)) (i32.const 0))
                                    (then
                                        (local.set $phi54 (local.get $var21))
                                        (local.set $phi55 (local.get $var20))
                                        (local.set $phi56 (local.get $var21))
                                        ;; startBlock type=LOOP, label = L1506335715
                                        (loop $L1506335715
                                            ;; startBlock type=NORMAL, label = If_179_0
                                            (block $If_179_0
                                                ;; writeIfAndStartTrueBlock
                                                (if $if7 (i32.ne (struct.get $java$util$HashMap$Node $hash (ref.cast (ref null $java$util$HashMap$Node) (local.get $phi56))) (local.get $phi9))
                                                    (then
                                                        (br $If_179_0)
                                                        ;; Start else
                                                        )(else
                                                        (local.set $var57 (struct.get $java$util$HashMap$Node $key (ref.cast (ref null $java$util$HashMap$Node) (local.get $phi56))))
                                                        ;; startBlock type=NORMAL, label = If_184_0
                                                        (block $If_184_0
                                                            ;; writeIfAndStartTrueBlock
                                                            (if $if8 (ref.eq (local.get $var57) (local.get $phi7))
                                                                (then
                                                                    (local.set $phi59 (local.get $var57))
                                                                    (br $If_184_0)
                                                                    ;; Start else
                                                                    )(else
                                                                    ;; writeIfAndStartTrueBlock
                                                                    (if $if9 (ref.is_null (local.get $phi7))
                                                                        (then
                                                                            (local.set $phi61 (local.get $var57))
                                                                            (br $If_179_0)
                                                                            ;; Start else
                                                                            )(else
                                                                            (local.set $var58 (local.get $phi7))
                                                                            ;; writeIfAndStartTrueBlock
                                                                            (if $if10 (i32.eq (call_indirect (type $t554) (local.get $var58) (local.get $var57) (call_ref $t0 (i32.const 1) (struct.get $java$lang$Object $vt_resolver (local.get $var58)))) (i32.const 0))
                                                                                (then
                                                                                    (local.set $phi61 (local.get $var57))
                                                                                    (br $If_179_0)
                                                                                    ;; Start else
                                                                                    )(else
                                                                                    (local.set $phi59 (local.get $var57))
                                                                                    (br $If_184_0)
                                                                                    ))
                                                                            ;; finishIfBlock
                                                                            ))
                                                                    ;; finishIfBlock
                                                                    ))
                                                            ;; finishIfBlock
                                                            )
                                                        ;; finishBlock
                                                        (local.set $var60 (local.get $phi56))
                                                        ;; Here was a goto statement
                                                        (local.set $phi26 (local.get $phi54))
                                                        (local.set $phi27 (local.get $phi55))
                                                        (local.set $phi28 (local.get $phi12))
                                                        (local.set $phi29 (local.get $var60))
                                                        (br $If_69_0)
                                                        ))
                                                ;; finishIfBlock
                                                )
                                            ;; finishBlock
                                            (local.set $phi11 (i32.add (local.get $phi11) (i32.const 1)))
                                            (local.set $var62 (struct.get $java$util$HashMap$Node $next (ref.cast (ref null $java$util$HashMap$Node) (local.get $phi56))))
                                            ;; writeIfAndStartTrueBlock
                                            (if $if11 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var62)))
                                                (then
                                                    (local.set $phi56 (local.get $var62))
                                                    (br $L1506335715)
                                                    ;; Start else
                                                    )(else
                                                    (local.set $phi26 (local.get $phi54))
                                                    (local.set $phi27 (local.get $phi55))
                                                    (local.set $phi28 (local.get $phi12))
                                                    (local.set $phi29 (local.get $phi13))
                                                    (br $If_69_0)
                                                    ))
                                            ;; finishIfBlock
                                            )
                                        ;; finishBlock
                                        ;; Start else
                                        )(else
                                        (local.set $var22 (ref.cast (ref null $java$lang$Object) (local.get $var21)))
                                        (local.set $var23 (local.get $phi9))
                                        (local.set $var24 (local.get $phi7))
                                        ;; startBlock type=NORMAL, label = If_287_0
                                        (block $If_287_0
                                            ;; writeIfAndStartTrueBlock
                                            (if $if12 (ref.is_null (struct.get $java$util$HashMap$TreeNode $parent (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var22))))
                                                (then
                                                    (local.set $phi66 (local.get $var22))
                                                    (local.set $phi67 (local.get $var23))
                                                    (local.set $phi68 (local.get $var24))
                                                    (local.set $phi69 (local.get $var22))
                                                    (br $If_287_0)
                                                    ;; Start else
                                                    )(else
                                                    (local.set $phi78 (local.get $var22))
                                                    ;; startBlock type=LOOP, label = L1246055868_54
                                                    (loop $L1246055868_54
                                                        (local.set $var79 (struct.get $java$util$HashMap$TreeNode $parent (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $phi78))))
                                                        ;; writeIfAndStartTrueBlock
                                                        (if $if13 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var79)))
                                                            (then
                                                                ;; Here was a goto statement
                                                                (local.set $phi78 (local.get $var79))
                                                                (br $L1246055868_54)
                                                                ;; Start else
                                                                )(else
                                                                (local.set $phi80 (local.get $phi78))
                                                                (local.set $var65 (local.get $phi80))
                                                                ;; Here was a goto statement
                                                                (local.set $phi66 (local.get $var22))
                                                                (local.set $phi67 (local.get $var23))
                                                                (local.set $phi68 (local.get $var24))
                                                                (local.set $phi69 (local.get $var65))
                                                                (br $If_287_0)
                                                                ))
                                                        ;; finishIfBlock
                                                        )
                                                    ;; finishBlock
                                                    ))
                                            ;; finishIfBlock
                                            )
                                        ;; finishBlock
                                        (local.set $var70 (local.get $phi67))
                                        (local.set $var71 (local.get $phi68))
                                        (local.set $phi72 (call $java$util$HashMap$TreeNode$Ljava$util$HashMap$TreeNode$$find$I$Ljava$lang$Object$$Ljava$lang$Class$ (local.get $phi69) (local.get $var70) (local.get $var71) (ref.null none)))
                                        (local.set $var25 (local.get $phi72))
                                        ;; Here was a goto statement
                                        (local.set $phi26 (local.get $var21))
                                        (local.set $phi27 (local.get $var20))
                                        (local.set $phi28 (local.get $var22))
                                        (local.set $phi29 (local.get $var25))
                                        (br $If_69_0)
                                        ))
                                ;; finishIfBlock
                                )
                            ;; finishBlock
                            ;; writeIfAndStartTrueBlock
                            (if $if14 (ref.is_null (local.get $phi29))
                                (then
                                    (br $If_65_0)
                                    ;; Start else
                                    )(else
                                    (local.set $var30 (struct.get $java$util$HashMap$Node $value (ref.cast (ref null $java$util$HashMap$Node) (local.get $phi29))))
                                    ;; writeIfAndStartTrueBlock
                                    (if $if15 (ref.is_null (local.get $var30))
                                        (then
                                            (local.set $phi31 (local.get $var30))
                                            (br $If_65_0)
                                            ;; Start else
                                            )(else
                                            (local.set $var64 (local.get $phi29))
                                            (return (local.get $var30))
                                            ))
                                    ;; finishIfBlock
                                    ))
                            ;; finishIfBlock
                            ))
                    ;; finishIfBlock
                    )
                ;; finishBlock
                (local.set $var32 (struct.get $java$util$HashMap $modCount (ref.cast (ref null $java$util$HashMap) (local.get $phi6))))
                (local.set $var33 (local.get $phi8))
                (local.set $var34 (local.get $phi7))
                (local.set $var35 (call_indirect (type $t559) (local.get $var33) (local.get $var34) (call_ref $t0 (i32.const 77) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var33))))))
                ;; writeIfAndStartTrueBlock
                (if $if16 (i32.eq (local.get $var32) (struct.get $java$util$HashMap $modCount (ref.cast (ref null $java$util$HashMap) (local.get $phi6))))
                    (then
                        ;; writeIfAndStartTrueBlock
                        (if $if17 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var35)))
                            (then
                                ;; writeIfAndStartTrueBlock
                                (if $if18 (ref.is_null (local.get $phi29))
                                    (then
                                        ;; startBlock type=NORMAL, label = If_125_0
                                        (block $If_125_0
                                            ;; writeIfAndStartTrueBlock
                                            (if $if19 (ref.is_null (local.get $phi28))
                                                (then
                                                    (local.set $var48 (local.get $phi17))
                                                    (local.set $var49 (local.get $phi27))
                                                    (local.set $var50 (local.get $phi6))
                                                    (local.set $var51 (local.get $phi9))
                                                    (local.set $var52 (local.get $phi7))
                                                    (local.set $var53 (local.get $phi26))
                                                    (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var48))) (local.get $var49) (call $java$util$HashMap$Ljava$util$HashMap$Node$$newNode$I$Ljava$lang$Object$$Ljava$lang$Object$$Ljava$util$HashMap$Node$ (local.get $var50) (local.get $var51) (local.get $var52) (local.get $var35) (local.get $var53)))
                                                    ;; writeIfAndStartTrueBlock
                                                    (if $if20 (i32.lt_s (local.get $phi11) (i32.const 7))
                                                        (then
                                                            (local.set $phi44 (local.get $var32))
                                                            (local.set $phi45 (local.get $var35))
                                                            (br $If_125_0)
                                                            ;; Start else
                                                            )(else
                                                            (call $java$util$HashMap$V$treeifyBin$$Ljava$util$HashMap$Node$$I (local.get $phi6) (local.get $phi17) (local.get $phi9))
                                                            (local.set $phi44 (local.get $var32))
                                                            (local.set $phi45 (local.get $var35))
                                                            (br $If_125_0)
                                                            ))
                                                    ;; finishIfBlock
                                                    ;; Start else
                                                    )(else
                                                    (local.set $var38 (local.get $phi28))
                                                    (local.set $var39 (local.get $phi6))
                                                    (local.set $var40 (local.get $phi17))
                                                    (local.set $var41 (local.get $phi9))
                                                    (local.set $var42 (local.get $phi7))
                                                    (local.set $var43 (call $java$util$HashMap$TreeNode$Ljava$util$HashMap$TreeNode$$putTreeVal$Ljava$util$HashMap$$$Ljava$util$HashMap$Node$$I$Ljava$lang$Object$$Ljava$lang$Object$ (local.get $var38) (local.get $var39) (local.get $var40) (local.get $var41) (local.get $var42) (local.get $var35)))
                                                    ;; Here was a goto statement
                                                    (local.set $phi44 (local.get $var32))
                                                    (local.set $phi45 (local.get $var35))
                                                    (br $If_125_0)
                                                    ))
                                            ;; finishIfBlock
                                            )
                                        ;; finishBlock
                                        (local.set $var46 (local.get $phi6))
                                        (struct.set $java$util$HashMap $modCount (ref.cast (ref null $java$util$HashMap) (local.get $var46)) (i32.add (local.get $phi44) (i32.const 1)))
                                        (local.set $var47 (local.get $phi6))
                                        (struct.set $java$util$HashMap $size (ref.cast (ref null $java$util$HashMap) (local.get $var47)) (i32.add (struct.get $java$util$HashMap $size (ref.cast (ref null $java$util$HashMap) (local.get $var47))) (i32.const 1)))
                                        (return (local.get $phi45))
                                        ;; Start else
                                        )(else
                                        (local.set $var37 (local.get $phi29))
                                        (struct.set $java$util$HashMap$Node $value (ref.cast (ref null $java$util$HashMap$Node) (local.get $var37)) (ref.cast (ref null $java$lang$Object) (local.get $var35)))
                                        (local.set $var63 (local.get $phi29))
                                        (return (local.get $var35))
                                        ))
                                ;; finishIfBlock
                                ;; Start else
                                )(else
                                (return (ref.null none))
                                ))
                        ;; finishIfBlock
                        ;; Start else
                        )(else
                        (local.set $var36 (struct.new $java$util$ConcurrentModificationException (struct.get $java$util$ConcurrentModificationException_rtt $factoryFor (global.get $java$util$ConcurrentModificationException_cls)) (ref.func $java$util$ConcurrentModificationException_vt) (ref.null noextern) (struct.get $java$util$ConcurrentModificationException_rtt $classImplTypes (global.get $java$util$ConcurrentModificationException_cls)) (ref.null none) (ref.null none)))
                        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var36)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var36)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                        (throw $javaexception (local.get $var36))
                        ))
                ;; finishIfBlock
                ;; Start else
                )(else
                (local.set $var1 (struct.new $java$lang$NullPointerException (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)) (ref.func $java$lang$NullPointerException_vt) (ref.null noextern) (struct.get $java$lang$NullPointerException_rtt $classImplTypes (global.get $java$lang$NullPointerException_cls)) (ref.null none) (ref.null none) (i32.const 0) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var1))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$util$HashMap$I$hash$Ljava$lang$Object$ (type $t554) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $phi0 (ref null $java$lang$Object))
        (local $phi1 i32)
        (local $var2 i32)
        (local $var3 i32)
        ;; startBlock type=NORMAL, label = If_2_0
        (block $If_2_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg0)))
                (then
                    (local.set $var2 (call_indirect (type $t555) (local.get $arg0) (call_ref $t0 (i32.const 2) (struct.get $java$lang$Object $vt_resolver (local.get $arg0)))))
                    (local.set $var3 (i32.xor (local.get $var2) (i32.shr_u (local.get $var2) (i32.const 16))))
                    (local.set $phi0 (local.get $arg0))
                    (local.set $phi1 (local.get $var3))
                    (br $If_2_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi0 (local.get $arg0))
                    (local.set $phi1 (i32.const 0))
                    (br $If_2_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi1))
        (unreachable))
    (func $java$util$HashMap$$Ljava$util$HashMap$Node$$resize$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 (ref null $java$lang$Object))
        (local $phi4 i32)
        (local $var5 i32)
        (local $var6 i32)
        (local $var7 (ref null $java$lang$Object))
        (local $var8 i32)
        (local $var9 i32)
        (local $phi10 i32)
        (local $phi11 i32)
        (local $phi12 i32)
        (local $phi13 i32)
        (local $var14 f32)
        (local $var15 i32)
        (local $phi16 f32)
        (local $phi17 i32)
        (local $phi18 i32)
        (local $var19 (ref null $java$lang$Object))
        (local $var20 (ref null $java$lang$Object))
        (local $var21 (ref null $java$lang$Object))
        (local $phi22 (ref null $java$lang$Object))
        (local $phi23 i32)
        (local $var24 (ref null $java$lang$Object))
        (local $var25 (ref null $java$lang$Object))
        (local $var26 i32)
        (local $phi27 (ref null $java$lang$Object))
        (local $phi28 (ref null $java$lang$Object))
        (local $phi29 (ref null $java$lang$Object))
        (local $phi30 (ref null $java$lang$Object))
        (local $phi31 (ref null $java$lang$Object))
        (local $phi32 (ref null $java$lang$Object))
        (local $var33 (ref null $java$lang$Object))
        (local $var34 (ref null $java$lang$Object))
        (local $phi35 (ref null $java$lang$Object))
        (local $phi36 (ref null $java$lang$Object))
        (local $var37 (ref null $java$lang$Object))
        (local $phi38 (ref null $java$lang$Object))
        (local $var39 (ref null $java$lang$Object))
        (local $var40 (ref null $java$lang$Object))
        (local $phi41 (ref null $java$lang$Object))
        (local $var42 (ref null $java$lang$Object))
        (local $var43 (ref null $java$lang$Object))
        (local $var44 (ref null $java$lang$Object))
        (local $phi45 (ref null $java$lang$Object))
        (local $phi46 (ref null $java$lang$Object))
        (local $var47 (ref null $java$lang$Object))
        (local $var48 (ref null $java$lang$Object))
        (local $phi49 f32)
        (local $var50 i32)
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (struct.get $java$util$HashMap $table (ref.cast (ref null $java$util$HashMap) (local.get $var0))))
        ;; startBlock type=NORMAL, label = If_7_0
        (block $If_7_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var1)))
                (then
                    (local.set $var50 (array.len $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var1)))))
                    (local.set $phi2 (local.get $var0))
                    (local.set $phi3 (local.get $var1))
                    (local.set $phi4 (local.get $var50))
                    (br $If_7_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi2 (local.get $var0))
                    (local.set $phi3 (local.get $var1))
                    (local.set $phi4 (i32.const 0))
                    (br $If_7_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (local.set $var5 (local.get $phi4))
        (local.set $var6 (struct.get $java$util$HashMap $threshold (ref.cast (ref null $java$util$HashMap) (local.get $phi2))))
        ;; startBlock type=NORMAL, label = If_21_0
        (block $If_21_0
            ;; writeIfAndStartTrueBlock
            (if $if1 (i32.le_s (local.get $var5) (i32.const 0))
                (then
                    ;; writeIfAndStartTrueBlock
                    (if $if2 (i32.le_s (local.get $var6) (i32.const 0))
                        (then
                            (local.set $phi10 (local.get $var5))
                            (local.set $phi11 (local.get $var6))
                            (local.set $phi12 (i32.const 16))
                            (local.set $phi13 (i32.const 12))
                            (br $If_21_0)
                            ;; Start else
                            )(else
                            ;; Here was a goto statement
                            (local.set $phi10 (local.get $var5))
                            (local.set $phi11 (local.get $var6))
                            (local.set $phi12 (local.get $var6))
                            (local.set $phi13 (i32.const 0))
                            (br $If_21_0)
                            ))
                    ;; finishIfBlock
                    ;; Start else
                    )(else
                    ;; writeIfAndStartTrueBlock
                    (if $if3 (i32.lt_s (local.get $var5) (i32.const 1073741824))
                        (then
                            (local.set $var8 (i32.shl (local.get $var5) (i32.const 1)))
                            ;; writeIfAndStartTrueBlock
                            (if $if4 (i32.ge_s (local.get $var8) (i32.const 1073741824))
                                (then
                                    (local.set $phi10 (local.get $var5))
                                    (local.set $phi11 (local.get $var6))
                                    (local.set $phi12 (local.get $var8))
                                    (local.set $phi13 (i32.const 0))
                                    (br $If_21_0)
                                    ;; Start else
                                    )(else
                                    ;; writeIfAndStartTrueBlock
                                    (if $if5 (i32.lt_s (local.get $var5) (i32.const 16))
                                        (then
                                            (local.set $phi10 (local.get $var5))
                                            (local.set $phi11 (local.get $var6))
                                            (local.set $phi12 (local.get $var8))
                                            (local.set $phi13 (i32.const 0))
                                            (br $If_21_0)
                                            ;; Start else
                                            )(else
                                            (local.set $var9 (i32.shl (local.get $var6) (i32.const 1)))
                                            ;; Here was a goto statement
                                            (local.set $phi10 (local.get $var5))
                                            (local.set $phi11 (local.get $var6))
                                            (local.set $phi12 (local.get $var8))
                                            (local.set $phi13 (local.get $var9))
                                            (br $If_21_0)
                                            ))
                                    ;; finishIfBlock
                                    ))
                            ;; finishIfBlock
                            ;; Start else
                            )(else
                            (local.set $var7 (local.get $phi2))
                            (struct.set $java$util$HashMap $threshold (ref.cast (ref null $java$util$HashMap) (local.get $var7)) (i32.const 2147483647))
                            (return (local.get $phi3))
                            ))
                    ;; finishIfBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        ;; startBlock type=NORMAL, label = If_52_0
        (block $If_52_0
            ;; writeIfAndStartTrueBlock
            (if $if6 (i32.ne (local.get $phi13) (i32.const 0))
                (then
                    (local.set $phi18 (local.get $phi13))
                    (br $If_52_0)
                    ;; Start else
                    )(else
                    (local.set $var14 (f32.mul (f32.convert_i32_s (local.get $phi12)) (struct.get $java$util$HashMap $loadFactor (ref.cast (ref null $java$util$HashMap) (local.get $phi2)))))
                    ;; startBlock type=NORMAL, label = If_61_0
                    (block $If_61_0
                        ;; startBlock type=NORMAL, label = If_61_1
                        (block $If_61_1
                            ;; writeIfAndStartTrueBlock
                            (if $if7 (i32.ge_s (local.get $phi12) (i32.const 1073741824))
                                (then
                                    (local.set $phi49 (local.get $var14))
                                    (br $If_61_1)
                                    ;; Start else
                                    )(else
                                    ;; writeIfAndStartTrueBlock
                                    (if $if8 (i32.ge_s (call $compare_f32 (local.get $var14) (f32.const 1.07374182E9)) (i32.const 0))
                                        (then
                                            (local.set $phi49 (local.get $var14))
                                            (br $If_61_1)
                                            ;; Start else
                                            )(else
                                            (local.set $var15 (i32.trunc_f32_s (local.get $var14)))
                                            ;; Here was a goto statement
                                            (local.set $phi16 (local.get $var14))
                                            (local.set $phi17 (local.get $var15))
                                            (br $If_61_0)
                                            ))
                                    ;; finishIfBlock
                                    ))
                            ;; finishIfBlock
                            )
                        ;; finishBlock
                        (local.set $phi16 (local.get $phi49))
                        (local.set $phi17 (i32.const 2147483647))
                        (br $If_61_0)
                        )
                    ;; finishBlock
                    (local.set $phi18 (local.get $phi17))
                    (br $If_52_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (local.set $var19 (local.get $phi2))
        (struct.set $java$util$HashMap $threshold (ref.cast (ref null $java$util$HashMap) (local.get $var19)) (local.get $phi18))
        (local.set $var20 (struct.new $obj_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t549 (local.get $phi12))))
        (local.set $var21 (local.get $phi2))
        (struct.set $java$util$HashMap $table (ref.cast (ref null $java$util$HashMap) (local.get $var21)) (ref.cast (ref null $java$lang$Object) (local.get $var20)))
        ;; startBlock type=NORMAL, label = If_86_0
        (block $If_86_0
            ;; writeIfAndStartTrueBlock
            (if $if9 (ref.is_null (local.get $phi3))
                (then
                    (local.set $phi22 (local.get $var20))
                    (br $If_86_0)
                    ;; Start else
                    )(else
                    (local.set $phi22 (local.get $var20))
                    (local.set $phi23 (i32.const 0))
                    ;; startBlock type=LOOP, label = L597895165
                    (loop $L597895165
                        ;; writeIfAndStartTrueBlock
                        (if $if10 (i32.ge_s (local.get $phi23) (local.get $phi10))
                            (then
                                (br $If_86_0)
                                ;; Start else
                                )(else
                                (local.set $var24 (array.get $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $phi3))) (local.get $phi23)))
                                ;; startBlock type=NORMAL, label = If_97_0
                                (block $If_97_0
                                    ;; writeIfAndStartTrueBlock
                                    (if $if11 (ref.is_null (local.get $var24))
                                        (then
                                            (local.set $phi27 (local.get $var24))
                                            (br $If_97_0)
                                            ;; Start else
                                            )(else
                                            (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $phi3))) (local.get $phi23) (ref.null none))
                                            ;; writeIfAndStartTrueBlock
                                            (if $if12 (select (i32.const 0) (i32.const 1) (ref.is_null (struct.get $java$util$HashMap$Node $next (ref.cast (ref null $java$util$HashMap$Node) (local.get $var24)))))
                                                (then
                                                    ;; writeIfAndStartTrueBlock
                                                    (if $if13 (i32.eq (call $instanceOf (local.get $var24) (i32.const 152)) (i32.const 0))
                                                        (then
                                                            (local.set $phi28 (local.get $var24))
                                                            (local.set $phi29 (ref.null none))
                                                            (local.set $phi30 (ref.null none))
                                                            (local.set $phi31 (ref.null none))
                                                            (local.set $phi32 (ref.null none))
                                                            ;; startBlock type=LOOP, label = L1133152147
                                                            (loop $L1133152147
                                                                (local.set $var33 (struct.get $java$util$HashMap$Node $next (ref.cast (ref null $java$util$HashMap$Node) (local.get $phi28))))
                                                                ;; startBlock type=NORMAL, label = If_143_0
                                                                (block $If_143_0
                                                                    ;; writeIfAndStartTrueBlock
                                                                    (if $if14 (i32.ne (i32.and (struct.get $java$util$HashMap$Node $hash (ref.cast (ref null $java$util$HashMap$Node) (local.get $phi28))) (local.get $phi10)) (i32.const 0))
                                                                        (then
                                                                            ;; startBlock type=NORMAL, label = If_183_0
                                                                            (block $If_183_0
                                                                                ;; writeIfAndStartTrueBlock
                                                                                (if $if15 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $phi32)))
                                                                                    (then
                                                                                        (local.set $var48 (local.get $phi32))
                                                                                        (struct.set $java$util$HashMap$Node $next (ref.cast (ref null $java$util$HashMap$Node) (local.get $var48)) (ref.cast (ref null $java$lang$Object) (local.get $phi28)))
                                                                                        (local.set $phi45 (local.get $phi31))
                                                                                        (local.set $phi46 (local.get $var33))
                                                                                        (br $If_183_0)
                                                                                        ;; Start else
                                                                                        )(else
                                                                                        (local.set $var44 (local.get $phi28))
                                                                                        ;; Here was a goto statement
                                                                                        (local.set $phi45 (local.get $var44))
                                                                                        (local.set $phi46 (local.get $var33))
                                                                                        (br $If_183_0)
                                                                                        ))
                                                                                ;; finishIfBlock
                                                                                )
                                                                            ;; finishBlock
                                                                            (local.set $var47 (local.get $phi28))
                                                                            (local.set $phi35 (local.get $phi29))
                                                                            (local.set $phi38 (local.get $phi30))
                                                                            (local.set $phi31 (local.get $phi45))
                                                                            (local.set $phi32 (local.get $var47))
                                                                            (local.set $phi36 (local.get $phi46))
                                                                            (br $If_143_0)
                                                                            ;; Start else
                                                                            )(else
                                                                            ;; startBlock type=NORMAL, label = If_146_0
                                                                            (block $If_146_0
                                                                                ;; writeIfAndStartTrueBlock
                                                                                (if $if16 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $phi30)))
                                                                                    (then
                                                                                        (local.set $var43 (local.get $phi30))
                                                                                        (struct.set $java$util$HashMap$Node $next (ref.cast (ref null $java$util$HashMap$Node) (local.get $var43)) (ref.cast (ref null $java$lang$Object) (local.get $phi28)))
                                                                                        (local.set $phi35 (local.get $phi29))
                                                                                        (local.set $phi36 (local.get $var33))
                                                                                        (br $If_146_0)
                                                                                        ;; Start else
                                                                                        )(else
                                                                                        (local.set $var34 (local.get $phi28))
                                                                                        ;; Here was a goto statement
                                                                                        (local.set $phi35 (local.get $var34))
                                                                                        (local.set $phi36 (local.get $var33))
                                                                                        (br $If_146_0)
                                                                                        ))
                                                                                ;; finishIfBlock
                                                                                )
                                                                            ;; finishBlock
                                                                            (local.set $var37 (local.get $phi28))
                                                                            ;; Here was a goto statement
                                                                            (local.set $phi38 (local.get $var37))
                                                                            (br $If_143_0)
                                                                            ))
                                                                    ;; finishIfBlock
                                                                    )
                                                                ;; finishBlock
                                                                (local.set $var39 (local.get $phi36))
                                                                ;; writeIfAndStartTrueBlock
                                                                (if $if17 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var39)))
                                                                    (then
                                                                        (local.set $phi28 (local.get $var39))
                                                                        (local.set $phi29 (local.get $phi35))
                                                                        (local.set $phi30 (local.get $phi38))
                                                                        (br $L1133152147)
                                                                        ;; Start else
                                                                        )(else
                                                                        ;; startBlock type=NORMAL, label = If_163_0
                                                                        (block $If_163_0
                                                                            ;; writeIfAndStartTrueBlock
                                                                            (if $if18 (ref.is_null (local.get $phi38))
                                                                                (then
                                                                                    (local.set $phi41 (local.get $var39))
                                                                                    (br $If_163_0)
                                                                                    ;; Start else
                                                                                    )(else
                                                                                    (local.set $var40 (local.get $phi38))
                                                                                    (struct.set $java$util$HashMap$Node $next (ref.cast (ref null $java$util$HashMap$Node) (local.get $var40)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                                                                    (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $phi22))) (local.get $phi23) (local.get $phi35))
                                                                                    (local.set $phi41 (local.get $var39))
                                                                                    (br $If_163_0)
                                                                                    ))
                                                                            ;; finishIfBlock
                                                                            )
                                                                        ;; finishBlock
                                                                        ;; writeIfAndStartTrueBlock
                                                                        (if $if19 (ref.is_null (local.get $phi32))
                                                                            (then
                                                                                (local.set $phi27 (local.get $phi41))
                                                                                (br $If_97_0)
                                                                                ;; Start else
                                                                                )(else
                                                                                (local.set $var42 (local.get $phi32))
                                                                                (struct.set $java$util$HashMap$Node $next (ref.cast (ref null $java$util$HashMap$Node) (local.get $var42)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                                                                (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $phi22))) (i32.add (local.get $phi23) (local.get $phi10)) (local.get $phi31))
                                                                                (local.set $phi27 (local.get $phi41))
                                                                                (br $If_97_0)
                                                                                ))
                                                                        ;; finishIfBlock
                                                                        ))
                                                                ;; finishIfBlock
                                                                )
                                                            ;; finishBlock
                                                            ;; Start else
                                                            )(else
                                                            (call $java$util$HashMap$TreeNode$V$split$Ljava$util$HashMap$$$Ljava$util$HashMap$Node$$I$I (ref.cast (ref null $java$lang$Object) (local.get $var24)) (local.get $phi2) (local.get $phi22) (local.get $phi23) (local.get $phi10))
                                                            ;; Here was a goto statement
                                                            (local.set $phi27 (local.get $var24))
                                                            (br $If_97_0)
                                                            ))
                                                    ;; finishIfBlock
                                                    ;; Start else
                                                    )(else
                                                    (local.set $var25 (local.get $phi22))
                                                    (local.set $var26 (i32.and (struct.get $java$util$HashMap$Node $hash (ref.cast (ref null $java$util$HashMap$Node) (local.get $var24))) (i32.sub (local.get $phi12) (i32.const 1))))
                                                    (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var25))) (local.get $var26) (local.get $var24))
                                                    ;; Here was a goto statement
                                                    (local.set $phi27 (local.get $var24))
                                                    (br $If_97_0)
                                                    ))
                                            ;; finishIfBlock
                                            ))
                                    ;; finishIfBlock
                                    )
                                ;; finishBlock
                                (local.set $phi23 (i32.add (local.get $phi23) (i32.const 1)))
                                ;; Here was a goto statement
                                (br $L597895165)
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi22))
        (unreachable))
    (func $java$util$HashMap$Ljava$util$HashMap$Node$$replacementNode$Ljava$util$HashMap$Node$$Ljava$util$HashMap$Node$ (type $t561) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 i32)
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local.set $var0 (struct.new $java$util$HashMap$Node (struct.get $java$util$HashMap$Node_rtt $factoryFor (global.get $java$util$HashMap$Node_cls)) (ref.func $java$util$HashMap$Node_vt) (ref.null noextern) (struct.get $java$util$HashMap$Node_rtt $classImplTypes (global.get $java$util$HashMap$Node_cls)) (ref.null none) (i32.const 0) (ref.null none) (ref.null none)))
        (local.set $var1 (struct.get $java$util$HashMap$Node $hash (ref.cast (ref null $java$util$HashMap$Node) (local.get $arg0))))
        (local.set $var2 (struct.get $java$util$HashMap$Node $key (ref.cast (ref null $java$util$HashMap$Node) (local.get $arg0))))
        (local.set $var3 (struct.get $java$util$HashMap$Node $value (ref.cast (ref null $java$util$HashMap$Node) (local.get $arg0))))
        (struct.set $java$util$HashMap$Node $hash (ref.cast (ref null $java$util$HashMap$Node) (local.get $var0)) (local.get $var1))
        (struct.set $java$util$HashMap$Node $key (ref.cast (ref null $java$util$HashMap$Node) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $var2)))
        (struct.set $java$util$HashMap$Node $value (ref.cast (ref null $java$util$HashMap$Node) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $var3)))
        (struct.set $java$util$HashMap$Node $next (ref.cast (ref null $java$util$HashMap$Node) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg1)))
        (return (local.get $var0))
        (unreachable))
    (func $java$util$HashMap$Ljava$lang$Class$$comparableClassFor$Ljava$lang$Object$ (type $t559) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 i32)
        (local $phi3 (ref null $java$lang$Object))
        (local $phi4 (ref null $java$lang$Object))
        (local $phi5 (ref null $java$lang$Object))
        (local $phi6 (ref null $java$lang$Object))
        (local $phi7 i32)
        (local $phi8 i32)
        (local $var9 (ref null $java$lang$Object))
        (local $var10 (ref null $java$lang$Object))
        (local $var11 (ref null $java$lang$Object))
        (local $phi12 (ref null $java$lang$Object))
        (local $phi13 (ref null $java$lang$Object))
        (local $phi14 (ref null $java$lang$Object))
        (local $phi15 (ref null $java$lang$Object))
        ;; startBlock type=NORMAL, label = If_4_0
        (block $If_4_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.eq (call $instanceOf (local.get $arg0) (i32.const 51)) (i32.const 0))
                (then
                    (local.set $phi3 (local.get $arg0))
                    (br $If_4_0)
                    ;; Start else
                    )(else
                    (local.set $var0 (call $runtimetypeof (local.get $arg0)))
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (select (i32.const 0) (i32.const 1) (ref.eq (local.get $var0) (global.get $java$lang$String_cls)))
                        (then
                            (local.set $phi15 (struct.new $obj_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t549 (i32.const 0))))
                            (local.set $var1 (local.get $phi15))
                            ;; writeIfAndStartTrueBlock
                            (if $if2 (ref.is_null (local.get $var1))
                                (then
                                    (local.set $phi3 (local.get $arg0))
                                    (local.set $phi4 (local.get $var0))
                                    (local.set $phi5 (local.get $var1))
                                    (br $If_4_0)
                                    ;; Start else
                                    )(else
                                    (local.set $var2 (array.len $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var1)))))
                                    (local.set $phi3 (local.get $arg0))
                                    (local.set $phi4 (local.get $var0))
                                    (local.set $phi5 (local.get $var1))
                                    (local.set $phi6 (local.get $var1))
                                    (local.set $phi7 (local.get $var2))
                                    (local.set $phi8 (i32.const 0))
                                    ;; startBlock type=LOOP, label = L399589645
                                    (loop $L399589645
                                        ;; writeIfAndStartTrueBlock
                                        (if $if3 (i32.ge_s (local.get $phi8) (local.get $phi7))
                                            (then
                                                (br $If_4_0)
                                                ;; Start else
                                                )(else
                                                (local.set $var9 (array.get $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $phi6))) (local.get $phi8)))
                                                ;; startBlock type=NORMAL, label = If_37_0
                                                (block $If_37_0
                                                    ;; writeIfAndStartTrueBlock
                                                    (if $if4 (i32.eq (call $instanceOf (local.get $var9) (i32.const 88)) (i32.const 0))
                                                        (then
                                                            (local.set $phi14 (local.get $var9))
                                                            (br $If_37_0)
                                                            ;; Start else
                                                            )(else
                                                            (local.set $var10 (ref.cast (ref null $java$lang$Object) (local.get $var9)))
                                                            ;; writeIfAndStartTrueBlock
                                                            (if $if5 (select (i32.const 0) (i32.const 1) (ref.eq (call_indirect (type $t553) (local.get $var10) (call_ref $t0 (i32.const 180) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var10))))) (global.get $java$lang$Comparable_cls)))
                                                                (then
                                                                    (local.set $phi13 (local.get $var10))
                                                                    (local.set $phi14 (local.get $var9))
                                                                    (br $If_37_0)
                                                                    ;; Start else
                                                                    )(else
                                                                    (local.set $var11 (call_indirect (type $t553) (local.get $var10) (call_ref $t0 (i32.const 181) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var10))))))
                                                                    ;; writeIfAndStartTrueBlock
                                                                    (if $if6 (ref.is_null (local.get $var11))
                                                                        (then
                                                                            (local.set $phi12 (local.get $var11))
                                                                            (local.set $phi13 (local.get $var10))
                                                                            (local.set $phi14 (local.get $var9))
                                                                            (br $If_37_0)
                                                                            ;; Start else
                                                                            )(else
                                                                            ;; writeIfAndStartTrueBlock
                                                                            (if $if7 (i32.ne (array.len $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var11)))) (i32.const 1))
                                                                                (then
                                                                                    (local.set $phi12 (local.get $var11))
                                                                                    (local.set $phi13 (local.get $var10))
                                                                                    (local.set $phi14 (local.get $var9))
                                                                                    (br $If_37_0)
                                                                                    ;; Start else
                                                                                    )(else
                                                                                    ;; writeIfAndStartTrueBlock
                                                                                    (if $if8 (select (i32.const 0) (i32.const 1) (ref.eq (array.get $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var11))) (i32.const 0)) (local.get $phi4)))
                                                                                        (then
                                                                                            (local.set $phi12 (local.get $var11))
                                                                                            (local.set $phi13 (local.get $var10))
                                                                                            (local.set $phi14 (local.get $var9))
                                                                                            (br $If_37_0)
                                                                                            ;; Start else
                                                                                            )(else
                                                                                            (return (local.get $phi4))
                                                                                            ))
                                                                                    ;; finishIfBlock
                                                                                    ))
                                                                            ;; finishIfBlock
                                                                            ))
                                                                    ;; finishIfBlock
                                                                    ))
                                                            ;; finishIfBlock
                                                            ))
                                                    ;; finishIfBlock
                                                    )
                                                ;; finishBlock
                                                (local.set $phi8 (i32.add (local.get $phi8) (i32.const 1)))
                                                ;; Here was a goto statement
                                                (br $L399589645)
                                                ))
                                        ;; finishIfBlock
                                        )
                                    ;; finishBlock
                                    ))
                            ;; finishIfBlock
                            ;; Start else
                            )(else
                            (return (local.get $var0))
                            ))
                    ;; finishIfBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (ref.null none))
        (unreachable))
    (func $java$util$HashMap$I$compareComparables$Ljava$lang$Class$$Ljava$lang$Object$$Ljava$lang$Object$ (type $t615) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object)) (param $arg2 (ref null $java$lang$Object)) (result i32)
        (local $phi0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 i32)
        (local $var4 (ref null $java$lang$Object))
        (local $var5 i32)
        ;; startBlock type=NORMAL, label = If_4_0
        (block $If_4_0
            ;; startBlock type=NORMAL, label = If_4_1
            (block $If_4_1
                ;; writeIfAndStartTrueBlock
                (if $if0 (ref.is_null (local.get $arg2))
                    (then
                        (local.set $phi0 (local.get $arg0))
                        (local.set $phi1 (local.get $arg1))
                        (local.set $phi2 (local.get $arg2))
                        (br $If_4_1)
                        ;; Start else
                        )(else
                        ;; writeIfAndStartTrueBlock
                        (if $if1 (ref.eq (call $runtimetypeof (local.get $arg2)) (local.get $arg0))
                            (then
                                (local.set $var4 (ref.cast (ref null $java$lang$Object) (local.get $arg1)))
                                (local.set $var5 (call_indirect (type $t554) (local.get $var4) (local.get $arg2) (call_ref $t0 (i32.const 70) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var4))))))
                                (local.set $phi0 (local.get $arg0))
                                (local.set $phi1 (local.get $arg1))
                                (local.set $phi2 (local.get $arg2))
                                (local.set $phi3 (local.get $var5))
                                (br $If_4_0)
                                ;; Start else
                                )(else
                                (local.set $phi0 (local.get $arg0))
                                (local.set $phi1 (local.get $arg1))
                                (local.set $phi2 (local.get $arg2))
                                (br $If_4_1)
                                ))
                        ;; finishIfBlock
                        ))
                ;; finishIfBlock
                )
            ;; finishBlock
            ;; Here was a goto statement
            (local.set $phi3 (i32.const 0))
            (br $If_4_0)
            )
        ;; finishBlock
        (return (local.get $phi3))
        (unreachable))
    (func $java$util$HashMap$V$afterNodeAccess$Ljava$util$HashMap$Node$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$util$HashMap$Ljava$util$HashMap$TreeNode$$newTreeNode$I$Ljava$lang$Object$$Ljava$lang$Object$$Ljava$util$HashMap$Node$ (type $t616) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (param $arg1 (ref null $java$lang$Object)) (param $arg2 (ref null $java$lang$Object)) (param $arg3 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (drop (call $java$util$HashMap$TreeNode_i))
        (local.set $var0 (struct.new $java$util$HashMap$TreeNode (struct.get $java$util$HashMap$TreeNode_rtt $factoryFor (global.get $java$util$HashMap$TreeNode_cls)) (ref.func $java$util$HashMap$TreeNode_vt) (ref.null noextern) (struct.get $java$util$HashMap$TreeNode_rtt $classImplTypes (global.get $java$util$HashMap$TreeNode_cls)) (ref.null none) (i32.const 0) (ref.null none) (ref.null none) (ref.null none) (ref.null none) (ref.null none) (ref.null none) (i32.const 0)))
        (struct.set $java$util$HashMap$Node $hash (ref.cast (ref null $java$util$HashMap$Node) (local.get $var0)) (local.get $arg0))
        (struct.set $java$util$HashMap$Node $key (ref.cast (ref null $java$util$HashMap$Node) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg1)))
        (struct.set $java$util$HashMap$Node $value (ref.cast (ref null $java$util$HashMap$Node) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg2)))
        (struct.set $java$util$HashMap$Node $next (ref.cast (ref null $java$util$HashMap$Node) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg3)))
        (return (local.get $var0))
        (unreachable))
    (func $java$util$HashMap$V$afterNodeInsertion$Z (type $t575) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32)
        (return)
        (unreachable))
    (func $java$util$HashMap$Ljava$util$HashMap$Node$$newNode$I$Ljava$lang$Object$$Ljava$lang$Object$$Ljava$util$HashMap$Node$ (type $t616) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (param $arg1 (ref null $java$lang$Object)) (param $arg2 (ref null $java$lang$Object)) (param $arg3 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (struct.new $java$util$HashMap$Node (struct.get $java$util$HashMap$Node_rtt $factoryFor (global.get $java$util$HashMap$Node_cls)) (ref.func $java$util$HashMap$Node_vt) (ref.null noextern) (struct.get $java$util$HashMap$Node_rtt $classImplTypes (global.get $java$util$HashMap$Node_cls)) (ref.null none) (i32.const 0) (ref.null none) (ref.null none)))
        (struct.set $java$util$HashMap$Node $hash (ref.cast (ref null $java$util$HashMap$Node) (local.get $var0)) (local.get $arg0))
        (struct.set $java$util$HashMap$Node $key (ref.cast (ref null $java$util$HashMap$Node) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg1)))
        (struct.set $java$util$HashMap$Node $value (ref.cast (ref null $java$util$HashMap$Node) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg2)))
        (struct.set $java$util$HashMap$Node $next (ref.cast (ref null $java$util$HashMap$Node) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg3)))
        (return (local.get $var0))
        (unreachable))
    (func $java$util$HashMap$V$treeifyBin$$Ljava$util$HashMap$Node$$I (type $t606) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 i32)
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 (ref null $java$lang$Object))
        (local $phi4 i32)
        (local $phi5 i32)
        (local $var6 (ref null $java$lang$Object))
        (local $var7 (ref null $java$lang$Object))
        (local $var8 i32)
        (local $var9 (ref null $java$lang$Object))
        (local $phi10 (ref null $java$lang$Object))
        (local $phi11 i32)
        (local $phi12 i32)
        (local $phi13 (ref null $java$lang$Object))
        (local $phi14 (ref null $java$lang$Object))
        (local $phi15 (ref null $java$lang$Object))
        (local $var16 (ref null $java$lang$Object))
        (local $var17 (ref null $java$lang$Object))
        (local $phi18 (ref null $java$lang$Object))
        (local $phi19 (ref null $java$lang$Object))
        (local $var20 (ref null $java$lang$Object))
        (local $var21 (ref null $java$lang$Object))
        (local $var22 i32)
        (local $var23 (ref null $java$lang$Object))
        (local $var24 (ref null $java$lang$Object))
        (local $var25 (ref null $java$lang$Object))
        (local $var26 i32)
        (local $var27 (ref null $java$lang$Object))
        (local $phi28 (ref null $java$lang$Object))
        (local $var29 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = If_6_0
        (block $If_6_0
            ;; startBlock type=NORMAL, label = If_6_1
            (block $If_6_1
                ;; writeIfAndStartTrueBlock
                (if $if0 (ref.is_null (local.get $arg0))
                    (then
                        (local.set $phi2 (local.get $var0))
                        (local.set $phi3 (local.get $arg0))
                        (local.set $phi4 (local.get $arg1))
                        (br $If_6_1)
                        ;; Start else
                        )(else
                        (local.set $var1 (array.len $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $arg0)))))
                        ;; writeIfAndStartTrueBlock
                        (if $if1 (i32.ge_s (local.get $var1) (i32.const 64))
                            (then
                                (local.set $var8 (i32.and (i32.sub (local.get $var1) (i32.const 1)) (local.get $arg1)))
                                (local.set $var9 (array.get $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $arg0))) (local.get $var8)))
                                ;; writeIfAndStartTrueBlock
                                (if $if2 (ref.is_null (local.get $var9))
                                    (then
                                        (local.set $phi2 (local.get $var0))
                                        (local.set $phi3 (local.get $arg0))
                                        (local.set $phi4 (local.get $arg1))
                                        (local.set $phi5 (local.get $var1))
                                        (br $If_6_0)
                                        ;; Start else
                                        )(else
                                        (local.set $phi10 (local.get $var0))
                                        (local.set $phi11 (local.get $var1))
                                        (local.set $phi12 (local.get $var8))
                                        (local.set $phi13 (local.get $var9))
                                        (local.set $phi14 (ref.null none))
                                        (local.set $phi15 (ref.null none))
                                        ;; startBlock type=LOOP, label = L2034227409
                                        (loop $L2034227409
                                            (local.set $var16 (local.get $phi13))
                                            (drop (call $java$util$HashMap$TreeNode_i))
                                            (local.set $var25 (struct.new $java$util$HashMap$TreeNode (struct.get $java$util$HashMap$TreeNode_rtt $factoryFor (global.get $java$util$HashMap$TreeNode_cls)) (ref.func $java$util$HashMap$TreeNode_vt) (ref.null noextern) (struct.get $java$util$HashMap$TreeNode_rtt $classImplTypes (global.get $java$util$HashMap$TreeNode_cls)) (ref.null none) (i32.const 0) (ref.null none) (ref.null none) (ref.null none) (ref.null none) (ref.null none) (ref.null none) (i32.const 0)))
                                            (local.set $var26 (struct.get $java$util$HashMap$Node $hash (ref.cast (ref null $java$util$HashMap$Node) (local.get $var16))))
                                            (local.set $var27 (struct.get $java$util$HashMap$Node $key (ref.cast (ref null $java$util$HashMap$Node) (local.get $var16))))
                                            (local.set $var29 (struct.get $java$util$HashMap$Node $value (ref.cast (ref null $java$util$HashMap$Node) (local.get $var16))))
                                            (struct.set $java$util$HashMap$Node $hash (ref.cast (ref null $java$util$HashMap$Node) (local.get $var25)) (local.get $var26))
                                            (struct.set $java$util$HashMap$Node $key (ref.cast (ref null $java$util$HashMap$Node) (local.get $var25)) (ref.cast (ref null $java$lang$Object) (local.get $var27)))
                                            (struct.set $java$util$HashMap$Node $value (ref.cast (ref null $java$util$HashMap$Node) (local.get $var25)) (ref.cast (ref null $java$lang$Object) (local.get $var29)))
                                            (struct.set $java$util$HashMap$Node $next (ref.cast (ref null $java$util$HashMap$Node) (local.get $var25)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                            (local.set $phi28 (local.get $var25))
                                            (local.set $var17 (local.get $phi28))
                                            ;; startBlock type=NORMAL, label = If_51_0
                                            (block $If_51_0
                                                ;; writeIfAndStartTrueBlock
                                                (if $if3 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $phi15)))
                                                    (then
                                                        (struct.set $java$util$HashMap$TreeNode $prev (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var17)) (ref.cast (ref null $java$lang$Object) (local.get $phi15)))
                                                        (local.set $var24 (local.get $phi15))
                                                        (struct.set $java$util$HashMap$Node $next (ref.cast (ref null $java$util$HashMap$Node) (local.get $var24)) (ref.cast (ref null $java$lang$Object) (local.get $var17)))
                                                        (local.set $phi18 (local.get $phi14))
                                                        (local.set $phi19 (local.get $var17))
                                                        (br $If_51_0)
                                                        ;; Start else
                                                        )(else
                                                        ;; Here was a goto statement
                                                        (local.set $phi18 (local.get $var17))
                                                        (local.set $phi19 (local.get $var17))
                                                        (br $If_51_0)
                                                        ))
                                                ;; finishIfBlock
                                                )
                                            ;; finishBlock
                                            (local.set $var20 (local.get $phi19))
                                            (local.set $var21 (struct.get $java$util$HashMap$Node $next (ref.cast (ref null $java$util$HashMap$Node) (local.get $phi13))))
                                            ;; writeIfAndStartTrueBlock
                                            (if $if4 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var21)))
                                                (then
                                                    (local.set $phi13 (local.get $var21))
                                                    (local.set $phi14 (local.get $phi18))
                                                    (local.set $phi15 (local.get $var20))
                                                    (br $L2034227409)
                                                    ;; Start else
                                                    )(else
                                                    (local.set $var22 (local.get $phi12))
                                                    (local.set $var23 (local.get $phi18))
                                                    (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $arg0))) (local.get $var22) (local.get $var23))
                                                    ;; writeIfAndStartTrueBlock
                                                    (if $if5 (ref.is_null (local.get $var23))
                                                        (then
                                                            (local.set $phi2 (local.get $phi10))
                                                            (local.set $phi3 (local.get $arg0))
                                                            (local.set $phi4 (local.get $arg1))
                                                            (local.set $phi5 (local.get $phi11))
                                                            (br $If_6_0)
                                                            ;; Start else
                                                            )(else
                                                            (call $java$util$HashMap$TreeNode$V$treeify$$Ljava$util$HashMap$Node$ (local.get $phi18) (local.get $arg0))
                                                            (local.set $phi2 (local.get $phi10))
                                                            (local.set $phi3 (local.get $arg0))
                                                            (local.set $phi4 (local.get $arg1))
                                                            (local.set $phi5 (local.get $phi11))
                                                            (br $If_6_0)
                                                            ))
                                                    ;; finishIfBlock
                                                    ))
                                            ;; finishIfBlock
                                            )
                                        ;; finishBlock
                                        ))
                                ;; finishIfBlock
                                ;; Start else
                                )(else
                                (local.set $phi2 (local.get $var0))
                                (local.set $phi3 (local.get $arg0))
                                (local.set $phi4 (local.get $arg1))
                                (local.set $phi5 (local.get $var1))
                                (br $If_6_1)
                                ))
                        ;; finishIfBlock
                        ))
                ;; finishIfBlock
                )
            ;; finishBlock
            (local.set $var6 (local.get $phi2))
            (local.set $var7 (call $java$util$HashMap$$Ljava$util$HashMap$Node$$resize$$ (local.get $var6)))
            ;; Here was a goto statement
            (br $If_6_0)
            )
        ;; finishBlock
        (return)
        (unreachable))
    (func $java$util$HashMap$Ljava$util$HashMap$TreeNode$$replacementTreeNode$Ljava$util$HashMap$Node$$Ljava$util$HashMap$Node$ (type $t561) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 i32)
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (drop (call $java$util$HashMap$TreeNode_i))
        (local.set $var0 (struct.new $java$util$HashMap$TreeNode (struct.get $java$util$HashMap$TreeNode_rtt $factoryFor (global.get $java$util$HashMap$TreeNode_cls)) (ref.func $java$util$HashMap$TreeNode_vt) (ref.null noextern) (struct.get $java$util$HashMap$TreeNode_rtt $classImplTypes (global.get $java$util$HashMap$TreeNode_cls)) (ref.null none) (i32.const 0) (ref.null none) (ref.null none) (ref.null none) (ref.null none) (ref.null none) (ref.null none) (i32.const 0)))
        (local.set $var1 (struct.get $java$util$HashMap$Node $hash (ref.cast (ref null $java$util$HashMap$Node) (local.get $arg0))))
        (local.set $var2 (struct.get $java$util$HashMap$Node $key (ref.cast (ref null $java$util$HashMap$Node) (local.get $arg0))))
        (local.set $var3 (struct.get $java$util$HashMap$Node $value (ref.cast (ref null $java$util$HashMap$Node) (local.get $arg0))))
        (struct.set $java$util$HashMap$Node $hash (ref.cast (ref null $java$util$HashMap$Node) (local.get $var0)) (local.get $var1))
        (struct.set $java$util$HashMap$Node $key (ref.cast (ref null $java$util$HashMap$Node) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $var2)))
        (struct.set $java$util$HashMap$Node $value (ref.cast (ref null $java$util$HashMap$Node) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $var3)))
        (struct.set $java$util$HashMap$Node $next (ref.cast (ref null $java$util$HashMap$Node) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg1)))
        (return (local.get $var0))
        (unreachable))
    (func $java$util$HashMap$Ljava$lang$Object$$get$Ljava$lang$Object$ (type $t559) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 (ref null $java$lang$Object))
        (local $phi4 (ref null $java$lang$Object))
        (local $phi5 (ref null $java$lang$Object))
        (local $var6 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (call $java$util$HashMap$Ljava$util$HashMap$Node$$getNode$Ljava$lang$Object$ (local.get $var0) (local.get $arg0)))
        ;; startBlock type=NORMAL, label = If_8_0
        (block $If_8_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var1)))
                (then
                    (local.set $var6 (struct.get $java$util$HashMap$Node $value (ref.cast (ref null $java$util$HashMap$Node) (local.get $var1))))
                    (local.set $phi2 (local.get $var0))
                    (local.set $phi3 (local.get $arg0))
                    (local.set $phi4 (local.get $var1))
                    (local.set $phi5 (local.get $var6))
                    (br $If_8_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi2 (local.get $var0))
                    (local.set $phi3 (local.get $arg0))
                    (local.set $phi4 (local.get $var1))
                    (local.set $phi5 (ref.null none))
                    (br $If_8_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi5))
        (unreachable))
    (func $java$util$HashMap$Ljava$util$HashMap$Node$$getNode$Ljava$lang$Object$ (type $t559) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 i32)
        (local $var3 i32)
        (local $var4 i32)
        (local $var5 (ref null $java$lang$Object))
        (local $var6 i32)
        (local $var7 (ref null $java$lang$Object))
        (local $phi8 (ref null $java$lang$Object))
        (local $phi9 (ref null $java$lang$Object))
        (local $phi10 (ref null $java$lang$Object))
        (local $phi11 (ref null $java$lang$Object))
        (local $phi12 i32)
        (local $phi13 i32)
        (local $phi14 (ref null $java$lang$Object))
        (local $phi15 (ref null $java$lang$Object))
        (local $phi16 (ref null $java$lang$Object))
        (local $phi17 (ref null $java$lang$Object))
        (local $phi18 (ref null $java$lang$Object))
        (local $phi19 i32)
        (local $phi20 i32)
        (local $phi21 (ref null $java$lang$Object))
        (local $var22 (ref null $java$lang$Object))
        (local $var23 (ref null $java$lang$Object))
        (local $var24 i32)
        (local $var25 (ref null $java$lang$Object))
        (local $phi26 (ref null $java$lang$Object))
        (local $var27 (ref null $java$lang$Object))
        (local $var28 (ref null $java$lang$Object))
        (local $phi29 (ref null $java$lang$Object))
        (local $phi30 (ref null $java$lang$Object))
        (local $var31 (ref null $java$lang$Object))
        (local $phi32 (ref null $java$lang$Object))
        (local $phi33 (ref null $java$lang$Object))
        (local $phi34 i32)
        (local $var35 i32)
        (local $var36 i32)
        (local $phi37 i32)
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (struct.get $java$util$HashMap $table (ref.cast (ref null $java$util$HashMap) (local.get $var0))))
        ;; startBlock type=NORMAL, label = If_8_0
        (block $If_8_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (ref.is_null (local.get $var1))
                (then
                    (local.set $phi15 (local.get $var0))
                    (local.set $phi16 (local.get $arg0))
                    (local.set $phi17 (local.get $var1))
                    (br $If_8_0)
                    ;; Start else
                    )(else
                    (local.set $var2 (array.len $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var1)))))
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (i32.le_s (local.get $var2) (i32.const 0))
                        (then
                            (local.set $phi15 (local.get $var0))
                            (local.set $phi16 (local.get $arg0))
                            (local.set $phi17 (local.get $var1))
                            (local.set $phi19 (local.get $var2))
                            (br $If_8_0)
                            ;; Start else
                            )(else
                            (local.set $var3 (i32.sub (local.get $var2) (i32.const 1)))
                            ;; startBlock type=NORMAL, label = If_170_0
                            (block $If_170_0
                                ;; writeIfAndStartTrueBlock
                                (if $if2 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg0)))
                                    (then
                                        (local.set $var35 (call_indirect (type $t555) (local.get $arg0) (call_ref $t0 (i32.const 2) (struct.get $java$lang$Object $vt_resolver (local.get $arg0)))))
                                        (local.set $var36 (i32.xor (local.get $var35) (i32.shr_u (local.get $var35) (i32.const 16))))
                                        (local.set $phi33 (local.get $arg0))
                                        (local.set $phi34 (local.get $var36))
                                        (br $If_170_0)
                                        ;; Start else
                                        )(else
                                        ;; Here was a goto statement
                                        (local.set $phi33 (local.get $arg0))
                                        (local.set $phi34 (i32.const 0))
                                        (br $If_170_0)
                                        ))
                                ;; finishIfBlock
                                )
                            ;; finishBlock
                            (local.set $phi37 (local.get $phi34))
                            (local.set $var4 (local.get $phi37))
                            (local.set $var5 (array.get $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var1))) (i32.and (local.get $var3) (local.get $var4))))
                            ;; writeIfAndStartTrueBlock
                            (if $if3 (ref.is_null (local.get $var5))
                                (then
                                    (local.set $phi15 (local.get $var0))
                                    (local.set $phi16 (local.get $arg0))
                                    (local.set $phi17 (local.get $var1))
                                    (local.set $phi18 (local.get $var5))
                                    (local.set $phi19 (local.get $var2))
                                    (local.set $phi20 (local.get $var4))
                                    (br $If_8_0)
                                    ;; Start else
                                    )(else
                                    (local.set $var6 (struct.get $java$util$HashMap$Node $hash (ref.cast (ref null $java$util$HashMap$Node) (local.get $var5))))
                                    ;; startBlock type=NORMAL, label = If_31_0
                                    (block $If_31_0
                                        ;; writeIfAndStartTrueBlock
                                        (if $if4 (i32.ne (local.get $var6) (local.get $var4))
                                            (then
                                                (local.set $phi15 (local.get $var0))
                                                (local.set $phi16 (local.get $arg0))
                                                (local.set $phi17 (local.get $var1))
                                                (local.set $phi18 (local.get $var5))
                                                (local.set $phi19 (local.get $var2))
                                                (local.set $phi20 (local.get $var4))
                                                (br $If_31_0)
                                                ;; Start else
                                                )(else
                                                (local.set $var7 (struct.get $java$util$HashMap$Node $key (ref.cast (ref null $java$util$HashMap$Node) (local.get $var5))))
                                                ;; startBlock type=NORMAL, label = If_36_0
                                                (block $If_36_0
                                                    ;; writeIfAndStartTrueBlock
                                                    (if $if5 (ref.eq (local.get $var7) (local.get $arg0))
                                                        (then
                                                            (local.set $phi8 (local.get $var0))
                                                            (local.set $phi9 (local.get $arg0))
                                                            (local.set $phi10 (local.get $var1))
                                                            (local.set $phi11 (local.get $var5))
                                                            (local.set $phi12 (local.get $var2))
                                                            (local.set $phi13 (local.get $var4))
                                                            (local.set $phi14 (local.get $var7))
                                                            (br $If_36_0)
                                                            ;; Start else
                                                            )(else
                                                            ;; writeIfAndStartTrueBlock
                                                            (if $if6 (ref.is_null (local.get $arg0))
                                                                (then
                                                                    (local.set $phi15 (local.get $var0))
                                                                    (local.set $phi16 (local.get $arg0))
                                                                    (local.set $phi17 (local.get $var1))
                                                                    (local.set $phi18 (local.get $var5))
                                                                    (local.set $phi19 (local.get $var2))
                                                                    (local.set $phi20 (local.get $var4))
                                                                    (local.set $phi21 (local.get $var7))
                                                                    (br $If_31_0)
                                                                    ;; Start else
                                                                    )(else
                                                                    ;; writeIfAndStartTrueBlock
                                                                    (if $if7 (i32.eq (call_indirect (type $t554) (local.get $arg0) (local.get $var7) (call_ref $t0 (i32.const 1) (struct.get $java$lang$Object $vt_resolver (local.get $arg0)))) (i32.const 0))
                                                                        (then
                                                                            (local.set $phi15 (local.get $var0))
                                                                            (local.set $phi16 (local.get $arg0))
                                                                            (local.set $phi17 (local.get $var1))
                                                                            (local.set $phi18 (local.get $var5))
                                                                            (local.set $phi19 (local.get $var2))
                                                                            (local.set $phi20 (local.get $var4))
                                                                            (local.set $phi21 (local.get $var7))
                                                                            (br $If_31_0)
                                                                            ;; Start else
                                                                            )(else
                                                                            (local.set $phi8 (local.get $var0))
                                                                            (local.set $phi9 (local.get $arg0))
                                                                            (local.set $phi10 (local.get $var1))
                                                                            (local.set $phi11 (local.get $var5))
                                                                            (local.set $phi12 (local.get $var2))
                                                                            (local.set $phi13 (local.get $var4))
                                                                            (local.set $phi14 (local.get $var7))
                                                                            (br $If_36_0)
                                                                            ))
                                                                    ;; finishIfBlock
                                                                    ))
                                                            ;; finishIfBlock
                                                            ))
                                                    ;; finishIfBlock
                                                    )
                                                ;; finishBlock
                                                (return (local.get $phi11))
                                                ))
                                        ;; finishIfBlock
                                        )
                                    ;; finishBlock
                                    (local.set $var22 (struct.get $java$util$HashMap$Node $next (ref.cast (ref null $java$util$HashMap$Node) (local.get $phi18))))
                                    ;; writeIfAndStartTrueBlock
                                    (if $if8 (ref.is_null (local.get $var22))
                                        (then
                                            (local.set $phi32 (local.get $var22))
                                            (local.set $phi30 (local.get $phi21))
                                            (br $If_8_0)
                                            ;; Start else
                                            )(else
                                            ;; writeIfAndStartTrueBlock
                                            (if $if9 (i32.eq (call $instanceOf (local.get $phi18) (i32.const 152)) (i32.const 0))
                                                (then
                                                    (local.set $phi26 (local.get $var22))
                                                    ;; startBlock type=LOOP, label = L2044222051
                                                    (loop $L2044222051
                                                        ;; startBlock type=NORMAL, label = If_83_0
                                                        (block $If_83_0
                                                            ;; writeIfAndStartTrueBlock
                                                            (if $if10 (i32.ne (struct.get $java$util$HashMap$Node $hash (ref.cast (ref null $java$util$HashMap$Node) (local.get $phi26))) (local.get $phi20))
                                                                (then
                                                                    (local.set $phi30 (local.get $phi21))
                                                                    (br $If_83_0)
                                                                    ;; Start else
                                                                    )(else
                                                                    (local.set $var27 (struct.get $java$util$HashMap$Node $key (ref.cast (ref null $java$util$HashMap$Node) (local.get $phi26))))
                                                                    ;; startBlock type=NORMAL, label = If_88_0
                                                                    (block $If_88_0
                                                                        ;; writeIfAndStartTrueBlock
                                                                        (if $if11 (ref.eq (local.get $var27) (local.get $phi16))
                                                                            (then
                                                                                (local.set $phi29 (local.get $var27))
                                                                                (br $If_88_0)
                                                                                ;; Start else
                                                                                )(else
                                                                                ;; writeIfAndStartTrueBlock
                                                                                (if $if12 (ref.is_null (local.get $phi16))
                                                                                    (then
                                                                                        (local.set $phi30 (local.get $var27))
                                                                                        (br $If_83_0)
                                                                                        ;; Start else
                                                                                        )(else
                                                                                        (local.set $var28 (local.get $phi16))
                                                                                        ;; writeIfAndStartTrueBlock
                                                                                        (if $if13 (i32.eq (call_indirect (type $t554) (local.get $var28) (local.get $var27) (call_ref $t0 (i32.const 1) (struct.get $java$lang$Object $vt_resolver (local.get $var28)))) (i32.const 0))
                                                                                            (then
                                                                                                (local.set $phi30 (local.get $var27))
                                                                                                (br $If_83_0)
                                                                                                ;; Start else
                                                                                                )(else
                                                                                                (local.set $phi29 (local.get $var27))
                                                                                                (br $If_88_0)
                                                                                                ))
                                                                                        ;; finishIfBlock
                                                                                        ))
                                                                                ;; finishIfBlock
                                                                                ))
                                                                        ;; finishIfBlock
                                                                        )
                                                                    ;; finishBlock
                                                                    (return (local.get $phi26))
                                                                    ))
                                                            ;; finishIfBlock
                                                            )
                                                        ;; finishBlock
                                                        (local.set $var31 (struct.get $java$util$HashMap$Node $next (ref.cast (ref null $java$util$HashMap$Node) (local.get $phi26))))
                                                        ;; writeIfAndStartTrueBlock
                                                        (if $if14 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var31)))
                                                            (then
                                                                (local.set $phi26 (local.get $var31))
                                                                (local.set $phi21 (local.get $phi30))
                                                                (br $L2044222051)
                                                                ;; Start else
                                                                )(else
                                                                (local.set $phi32 (local.get $var31))
                                                                (br $If_8_0)
                                                                ))
                                                        ;; finishIfBlock
                                                        )
                                                    ;; finishBlock
                                                    ;; Start else
                                                    )(else
                                                    (local.set $var23 (ref.cast (ref null $java$lang$Object) (local.get $phi18)))
                                                    (local.set $var24 (local.get $phi20))
                                                    (local.set $var25 (local.get $phi16))
                                                    (return (call $java$util$HashMap$TreeNode$Ljava$util$HashMap$TreeNode$$getTreeNode$I$Ljava$lang$Object$ (local.get $var23) (local.get $var24) (local.get $var25)))
                                                    ))
                                            ;; finishIfBlock
                                            ))
                                    ;; finishIfBlock
                                    ))
                            ;; finishIfBlock
                            ))
                    ;; finishIfBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (ref.null none))
        (unreachable))
    (func $java$util$HashMap$Ljava$lang$Object$$put$Ljava$lang$Object$$Ljava$lang$Object$ (type $t561) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 i32)
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 i32)
        (local $var4 i32)
        (local $var5 i32)
        (local $phi6 i32)
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = If_12_0
        (block $If_12_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg0)))
                (then
                    (local.set $var4 (call_indirect (type $t555) (local.get $arg0) (call_ref $t0 (i32.const 2) (struct.get $java$lang$Object $vt_resolver (local.get $arg0)))))
                    (local.set $var5 (i32.xor (local.get $var4) (i32.shr_u (local.get $var4) (i32.const 16))))
                    (local.set $phi2 (local.get $arg0))
                    (local.set $phi3 (local.get $var5))
                    (br $If_12_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi2 (local.get $arg0))
                    (local.set $phi3 (i32.const 0))
                    (br $If_12_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (local.set $phi6 (local.get $phi3))
        (local.set $var1 (local.get $phi6))
        (return (call $java$util$HashMap$Ljava$lang$Object$$putVal$I$Ljava$lang$Object$$Ljava$lang$Object$$Z$Z (local.get $var0) (local.get $var1) (local.get $arg0) (local.get $arg1) (i32.const 0) (i32.const 1)))
        (unreachable))
    (func $java$util$HashMap$Ljava$lang$Object$$putVal$I$Ljava$lang$Object$$Ljava$lang$Object$$Z$Z (type $t617) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (param $arg1 (ref null $java$lang$Object)) (param $arg2 (ref null $java$lang$Object)) (param $arg3 i32) (param $arg4 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 i32)
        (local $phi3 (ref null $java$lang$Object))
        (local $phi4 i32)
        (local $phi5 (ref null $java$lang$Object))
        (local $phi6 (ref null $java$lang$Object))
        (local $phi7 i32)
        (local $phi8 i32)
        (local $phi9 (ref null $java$lang$Object))
        (local $var10 (ref null $java$lang$Object))
        (local $var11 (ref null $java$lang$Object))
        (local $var12 i32)
        (local $phi13 (ref null $java$lang$Object))
        (local $phi14 i32)
        (local $var15 (ref null $java$lang$Object))
        (local $var16 i32)
        (local $var17 (ref null $java$lang$Object))
        (local $var18 (ref null $java$lang$Object))
        (local $var19 (ref null $java$lang$Object))
        (local $var20 i32)
        (local $var21 (ref null $java$lang$Object))
        (local $var22 (ref null $java$lang$Object))
        (local $phi23 (ref null $java$lang$Object))
        (local $phi24 i32)
        (local $var25 (ref null $java$lang$Object))
        (local $var26 (ref null $java$lang$Object))
        (local $var27 i32)
        (local $var28 (ref null $java$lang$Object))
        (local $var29 (ref null $java$lang$Object))
        (local $var30 (ref null $java$lang$Object))
        (local $var31 (ref null $java$lang$Object))
        (local $phi32 (ref null $java$lang$Object))
        (local $phi33 i32)
        (local $phi34 (ref null $java$lang$Object))
        (local $var35 (ref null $java$lang$Object))
        (local $phi36 (ref null $java$lang$Object))
        (local $var37 (ref null $java$lang$Object))
        (local $phi38 (ref null $java$lang$Object))
        (local $var39 (ref null $java$lang$Object))
        (local $phi40 (ref null $java$lang$Object))
        (local $phi41 i32)
        (local $phi42 (ref null $java$lang$Object))
        (local $var43 (ref null $java$lang$Object))
        (local $var44 (ref null $java$lang$Object))
        (local $var45 (ref null $java$lang$Object))
        (local $var46 i32)
        (local $var47 (ref null $java$lang$Object))
        (local $var48 (ref null $java$lang$Object))
        (local $var49 (ref null $java$lang$Object))
        (local $phi50 i32)
        (local $var51 (ref null $java$lang$Object))
        (local $var52 (ref null $java$lang$Object))
        (local $var53 (ref null $java$lang$Object))
        (local $var54 i32)
        (local $var55 (ref null $java$lang$Object))
        (local $var56 (ref null $java$lang$Object))
        (local $var57 (ref null $java$lang$Object))
        (local $var58 (ref null $java$lang$Object))
        (local $phi59 (ref null $java$lang$Object))
        (local $phi60 (ref null $java$lang$Object))
        (local $var61 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (struct.get $java$util$HashMap $table (ref.cast (ref null $java$util$HashMap) (local.get $var0))))
        ;; startBlock type=NORMAL, label = If_12_0
        (block $If_12_0
            ;; startBlock type=NORMAL, label = If_12_1
            (block $If_12_1
                ;; writeIfAndStartTrueBlock
                (if $if0 (ref.is_null (local.get $var1))
                    (then
                        (local.set $phi3 (local.get $var0))
                        (local.set $phi4 (local.get $arg0))
                        (local.set $phi5 (local.get $arg1))
                        (local.set $phi6 (local.get $arg2))
                        (local.set $phi7 (local.get $arg3))
                        (local.set $phi8 (local.get $arg4))
                        (local.set $phi9 (local.get $var1))
                        (br $If_12_1)
                        ;; Start else
                        )(else
                        (local.set $var2 (array.len $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var1)))))
                        ;; writeIfAndStartTrueBlock
                        (if $if1 (i32.ne (local.get $var2) (i32.const 0))
                            (then
                                (local.set $phi3 (local.get $var0))
                                (local.set $phi4 (local.get $arg0))
                                (local.set $phi5 (local.get $arg1))
                                (local.set $phi6 (local.get $arg2))
                                (local.set $phi7 (local.get $arg3))
                                (local.set $phi8 (local.get $arg4))
                                (local.set $phi13 (local.get $var1))
                                (local.set $phi14 (local.get $var2))
                                (br $If_12_0)
                                ;; Start else
                                )(else
                                (local.set $phi3 (local.get $var0))
                                (local.set $phi4 (local.get $arg0))
                                (local.set $phi5 (local.get $arg1))
                                (local.set $phi6 (local.get $arg2))
                                (local.set $phi7 (local.get $arg3))
                                (local.set $phi8 (local.get $arg4))
                                (local.set $phi9 (local.get $var1))
                                (br $If_12_1)
                                ))
                        ;; finishIfBlock
                        ))
                ;; finishIfBlock
                )
            ;; finishBlock
            (local.set $var10 (local.get $phi3))
            (local.set $var11 (call $java$util$HashMap$$Ljava$util$HashMap$Node$$resize$$ (local.get $var10)))
            (local.set $var12 (array.len $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var11)))))
            (local.set $phi13 (local.get $var11))
            (local.set $phi14 (local.get $var12))
            (br $If_12_0)
            )
        ;; finishBlock
        (local.set $var15 (local.get $phi13))
        (local.set $var16 (i32.and (i32.sub (local.get $phi14) (i32.const 1)) (local.get $phi4)))
        (local.set $var17 (array.get $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var15))) (local.get $var16)))
        ;; startBlock type=NORMAL, label = If_49_0
        (block $If_49_0
            ;; writeIfAndStartTrueBlock
            (if $if2 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var17)))
                (then
                    ;; startBlock type=NORMAL, label = If_94_0
                    (block $If_94_0
                        ;; startBlock type=NORMAL, label = If_94_1
                        (block $If_94_1
                            ;; writeIfAndStartTrueBlock
                            (if $if3 (i32.ne (struct.get $java$util$HashMap$Node $hash (ref.cast (ref null $java$util$HashMap$Node) (local.get $var17))) (local.get $phi4))
                                (then
                                    (local.set $phi40 (local.get $var17))
                                    (local.set $phi41 (local.get $var16))
                                    (br $If_94_1)
                                    ;; Start else
                                    )(else
                                    (local.set $var30 (struct.get $java$util$HashMap$Node $key (ref.cast (ref null $java$util$HashMap$Node) (local.get $var17))))
                                    ;; startBlock type=NORMAL, label = If_99_0
                                    (block $If_99_0
                                        ;; writeIfAndStartTrueBlock
                                        (if $if4 (ref.eq (local.get $var30) (local.get $phi5))
                                            (then
                                                (local.set $phi32 (local.get $var17))
                                                (local.set $phi33 (local.get $var16))
                                                (local.set $phi34 (local.get $var30))
                                                (br $If_99_0)
                                                ;; Start else
                                                )(else
                                                ;; writeIfAndStartTrueBlock
                                                (if $if5 (ref.is_null (local.get $phi5))
                                                    (then
                                                        (local.set $phi40 (local.get $var17))
                                                        (local.set $phi41 (local.get $var16))
                                                        (local.set $phi42 (local.get $var30))
                                                        (br $If_94_1)
                                                        ;; Start else
                                                        )(else
                                                        (local.set $var31 (local.get $phi5))
                                                        ;; writeIfAndStartTrueBlock
                                                        (if $if6 (i32.eq (call_indirect (type $t554) (local.get $var31) (local.get $var30) (call_ref $t0 (i32.const 1) (struct.get $java$lang$Object $vt_resolver (local.get $var31)))) (i32.const 0))
                                                            (then
                                                                (local.set $phi40 (local.get $var17))
                                                                (local.set $phi41 (local.get $var16))
                                                                (local.set $phi42 (local.get $var30))
                                                                (br $If_94_1)
                                                                ;; Start else
                                                                )(else
                                                                (local.set $phi32 (local.get $var17))
                                                                (local.set $phi33 (local.get $var16))
                                                                (local.set $phi34 (local.get $var30))
                                                                (br $If_99_0)
                                                                ))
                                                        ;; finishIfBlock
                                                        ))
                                                ;; finishIfBlock
                                                ))
                                        ;; finishIfBlock
                                        )
                                    ;; finishBlock
                                    (local.set $var35 (local.get $phi32))
                                    ;; Here was a goto statement
                                    (local.set $phi36 (local.get $var35))
                                    (br $If_94_0)
                                    ))
                            ;; finishIfBlock
                            )
                        ;; finishBlock
                        ;; writeIfAndStartTrueBlock
                        (if $if7 (i32.eq (call $instanceOf (local.get $phi40) (i32.const 152)) (i32.const 0))
                            (then
                                (local.set $phi50 (i32.const 0))
                                ;; startBlock type=LOOP, label = L1699965274
                                (loop $L1699965274
                                    (local.set $var51 (struct.get $java$util$HashMap$Node $next (ref.cast (ref null $java$util$HashMap$Node) (local.get $phi40))))
                                    ;; writeIfAndStartTrueBlock
                                    (if $if8 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var51)))
                                        (then
                                            ;; startBlock type=NORMAL, label = If_188_0
                                            (block $If_188_0
                                                ;; writeIfAndStartTrueBlock
                                                (if $if9 (i32.ne (struct.get $java$util$HashMap$Node $hash (ref.cast (ref null $java$util$HashMap$Node) (local.get $var51))) (local.get $phi4))
                                                    (then
                                                        (local.set $phi59 (local.get $var51))
                                                        (local.set $phi60 (local.get $phi42))
                                                        (br $If_188_0)
                                                        ;; Start else
                                                        )(else
                                                        (local.set $var57 (struct.get $java$util$HashMap$Node $key (ref.cast (ref null $java$util$HashMap$Node) (local.get $var51))))
                                                        ;; writeIfAndStartTrueBlock
                                                        (if $if10 (ref.eq (local.get $var57) (local.get $phi5))
                                                            (then
                                                                (local.set $phi32 (local.get $phi40))
                                                                (local.set $phi33 (local.get $phi41))
                                                                (local.set $phi36 (local.get $var51))
                                                                (local.set $phi34 (local.get $var57))
                                                                (br $If_94_0)
                                                                ;; Start else
                                                                )(else
                                                                ;; writeIfAndStartTrueBlock
                                                                (if $if11 (ref.is_null (local.get $phi5))
                                                                    (then
                                                                        (local.set $phi59 (local.get $var51))
                                                                        (local.set $phi60 (local.get $var57))
                                                                        (br $If_188_0)
                                                                        ;; Start else
                                                                        )(else
                                                                        (local.set $var58 (local.get $phi5))
                                                                        ;; writeIfAndStartTrueBlock
                                                                        (if $if12 (i32.eq (call_indirect (type $t554) (local.get $var58) (local.get $var57) (call_ref $t0 (i32.const 1) (struct.get $java$lang$Object $vt_resolver (local.get $var58)))) (i32.const 0))
                                                                            (then
                                                                                (local.set $phi59 (local.get $var51))
                                                                                (local.set $phi60 (local.get $var57))
                                                                                (br $If_188_0)
                                                                                ;; Start else
                                                                                )(else
                                                                                ;; Here was a goto statement
                                                                                (local.set $phi32 (local.get $phi40))
                                                                                (local.set $phi33 (local.get $phi41))
                                                                                (local.set $phi36 (local.get $var51))
                                                                                (local.set $phi34 (local.get $var57))
                                                                                (br $If_94_0)
                                                                                ))
                                                                        ;; finishIfBlock
                                                                        ))
                                                                ;; finishIfBlock
                                                                ))
                                                        ;; finishIfBlock
                                                        ))
                                                ;; finishIfBlock
                                                )
                                            ;; finishBlock
                                            (local.set $var61 (local.get $phi59))
                                            (local.set $phi50 (i32.add (local.get $phi50) (i32.const 1)))
                                            ;; Here was a goto statement
                                            (local.set $phi40 (local.get $var61))
                                            (local.set $phi42 (local.get $phi60))
                                            (br $L1699965274)
                                            ;; Start else
                                            )(else
                                            (local.set $var52 (local.get $phi40))
                                            (local.set $var53 (local.get $phi3))
                                            (local.set $var54 (local.get $phi4))
                                            (local.set $var55 (local.get $phi5))
                                            (local.set $var56 (local.get $phi6))
                                            (struct.set $java$util$HashMap$Node $next (ref.cast (ref null $java$util$HashMap$Node) (local.get $var52)) (ref.cast (ref null $java$lang$Object) (call $java$util$HashMap$Ljava$util$HashMap$Node$$newNode$I$Ljava$lang$Object$$Ljava$lang$Object$$Ljava$util$HashMap$Node$ (local.get $var53) (local.get $var54) (local.get $var55) (local.get $var56) (ref.null none))))
                                            ;; writeIfAndStartTrueBlock
                                            (if $if13 (i32.lt_s (local.get $phi50) (i32.const 7))
                                                (then
                                                    (local.set $phi32 (local.get $phi40))
                                                    (local.set $phi33 (local.get $phi41))
                                                    (local.set $phi36 (local.get $var51))
                                                    (local.set $phi34 (local.get $phi42))
                                                    (br $If_94_0)
                                                    ;; Start else
                                                    )(else
                                                    (call $java$util$HashMap$V$treeifyBin$$Ljava$util$HashMap$Node$$I (local.get $phi3) (local.get $phi13) (local.get $phi4))
                                                    ;; Here was a goto statement
                                                    (local.set $phi32 (local.get $phi40))
                                                    (local.set $phi33 (local.get $phi41))
                                                    (local.set $phi36 (local.get $var51))
                                                    (local.set $phi34 (local.get $phi42))
                                                    (br $If_94_0)
                                                    ))
                                            ;; finishIfBlock
                                            ))
                                    ;; finishIfBlock
                                    )
                                ;; finishBlock
                                ;; Start else
                                )(else
                                (local.set $var43 (ref.cast (ref null $java$lang$Object) (local.get $phi40)))
                                (local.set $var44 (local.get $phi3))
                                (local.set $var45 (local.get $phi13))
                                (local.set $var46 (local.get $phi4))
                                (local.set $var47 (local.get $phi5))
                                (local.set $var48 (local.get $phi6))
                                (local.set $var49 (call $java$util$HashMap$TreeNode$Ljava$util$HashMap$TreeNode$$putTreeVal$Ljava$util$HashMap$$$Ljava$util$HashMap$Node$$I$Ljava$lang$Object$$Ljava$lang$Object$ (local.get $var43) (local.get $var44) (local.get $var45) (local.get $var46) (local.get $var47) (local.get $var48)))
                                ;; Here was a goto statement
                                (local.set $phi32 (local.get $phi40))
                                (local.set $phi33 (local.get $phi41))
                                (local.set $phi36 (local.get $var49))
                                (local.set $phi34 (local.get $phi42))
                                (br $If_94_0)
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    ;; writeIfAndStartTrueBlock
                    (if $if14 (ref.is_null (local.get $phi36))
                        (then
                            (local.set $phi23 (local.get $phi32))
                            (local.set $phi24 (local.get $phi33))
                            (br $If_49_0)
                            ;; Start else
                            )(else
                            (local.set $var37 (struct.get $java$util$HashMap$Node $value (ref.cast (ref null $java$util$HashMap$Node) (local.get $phi36))))
                            ;; startBlock type=NORMAL, label = If_123_0
                            (block $If_123_0
                                ;; startBlock type=NORMAL, label = If_123_1
                                (block $If_123_1
                                    ;; writeIfAndStartTrueBlock
                                    (if $if15 (i32.eq (local.get $phi7) (i32.const 0))
                                        (then
                                            (local.set $phi38 (local.get $var37))
                                            (br $If_123_1)
                                            ;; Start else
                                            )(else
                                            ;; writeIfAndStartTrueBlock
                                            (if $if16 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var37)))
                                                (then
                                                    (local.set $phi38 (local.get $var37))
                                                    (br $If_123_0)
                                                    ;; Start else
                                                    )(else
                                                    (local.set $phi38 (local.get $var37))
                                                    (br $If_123_1)
                                                    ))
                                            ;; finishIfBlock
                                            ))
                                    ;; finishIfBlock
                                    )
                                ;; finishBlock
                                (local.set $var39 (local.get $phi36))
                                (struct.set $java$util$HashMap$Node $value (ref.cast (ref null $java$util$HashMap$Node) (local.get $var39)) (ref.cast (ref null $java$lang$Object) (local.get $phi6)))
                                (br $If_123_0)
                                )
                            ;; finishBlock
                            (return (local.get $phi38))
                            ))
                    ;; finishIfBlock
                    ;; Start else
                    )(else
                    (local.set $var18 (local.get $phi13))
                    (local.set $var19 (local.get $phi3))
                    (local.set $var20 (local.get $phi4))
                    (local.set $var21 (local.get $phi5))
                    (local.set $var22 (local.get $phi6))
                    (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var18))) (local.get $var16) (call $java$util$HashMap$Ljava$util$HashMap$Node$$newNode$I$Ljava$lang$Object$$Ljava$lang$Object$$Ljava$util$HashMap$Node$ (local.get $var19) (local.get $var20) (local.get $var21) (local.get $var22) (ref.null none)))
                    ;; Here was a goto statement
                    (local.set $phi23 (local.get $var17))
                    (local.set $phi24 (local.get $var16))
                    (br $If_49_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (local.set $var25 (local.get $phi3))
        (struct.set $java$util$HashMap $modCount (ref.cast (ref null $java$util$HashMap) (local.get $var25)) (i32.add (struct.get $java$util$HashMap $modCount (ref.cast (ref null $java$util$HashMap) (local.get $var25))) (i32.const 1)))
        (local.set $var26 (local.get $phi3))
        (local.set $var27 (i32.add (struct.get $java$util$HashMap $size (ref.cast (ref null $java$util$HashMap) (local.get $var26))) (i32.const 1)))
        (struct.set $java$util$HashMap $size (ref.cast (ref null $java$util$HashMap) (local.get $var26)) (local.get $var27))
        ;; startBlock type=NORMAL, label = If_83_0
        (block $If_83_0
            ;; writeIfAndStartTrueBlock
            (if $if17 (i32.le_s (local.get $var27) (struct.get $java$util$HashMap $threshold (ref.cast (ref null $java$util$HashMap) (local.get $phi3))))
                (then
                    (br $If_83_0)
                    ;; Start else
                    )(else
                    (local.set $var28 (local.get $phi3))
                    (local.set $var29 (call $java$util$HashMap$$Ljava$util$HashMap$Node$$resize$$ (local.get $var28)))
                    (br $If_83_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (ref.null none))
        (unreachable))
    (func $java$util$HashMap$I$size$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (return (struct.get $java$util$HashMap $size (ref.cast (ref null $java$util$HashMap) (local.get $thisref))))
        (unreachable))
    (func $java$util$HashMap$Z$containsKey$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 i32)
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = If_6_0
        (block $If_6_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (ref.is_null (call $java$util$HashMap$Ljava$util$HashMap$Node$$getNode$Ljava$lang$Object$ (local.get $var0) (local.get $arg0)))
                (then
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (local.get $arg0))
                    (local.set $phi3 (i32.const 0))
                    (br $If_6_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (local.get $arg0))
                    (local.set $phi3 (i32.const 1))
                    (br $If_6_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi3))
        (unreachable))
    (func $java$util$HashMap$Ljava$util$Set$$entrySet$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $phi3 (ref null $java$lang$Object))
        (local $phi4 (ref null $java$lang$Object))
        (local $phi5 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (struct.get $java$util$HashMap $entrySet (ref.cast (ref null $java$util$HashMap) (local.get $var0))))
        ;; startBlock type=NORMAL, label = If_7_0
        (block $If_7_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var1)))
                (then
                    (local.set $phi3 (local.get $var0))
                    (local.set $phi4 (local.get $var1))
                    (local.set $phi5 (local.get $var1))
                    (br $If_7_0)
                    ;; Start else
                    )(else
                    (local.set $var2 (struct.new $java$util$HashMap$EntrySet (struct.get $java$util$HashMap$EntrySet_rtt $factoryFor (global.get $java$util$HashMap$EntrySet_cls)) (ref.func $java$util$HashMap$EntrySet_vt) (ref.null noextern) (struct.get $java$util$HashMap$EntrySet_rtt $classImplTypes (global.get $java$util$HashMap$EntrySet_cls)) (ref.null none)))
                    (struct.set $java$util$HashMap$EntrySet $this$0 (ref.cast (ref null $java$util$HashMap$EntrySet) (local.get $var2)) (ref.cast (ref null $java$lang$Object) (local.get $var0)))
                    (struct.set $java$util$HashMap $entrySet (ref.cast (ref null $java$util$HashMap) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $var2)))
                    ;; Here was a goto statement
                    (local.set $phi3 (local.get $var0))
                    (local.set $phi4 (local.get $var1))
                    (local.set $phi5 (local.get $var2))
                    (br $If_7_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi5))
        (unreachable))
    (func $java$util$HashMap$Z$isEmpty$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 i32)
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = If_5_0
        (block $If_5_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ne (struct.get $java$util$HashMap $size (ref.cast (ref null $java$util$HashMap) (local.get $var0))) (i32.const 0))
                (then
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (i32.const 0))
                    (br $If_5_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (i32.const 1))
                    (br $If_5_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi2))
        (unreachable))
    (func $java$util$List$Ljava$util$List$$of$$Ljava$lang$Object$ (type $t559) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $phi4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $var6 (ref null $java$lang$Object))
        (local $var7 (ref null $java$lang$Object))
        (local $var8 (ref null $java$lang$Object))
        (local $tableswitch_idx0 i32)
        ;; writeTableSwitch
        (block $tableswitch_outer0
            (local.set $tableswitch_idx0 (i32.sub (array.len $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $arg0)))) (i32.const 0)))
            (block $tableswitch_inner0
                (if $tableswitch_min0 (i32.ge_s (array.len $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $arg0)))) (i32.const 0))
                    (then
                        (if $tableswitch_max0 (i32.le_s (array.len $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $arg0)))) (i32.const 2))
                            (then
                                ;; writeSwitchCase 0
                                (if $casecheck0 (i32.eq (local.get $tableswitch_idx0) (i32.const 0))
                                    (then
                                        (drop (call $java$util$ImmutableCollections_i))
                                        (return (struct.get $java$util$ImmutableCollections_rtt $EMPTY_LIST (global.get $java$util$ImmutableCollections_cls)))
                                        ))
                                ;; finishSwitchCase
                                ;; writeSwitchCase 1
                                (if $casecheck1 (i32.eq (local.get $tableswitch_idx0) (i32.const 1))
                                    (then
                                        (local.set $var1 (struct.new $java$util$ImmutableCollections$List12 (struct.get $java$util$ImmutableCollections$List12_rtt $factoryFor (global.get $java$util$ImmutableCollections$List12_cls)) (ref.func $java$util$ImmutableCollections$List12_vt) (ref.null noextern) (struct.get $java$util$ImmutableCollections$List12_rtt $classImplTypes (global.get $java$util$ImmutableCollections$List12_cls)) (ref.null none) (ref.null none)))
                                        (local.set $var2 (array.get $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $arg0))) (i32.const 0)))
                                        ;; writeIfAndStartTrueBlock
                                        (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var2)))
                                            (then
                                                (local.set $phi4 (local.get $var2))
                                                (struct.set $java$util$ImmutableCollections$List12 $e0 (ref.cast (ref null $java$util$ImmutableCollections$List12) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (local.get $phi4)))
                                                (drop (call $java$util$ImmutableCollections_i))
                                                (struct.set $java$util$ImmutableCollections$List12 $e1 (ref.cast (ref null $java$util$ImmutableCollections$List12) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (struct.get $java$util$ImmutableCollections_rtt $EMPTY (global.get $java$util$ImmutableCollections_cls))))
                                                (return (local.get $var1))
                                                ;; Start else
                                                )(else
                                                (local.set $var3 (struct.new $java$lang$NullPointerException (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)) (ref.func $java$lang$NullPointerException_vt) (ref.null noextern) (struct.get $java$lang$NullPointerException_rtt $classImplTypes (global.get $java$lang$NullPointerException_cls)) (ref.null none) (ref.null none) (i32.const 0) (ref.null none)))
                                                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var3)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var3)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                                (throw $javaexception (local.get $var3))
                                                ))
                                        ;; finishIfBlock
                                        ))
                                ;; finishSwitchCase
                                ;; writeSwitchCase 2
                                (if $casecheck2 (i32.eq (local.get $tableswitch_idx0) (i32.const 2))
                                    (then
                                        (local.set $var0 (struct.new $java$util$ImmutableCollections$List12 (struct.get $java$util$ImmutableCollections$List12_rtt $factoryFor (global.get $java$util$ImmutableCollections$List12_cls)) (ref.func $java$util$ImmutableCollections$List12_vt) (ref.null noextern) (struct.get $java$util$ImmutableCollections$List12_rtt $classImplTypes (global.get $java$util$ImmutableCollections$List12_cls)) (ref.null none) (ref.null none)))
                                        (local.set $var5 (array.get $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $arg0))) (i32.const 0)))
                                        (local.set $var6 (array.get $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $arg0))) (i32.const 1)))
                                        ;; writeIfAndStartTrueBlock
                                        (if $if1 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var5)))
                                            (then
                                                (struct.set $java$util$ImmutableCollections$List12 $e0 (ref.cast (ref null $java$util$ImmutableCollections$List12) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $var5)))
                                                ;; writeIfAndStartTrueBlock
                                                (if $if2 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var6)))
                                                    (then
                                                        (struct.set $java$util$ImmutableCollections$List12 $e1 (ref.cast (ref null $java$util$ImmutableCollections$List12) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $var6)))
                                                        (return (local.get $var0))
                                                        ;; Start else
                                                        )(else
                                                        (local.set $var7 (struct.new $java$lang$NullPointerException (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)) (ref.func $java$lang$NullPointerException_vt) (ref.null noextern) (struct.get $java$lang$NullPointerException_rtt $classImplTypes (global.get $java$lang$NullPointerException_cls)) (ref.null none) (ref.null none) (i32.const 0) (ref.null none)))
                                                        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var7)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                                        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var7)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                                        (throw $javaexception (local.get $var7))
                                                        ))
                                                ;; finishIfBlock
                                                ;; Start else
                                                )(else
                                                (local.set $var8 (struct.new $java$lang$NullPointerException (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)) (ref.func $java$lang$NullPointerException_vt) (ref.null noextern) (struct.get $java$lang$NullPointerException_rtt $classImplTypes (global.get $java$lang$NullPointerException_cls)) (ref.null none) (ref.null none) (i32.const 0) (ref.null none)))
                                                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var8)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var8)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                                (throw $javaexception (local.get $var8))
                                                ))
                                        ;; finishIfBlock
                                        ))
                                ;; finishSwitchCase
                                )(else
                                (br $tableswitch_inner0)
                                ))
                        )(else
                        (br $tableswitch_inner0)
                        ))
                )
            ;; startTableSwitchDefaultBlock
            (drop (call $java$util$ImmutableCollections_i))
            (return (call $java$util$ImmutableCollections$Ljava$util$List$$listFromArray$$Ljava$lang$Object$ (call $java$util$ImmutableCollections_i) (local.get $arg0)))
            ;; finishTableSwitchDefaultBlock
            )
        ;; finishTableSwitch
        (unreachable))
    (func $java$util$Collections$EmptyMap$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$util$Collections$EmptyMap$Ljava$util$Set$$entrySet$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $phi0 (ref null $java$lang$Object))
        (drop (call $java$util$Collections_i))
        (drop (call $java$util$Collections_i))
        (local.set $phi0 (struct.get $java$util$Collections_rtt $EMPTY_SET (global.get $java$util$Collections_cls)))
        (return (local.get $phi0))
        (unreachable))
    (func $java$util$Collections$EmptyMap$Z$equals$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 (ref null $java$lang$Object))
        (local $phi4 i32)
        (local $phi5 (ref null $java$lang$Object))
        (local $phi6 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = If_7_0
        (block $If_7_0
            ;; startBlock type=NORMAL, label = If_7_1
            (block $If_7_1
                ;; writeIfAndStartTrueBlock
                (if $if0 (i32.eq (call $instanceOf (local.get $arg0) (i32.const 15)) (i32.const 0))
                    (then
                        (local.set $phi5 (local.get $var0))
                        (local.set $phi6 (local.get $arg0))
                        (br $If_7_1)
                        ;; Start else
                        )(else
                        (local.set $var1 (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
                        ;; writeIfAndStartTrueBlock
                        (if $if1 (i32.eq (call_indirect (type $t555) (local.get $var1) (call_ref $t0 (i32.const 38) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var1))))) (i32.const 0))
                            (then
                                (local.set $phi5 (local.get $var0))
                                (local.set $phi6 (local.get $arg0))
                                (br $If_7_1)
                                ;; Start else
                                )(else
                                ;; Here was a goto statement
                                (local.set $phi2 (local.get $var0))
                                (local.set $phi3 (local.get $arg0))
                                (local.set $phi4 (i32.const 1))
                                (br $If_7_0)
                                ))
                        ;; finishIfBlock
                        ))
                ;; finishIfBlock
                )
            ;; finishBlock
            (local.set $phi2 (local.get $phi5))
            (local.set $phi3 (local.get $phi6))
            (local.set $phi4 (i32.const 0))
            (br $If_7_0)
            )
        ;; finishBlock
        (return (local.get $phi4))
        (unreachable))
    (func $java$util$Collections$EmptyMap$I$size$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (return (i32.const 0))
        (unreachable))
    (func $java$util$Collections$EmptyMap$I$hashCode$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (return (i32.const 0))
        (unreachable))
    (func $java$util$Collections$EmptyMap$Ljava$lang$Object$$computeIfAbsent$Ljava$lang$Object$$Ljava$util$function$Function$ (type $t561) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (struct.new $java$lang$UnsupportedOperationException (struct.get $java$lang$UnsupportedOperationException_rtt $factoryFor (global.get $java$lang$UnsupportedOperationException_cls)) (ref.func $java$lang$UnsupportedOperationException_vt) (ref.null noextern) (struct.get $java$lang$UnsupportedOperationException_rtt $classImplTypes (global.get $java$lang$UnsupportedOperationException_cls)) (ref.null none) (ref.null none)))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (throw $javaexception (local.get $var0))
        (unreachable))
    (func $java$util$Collections$EmptyMap$Ljava$lang$Object$$get$Ljava$lang$Object$ (type $t559) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (return (ref.null none))
        (unreachable))
    (func $java$util$Collections$EmptyMap$Z$containsKey$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (return (i32.const 0))
        (unreachable))
    (func $java$util$Collections$EmptyMap$Z$isEmpty$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (return (i32.const 1))
        (unreachable))
    (func $java$lang$Short$V$$clinit$$$ (type $t541) (param $unused (ref null $java$lang$Object))
        (drop (call $java$lang$Short_i))
        (struct.set $java$lang$Short_rtt $TYPE (ref.cast (ref null $java$lang$Short_rtt) (call $java$lang$Short_i)) (ref.cast (ref null $java$lang$Object) (global.get $primitive_short)))
        (return)
        (unreachable))
    (func $java$lang$Short$Ljava$lang$Short$$valueOf$S (type $t565) (param $unused (ref null $java$lang$Object)) (param $arg0 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (drop (call $java$lang$Short_i))
        (local.set $var0 (struct.new $java$lang$Short (struct.get $java$lang$Short_rtt $factoryFor (global.get $java$lang$Short_cls)) (ref.func $java$lang$Short_vt) (ref.null noextern) (struct.get $java$lang$Short_rtt $classImplTypes (global.get $java$lang$Short_cls)) (i32.const 0)))
        (struct.set $java$lang$Short $value (ref.cast (ref null $java$lang$Short) (local.get $var0)) (local.get $arg0))
        (return (local.get $var0))
        (unreachable))
    (func $java$lang$Short$V$$init$$S (type $t575) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32)
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Short $value (ref.cast (ref null $java$lang$Short) (local.get $var0)) (local.get $arg0))
        (return)
        (unreachable))
    (func $java$lang$Short$I$compareTo$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (return (call $java$lang$Short$I$compareTo$Ljava$lang$Short$ (local.get $var0) (local.get $var1)))
        (unreachable))
    (func $java$lang$Short$I$compareTo$Ljava$lang$Short$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 i32)
        (local $var1 i32)
        (local.set $var0 (struct.get $java$lang$Short $value (ref.cast (ref null $java$lang$Short) (local.get $thisref))))
        (local.set $var1 (call_indirect (type $t555) (local.get $arg0) (call_ref $t0 (i32.const 103) (struct.get $java$lang$Object $vt_resolver (local.get $arg0)))))
        (drop (call $java$lang$Short_i))
        (return (call $java$lang$Short$I$compare$S$S (call $java$lang$Short_i) (local.get $var0) (local.get $var1)))
        (unreachable))
    (func $java$lang$Short$I$compare$S$S (type $t564) (param $unused (ref null $java$lang$Object)) (param $arg0 i32) (param $arg1 i32) (result i32)
        (local $phi0 i32)
        (local $phi1 i32)
        (local $phi2 i32)
        ;; startBlock type=NORMAL, label = If_3_0
        (block $If_3_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ge_s (local.get $arg0) (local.get $arg1))
                (then
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (i32.ne (local.get $arg0) (local.get $arg1))
                        (then
                            (local.set $phi0 (local.get $arg0))
                            (local.set $phi1 (local.get $arg1))
                            (local.set $phi2 (i32.const 1))
                            (br $If_3_0)
                            ;; Start else
                            )(else
                            ;; Here was a goto statement
                            (local.set $phi0 (local.get $arg0))
                            (local.set $phi1 (local.get $arg1))
                            (local.set $phi2 (i32.const 0))
                            (br $If_3_0)
                            ))
                    ;; finishIfBlock
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi0 (local.get $arg0))
                    (local.set $phi1 (local.get $arg1))
                    (local.set $phi2 (i32.const -1))
                    (br $If_3_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi2))
        (unreachable))
    (func $java$lang$Short$I$intValue$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (return (struct.get $java$lang$Short $value (ref.cast (ref null $java$lang$Short) (local.get $thisref))))
        (unreachable))
    (func $java$lang$Short$Ljava$lang$String$$toString$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 i32)
        (local.set $var0 (struct.get $java$lang$Short $value (ref.cast (ref null $java$lang$Short) (local.get $thisref))))
        (drop (call $java$lang$Short_i))
        (return (call $java$lang$Short$Ljava$lang$String$$toString$S$I (call $java$lang$Short_i) (local.get $var0) (i32.const 10)))
        (unreachable))
    (func $java$lang$Short$Z$equals$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 i32)
        (local $phi5 (ref null $java$lang$Object))
        (local $phi6 (ref null $java$lang$Object))
        (local $phi7 (ref null $java$lang$Object))
        (local $phi8 i32)
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.eq (local.get $var0) (local.get $arg0)))
            (then
                ;; startBlock type=NORMAL, label = If_9_0
                (block $If_9_0
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (ref.is_null (local.get $arg0))
                        (then
                            (local.set $phi1 (local.get $var0))
                            (local.set $phi2 (local.get $arg0))
                            (br $If_9_0)
                            ;; Start else
                            )(else
                            ;; writeIfAndStartTrueBlock
                            (if $if2 (ref.eq (call $runtimetypeof (local.get $var0)) (call $runtimetypeof (local.get $arg0)))
                                (then
                                    (local.set $var3 (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
                                    (local.set $var4 (struct.get $java$lang$Short $value (ref.cast (ref null $java$lang$Short) (local.get $var0))))
                                    ;; startBlock type=NORMAL, label = If_27_0
                                    (block $If_27_0
                                        ;; writeIfAndStartTrueBlock
                                        (if $if3 (i32.ne (local.get $var4) (call_indirect (type $t555) (local.get $var3) (call_ref $t0 (i32.const 103) (struct.get $java$lang$Object $vt_resolver (local.get $var3)))))
                                            (then
                                                (local.set $phi5 (local.get $var0))
                                                (local.set $phi6 (local.get $arg0))
                                                (local.set $phi7 (local.get $var3))
                                                (local.set $phi8 (i32.const 0))
                                                (br $If_27_0)
                                                ;; Start else
                                                )(else
                                                ;; Here was a goto statement
                                                (local.set $phi5 (local.get $var0))
                                                (local.set $phi6 (local.get $arg0))
                                                (local.set $phi7 (local.get $var3))
                                                (local.set $phi8 (i32.const 1))
                                                (br $If_27_0)
                                                ))
                                        ;; finishIfBlock
                                        )
                                    ;; finishBlock
                                    (return (local.get $phi8))
                                    ;; Start else
                                    )(else
                                    (local.set $phi1 (local.get $var0))
                                    (local.set $phi2 (local.get $arg0))
                                    (br $If_9_0)
                                    ))
                            ;; finishIfBlock
                            ))
                    ;; finishIfBlock
                    )
                ;; finishBlock
                (return (i32.const 0))
                ;; Start else
                )(else
                (return (i32.const 1))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$lang$Short$I$hashCode$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (return (struct.get $java$lang$Short $value (ref.cast (ref null $java$lang$Short) (local.get $thisref))))
        (unreachable))
    (func $de$mirkosertic$bytecoder$integrationtest$VueDemo$1$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $de$mirkosertic$bytecoder$integrationtest$VueDemo$1$V$handle$Lde$mirkosertic$bytecoder$integrationtest$VueDemo$MyVueInstance$$Lde$mirkosertic$bytecoder$api$web$MouseEvent$ (type $t560) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 i64)
        (local $var2 (ref null $java$lang$Object))
        (local $phi3 (ref null $java$lang$Object))
        (local.set $var0 (struct.new $obj_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t549 (i32.const 1))))
        (drop (call $java$lang$System_i))
        (local.set $var1 (call $java$lang$System$J$currentTimeMillis$$ (call $java$lang$System_i)))
        (drop (call $java$lang$Long_i))
        (drop (call $java$lang$Long_i))
        (local.set $var2 (struct.new $java$lang$Long (struct.get $java$lang$Long_rtt $factoryFor (global.get $java$lang$Long_cls)) (ref.func $java$lang$Long_vt) (ref.null noextern) (struct.get $java$lang$Long_rtt $classImplTypes (global.get $java$lang$Long_cls)) (i64.const 0)))
        (struct.set $java$lang$Long $value (ref.cast (ref null $java$lang$Long) (local.get $var2)) (local.get $var1))
        (local.set $phi3 (local.get $var2))
        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var0))) (i32.const 0) (local.get $phi3))
        (call_indirect (type $t556) (local.get $arg0) (call $java$lang$String$Ljava$lang$String$$format$Ljava$lang$String$$$Ljava$lang$Object$ (global.get $java$lang$String_cls) (global.get $stringpool_91) (local.get $var0)) (call_ref $t0 (i32.const 168) (struct.get $java$lang$Object $vt_resolver (local.get $arg0))))
        (return)
        (unreachable))
    (func $de$mirkosertic$bytecoder$integrationtest$VueDemo$1$V$handle$Lde$mirkosertic$bytecoder$api$vue$VueInstance$$Lde$mirkosertic$bytecoder$api$web$Event$ (type $t560) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 i64)
        (local $var3 (ref null $java$lang$Object))
        (local $phi4 (ref null $java$lang$Object))
        (local.set $var0 (struct.new $de$mirkosertic$bytecoder$integrationtest$VueDemo$MyVueInstance (struct.get $de$mirkosertic$bytecoder$integrationtest$VueDemo$MyVueInstance_rtt $factoryFor (global.get $de$mirkosertic$bytecoder$integrationtest$VueDemo$MyVueInstance_cls)) (ref.func $de$mirkosertic$bytecoder$integrationtest$VueDemo$MyVueInstance_vt) (struct.get $java$lang$Object $nativeObject (local.get $arg0)) (struct.get $de$mirkosertic$bytecoder$integrationtest$VueDemo$MyVueInstance_rtt $classImplTypes (global.get $de$mirkosertic$bytecoder$integrationtest$VueDemo$MyVueInstance_cls))))
        (local.set $var1 (struct.new $obj_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t549 (i32.const 1))))
        (drop (call $java$lang$System_i))
        (local.set $var2 (call $java$lang$System$J$currentTimeMillis$$ (call $java$lang$System_i)))
        (drop (call $java$lang$Long_i))
        (drop (call $java$lang$Long_i))
        (local.set $var3 (struct.new $java$lang$Long (struct.get $java$lang$Long_rtt $factoryFor (global.get $java$lang$Long_cls)) (ref.func $java$lang$Long_vt) (ref.null noextern) (struct.get $java$lang$Long_rtt $classImplTypes (global.get $java$lang$Long_cls)) (i64.const 0)))
        (struct.set $java$lang$Long $value (ref.cast (ref null $java$lang$Long) (local.get $var3)) (local.get $var2))
        (local.set $phi4 (local.get $var3))
        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var1))) (i32.const 0) (local.get $phi4))
        (call_indirect (type $t556) (local.get $var0) (call $java$lang$String$Ljava$lang$String$$format$Ljava$lang$String$$$Ljava$lang$Object$ (global.get $java$lang$String_cls) (global.get $stringpool_91) (local.get $var1)) (call_ref $t0 (i32.const 168) (struct.get $java$lang$Object $vt_resolver (local.get $var0))))
        (return)
        (unreachable))
    (func $java$lang$Double$V$$clinit$$$ (type $t541) (param $unused (ref null $java$lang$Object))
        (drop (call $java$lang$Double_i))
        (struct.set $java$lang$Double_rtt $TYPE (ref.cast (ref null $java$lang$Double_rtt) (call $java$lang$Double_i)) (ref.cast (ref null $java$lang$Object) (global.get $primitive_double)))
        (return)
        (unreachable))
    (func $java$lang$Double$Ljava$lang$Double$$valueOf$D (type $t618) (param $unused (ref null $java$lang$Object)) (param $arg0 f64) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (drop (call $java$lang$Double_i))
        (local.set $var0 (struct.new $java$lang$Double (struct.get $java$lang$Double_rtt $factoryFor (global.get $java$lang$Double_cls)) (ref.func $java$lang$Double_vt) (ref.null noextern) (struct.get $java$lang$Double_rtt $classImplTypes (global.get $java$lang$Double_cls)) (f64.const 0.0)))
        (struct.set $java$lang$Double $value (ref.cast (ref null $java$lang$Double) (local.get $var0)) (local.get $arg0))
        (return (local.get $var0))
        (unreachable))
    (func $java$lang$Double$V$$init$$D (type $t619) (param $thisref (ref null $java$lang$Object)) (param $arg0 f64)
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Double $value (ref.cast (ref null $java$lang$Double) (local.get $var0)) (local.get $arg0))
        (return)
        (unreachable))
    (func $java$lang$Double$I$compareTo$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (return (call $java$lang$Double$I$compareTo$Ljava$lang$Double$ (local.get $var0) (local.get $var1)))
        (unreachable))
    (func $java$lang$Double$I$compareTo$Ljava$lang$Double$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 f64)
        (local $var1 f64)
        (local $phi2 f64)
        (local.set $var0 (struct.get $java$lang$Double $value (ref.cast (ref null $java$lang$Double) (local.get $thisref))))
        (local.set $phi2 (struct.get $java$lang$Double $value (ref.cast (ref null $java$lang$Double) (local.get $arg0))))
        (local.set $var1 (local.get $phi2))
        (drop (call $java$lang$Double_i))
        (return (call $java$lang$Double$I$compare$D$D (call $java$lang$Double_i) (local.get $var0) (local.get $var1)))
        (unreachable))
    (func $java$lang$Double$D$doubleValue$$ (type $t620) (param $thisref (ref null $java$lang$Object)) (result f64)
        (return (struct.get $java$lang$Double $value (ref.cast (ref null $java$lang$Double) (local.get $thisref))))
        (unreachable))
    (func $java$lang$Double$I$compare$D$D (type $t621) (param $unused (ref null $java$lang$Object)) (param $arg0 f64) (param $arg1 f64) (result i32)
        (local $phi0 f64)
        (local $phi1 f64)
        (local $phi2 i32)
        ;; startBlock type=NORMAL, label = If_4_0
        (block $If_4_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ge_s (call $compare_f64 (local.get $arg0) (local.get $arg1)) (i32.const 0))
                (then
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (i32.ne (call $compare_f64 (local.get $arg0) (local.get $arg1)) (i32.const 0))
                        (then
                            (local.set $phi0 (local.get $arg0))
                            (local.set $phi1 (local.get $arg1))
                            (local.set $phi2 (i32.const 1))
                            (br $If_4_0)
                            ;; Start else
                            )(else
                            ;; Here was a goto statement
                            (local.set $phi0 (local.get $arg0))
                            (local.set $phi1 (local.get $arg1))
                            (local.set $phi2 (i32.const 0))
                            (br $If_4_0)
                            ))
                    ;; finishIfBlock
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi0 (local.get $arg0))
                    (local.set $phi1 (local.get $arg1))
                    (local.set $phi2 (i32.const -1))
                    (br $If_4_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi2))
        (unreachable))
    (func $java$lang$Double$I$intValue$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (return (i32.trunc_f64_s (struct.get $java$lang$Double $value (ref.cast (ref null $java$lang$Double) (local.get $thisref)))))
        (unreachable))
    (func $java$lang$Double$Ljava$lang$String$$toString$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 f64)
        (local.set $var0 (struct.get $java$lang$Double $value (ref.cast (ref null $java$lang$Double) (local.get $thisref))))
        (drop (call $java$lang$Double_i))
        (return (call $java$lang$Double$Ljava$lang$String$$toString$D (call $java$lang$Double_i) (local.get $var0)))
        (unreachable))
    (func $java$lang$Double$Z$equals$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 f64)
        (local $phi5 (ref null $java$lang$Object))
        (local $phi6 (ref null $java$lang$Object))
        (local $phi7 (ref null $java$lang$Object))
        (local $phi8 i32)
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.eq (local.get $var0) (local.get $arg0)))
            (then
                ;; startBlock type=NORMAL, label = If_9_0
                (block $If_9_0
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (ref.is_null (local.get $arg0))
                        (then
                            (local.set $phi1 (local.get $var0))
                            (local.set $phi2 (local.get $arg0))
                            (br $If_9_0)
                            ;; Start else
                            )(else
                            ;; writeIfAndStartTrueBlock
                            (if $if2 (ref.eq (call $runtimetypeof (local.get $var0)) (call $runtimetypeof (local.get $arg0)))
                                (then
                                    (local.set $var3 (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
                                    (local.set $var4 (struct.get $java$lang$Double $value (ref.cast (ref null $java$lang$Double) (local.get $var0))))
                                    ;; startBlock type=NORMAL, label = If_28_0
                                    (block $If_28_0
                                        ;; writeIfAndStartTrueBlock
                                        (if $if3 (i32.ne (call $compare_f64 (local.get $var4) (call $java$lang$Double$D$doubleValue$$ (local.get $var3))) (i32.const 0))
                                            (then
                                                (local.set $phi5 (local.get $var0))
                                                (local.set $phi6 (local.get $arg0))
                                                (local.set $phi7 (local.get $var3))
                                                (local.set $phi8 (i32.const 0))
                                                (br $If_28_0)
                                                ;; Start else
                                                )(else
                                                ;; Here was a goto statement
                                                (local.set $phi5 (local.get $var0))
                                                (local.set $phi6 (local.get $arg0))
                                                (local.set $phi7 (local.get $var3))
                                                (local.set $phi8 (i32.const 1))
                                                (br $If_28_0)
                                                ))
                                        ;; finishIfBlock
                                        )
                                    ;; finishBlock
                                    (return (local.get $phi8))
                                    ;; Start else
                                    )(else
                                    (local.set $phi1 (local.get $var0))
                                    (local.set $phi2 (local.get $arg0))
                                    (br $If_9_0)
                                    ))
                            ;; finishIfBlock
                            ))
                    ;; finishIfBlock
                    )
                ;; finishBlock
                (return (i32.const 0))
                ;; Start else
                )(else
                (return (i32.const 1))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$lang$Double$I$hashCode$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (return (i32.trunc_f64_s (struct.get $java$lang$Double $value (ref.cast (ref null $java$lang$Double) (local.get $thisref)))))
        (unreachable))
    (func $java$lang$ClassCastException$V$$init$$Ljava$lang$String$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return)
        (unreachable))
    (func $java$lang$ClassCastException$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return)
        (unreachable))
    (func $java$nio$BufferOverflowException$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return)
        (unreachable))
    (func $java$lang$IllegalStateException$V$$init$$Ljava$lang$String$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return)
        (unreachable))
    (func $java$lang$IllegalStateException$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return)
        (unreachable))
    (func $java$lang$IllegalStateException$V$$init$$Ljava$lang$Throwable$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (return)
        (unreachable))
    (func $java$util$ImmutableCollections$AbstractImmutableCollection$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$util$AbstractList$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$util$AbstractList $modCount (ref.cast (ref null $java$util$AbstractList) (local.get $var0)) (i32.const 0))
        (return)
        (unreachable))
    (func $java$util$AbstractList$I$indexOf$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 (ref null $java$lang$Object))
        (local $phi4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $var6 (ref null $java$lang$Object))
        (local $var7 (ref null $java$lang$Object))
        (local $phi8 (ref null $java$lang$Object))
        (local $phi9 (ref null $java$lang$Object))
        (local $var10 (ref null $java$lang$Object))
        (local $var11 (ref null $java$lang$Object))
        (local $var12 (ref null $java$lang$Object))
        (local $var13 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (call_indirect (type $t553) (local.get $var0) (call_ref $t0 (i32.const 164) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
        ;; startBlock type=NORMAL, label = If_8_0
        (block $If_8_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg0)))
                (then
                    (local.set $phi8 (local.get $var0))
                    (local.set $phi9 (local.get $var1))
                    ;; startBlock type=LOOP, label = L365456267
                    (loop $L365456267
                        (local.set $var10 (local.get $phi9))
                        ;; writeIfAndStartTrueBlock
                        (if $if1 (i32.eq (call_indirect (type $t555) (local.get $var10) (call_ref $t0 (i32.const 48) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var10))))) (i32.const 0))
                            (then
                                (local.set $phi2 (local.get $phi8))
                                (local.set $phi3 (local.get $arg0))
                                (local.set $phi4 (local.get $phi9))
                                (br $If_8_0)
                                ;; Start else
                                )(else
                                (local.set $var11 (local.get $phi9))
                                (local.set $var12 (call_indirect (type $t553) (local.get $var11) (call_ref $t0 (i32.const 80) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var11))))))
                                ;; writeIfAndStartTrueBlock
                                (if $if2 (i32.eq (call_indirect (type $t554) (local.get $arg0) (local.get $var12) (call_ref $t0 (i32.const 1) (struct.get $java$lang$Object $vt_resolver (local.get $arg0)))) (i32.const 0))
                                    (then
                                        (br $L365456267)
                                        ;; Start else
                                        )(else
                                        (local.set $var13 (local.get $phi9))
                                        (return (call_indirect (type $t555) (local.get $var13) (call_ref $t0 (i32.const 128) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var13))))))
                                        ))
                                ;; finishIfBlock
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    ;; Start else
                    )(else
                    (local.set $phi2 (local.get $var0))
                    (local.set $phi3 (local.get $arg0))
                    (local.set $phi4 (local.get $var1))
                    ;; startBlock type=LOOP, label = L1510833615
                    (loop $L1510833615
                        (local.set $var5 (local.get $phi4))
                        ;; writeIfAndStartTrueBlock
                        (if $if3 (i32.eq (call_indirect (type $t555) (local.get $var5) (call_ref $t0 (i32.const 48) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var5))))) (i32.const 0))
                            (then
                                (br $If_8_0)
                                ;; Start else
                                )(else
                                (local.set $var6 (local.get $phi4))
                                ;; writeIfAndStartTrueBlock
                                (if $if4 (select (i32.const 0) (i32.const 1) (ref.is_null (call_indirect (type $t553) (local.get $var6) (call_ref $t0 (i32.const 80) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var6)))))))
                                    (then
                                        (br $L1510833615)
                                        ;; Start else
                                        )(else
                                        (local.set $var7 (local.get $phi4))
                                        (return (call_indirect (type $t555) (local.get $var7) (call_ref $t0 (i32.const 128) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var7))))))
                                        ))
                                ;; finishIfBlock
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (i32.const -1))
        (unreachable))
    (func $java$util$AbstractList$Ljava$util$ListIterator$$listIterator$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (return (call $java$util$AbstractList$Ljava$util$ListIterator$$listIterator$I (local.get $var0) (i32.const 0)))
        (unreachable))
    (func $java$util$AbstractList$Ljava$util$ListIterator$$listIterator$I (type $t565) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (call $java$util$AbstractList$V$rangeCheckForAdd$I (local.get $var0) (local.get $arg0))
        (local.set $var1 (struct.new $java$util$AbstractList$ListItr (struct.get $java$util$AbstractList$ListItr_rtt $factoryFor (global.get $java$util$AbstractList$ListItr_cls)) (ref.func $java$util$AbstractList$ListItr_vt) (ref.null noextern) (struct.get $java$util$AbstractList$ListItr_rtt $classImplTypes (global.get $java$util$AbstractList$ListItr_cls)) (ref.null none) (i32.const 0) (i32.const 0) (i32.const 0) (ref.null none)))
        (struct.set $java$util$AbstractList$ListItr $this$0 (ref.cast (ref null $java$util$AbstractList$ListItr) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (local.get $var0)))
        (struct.set $java$util$AbstractList$Itr $this$0 (ref.cast (ref null $java$util$AbstractList$Itr) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (local.get $var0)))
        (struct.set $java$util$AbstractList$Itr $cursor (ref.cast (ref null $java$util$AbstractList$Itr) (local.get $var1)) (i32.const 0))
        (struct.set $java$util$AbstractList$Itr $lastRet (ref.cast (ref null $java$util$AbstractList$Itr) (local.get $var1)) (i32.const -1))
        (struct.set $java$util$AbstractList$Itr $expectedModCount (ref.cast (ref null $java$util$AbstractList$Itr) (local.get $var1)) (struct.get $java$util$AbstractList $modCount (ref.cast (ref null $java$util$AbstractList) (struct.get $java$util$AbstractList$Itr $this$0 (ref.cast (ref null $java$util$AbstractList$Itr) (local.get $var1))))))
        (struct.set $java$util$AbstractList$Itr $cursor (ref.cast (ref null $java$util$AbstractList$Itr) (local.get $var1)) (local.get $arg0))
        (return (local.get $var1))
        (unreachable))
    (func $java$util$AbstractList$V$rangeCheckForAdd$I (type $t575) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32)
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 i32)
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $var5 i32)
        (local $var6 (ref null $java$lang$Object))
        (local $var7 (ref null $java$lang$Object))
        (local $var8 (ref null $java$lang$Object))
        (local $var9 (ref null $java$lang$Object))
        (local $var10 i32)
        (local $var11 (ref null $java$lang$Object))
        (local $phi12 (ref null $java$lang$Object))
        (local $var13 (ref null $java$lang$Object))
        (local $phi14 (ref null $java$lang$Object))
        (local $phi15 (ref null $java$lang$Object))
        (local $var16 (ref null $java$lang$Object))
        (local $phi17 (ref null $java$lang$Object))
        (local $phi18 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = If_5_0
        (block $If_5_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.lt_s (local.get $arg0) (i32.const 0))
                (then
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (local.get $arg0))
                    (br $If_5_0)
                    ;; Start else
                    )(else
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (i32.le_s (local.get $arg0) (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 100) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
                        (then
                            (return)
                            ;; Start else
                            )(else
                            (local.set $phi1 (local.get $var0))
                            (local.set $phi2 (local.get $arg0))
                            (br $If_5_0)
                            ))
                    ;; finishIfBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (local.set $var3 (struct.new $java$lang$IndexOutOfBoundsException (struct.get $java$lang$IndexOutOfBoundsException_rtt $factoryFor (global.get $java$lang$IndexOutOfBoundsException_cls)) (ref.func $java$lang$IndexOutOfBoundsException_vt) (ref.null noextern) (struct.get $java$lang$IndexOutOfBoundsException_rtt $classImplTypes (global.get $java$lang$IndexOutOfBoundsException_cls)) (ref.null none) (ref.null none)))
        (local.set $var4 (local.get $phi1))
        (local.set $var5 (local.get $phi2))
        (local.set $var6 (struct.new $java$lang$StringBuilder (struct.get $java$lang$StringBuilder_rtt $factoryFor (global.get $java$lang$StringBuilder_cls)) (ref.func $java$lang$StringBuilder_vt) (ref.null noextern) (struct.get $java$lang$StringBuilder_rtt $classImplTypes (global.get $java$lang$StringBuilder_cls))))
        (call $java$lang$StringBuilder$V$initializeWith$I (local.get $var6) (i32.const 10))
        (local.set $var7 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var6) (global.get $stringpool_89)))
        (drop (call $java$lang$Integer_i))
        (drop (call $java$lang$Integer_i))
        (local.set $phi17 (call $java$lang$Integer$Ljava$lang$String$$toString$I$I (call $java$lang$Integer_i) (local.get $var5) (i32.const 10)))
        (local.set $var16 (local.get $phi17))
        (local.set $phi18 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var7) (local.get $var16)))
        (local.set $var8 (local.get $phi18))
        (local.set $var9 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var8) (global.get $stringpool_103)))
        (local.set $var10 (call_indirect (type $t555) (local.get $var4) (call_ref $t0 (i32.const 100) (struct.get $java$lang$Object $vt_resolver (local.get $var4)))))
        (local.set $phi14 (call $java$lang$Integer$Ljava$lang$String$$toString$I$I (call $java$lang$Integer_i) (local.get $var10) (i32.const 10)))
        (local.set $var13 (local.get $phi14))
        (local.set $phi15 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var9) (local.get $var13)))
        (local.set $var11 (local.get $phi15))
        (local.set $phi12 (call $java$lang$StringBuilder$Ljava$lang$String$$toString$$ (local.get $var11)))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var3)) (ref.cast (ref null $java$lang$Object) (local.get $phi12)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var3)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (throw $javaexception (local.get $var3))
        (unreachable))
    (func $java$util$AbstractList$Ljava$lang$String$$outOfBoundsMsg$I (type $t565) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $var5 i32)
        (local $var6 (ref null $java$lang$Object))
        (local $var7 (ref null $java$lang$Object))
        (local $phi8 (ref null $java$lang$Object))
        (local $phi9 (ref null $java$lang$Object))
        (local $var10 (ref null $java$lang$Object))
        (local $phi11 (ref null $java$lang$Object))
        (local $phi12 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (struct.new $java$lang$StringBuilder (struct.get $java$lang$StringBuilder_rtt $factoryFor (global.get $java$lang$StringBuilder_cls)) (ref.func $java$lang$StringBuilder_vt) (ref.null noextern) (struct.get $java$lang$StringBuilder_rtt $classImplTypes (global.get $java$lang$StringBuilder_cls))))
        (call $java$lang$StringBuilder$V$initializeWith$I (local.get $var1) (i32.const 10))
        (local.set $var2 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var1) (global.get $stringpool_89)))
        (drop (call $java$lang$Integer_i))
        (drop (call $java$lang$Integer_i))
        (local.set $phi11 (call $java$lang$Integer$Ljava$lang$String$$toString$I$I (call $java$lang$Integer_i) (local.get $arg0) (i32.const 10)))
        (local.set $var10 (local.get $phi11))
        (local.set $phi12 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var2) (local.get $var10)))
        (local.set $var3 (local.get $phi12))
        (local.set $var4 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var3) (global.get $stringpool_103)))
        (local.set $var5 (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 100) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
        (local.set $phi8 (call $java$lang$Integer$Ljava$lang$String$$toString$I$I (call $java$lang$Integer_i) (local.get $var5) (i32.const 10)))
        (local.set $var7 (local.get $phi8))
        (local.set $phi9 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var4) (local.get $var7)))
        (local.set $var6 (local.get $phi9))
        (return (call $java$lang$StringBuilder$Ljava$lang$String$$toString$$ (local.get $var6)))
        (unreachable))
    (func $java$lang$IllegalArgumentException$V$$init$$Ljava$lang$String$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return)
        (unreachable))
    (func $java$lang$IllegalArgumentException$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return)
        (unreachable))
    (func $java$lang$IllegalArgumentException$V$$init$$Ljava$lang$Throwable$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (return)
        (unreachable))
    (func $java$util$NoSuchElementException$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return)
        (unreachable))
    (func $java$util$NoSuchElementException$V$$init$$Ljava$lang$String$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return)
        (unreachable))
    (func $java$util$NoSuchElementException$V$$init$$Ljava$lang$Throwable$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (return)
        (unreachable))
    (func $java$util$ConcurrentModificationException$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return)
        (unreachable))
    (func $java$util$ConcurrentModificationException$V$$init$$Ljava$lang$String$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return)
        (unreachable))
    (func $java$util$ConcurrentModificationException$V$$init$$Ljava$lang$Throwable$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (return)
        (unreachable))
    (func $java$lang$UnsupportedOperationException$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return)
        (unreachable))
    (func $java$lang$UnsupportedOperationException$V$$init$$Ljava$lang$String$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return)
        (unreachable))
    (func $java$lang$UnsupportedOperationException$V$$init$$Ljava$lang$Throwable$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (return)
        (unreachable))
    (func $de$mirkosertic$bytecoder$integrationtest$VueDemo$MyVueInstance$V$welcomemessage$Ljava$lang$String$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (call $de$mirkosertic$bytecoder$integrationtest$VueDemo$MyVueInstance$V$welcomemessage$Ljava$lang$String$_delegate (struct.get $java$lang$Object $nativeObject (local.get $thisref)) (struct.get $java$lang$Object $nativeObject (local.get $arg0)))
        )
    (func $java$nio$BufferUnderflowException$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return)
        (unreachable))
    (func $java$io$OutputStreamWriter$V$$init$$Ljava$io$OutputStream$$Ljava$nio$charset$Charset$ (type $t560) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $phi4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $var6 (ref null $java$lang$Object))
        (local $var7 (ref null $java$lang$Object))
        (local $var8 (ref null $java$lang$Object))
        (local $var9 (ref null $java$lang$Object))
        (local $var10 (ref null $java$lang$Object))
        (local $phi11 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg0)))
            (then
                (struct.set $java$io$Writer $lock (ref.cast (ref null $java$io$Writer) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
                ;; writeIfAndStartTrueBlock
                (if $if1 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg1)))
                    (then
                        (local.set $var2 (call $java$io$OutputStreamWriter$Ljava$lang$Object$$lockFor$Ljava$io$OutputStreamWriter$ (global.get $java$io$OutputStreamWriter_cls) (local.get $var0)))
                        (drop (call $sun$nio$cs$StreamEncoder_i))
                        (drop (call $sun$nio$cs$StreamEncoder_i))
                        (local.set $var3 (struct.new $sun$nio$cs$StreamEncoder (struct.get $sun$nio$cs$StreamEncoder_rtt $factoryFor (global.get $sun$nio$cs$StreamEncoder_cls)) (ref.func $sun$nio$cs$StreamEncoder_vt) (ref.null noextern) (struct.get $sun$nio$cs$StreamEncoder_rtt $classImplTypes (global.get $sun$nio$cs$StreamEncoder_cls)) (ref.null none) (i32.const 0) (ref.null none) (ref.null none) (ref.null none) (ref.null none) (ref.null none) (ref.null none) (i32.const 0)))
                        (local.set $var6 (call_indirect (type $t553) (local.get $arg1) (call_ref $t0 (i32.const 133) (struct.get $java$lang$Object $vt_resolver (local.get $arg1)))))
                        (drop (call $java$nio$charset$CodingErrorAction_i))
                        (local.set $var7 (struct.get $java$nio$charset$CodingErrorAction_rtt $REPLACE (global.get $java$nio$charset$CodingErrorAction_cls)))
                        ;; writeIfAndStartTrueBlock
                        (if $if2 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var7)))
                            (then
                                (struct.set $java$nio$charset$CharsetEncoder $malformedInputAction (ref.cast (ref null $java$nio$charset$CharsetEncoder) (local.get $var6)) (ref.cast (ref null $java$lang$Object) (local.get $var7)))
                                (local.set $phi11 (local.get $var6))
                                (local.set $var8 (local.get $phi11))
                                (drop (call $java$nio$charset$CodingErrorAction_i))
                                (local.set $var9 (struct.get $java$nio$charset$CodingErrorAction_rtt $REPLACE (global.get $java$nio$charset$CodingErrorAction_cls)))
                                (call $sun$nio$cs$StreamEncoder$V$$init$$Ljava$io$OutputStream$$Ljava$lang$Object$$Ljava$nio$charset$CharsetEncoder$ (local.get $var3) (local.get $arg0) (local.get $var2) (call $java$nio$charset$CharsetEncoder$Ljava$nio$charset$CharsetEncoder$$onUnmappableCharacter$Ljava$nio$charset$CodingErrorAction$ (local.get $var8) (local.get $var9)))
                                (local.set $phi4 (local.get $var3))
                                (struct.set $java$io$OutputStreamWriter $se (ref.cast (ref null $java$io$OutputStreamWriter) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $phi4)))
                                (return)
                                ;; Start else
                                )(else
                                (local.set $var10 (struct.new $java$lang$IllegalArgumentException (struct.get $java$lang$IllegalArgumentException_rtt $factoryFor (global.get $java$lang$IllegalArgumentException_cls)) (ref.func $java$lang$IllegalArgumentException_vt) (ref.null noextern) (struct.get $java$lang$IllegalArgumentException_rtt $classImplTypes (global.get $java$lang$IllegalArgumentException_cls)) (ref.null none) (ref.null none)))
                                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var10)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_19)))
                                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var10)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                (throw $javaexception (local.get $var10))
                                ))
                        ;; finishIfBlock
                        ;; Start else
                        )(else
                        (local.set $var1 (struct.new $java$lang$NullPointerException (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)) (ref.func $java$lang$NullPointerException_vt) (ref.null noextern) (struct.get $java$lang$NullPointerException_rtt $classImplTypes (global.get $java$lang$NullPointerException_cls)) (ref.null none) (ref.null none) (i32.const 0) (ref.null none)))
                        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_63)))
                        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                        (throw $javaexception (local.get $var1))
                        ))
                ;; finishIfBlock
                ;; Start else
                )(else
                (local.set $var5 (struct.new $java$lang$NullPointerException (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)) (ref.func $java$lang$NullPointerException_vt) (ref.null noextern) (struct.get $java$lang$NullPointerException_rtt $classImplTypes (global.get $java$lang$NullPointerException_cls)) (ref.null none) (ref.null none) (i32.const 0) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var5)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var5)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var5))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$io$OutputStreamWriter$Ljava$lang$Object$$lockFor$Ljava$io$OutputStreamWriter$ (type $t559) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $phi5 (ref null $java$lang$Object))
        (local $phi6 (ref null $java$lang$Object))
        (local $phi7 (ref null $java$lang$Object))
        (local.set $var0 (call $runtimetypeof (local.get $arg0)))
        ;; startBlock type=NORMAL, label = If_7_0
        (block $If_7_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (ref.eq (local.get $var0) (global.get $java$io$OutputStreamWriter_cls))
                (then
                    (local.set $phi1 (local.get $arg0))
                    (local.set $phi2 (local.get $var0))
                    (br $If_7_0)
                    ;; Start else
                    )(else
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (select (i32.const 0) (i32.const 1) (ref.eq (local.get $var0) (global.get $java$io$FileWriter_cls)))
                        (then
                            (return (local.get $arg0))
                            ;; Start else
                            )(else
                            (local.set $phi1 (local.get $arg0))
                            (local.set $phi2 (local.get $var0))
                            (br $If_7_0)
                            ))
                    ;; finishIfBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (local.set $var3 (local.get $phi1))
        (drop (call $jdk$internal$misc$InternalLock_i))
        (drop (call $jdk$internal$misc$InternalLock_i))
        ;; startBlock type=NORMAL, label = If_28_0
        (block $If_28_0
            ;; writeIfAndStartTrueBlock
            (if $if2 (i32.eq (struct.get $jdk$internal$misc$InternalLock_rtt $CAN_USE_INTERNAL_LOCK (global.get $jdk$internal$misc$InternalLock_cls)) (i32.const 0))
                (then
                    (local.set $phi5 (local.get $var3))
                    (local.set $phi6 (local.get $var3))
                    (br $If_28_0)
                    ;; Start else
                    )(else
                    (drop (call $jdk$internal$misc$InternalLock_i))
                    (local.set $var4 (struct.new $jdk$internal$misc$InternalLock (struct.get $jdk$internal$misc$InternalLock_rtt $factoryFor (global.get $jdk$internal$misc$InternalLock_cls)) (ref.func $jdk$internal$misc$InternalLock_vt) (ref.null noextern) (struct.get $jdk$internal$misc$InternalLock_rtt $classImplTypes (global.get $jdk$internal$misc$InternalLock_cls)) (ref.null none)))
                    (struct.set $jdk$internal$misc$InternalLock $lock (ref.cast (ref null $jdk$internal$misc$InternalLock) (local.get $var4)) (ref.cast (ref null $java$lang$Object) (struct.new $java$util$concurrent$locks$ReentrantLock (struct.get $java$util$concurrent$locks$ReentrantLock_rtt $factoryFor (global.get $java$util$concurrent$locks$ReentrantLock_cls)) (ref.func $java$util$concurrent$locks$ReentrantLock_vt) (ref.null noextern) (struct.get $java$util$concurrent$locks$ReentrantLock_rtt $classImplTypes (global.get $java$util$concurrent$locks$ReentrantLock_cls)))))
                    ;; Here was a goto statement
                    (local.set $phi5 (local.get $var3))
                    (local.set $phi6 (local.get $var4))
                    (br $If_28_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (local.set $phi7 (local.get $phi6))
        (return (local.get $phi7))
        (unreachable))
    (func $java$io$FileInputStream$V$$init$$Ljava$io$FileDescriptor$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg0)))
            (then
                (struct.set $java$io$FileInputStream $fd (ref.cast (ref null $java$io$FileInputStream) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
                (struct.set $java$io$FileInputStream $path (ref.cast (ref null $java$io$FileInputStream) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (return)
                ;; Start else
                )(else
                (local.set $var1 (struct.new $java$lang$NullPointerException (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)) (ref.func $java$lang$NullPointerException_vt) (ref.null noextern) (struct.get $java$lang$NullPointerException_rtt $classImplTypes (global.get $java$lang$NullPointerException_cls)) (ref.null none) (ref.null none) (i32.const 0) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var1))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $sun$nio$cs$StreamEncoder$V$$clinit$$$ (type $t541) (param $unused (ref null $java$lang$Object))
        (local $phi0 i32)
        ;; startBlock type=NORMAL, label = If_4_0
        (block $If_4_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ne (call $java$lang$Class$Z$desiredAssertionStatus$$ (call $sun$nio$cs$StreamEncoder_i)) (i32.const 0))
                (then
                    (local.set $phi0 (i32.const 0))
                    (br $If_4_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi0 (i32.const 1))
                    (br $If_4_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (drop (call $sun$nio$cs$StreamEncoder_i))
        (struct.set $sun$nio$cs$StreamEncoder_rtt $$assertionsDisabled (ref.cast (ref null $sun$nio$cs$StreamEncoder_rtt) (call $sun$nio$cs$StreamEncoder_i)) (local.get $phi0))
        (return)
        (unreachable))
    (func $sun$nio$cs$StreamEncoder$Lsun$nio$cs$StreamEncoder$$forOutputStreamWriter$Ljava$io$OutputStream$$Ljava$lang$Object$$Ljava$nio$charset$Charset$ (type $t571) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object)) (param $arg2 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $phi6 (ref null $java$lang$Object))
        (drop (call $sun$nio$cs$StreamEncoder_i))
        (local.set $var0 (struct.new $sun$nio$cs$StreamEncoder (struct.get $sun$nio$cs$StreamEncoder_rtt $factoryFor (global.get $sun$nio$cs$StreamEncoder_cls)) (ref.func $sun$nio$cs$StreamEncoder_vt) (ref.null noextern) (struct.get $sun$nio$cs$StreamEncoder_rtt $classImplTypes (global.get $sun$nio$cs$StreamEncoder_cls)) (ref.null none) (i32.const 0) (ref.null none) (ref.null none) (ref.null none) (ref.null none) (ref.null none) (ref.null none) (i32.const 0)))
        (local.set $var1 (call_indirect (type $t553) (local.get $arg2) (call_ref $t0 (i32.const 133) (struct.get $java$lang$Object $vt_resolver (local.get $arg2)))))
        (drop (call $java$nio$charset$CodingErrorAction_i))
        (local.set $var2 (struct.get $java$nio$charset$CodingErrorAction_rtt $REPLACE (global.get $java$nio$charset$CodingErrorAction_cls)))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var2)))
            (then
                (struct.set $java$nio$charset$CharsetEncoder $malformedInputAction (ref.cast (ref null $java$nio$charset$CharsetEncoder) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (local.get $var2)))
                (local.set $phi6 (local.get $var1))
                (local.set $var3 (local.get $phi6))
                (drop (call $java$nio$charset$CodingErrorAction_i))
                (local.set $var4 (struct.get $java$nio$charset$CodingErrorAction_rtt $REPLACE (global.get $java$nio$charset$CodingErrorAction_cls)))
                (call $sun$nio$cs$StreamEncoder$V$$init$$Ljava$io$OutputStream$$Ljava$lang$Object$$Ljava$nio$charset$CharsetEncoder$ (local.get $var0) (local.get $arg0) (local.get $arg1) (call $java$nio$charset$CharsetEncoder$Ljava$nio$charset$CharsetEncoder$$onUnmappableCharacter$Ljava$nio$charset$CodingErrorAction$ (local.get $var3) (local.get $var4)))
                (return (local.get $var0))
                ;; Start else
                )(else
                (local.set $var5 (struct.new $java$lang$IllegalArgumentException (struct.get $java$lang$IllegalArgumentException_rtt $factoryFor (global.get $java$lang$IllegalArgumentException_cls)) (ref.func $java$lang$IllegalArgumentException_vt) (ref.null noextern) (struct.get $java$lang$IllegalArgumentException_rtt $classImplTypes (global.get $java$lang$IllegalArgumentException_cls)) (ref.null none) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var5)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_19)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var5)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var5))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $sun$nio$cs$StreamEncoder$V$$init$$Ljava$io$OutputStream$$Ljava$lang$Object$$Ljava$nio$charset$Charset$ (type $t623) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object)) (param $arg2 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $phi6 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (call_indirect (type $t553) (local.get $arg2) (call_ref $t0 (i32.const 133) (struct.get $java$lang$Object $vt_resolver (local.get $arg2)))))
        (drop (call $java$nio$charset$CodingErrorAction_i))
        (local.set $var2 (struct.get $java$nio$charset$CodingErrorAction_rtt $REPLACE (global.get $java$nio$charset$CodingErrorAction_cls)))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var2)))
            (then
                (struct.set $java$nio$charset$CharsetEncoder $malformedInputAction (ref.cast (ref null $java$nio$charset$CharsetEncoder) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (local.get $var2)))
                (local.set $phi6 (local.get $var1))
                (local.set $var3 (local.get $phi6))
                (drop (call $java$nio$charset$CodingErrorAction_i))
                (local.set $var4 (struct.get $java$nio$charset$CodingErrorAction_rtt $REPLACE (global.get $java$nio$charset$CodingErrorAction_cls)))
                (call $sun$nio$cs$StreamEncoder$V$$init$$Ljava$io$OutputStream$$Ljava$lang$Object$$Ljava$nio$charset$CharsetEncoder$ (local.get $var0) (local.get $arg0) (local.get $arg1) (call $java$nio$charset$CharsetEncoder$Ljava$nio$charset$CharsetEncoder$$onUnmappableCharacter$Ljava$nio$charset$CodingErrorAction$ (local.get $var3) (local.get $var4)))
                (return)
                ;; Start else
                )(else
                (local.set $var5 (struct.new $java$lang$IllegalArgumentException (struct.get $java$lang$IllegalArgumentException_rtt $factoryFor (global.get $java$lang$IllegalArgumentException_cls)) (ref.func $java$lang$IllegalArgumentException_vt) (ref.null noextern) (struct.get $java$lang$IllegalArgumentException_rtt $classImplTypes (global.get $java$lang$IllegalArgumentException_cls)) (ref.null none) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var5)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_19)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var5)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var5))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $sun$nio$cs$StreamEncoder$V$$init$$Ljava$io$OutputStream$$Ljava$lang$Object$$Ljava$nio$charset$CharsetEncoder$ (type $t623) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object)) (param $arg2 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg1)))
            (then
                (struct.set $java$io$Writer $lock (ref.cast (ref null $java$io$Writer) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg1)))
                (struct.set $sun$nio$cs$StreamEncoder $haveLeftoverChar (ref.cast (ref null $sun$nio$cs$StreamEncoder) (local.get $var0)) (i32.const 0))
                (struct.set $sun$nio$cs$StreamEncoder $lcb (ref.cast (ref null $sun$nio$cs$StreamEncoder) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (struct.set $sun$nio$cs$StreamEncoder $out (ref.cast (ref null $sun$nio$cs$StreamEncoder) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
                (struct.set $sun$nio$cs$StreamEncoder $ch (ref.cast (ref null $sun$nio$cs$StreamEncoder) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (struct.set $sun$nio$cs$StreamEncoder $cs (ref.cast (ref null $sun$nio$cs$StreamEncoder) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (call $java$nio$charset$CharsetEncoder$Ljava$nio$charset$Charset$$charset$$ (local.get $arg2))))
                (struct.set $sun$nio$cs$StreamEncoder $encoder (ref.cast (ref null $sun$nio$cs$StreamEncoder) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg2)))
                (drop (call $java$nio$ByteBuffer_i))
                ;; writeIfAndStartTrueBlock
                (if $if1 (i32.ge_s (i32.const 512) (i32.const 0))
                    (then
                        (drop (call $java$nio$HeapByteBuffer_i))
                        (local.set $var1 (struct.new $java$nio$HeapByteBuffer (struct.get $java$nio$HeapByteBuffer_rtt $factoryFor (global.get $java$nio$HeapByteBuffer_cls)) (ref.func $java$nio$HeapByteBuffer_vt) (ref.null noextern) (struct.get $java$nio$HeapByteBuffer_rtt $classImplTypes (global.get $java$nio$HeapByteBuffer_cls)) (i32.const 0) (i32.const 0) (i32.const 0) (ref.null none) (i32.const 0) (i64.const 0) (i32.const 0) (i32.const 0) (ref.null none) (i32.const 0)))
                        (call $java$nio$ByteBuffer$V$$init$$I$I$I$I$$B$I$Ljava$lang$foreign$MemorySegment$ (local.get $var1) (i32.const -1) (i32.const 0) (i32.const 512) (i32.const 512) (struct.new $i32_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t7 (i32.const 512))) (i32.const 0) (ref.null none))
                        (drop (call $java$nio$HeapByteBuffer_i))
                        (struct.set $java$nio$Buffer $address (ref.cast (ref null $java$nio$Buffer) (local.get $var1)) (struct.get $java$nio$HeapByteBuffer_rtt $ARRAY_BASE_OFFSET (global.get $java$nio$HeapByteBuffer_cls)))
                        (local.set $phi2 (local.get $var1))
                        (struct.set $sun$nio$cs$StreamEncoder $bb (ref.cast (ref null $sun$nio$cs$StreamEncoder) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $phi2)))
                        (struct.set $sun$nio$cs$StreamEncoder $maxBufferCapacity (ref.cast (ref null $sun$nio$cs$StreamEncoder) (local.get $var0)) (i32.const 8192))
                        (return)
                        ;; Start else
                        )(else
                        (drop (call $java$nio$ByteBuffer_i))
                        (throw $javaexception (call $java$nio$Buffer$Ljava$lang$IllegalArgumentException$$createCapacityException$I (call $java$nio$ByteBuffer_i) (i32.const 512)))
                        ))
                ;; finishIfBlock
                ;; Start else
                )(else
                (local.set $var3 (struct.new $java$lang$NullPointerException (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)) (ref.func $java$lang$NullPointerException_vt) (ref.null noextern) (struct.get $java$lang$NullPointerException_rtt $classImplTypes (global.get $java$lang$NullPointerException_cls)) (ref.null none) (ref.null none) (i32.const 0) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var3)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var3)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var3))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$util$HashMap$TreeNode$V$$clinit$$$ (type $t541) (param $unused (ref null $java$lang$Object))
        (local $phi0 i32)
        ;; startBlock type=NORMAL, label = If_4_0
        (block $If_4_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ne (call $java$lang$Class$Z$desiredAssertionStatus$$ (global.get $java$util$HashMap_cls)) (i32.const 0))
                (then
                    (local.set $phi0 (i32.const 0))
                    (br $If_4_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi0 (i32.const 1))
                    (br $If_4_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (drop (call $java$util$HashMap$TreeNode_i))
        (struct.set $java$util$HashMap$TreeNode_rtt $$assertionsDisabled (ref.cast (ref null $java$util$HashMap$TreeNode_rtt) (call $java$util$HashMap$TreeNode_i)) (local.get $phi0))
        (return)
        (unreachable))
    (func $java$util$HashMap$TreeNode$V$split$Ljava$util$HashMap$$$Ljava$util$HashMap$Node$$I$I (type $t624) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object)) (param $arg2 i32) (param $arg3 i32)
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 (ref null $java$lang$Object))
        (local $phi4 (ref null $java$lang$Object))
        (local $phi5 i32)
        (local $phi6 i32)
        (local $phi7 (ref null $java$lang$Object))
        (local $var8 (ref null $java$lang$Object))
        (local $var9 (ref null $java$lang$Object))
        (local $var10 (ref null $java$lang$Object))
        (local $var11 (ref null $java$lang$Object))
        (local $var12 (ref null $java$lang$Object))
        (local $phi13 (ref null $java$lang$Object))
        (local $phi14 (ref null $java$lang$Object))
        (local $var15 (ref null $java$lang$Object))
        (local $phi16 (ref null $java$lang$Object))
        (local $var17 (ref null $java$lang$Object))
        (local $var18 (ref null $java$lang$Object))
        (local $var19 (ref null $java$lang$Object))
        (local $var20 (ref null $java$lang$Object))
        (local $var21 (ref null $java$lang$Object))
        (local $phi22 (ref null $java$lang$Object))
        (local $phi23 (ref null $java$lang$Object))
        (local $var24 (ref null $java$lang$Object))
        (local $var25 (ref null $java$lang$Object))
        (local $var26 (ref null $java$lang$Object))
        (local $var27 i32)
        (local $var28 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $phi1 (ref.null none))
        (local.set $phi2 (ref.null none))
        (local.set $phi3 (ref.null none))
        (local.set $phi4 (ref.null none))
        (local.set $phi5 (i32.const 0))
        (local.set $phi6 (i32.const 0))
        (local.set $phi7 (local.get $var0))
        ;; startBlock type=LOOP, label = L1465692216
        (loop $L1465692216
            ;; writeIfAndStartTrueBlock
            (if $if0 (ref.is_null (local.get $phi7))
                (then
                    ;; startBlock type=NORMAL, label = If_85_0
                    (block $If_85_0
                        ;; writeIfAndStartTrueBlock
                        (if $if1 (ref.is_null (local.get $phi1))
                            (then
                                (br $If_85_0)
                                ;; Start else
                                )(else
                                ;; writeIfAndStartTrueBlock
                                (if $if2 (i32.gt_s (local.get $phi5) (i32.const 6))
                                    (then
                                        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $arg1))) (local.get $arg2) (local.get $phi1))
                                        ;; writeIfAndStartTrueBlock
                                        (if $if3 (ref.is_null (local.get $phi3))
                                            (then
                                                (br $If_85_0)
                                                ;; Start else
                                                )(else
                                                (call_indirect (type $t556) (local.get $phi1) (local.get $arg1) (call_ref $t0 (i32.const 171) (struct.get $java$lang$Object $vt_resolver (local.get $phi1))))
                                                (br $If_85_0)
                                                ))
                                        ;; finishIfBlock
                                        ;; Start else
                                        )(else
                                        (local.set $var26 (local.get $phi1))
                                        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $arg1))) (local.get $arg2) (call_indirect (type $t559) (local.get $var26) (local.get $arg0) (call_ref $t0 (i32.const 170) (struct.get $java$lang$Object $vt_resolver (local.get $var26)))))
                                        ;; Here was a goto statement
                                        (br $If_85_0)
                                        ))
                                ;; finishIfBlock
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    ;; startBlock type=NORMAL, label = If_96_0
                    (block $If_96_0
                        ;; writeIfAndStartTrueBlock
                        (if $if4 (ref.is_null (local.get $phi3))
                            (then
                                (br $If_96_0)
                                ;; Start else
                                )(else
                                ;; writeIfAndStartTrueBlock
                                (if $if5 (i32.gt_s (local.get $phi6) (i32.const 6))
                                    (then
                                        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $arg1))) (i32.add (local.get $arg2) (local.get $arg3)) (local.get $phi3))
                                        ;; writeIfAndStartTrueBlock
                                        (if $if6 (ref.is_null (local.get $phi1))
                                            (then
                                                (br $If_96_0)
                                                ;; Start else
                                                )(else
                                                (call_indirect (type $t556) (local.get $phi3) (local.get $arg1) (call_ref $t0 (i32.const 171) (struct.get $java$lang$Object $vt_resolver (local.get $phi3))))
                                                (br $If_96_0)
                                                ))
                                        ;; finishIfBlock
                                        ;; Start else
                                        )(else
                                        (local.set $var27 (i32.add (local.get $arg2) (local.get $arg3)))
                                        (local.set $var28 (local.get $phi3))
                                        (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $arg1))) (local.get $var27) (call_indirect (type $t559) (local.get $var28) (local.get $arg0) (call_ref $t0 (i32.const 170) (struct.get $java$lang$Object $vt_resolver (local.get $var28)))))
                                        ;; Here was a goto statement
                                        (br $If_96_0)
                                        ))
                                ;; finishIfBlock
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    (return)
                    ;; Start else
                    )(else
                    (local.set $var8 (ref.cast (ref null $java$lang$Object) (struct.get $java$util$HashMap$Node $next (ref.cast (ref null $java$util$HashMap$Node) (local.get $phi7)))))
                    (local.set $var9 (local.get $phi7))
                    (struct.set $java$util$HashMap$Node $next (ref.cast (ref null $java$util$HashMap$Node) (local.get $var9)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                    ;; startBlock type=NORMAL, label = If_34_0
                    (block $If_34_0
                        ;; writeIfAndStartTrueBlock
                        (if $if7 (i32.ne (i32.and (struct.get $java$util$HashMap$Node $hash (ref.cast (ref null $java$util$HashMap$Node) (local.get $phi7))) (local.get $arg3)) (i32.const 0))
                            (then
                                (local.set $var19 (local.get $phi7))
                                (local.set $var20 (local.get $phi4))
                                (struct.set $java$util$HashMap$TreeNode $prev (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var19)) (ref.cast (ref null $java$lang$Object) (local.get $var20)))
                                ;; startBlock type=NORMAL, label = If_69_0
                                (block $If_69_0
                                    ;; writeIfAndStartTrueBlock
                                    (if $if8 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var20)))
                                        (then
                                            (local.set $var25 (local.get $phi4))
                                            (struct.set $java$util$HashMap$Node $next (ref.cast (ref null $java$util$HashMap$Node) (local.get $var25)) (ref.cast (ref null $java$lang$Object) (local.get $phi7)))
                                            (local.set $phi22 (local.get $phi3))
                                            (local.set $phi23 (local.get $var8))
                                            (br $If_69_0)
                                            ;; Start else
                                            )(else
                                            (local.set $var21 (local.get $phi7))
                                            ;; Here was a goto statement
                                            (local.set $phi22 (local.get $var21))
                                            (local.set $phi23 (local.get $var8))
                                            (br $If_69_0)
                                            ))
                                    ;; finishIfBlock
                                    )
                                ;; finishBlock
                                (local.set $var24 (local.get $phi7))
                                (local.set $phi6 (i32.add (local.get $phi6) (i32.const 1)))
                                (local.set $phi13 (local.get $phi1))
                                (local.set $phi16 (local.get $phi2))
                                (local.set $phi3 (local.get $phi22))
                                (local.set $phi4 (local.get $var24))
                                (local.set $phi14 (local.get $phi23))
                                (br $If_34_0)
                                ;; Start else
                                )(else
                                (local.set $var10 (local.get $phi7))
                                (local.set $var11 (local.get $phi2))
                                (struct.set $java$util$HashMap$TreeNode $prev (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var10)) (ref.cast (ref null $java$lang$Object) (local.get $var11)))
                                ;; startBlock type=NORMAL, label = If_42_0
                                (block $If_42_0
                                    ;; writeIfAndStartTrueBlock
                                    (if $if9 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var11)))
                                        (then
                                            (local.set $var18 (local.get $phi2))
                                            (struct.set $java$util$HashMap$Node $next (ref.cast (ref null $java$util$HashMap$Node) (local.get $var18)) (ref.cast (ref null $java$lang$Object) (local.get $phi7)))
                                            (local.set $phi13 (local.get $phi1))
                                            (local.set $phi14 (local.get $var8))
                                            (br $If_42_0)
                                            ;; Start else
                                            )(else
                                            (local.set $var12 (local.get $phi7))
                                            ;; Here was a goto statement
                                            (local.set $phi13 (local.get $var12))
                                            (local.set $phi14 (local.get $var8))
                                            (br $If_42_0)
                                            ))
                                    ;; finishIfBlock
                                    )
                                ;; finishBlock
                                (local.set $var15 (local.get $phi7))
                                (local.set $phi5 (i32.add (local.get $phi5) (i32.const 1)))
                                ;; Here was a goto statement
                                (local.set $phi16 (local.get $var15))
                                (br $If_34_0)
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    (local.set $var17 (local.get $phi14))
                    ;; Here was a goto statement
                    (local.set $phi1 (local.get $phi13))
                    (local.set $phi2 (local.get $phi16))
                    (local.set $phi7 (local.get $var17))
                    (br $L1465692216)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (unreachable))
    (func $java$util$HashMap$TreeNode$Ljava$util$HashMap$Node$$untreeify$Ljava$util$HashMap$ (type $t559) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $phi6 (ref null $java$lang$Object))
        (local $phi7 (ref null $java$lang$Object))
        (local $var8 (ref null $java$lang$Object))
        (local $var9 (ref null $java$lang$Object))
        (local $var10 (ref null $java$lang$Object))
        (local $var11 (ref null $java$lang$Object))
        (local $phi12 (ref null $java$lang$Object))
        (local $var13 i32)
        (local $var14 (ref null $java$lang$Object))
        (local $var15 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $phi1 (ref.null none))
        (local.set $phi2 (ref.null none))
        (local.set $phi3 (local.get $var0))
        ;; startBlock type=LOOP, label = L951658125
        (loop $L951658125
            ;; writeIfAndStartTrueBlock
            (if $if0 (ref.is_null (local.get $phi3))
                (then
                    (return (local.get $phi1))
                    ;; Start else
                    )(else
                    (local.set $var4 (local.get $phi3))
                    (local.set $var11 (struct.new $java$util$HashMap$Node (struct.get $java$util$HashMap$Node_rtt $factoryFor (global.get $java$util$HashMap$Node_cls)) (ref.func $java$util$HashMap$Node_vt) (ref.null noextern) (struct.get $java$util$HashMap$Node_rtt $classImplTypes (global.get $java$util$HashMap$Node_cls)) (ref.null none) (i32.const 0) (ref.null none) (ref.null none)))
                    (local.set $var13 (struct.get $java$util$HashMap$Node $hash (ref.cast (ref null $java$util$HashMap$Node) (local.get $var4))))
                    (local.set $var14 (struct.get $java$util$HashMap$Node $key (ref.cast (ref null $java$util$HashMap$Node) (local.get $var4))))
                    (local.set $var15 (struct.get $java$util$HashMap$Node $value (ref.cast (ref null $java$util$HashMap$Node) (local.get $var4))))
                    (struct.set $java$util$HashMap$Node $hash (ref.cast (ref null $java$util$HashMap$Node) (local.get $var11)) (local.get $var13))
                    (struct.set $java$util$HashMap$Node $key (ref.cast (ref null $java$util$HashMap$Node) (local.get $var11)) (ref.cast (ref null $java$lang$Object) (local.get $var14)))
                    (struct.set $java$util$HashMap$Node $value (ref.cast (ref null $java$util$HashMap$Node) (local.get $var11)) (ref.cast (ref null $java$lang$Object) (local.get $var15)))
                    (struct.set $java$util$HashMap$Node $next (ref.cast (ref null $java$util$HashMap$Node) (local.get $var11)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                    (local.set $phi12 (local.get $var11))
                    (local.set $var5 (local.get $phi12))
                    ;; startBlock type=NORMAL, label = If_17_0
                    (block $If_17_0
                        ;; writeIfAndStartTrueBlock
                        (if $if1 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $phi2)))
                            (then
                                (local.set $var10 (local.get $phi2))
                                (struct.set $java$util$HashMap$Node $next (ref.cast (ref null $java$util$HashMap$Node) (local.get $var10)) (ref.cast (ref null $java$lang$Object) (local.get $var5)))
                                (local.set $phi6 (local.get $phi1))
                                (local.set $phi7 (local.get $var5))
                                (br $If_17_0)
                                ;; Start else
                                )(else
                                ;; Here was a goto statement
                                (local.set $phi6 (local.get $var5))
                                (local.set $phi7 (local.get $var5))
                                (br $If_17_0)
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    (local.set $var8 (local.get $phi7))
                    (local.set $var9 (struct.get $java$util$HashMap$Node $next (ref.cast (ref null $java$util$HashMap$Node) (local.get $phi3))))
                    ;; Here was a goto statement
                    (local.set $phi1 (local.get $phi6))
                    (local.set $phi2 (local.get $var8))
                    (local.set $phi3 (local.get $var9))
                    (br $L951658125)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (unreachable))
    (func $java$util$HashMap$TreeNode$V$treeify$$Ljava$util$HashMap$Node$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $var6 (ref null $java$lang$Object))
        (local $var7 (ref null $java$lang$Object))
        (local $var8 (ref null $java$lang$Object))
        (local $phi9 (ref null $java$lang$Object))
        (local $phi10 (ref null $java$lang$Object))
        (local $var11 (ref null $java$lang$Object))
        (local $var12 (ref null $java$lang$Object))
        (local $var13 i32)
        (local $var14 (ref null $java$lang$Object))
        (local $phi15 (ref null $java$lang$Object))
        (local $phi16 (ref null $java$lang$Object))
        (local $phi17 i32)
        (local $phi18 (ref null $java$lang$Object))
        (local $phi19 (ref null $java$lang$Object))
        (local $var20 (ref null $java$lang$Object))
        (local $var21 i32)
        (local $phi22 i32)
        (local $phi23 i32)
        (local $phi24 (ref null $java$lang$Object))
        (local $var25 (ref null $java$lang$Object))
        (local $var26 (ref null $java$lang$Object))
        (local $phi27 (ref null $java$lang$Object))
        (local $phi28 (ref null $java$lang$Object))
        (local $var29 (ref null $java$lang$Object))
        (local $var30 (ref null $java$lang$Object))
        (local $var31 (ref null $java$lang$Object))
        (local $phi32 (ref null $java$lang$Object))
        (local $var33 (ref null $java$lang$Object))
        (local $var34 (ref null $java$lang$Object))
        (local $var35 (ref null $java$lang$Object))
        (local $var36 (ref null $java$lang$Object))
        (local $var37 (ref null $java$lang$Object))
        (local $var38 (ref null $java$lang$Object))
        (local $var39 (ref null $java$lang$Object))
        (local $phi40 (ref null $java$lang$Object))
        (local $phi41 i32)
        (local $phi42 (ref null $java$lang$Object))
        (local $var43 (ref null $java$lang$Object))
        (local $var44 (ref null $java$lang$Object))
        (local $var45 (ref null $java$lang$Object))
        (local $var46 i32)
        (local $phi47 i32)
        (local $var48 (ref null $java$lang$Object))
        (local $var49 (ref null $java$lang$Object))
        (local $var50 i32)
        (local $var51 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $phi1 (ref.null none))
        (local.set $phi2 (local.get $var0))
        ;; startBlock type=LOOP, label = L216364583
        (loop $L216364583
            ;; writeIfAndStartTrueBlock
            (if $if0 (ref.is_null (local.get $phi2))
                (then
                    (local.set $var51 (local.get $phi1))
                    (drop (call $java$util$HashMap$TreeNode_i))
                    (call $java$util$HashMap$TreeNode$V$moveRootToFront$$Ljava$util$HashMap$Node$$Ljava$util$HashMap$TreeNode$ (call $java$util$HashMap$TreeNode_i) (local.get $arg0) (local.get $var51))
                    (return)
                    ;; Start else
                    )(else
                    (local.set $var3 (ref.cast (ref null $java$lang$Object) (struct.get $java$util$HashMap$Node $next (ref.cast (ref null $java$util$HashMap$Node) (local.get $phi2)))))
                    (local.set $var4 (local.get $phi2))
                    (local.set $var5 (local.get $phi2))
                    (struct.set $java$util$HashMap$TreeNode $right (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var5)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                    (struct.set $java$util$HashMap$TreeNode $left (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var4)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                    ;; startBlock type=NORMAL, label = If_22_0
                    (block $If_22_0
                        ;; writeIfAndStartTrueBlock
                        (if $if1 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $phi1)))
                            (then
                                (local.set $var12 (struct.get $java$util$HashMap$Node $key (ref.cast (ref null $java$util$HashMap$Node) (local.get $phi2))))
                                (local.set $var13 (struct.get $java$util$HashMap$Node $hash (ref.cast (ref null $java$util$HashMap$Node) (local.get $phi2))))
                                (local.set $var14 (local.get $phi1))
                                (local.set $phi15 (local.get $var3))
                                (local.set $phi16 (local.get $var12))
                                (local.set $phi17 (local.get $var13))
                                (local.set $phi18 (ref.null none))
                                (local.set $phi19 (local.get $var14))
                                ;; startBlock type=LOOP, label = L1099412239
                                (loop $L1099412239
                                    (local.set $var20 (struct.get $java$util$HashMap$Node $key (ref.cast (ref null $java$util$HashMap$Node) (local.get $phi19))))
                                    (local.set $var21 (struct.get $java$util$HashMap$Node $hash (ref.cast (ref null $java$util$HashMap$Node) (local.get $phi19))))
                                    ;; startBlock type=NORMAL, label = If_62_0
                                    (block $If_62_0
                                        ;; writeIfAndStartTrueBlock
                                        (if $if2 (i32.le_s (local.get $var21) (local.get $phi17))
                                            (then
                                                ;; writeIfAndStartTrueBlock
                                                (if $if3 (i32.ge_s (local.get $var21) (local.get $phi17))
                                                    (then
                                                        ;; startBlock type=NORMAL, label = If_119_0
                                                        (block $If_119_0
                                                            ;; startBlock type=NORMAL, label = If_119_1
                                                            (block $If_119_1
                                                                ;; writeIfAndStartTrueBlock
                                                                (if $if4 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $phi18)))
                                                                    (then
                                                                        (local.set $phi40 (local.get $phi18))
                                                                        (local.set $phi41 (local.get $var21))
                                                                        (local.set $phi42 (local.get $var20))
                                                                        (br $If_119_1)
                                                                        ;; Start else
                                                                        )(else
                                                                        (local.set $var38 (local.get $phi16))
                                                                        (local.set $var39 (call $java$util$HashMap$Ljava$lang$Class$$comparableClassFor$Ljava$lang$Object$ (global.get $java$util$HashMap_cls) (local.get $var38)))
                                                                        ;; writeIfAndStartTrueBlock
                                                                        (if $if5 (ref.is_null (local.get $var39))
                                                                            (then
                                                                                (local.set $phi40 (local.get $var39))
                                                                                (local.set $phi41 (local.get $var21))
                                                                                (local.set $phi42 (local.get $var20))
                                                                                (br $If_119_0)
                                                                                ;; Start else
                                                                                )(else
                                                                                (local.set $phi40 (local.get $var39))
                                                                                (local.set $phi41 (local.get $var21))
                                                                                (local.set $phi42 (local.get $var20))
                                                                                (br $If_119_1)
                                                                                ))
                                                                        ;; finishIfBlock
                                                                        ))
                                                                ;; finishIfBlock
                                                                )
                                                            ;; finishBlock
                                                            (local.set $var43 (local.get $phi40))
                                                            (local.set $var44 (local.get $phi16))
                                                            (local.set $var45 (local.get $phi42))
                                                            (local.set $var46 (call $java$util$HashMap$I$compareComparables$Ljava$lang$Class$$Ljava$lang$Object$$Ljava$lang$Object$ (global.get $java$util$HashMap_cls) (local.get $var43) (local.get $var44) (local.get $var45)))
                                                            ;; writeIfAndStartTrueBlock
                                                            (if $if6 (i32.ne (local.get $var46) (i32.const 0))
                                                                (then
                                                                    (local.set $phi18 (local.get $phi40))
                                                                    (local.set $phi22 (local.get $var46))
                                                                    (local.set $phi23 (local.get $phi41))
                                                                    (local.set $phi24 (local.get $phi42))
                                                                    (br $If_62_0)
                                                                    ;; Start else
                                                                    )(else
                                                                    (local.set $phi47 (local.get $var46))
                                                                    (br $If_119_0)
                                                                    ))
                                                            ;; finishIfBlock
                                                            )
                                                        ;; finishBlock
                                                        (local.set $var48 (local.get $phi16))
                                                        (local.set $var49 (local.get $phi42))
                                                        (drop (call $java$util$HashMap$TreeNode_i))
                                                        (local.set $var50 (call $java$util$HashMap$TreeNode$I$tieBreakOrder$Ljava$lang$Object$$Ljava$lang$Object$ (call $java$util$HashMap$TreeNode_i) (local.get $var48) (local.get $var49)))
                                                        (local.set $phi18 (local.get $phi40))
                                                        (local.set $phi22 (local.get $var50))
                                                        (local.set $phi23 (local.get $phi41))
                                                        (local.set $phi24 (local.get $phi42))
                                                        (br $If_62_0)
                                                        ;; Start else
                                                        )(else
                                                        ;; Here was a goto statement
                                                        (local.set $phi22 (i32.const 1))
                                                        (local.set $phi23 (local.get $var21))
                                                        (local.set $phi24 (local.get $var20))
                                                        (br $If_62_0)
                                                        ))
                                                ;; finishIfBlock
                                                ;; Start else
                                                )(else
                                                ;; Here was a goto statement
                                                (local.set $phi22 (i32.const -1))
                                                (local.set $phi23 (local.get $var21))
                                                (local.set $phi24 (local.get $var20))
                                                (br $If_62_0)
                                                ))
                                        ;; finishIfBlock
                                        )
                                    ;; finishBlock
                                    (local.set $var25 (local.get $phi19))
                                    ;; startBlock type=NORMAL, label = If_72_0
                                    (block $If_72_0
                                        ;; writeIfAndStartTrueBlock
                                        (if $if7 (i32.gt_s (local.get $phi22) (i32.const 0))
                                            (then
                                                (local.set $var37 (struct.get $java$util$HashMap$TreeNode $right (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $phi19))))
                                                (local.set $phi27 (local.get $var25))
                                                (local.set $phi28 (local.get $var37))
                                                (br $If_72_0)
                                                ;; Start else
                                                )(else
                                                (local.set $var26 (struct.get $java$util$HashMap$TreeNode $left (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $phi19))))
                                                ;; Here was a goto statement
                                                (local.set $phi27 (local.get $var25))
                                                (local.set $phi28 (local.get $var26))
                                                (br $If_72_0)
                                                ))
                                        ;; finishIfBlock
                                        )
                                    ;; finishBlock
                                    (local.set $var29 (local.get $phi28))
                                    ;; writeIfAndStartTrueBlock
                                    (if $if8 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $phi28)))
                                        (then
                                            ;; Here was a goto statement
                                            (local.set $phi19 (local.get $var29))
                                            (br $L1099412239)
                                            ;; Start else
                                            )(else
                                            (local.set $var30 (local.get $phi2))
                                            (struct.set $java$util$HashMap$TreeNode $parent (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var30)) (ref.cast (ref null $java$lang$Object) (local.get $phi27)))
                                            ;; startBlock type=NORMAL, label = If_89_0
                                            (block $If_89_0
                                                ;; writeIfAndStartTrueBlock
                                                (if $if9 (i32.gt_s (local.get $phi22) (i32.const 0))
                                                    (then
                                                        (local.set $var36 (local.get $phi27))
                                                        (struct.set $java$util$HashMap$TreeNode $right (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var36)) (ref.cast (ref null $java$lang$Object) (local.get $phi2)))
                                                        (local.set $phi32 (local.get $var29))
                                                        (br $If_89_0)
                                                        ;; Start else
                                                        )(else
                                                        (local.set $var31 (local.get $phi27))
                                                        (struct.set $java$util$HashMap$TreeNode $left (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var31)) (ref.cast (ref null $java$lang$Object) (local.get $phi2)))
                                                        ;; Here was a goto statement
                                                        (local.set $phi32 (local.get $var29))
                                                        (br $If_89_0)
                                                        ))
                                                ;; finishIfBlock
                                                )
                                            ;; finishBlock
                                            (local.set $var33 (local.get $phi1))
                                            (local.set $var34 (local.get $phi2))
                                            (drop (call $java$util$HashMap$TreeNode_i))
                                            (local.set $var35 (call $java$util$HashMap$TreeNode$Ljava$util$HashMap$TreeNode$$balanceInsertion$Ljava$util$HashMap$TreeNode$$Ljava$util$HashMap$TreeNode$ (call $java$util$HashMap$TreeNode_i) (local.get $var33) (local.get $var34)))
                                            ;; Here was a goto statement
                                            (local.set $phi9 (local.get $var35))
                                            (local.set $phi10 (local.get $phi15))
                                            (br $If_22_0)
                                            ))
                                    ;; finishIfBlock
                                    )
                                ;; finishBlock
                                ;; Start else
                                )(else
                                (local.set $var6 (local.get $phi2))
                                (struct.set $java$util$HashMap$TreeNode $parent (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var6)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                (local.set $var7 (local.get $phi2))
                                (struct.set $java$util$HashMap$TreeNode $red (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var7)) (i32.const 0))
                                (local.set $var8 (local.get $phi2))
                                ;; Here was a goto statement
                                (local.set $phi9 (local.get $var8))
                                (local.set $phi10 (local.get $var3))
                                (br $If_22_0)
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    (local.set $var11 (local.get $phi10))
                    ;; Here was a goto statement
                    (local.set $phi1 (local.get $phi9))
                    (local.set $phi2 (local.get $var11))
                    (br $L216364583)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (unreachable))
    (func $java$util$HashMap$TreeNode$Ljava$util$HashMap$TreeNode$$balanceInsertion$Ljava$util$HashMap$TreeNode$$Ljava$util$HashMap$TreeNode$ (type $t561) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $phi0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $phi5 (ref null $java$lang$Object))
        (local $var6 (ref null $java$lang$Object))
        (local $var7 (ref null $java$lang$Object))
        (local $phi8 (ref null $java$lang$Object))
        (local $phi9 (ref null $java$lang$Object))
        (local $phi10 (ref null $java$lang$Object))
        (local $phi11 (ref null $java$lang$Object))
        (local $var12 (ref null $java$lang$Object))
        (local $var13 (ref null $java$lang$Object))
        (local $var14 (ref null $java$lang$Object))
        (local $var15 (ref null $java$lang$Object))
        (local $phi16 (ref null $java$lang$Object))
        (local $phi17 (ref null $java$lang$Object))
        (local $phi18 (ref null $java$lang$Object))
        (local $phi19 (ref null $java$lang$Object))
        (local $phi20 (ref null $java$lang$Object))
        (local $var21 (ref null $java$lang$Object))
        (local $var22 (ref null $java$lang$Object))
        (local $var23 (ref null $java$lang$Object))
        (local $var24 (ref null $java$lang$Object))
        (local $var25 (ref null $java$lang$Object))
        (local $var26 (ref null $java$lang$Object))
        (local $phi27 (ref null $java$lang$Object))
        (local $phi28 (ref null $java$lang$Object))
        (local $phi29 (ref null $java$lang$Object))
        (local $var30 (ref null $java$lang$Object))
        (local $var31 (ref null $java$lang$Object))
        (local $var32 (ref null $java$lang$Object))
        (local $var33 (ref null $java$lang$Object))
        (local $phi34 (ref null $java$lang$Object))
        (local $phi35 (ref null $java$lang$Object))
        (local $phi36 (ref null $java$lang$Object))
        (local $phi37 (ref null $java$lang$Object))
        (local $phi38 (ref null $java$lang$Object))
        (local $var39 (ref null $java$lang$Object))
        (local $var40 (ref null $java$lang$Object))
        (local $var41 (ref null $java$lang$Object))
        (local $var42 (ref null $java$lang$Object))
        (local $var43 (ref null $java$lang$Object))
        (local $var44 (ref null $java$lang$Object))
        (struct.set $java$util$HashMap$TreeNode $red (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $arg1)) (i32.const 1))
        (local.set $phi0 (local.get $arg0))
        (local.set $phi1 (local.get $arg1))
        ;; startBlock type=LOOP, label = L1542253985
        (loop $L1542253985
            (local.set $var2 (struct.get $java$util$HashMap$TreeNode $parent (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $phi1))))
            ;; writeIfAndStartTrueBlock
            (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var2)))
                (then
                    ;; startBlock type=NORMAL, label = If_19_0
                    (block $If_19_0
                        ;; writeIfAndStartTrueBlock
                        (if $if1 (i32.eq (struct.get $java$util$HashMap$TreeNode $red (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var2))) (i32.const 0))
                            (then
                                (local.set $phi5 (local.get $var2))
                                (br $If_19_0)
                                ;; Start else
                                )(else
                                (local.set $var4 (struct.get $java$util$HashMap$TreeNode $parent (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var2))))
                                ;; writeIfAndStartTrueBlock
                                (if $if2 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var4)))
                                    (then
                                        (local.set $var6 (struct.get $java$util$HashMap$TreeNode $left (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var4))))
                                        ;; writeIfAndStartTrueBlock
                                        (if $if3 (select (i32.const 0) (i32.const 1) (ref.eq (local.get $var2) (local.get $var6)))
                                            (then
                                                ;; startBlock type=NORMAL, label = If_106_0
                                                (block $If_106_0
                                                    ;; writeIfAndStartTrueBlock
                                                    (if $if4 (ref.is_null (local.get $var6))
                                                        (then
                                                            (local.set $phi27 (local.get $var2))
                                                            (local.set $phi28 (local.get $var4))
                                                            (local.set $phi29 (local.get $var6))
                                                            (br $If_106_0)
                                                            ;; Start else
                                                            )(else
                                                            ;; writeIfAndStartTrueBlock
                                                            (if $if5 (i32.eq (struct.get $java$util$HashMap$TreeNode $red (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var6))) (i32.const 0))
                                                                (then
                                                                    (local.set $phi27 (local.get $var2))
                                                                    (local.set $phi28 (local.get $var4))
                                                                    (local.set $phi29 (local.get $var6))
                                                                    (br $If_106_0)
                                                                    ;; Start else
                                                                    )(else
                                                                    (struct.set $java$util$HashMap$TreeNode $red (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var6)) (i32.const 0))
                                                                    (struct.set $java$util$HashMap$TreeNode $red (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var2)) (i32.const 0))
                                                                    (struct.set $java$util$HashMap$TreeNode $red (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var4)) (i32.const 1))
                                                                    ;; Here was a goto statement
                                                                    (local.set $phi1 (local.get $var4))
                                                                    (br $L1542253985)
                                                                    ))
                                                            ;; finishIfBlock
                                                            ))
                                                    ;; finishIfBlock
                                                    )
                                                ;; finishBlock
                                                ;; startBlock type=NORMAL, label = If_124_0
                                                (block $If_124_0
                                                    ;; writeIfAndStartTrueBlock
                                                    (if $if6 (select (i32.const 0) (i32.const 1) (ref.eq (local.get $phi1) (struct.get $java$util$HashMap$TreeNode $left (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $phi27)))))
                                                        (then
                                                            (local.set $phi34 (local.get $phi0))
                                                            (local.set $phi35 (local.get $phi1))
                                                            (local.set $phi36 (local.get $phi27))
                                                            (local.set $phi38 (local.get $phi28))
                                                            (br $If_124_0)
                                                            ;; Start else
                                                            )(else
                                                            (local.set $var30 (local.get $phi0))
                                                            (local.set $var31 (local.get $phi27))
                                                            (drop (call $java$util$HashMap$TreeNode_i))
                                                            (local.set $var32 (call $java$util$HashMap$TreeNode$Ljava$util$HashMap$TreeNode$$rotateRight$Ljava$util$HashMap$TreeNode$$Ljava$util$HashMap$TreeNode$ (call $java$util$HashMap$TreeNode_i) (local.get $var30) (local.get $var31)))
                                                            (local.set $var33 (struct.get $java$util$HashMap$TreeNode $parent (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var31))))
                                                            ;; startBlock type=NORMAL, label = If_137_0
                                                            (block $If_137_0
                                                                ;; writeIfAndStartTrueBlock
                                                                (if $if7 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var33)))
                                                                    (then
                                                                        (local.set $var44 (struct.get $java$util$HashMap$TreeNode $parent (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var33))))
                                                                        (local.set $phi34 (local.get $var32))
                                                                        (local.set $phi35 (local.get $var31))
                                                                        (local.set $phi36 (local.get $var33))
                                                                        (local.set $phi37 (local.get $var44))
                                                                        (br $If_137_0)
                                                                        ;; Start else
                                                                        )(else
                                                                        ;; Here was a goto statement
                                                                        (local.set $phi34 (local.get $var32))
                                                                        (local.set $phi35 (local.get $var31))
                                                                        (local.set $phi36 (local.get $var33))
                                                                        (local.set $phi37 (ref.null none))
                                                                        (br $If_137_0)
                                                                        ))
                                                                ;; finishIfBlock
                                                                )
                                                            ;; finishBlock
                                                            (local.set $phi38 (local.get $phi37))
                                                            (br $If_124_0)
                                                            ))
                                                    ;; finishIfBlock
                                                    )
                                                ;; finishBlock
                                                ;; writeIfAndStartTrueBlock
                                                (if $if8 (ref.is_null (local.get $phi36))
                                                    (then
                                                        (local.set $phi0 (local.get $phi34))
                                                        (local.set $phi1 (local.get $phi35))
                                                        (br $L1542253985)
                                                        ;; Start else
                                                        )(else
                                                        (local.set $var39 (local.get $phi36))
                                                        (struct.set $java$util$HashMap$TreeNode $red (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var39)) (i32.const 0))
                                                        ;; writeIfAndStartTrueBlock
                                                        (if $if9 (ref.is_null (local.get $phi38))
                                                            (then
                                                                (local.set $phi0 (local.get $phi34))
                                                                (local.set $phi1 (local.get $phi35))
                                                                (br $L1542253985)
                                                                ;; Start else
                                                                )(else
                                                                (local.set $var40 (local.get $phi38))
                                                                (struct.set $java$util$HashMap$TreeNode $red (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var40)) (i32.const 1))
                                                                (local.set $var41 (local.get $phi34))
                                                                (local.set $var42 (local.get $phi38))
                                                                (drop (call $java$util$HashMap$TreeNode_i))
                                                                (local.set $var43 (call $java$util$HashMap$TreeNode$Ljava$util$HashMap$TreeNode$$rotateLeft$Ljava$util$HashMap$TreeNode$$Ljava$util$HashMap$TreeNode$ (call $java$util$HashMap$TreeNode_i) (local.get $var41) (local.get $var42)))
                                                                ;; Here was a goto statement
                                                                (local.set $phi0 (local.get $var43))
                                                                (local.set $phi1 (local.get $phi35))
                                                                (br $L1542253985)
                                                                ))
                                                        ;; finishIfBlock
                                                        ))
                                                ;; finishIfBlock
                                                ;; Start else
                                                )(else
                                                (local.set $var7 (struct.get $java$util$HashMap$TreeNode $right (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var4))))
                                                ;; startBlock type=NORMAL, label = If_38_0
                                                (block $If_38_0
                                                    ;; writeIfAndStartTrueBlock
                                                    (if $if10 (ref.is_null (local.get $var7))
                                                        (then
                                                            (local.set $phi8 (local.get $var2))
                                                            (local.set $phi9 (local.get $var4))
                                                            (local.set $phi10 (local.get $var6))
                                                            (local.set $phi11 (local.get $var7))
                                                            (br $If_38_0)
                                                            ;; Start else
                                                            )(else
                                                            ;; writeIfAndStartTrueBlock
                                                            (if $if11 (i32.eq (struct.get $java$util$HashMap$TreeNode $red (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var7))) (i32.const 0))
                                                                (then
                                                                    (local.set $phi8 (local.get $var2))
                                                                    (local.set $phi9 (local.get $var4))
                                                                    (local.set $phi10 (local.get $var6))
                                                                    (local.set $phi11 (local.get $var7))
                                                                    (br $If_38_0)
                                                                    ;; Start else
                                                                    )(else
                                                                    (struct.set $java$util$HashMap$TreeNode $red (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var7)) (i32.const 0))
                                                                    (struct.set $java$util$HashMap$TreeNode $red (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var2)) (i32.const 0))
                                                                    (struct.set $java$util$HashMap$TreeNode $red (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var4)) (i32.const 1))
                                                                    ;; Here was a goto statement
                                                                    (local.set $phi1 (local.get $var4))
                                                                    (br $L1542253985)
                                                                    ))
                                                            ;; finishIfBlock
                                                            ))
                                                    ;; finishIfBlock
                                                    )
                                                ;; finishBlock
                                                ;; startBlock type=NORMAL, label = If_57_0
                                                (block $If_57_0
                                                    ;; writeIfAndStartTrueBlock
                                                    (if $if12 (select (i32.const 0) (i32.const 1) (ref.eq (local.get $phi1) (struct.get $java$util$HashMap$TreeNode $right (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $phi8)))))
                                                        (then
                                                            (local.set $phi16 (local.get $phi0))
                                                            (local.set $phi17 (local.get $phi1))
                                                            (local.set $phi18 (local.get $phi8))
                                                            (local.set $phi20 (local.get $phi9))
                                                            (br $If_57_0)
                                                            ;; Start else
                                                            )(else
                                                            (local.set $var12 (local.get $phi0))
                                                            (local.set $var13 (local.get $phi8))
                                                            (drop (call $java$util$HashMap$TreeNode_i))
                                                            (local.set $var14 (call $java$util$HashMap$TreeNode$Ljava$util$HashMap$TreeNode$$rotateLeft$Ljava$util$HashMap$TreeNode$$Ljava$util$HashMap$TreeNode$ (call $java$util$HashMap$TreeNode_i) (local.get $var12) (local.get $var13)))
                                                            (local.set $var15 (struct.get $java$util$HashMap$TreeNode $parent (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var13))))
                                                            ;; startBlock type=NORMAL, label = If_71_0
                                                            (block $If_71_0
                                                                ;; writeIfAndStartTrueBlock
                                                                (if $if13 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var15)))
                                                                    (then
                                                                        (local.set $var26 (struct.get $java$util$HashMap$TreeNode $parent (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var15))))
                                                                        (local.set $phi16 (local.get $var14))
                                                                        (local.set $phi17 (local.get $var13))
                                                                        (local.set $phi18 (local.get $var15))
                                                                        (local.set $phi19 (local.get $var26))
                                                                        (br $If_71_0)
                                                                        ;; Start else
                                                                        )(else
                                                                        ;; Here was a goto statement
                                                                        (local.set $phi16 (local.get $var14))
                                                                        (local.set $phi17 (local.get $var13))
                                                                        (local.set $phi18 (local.get $var15))
                                                                        (local.set $phi19 (ref.null none))
                                                                        (br $If_71_0)
                                                                        ))
                                                                ;; finishIfBlock
                                                                )
                                                            ;; finishBlock
                                                            (local.set $phi20 (local.get $phi19))
                                                            (br $If_57_0)
                                                            ))
                                                    ;; finishIfBlock
                                                    )
                                                ;; finishBlock
                                                ;; writeIfAndStartTrueBlock
                                                (if $if14 (ref.is_null (local.get $phi18))
                                                    (then
                                                        (local.set $phi0 (local.get $phi16))
                                                        (local.set $phi1 (local.get $phi17))
                                                        (br $L1542253985)
                                                        ;; Start else
                                                        )(else
                                                        (local.set $var21 (local.get $phi18))
                                                        (struct.set $java$util$HashMap$TreeNode $red (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var21)) (i32.const 0))
                                                        ;; writeIfAndStartTrueBlock
                                                        (if $if15 (ref.is_null (local.get $phi20))
                                                            (then
                                                                (local.set $phi0 (local.get $phi16))
                                                                (local.set $phi1 (local.get $phi17))
                                                                (br $L1542253985)
                                                                ;; Start else
                                                                )(else
                                                                (local.set $var22 (local.get $phi20))
                                                                (struct.set $java$util$HashMap$TreeNode $red (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var22)) (i32.const 1))
                                                                (local.set $var23 (local.get $phi16))
                                                                (local.set $var24 (local.get $phi20))
                                                                (drop (call $java$util$HashMap$TreeNode_i))
                                                                (local.set $var25 (call $java$util$HashMap$TreeNode$Ljava$util$HashMap$TreeNode$$rotateRight$Ljava$util$HashMap$TreeNode$$Ljava$util$HashMap$TreeNode$ (call $java$util$HashMap$TreeNode_i) (local.get $var23) (local.get $var24)))
                                                                ;; Here was a goto statement
                                                                (local.set $phi0 (local.get $var25))
                                                                (local.set $phi1 (local.get $phi17))
                                                                (br $L1542253985)
                                                                ))
                                                        ;; finishIfBlock
                                                        ))
                                                ;; finishIfBlock
                                                ))
                                        ;; finishIfBlock
                                        ;; Start else
                                        )(else
                                        (local.set $phi5 (local.get $var2))
                                        (br $If_19_0)
                                        ))
                                ;; finishIfBlock
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    (return (local.get $phi0))
                    ;; Start else
                    )(else
                    (local.set $var3 (local.get $phi1))
                    (struct.set $java$util$HashMap$TreeNode $red (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var3)) (i32.const 0))
                    (return (local.get $phi1))
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (unreachable))
    (func $java$util$HashMap$TreeNode$Ljava$util$HashMap$TreeNode$$rotateLeft$Ljava$util$HashMap$TreeNode$$Ljava$util$HashMap$TreeNode$ (type $t561) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 (ref null $java$lang$Object))
        (local $phi4 (ref null $java$lang$Object))
        (local $phi5 (ref null $java$lang$Object))
        (local $var6 (ref null $java$lang$Object))
        (local $var7 (ref null $java$lang$Object))
        (local $var8 (ref null $java$lang$Object))
        (local $phi9 (ref null $java$lang$Object))
        (local $phi10 (ref null $java$lang$Object))
        (local $var11 (ref null $java$lang$Object))
        (local $var12 (ref null $java$lang$Object))
        ;; startBlock type=NORMAL, label = If_3_0
        (block $If_3_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (ref.is_null (local.get $arg1))
                (then
                    (local.set $phi9 (local.get $arg0))
                    (local.set $phi3 (local.get $arg1))
                    (br $If_3_0)
                    ;; Start else
                    )(else
                    (local.set $var0 (struct.get $java$util$HashMap$TreeNode $right (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $arg1))))
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (ref.is_null (local.get $var0))
                        (then
                            (local.set $phi9 (local.get $arg0))
                            (local.set $phi3 (local.get $arg1))
                            (local.set $phi4 (local.get $var0))
                            (br $If_3_0)
                            ;; Start else
                            )(else
                            (local.set $var1 (struct.get $java$util$HashMap$TreeNode $left (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var0))))
                            (struct.set $java$util$HashMap$TreeNode $right (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $arg1)) (ref.cast (ref null $java$lang$Object) (local.get $var1)))
                            ;; startBlock type=NORMAL, label = If_14_0
                            (block $If_14_0
                                ;; writeIfAndStartTrueBlock
                                (if $if2 (ref.is_null (local.get $var1))
                                    (then
                                        (local.set $phi2 (local.get $arg0))
                                        (local.set $phi3 (local.get $arg1))
                                        (local.set $phi4 (local.get $var0))
                                        (local.set $phi5 (local.get $var1))
                                        (br $If_14_0)
                                        ;; Start else
                                        )(else
                                        (struct.set $java$util$HashMap$TreeNode $parent (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (local.get $arg1)))
                                        (local.set $phi2 (local.get $arg0))
                                        (local.set $phi3 (local.get $arg1))
                                        (local.set $phi4 (local.get $var0))
                                        (local.set $phi5 (local.get $var1))
                                        (br $If_14_0)
                                        ))
                                ;; finishIfBlock
                                )
                            ;; finishBlock
                            (local.set $var6 (local.get $phi4))
                            (local.set $var7 (struct.get $java$util$HashMap$TreeNode $parent (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $phi3))))
                            (struct.set $java$util$HashMap$TreeNode $parent (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var6)) (ref.cast (ref null $java$lang$Object) (local.get $var7)))
                            ;; startBlock type=NORMAL, label = If_28_0
                            (block $If_28_0
                                ;; writeIfAndStartTrueBlock
                                (if $if3 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var7)))
                                    (then
                                        ;; writeIfAndStartTrueBlock
                                        (if $if4 (select (i32.const 0) (i32.const 1) (ref.eq (struct.get $java$util$HashMap$TreeNode $left (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var7))) (local.get $phi3)))
                                            (then
                                                (struct.set $java$util$HashMap$TreeNode $right (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var7)) (ref.cast (ref null $java$lang$Object) (local.get $phi4)))
                                                (local.set $phi9 (local.get $phi2))
                                                (local.set $phi10 (local.get $var7))
                                                (br $If_28_0)
                                                ;; Start else
                                                )(else
                                                (struct.set $java$util$HashMap$TreeNode $left (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var7)) (ref.cast (ref null $java$lang$Object) (local.get $phi4)))
                                                ;; Here was a goto statement
                                                (local.set $phi9 (local.get $phi2))
                                                (local.set $phi10 (local.get $var7))
                                                (br $If_28_0)
                                                ))
                                        ;; finishIfBlock
                                        ;; Start else
                                        )(else
                                        (local.set $var8 (local.get $phi4))
                                        (struct.set $java$util$HashMap$TreeNode $red (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var8)) (i32.const 0))
                                        ;; Here was a goto statement
                                        (local.set $phi9 (local.get $var8))
                                        (local.set $phi10 (local.get $var7))
                                        (br $If_28_0)
                                        ))
                                ;; finishIfBlock
                                )
                            ;; finishBlock
                            (local.set $var11 (local.get $phi4))
                            (struct.set $java$util$HashMap$TreeNode $left (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var11)) (ref.cast (ref null $java$lang$Object) (local.get $phi3)))
                            (local.set $var12 (local.get $phi3))
                            (struct.set $java$util$HashMap$TreeNode $parent (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var12)) (ref.cast (ref null $java$lang$Object) (local.get $phi4)))
                            (br $If_3_0)
                            ))
                    ;; finishIfBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi9))
        (unreachable))
    (func $java$util$HashMap$TreeNode$Ljava$util$HashMap$TreeNode$$rotateRight$Ljava$util$HashMap$TreeNode$$Ljava$util$HashMap$TreeNode$ (type $t561) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 (ref null $java$lang$Object))
        (local $phi4 (ref null $java$lang$Object))
        (local $phi5 (ref null $java$lang$Object))
        (local $var6 (ref null $java$lang$Object))
        (local $var7 (ref null $java$lang$Object))
        (local $var8 (ref null $java$lang$Object))
        (local $phi9 (ref null $java$lang$Object))
        (local $phi10 (ref null $java$lang$Object))
        (local $var11 (ref null $java$lang$Object))
        (local $var12 (ref null $java$lang$Object))
        ;; startBlock type=NORMAL, label = If_3_0
        (block $If_3_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (ref.is_null (local.get $arg1))
                (then
                    (local.set $phi9 (local.get $arg0))
                    (local.set $phi3 (local.get $arg1))
                    (br $If_3_0)
                    ;; Start else
                    )(else
                    (local.set $var0 (struct.get $java$util$HashMap$TreeNode $left (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $arg1))))
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (ref.is_null (local.get $var0))
                        (then
                            (local.set $phi9 (local.get $arg0))
                            (local.set $phi3 (local.get $arg1))
                            (local.set $phi4 (local.get $var0))
                            (br $If_3_0)
                            ;; Start else
                            )(else
                            (local.set $var1 (struct.get $java$util$HashMap$TreeNode $right (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var0))))
                            (struct.set $java$util$HashMap$TreeNode $left (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $arg1)) (ref.cast (ref null $java$lang$Object) (local.get $var1)))
                            ;; startBlock type=NORMAL, label = If_14_0
                            (block $If_14_0
                                ;; writeIfAndStartTrueBlock
                                (if $if2 (ref.is_null (local.get $var1))
                                    (then
                                        (local.set $phi2 (local.get $arg0))
                                        (local.set $phi3 (local.get $arg1))
                                        (local.set $phi4 (local.get $var0))
                                        (local.set $phi5 (local.get $var1))
                                        (br $If_14_0)
                                        ;; Start else
                                        )(else
                                        (struct.set $java$util$HashMap$TreeNode $parent (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (local.get $arg1)))
                                        (local.set $phi2 (local.get $arg0))
                                        (local.set $phi3 (local.get $arg1))
                                        (local.set $phi4 (local.get $var0))
                                        (local.set $phi5 (local.get $var1))
                                        (br $If_14_0)
                                        ))
                                ;; finishIfBlock
                                )
                            ;; finishBlock
                            (local.set $var6 (local.get $phi4))
                            (local.set $var7 (struct.get $java$util$HashMap$TreeNode $parent (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $phi3))))
                            (struct.set $java$util$HashMap$TreeNode $parent (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var6)) (ref.cast (ref null $java$lang$Object) (local.get $var7)))
                            ;; startBlock type=NORMAL, label = If_28_0
                            (block $If_28_0
                                ;; writeIfAndStartTrueBlock
                                (if $if3 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var7)))
                                    (then
                                        ;; writeIfAndStartTrueBlock
                                        (if $if4 (select (i32.const 0) (i32.const 1) (ref.eq (struct.get $java$util$HashMap$TreeNode $right (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var7))) (local.get $phi3)))
                                            (then
                                                (struct.set $java$util$HashMap$TreeNode $left (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var7)) (ref.cast (ref null $java$lang$Object) (local.get $phi4)))
                                                (local.set $phi9 (local.get $phi2))
                                                (local.set $phi10 (local.get $var7))
                                                (br $If_28_0)
                                                ;; Start else
                                                )(else
                                                (struct.set $java$util$HashMap$TreeNode $right (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var7)) (ref.cast (ref null $java$lang$Object) (local.get $phi4)))
                                                ;; Here was a goto statement
                                                (local.set $phi9 (local.get $phi2))
                                                (local.set $phi10 (local.get $var7))
                                                (br $If_28_0)
                                                ))
                                        ;; finishIfBlock
                                        ;; Start else
                                        )(else
                                        (local.set $var8 (local.get $phi4))
                                        (struct.set $java$util$HashMap$TreeNode $red (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var8)) (i32.const 0))
                                        ;; Here was a goto statement
                                        (local.set $phi9 (local.get $var8))
                                        (local.set $phi10 (local.get $var7))
                                        (br $If_28_0)
                                        ))
                                ;; finishIfBlock
                                )
                            ;; finishBlock
                            (local.set $var11 (local.get $phi4))
                            (struct.set $java$util$HashMap$TreeNode $right (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var11)) (ref.cast (ref null $java$lang$Object) (local.get $phi3)))
                            (local.set $var12 (local.get $phi3))
                            (struct.set $java$util$HashMap$TreeNode $parent (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var12)) (ref.cast (ref null $java$lang$Object) (local.get $phi4)))
                            (br $If_3_0)
                            ))
                    ;; finishIfBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi9))
        (unreachable))
    (func $java$util$HashMap$TreeNode$I$tieBreakOrder$Ljava$lang$Object$$Ljava$lang$Object$ (type $t566) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object)) (result i32)
        (local $var0 i32)
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 i32)
        (local $var4 (ref null $java$lang$Object))
        (local $var5 i32)
        (local $var6 (ref null $java$lang$Object))
        (local $phi7 i32)
        (local $phi8 i32)
        (local $phi9 i32)
        (local $phi10 i32)
        ;; startBlock type=NORMAL, label = If_3_0
        (block $If_3_0
            ;; startBlock type=NORMAL, label = If_3_1
            (block $If_3_1
                ;; writeIfAndStartTrueBlock
                (if $if0 (ref.is_null (local.get $arg0))
                    (then
                        (local.set $phi1 (local.get $arg0))
                        (local.set $phi2 (local.get $arg1))
                        (br $If_3_1)
                        ;; Start else
                        )(else
                        ;; writeIfAndStartTrueBlock
                        (if $if1 (ref.is_null (local.get $arg1))
                            (then
                                (local.set $phi1 (local.get $arg0))
                                (local.set $phi2 (local.get $arg1))
                                (br $If_3_1)
                                ;; Start else
                                )(else
                                (local.set $var0 (call $java$lang$String$I$compareTo$Ljava$lang$String$ (global.get $stringpool_1) (global.get $stringpool_1)))
                                ;; writeIfAndStartTrueBlock
                                (if $if2 (i32.ne (local.get $var0) (i32.const 0))
                                    (then
                                        (local.set $phi1 (local.get $arg0))
                                        (local.set $phi2 (local.get $arg1))
                                        (local.set $phi8 (local.get $var0))
                                        (br $If_3_0)
                                        ;; Start else
                                        )(else
                                        (local.set $phi1 (local.get $arg0))
                                        (local.set $phi2 (local.get $arg1))
                                        (local.set $phi3 (local.get $var0))
                                        (br $If_3_1)
                                        ))
                                ;; finishIfBlock
                                ))
                        ;; finishIfBlock
                        ))
                ;; finishIfBlock
                )
            ;; finishBlock
            (local.set $var4 (local.get $phi1))
            (drop (call $java$lang$System_i))
            (local.set $phi10 (call_indirect (type $t555) (local.get $var4) (call_ref $t0 (i32.const 2) (struct.get $java$lang$Object $vt_resolver (local.get $var4)))))
            (local.set $var5 (local.get $phi10))
            (local.set $var6 (local.get $phi2))
            (drop (call $java$lang$System_i))
            (local.set $phi9 (call_indirect (type $t555) (local.get $var6) (call_ref $t0 (i32.const 2) (struct.get $java$lang$Object $vt_resolver (local.get $var6)))))
            ;; startBlock type=NORMAL, label = If_27_0
            (block $If_27_0
                ;; writeIfAndStartTrueBlock
                (if $if3 (i32.gt_s (local.get $var5) (local.get $phi9))
                    (then
                        (local.set $phi7 (i32.const 1))
                        (br $If_27_0)
                        ;; Start else
                        )(else
                        ;; Here was a goto statement
                        (local.set $phi7 (i32.const -1))
                        (br $If_27_0)
                        ))
                ;; finishIfBlock
                )
            ;; finishBlock
            (local.set $phi8 (local.get $phi7))
            (br $If_3_0)
            )
        ;; finishBlock
        (return (local.get $phi8))
        (unreachable))
    (func $java$util$HashMap$TreeNode$V$moveRootToFront$$Ljava$util$HashMap$Node$$Ljava$util$HashMap$TreeNode$ (type $t560) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object))
        (local $var0 i32)
        (local $var1 i32)
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $phi6 (ref null $java$lang$Object))
        (local $phi7 (ref null $java$lang$Object))
        (local $phi8 i32)
        (local $phi9 i32)
        (local $phi10 (ref null $java$lang$Object))
        (local $phi11 (ref null $java$lang$Object))
        (local $phi12 (ref null $java$lang$Object))
        (local $var13 (ref null $java$lang$Object))
        (local $var14 (ref null $java$lang$Object))
        (local $var15 (ref null $java$lang$Object))
        (local $var16 (ref null $java$lang$Object))
        (local $var17 (ref null $java$lang$Object))
        (local $var18 (ref null $java$lang$Object))
        ;; startBlock type=NORMAL, label = If_3_0
        (block $If_3_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (ref.is_null (local.get $arg1))
                (then
                    (local.set $phi6 (local.get $arg0))
                    (local.set $phi7 (local.get $arg1))
                    (br $If_3_0)
                    ;; Start else
                    )(else
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (ref.is_null (local.get $arg0))
                        (then
                            (local.set $phi6 (local.get $arg0))
                            (local.set $phi7 (local.get $arg1))
                            (br $If_3_0)
                            ;; Start else
                            )(else
                            (local.set $var0 (array.len $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $arg0)))))
                            ;; writeIfAndStartTrueBlock
                            (if $if2 (i32.le_s (local.get $var0) (i32.const 0))
                                (then
                                    (local.set $phi6 (local.get $arg0))
                                    (local.set $phi7 (local.get $arg1))
                                    (local.set $phi8 (local.get $var0))
                                    (br $If_3_0)
                                    ;; Start else
                                    )(else
                                    (local.set $var1 (i32.and (i32.sub (local.get $var0) (i32.const 1)) (struct.get $java$util$HashMap$Node $hash (ref.cast (ref null $java$util$HashMap$Node) (local.get $arg1)))))
                                    (local.set $var2 (ref.cast (ref null $java$lang$Object) (array.get $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $arg0))) (local.get $var1))))
                                    ;; startBlock type=NORMAL, label = If_23_0
                                    (block $If_23_0
                                        ;; writeIfAndStartTrueBlock
                                        (if $if3 (ref.eq (local.get $arg1) (local.get $var2))
                                            (then
                                                (local.set $phi6 (local.get $arg0))
                                                (local.set $phi7 (local.get $arg1))
                                                (local.set $phi8 (local.get $var0))
                                                (local.set $phi9 (local.get $var1))
                                                (local.set $phi10 (local.get $var2))
                                                (br $If_23_0)
                                                ;; Start else
                                                )(else
                                                (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $arg0))) (local.get $var1) (local.get $arg1))
                                                (local.set $var3 (struct.get $java$util$HashMap$TreeNode $prev (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $arg1))))
                                                (local.set $var4 (struct.get $java$util$HashMap$Node $next (ref.cast (ref null $java$util$HashMap$Node) (local.get $arg1))))
                                                ;; startBlock type=NORMAL, label = If_32_0
                                                (block $If_32_0
                                                    ;; writeIfAndStartTrueBlock
                                                    (if $if4 (ref.is_null (local.get $var4))
                                                        (then
                                                            (local.set $phi6 (local.get $arg0))
                                                            (local.set $phi7 (local.get $arg1))
                                                            (local.set $phi8 (local.get $var0))
                                                            (local.set $phi9 (local.get $var1))
                                                            (local.set $phi10 (local.get $var2))
                                                            (local.set $phi11 (local.get $var4))
                                                            (local.set $phi12 (local.get $var3))
                                                            (br $If_32_0)
                                                            ;; Start else
                                                            )(else
                                                            (local.set $var5 (ref.cast (ref null $java$lang$Object) (local.get $var4)))
                                                            (struct.set $java$util$HashMap$TreeNode $prev (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var5)) (ref.cast (ref null $java$lang$Object) (local.get $var3)))
                                                            (local.set $phi6 (local.get $arg0))
                                                            (local.set $phi7 (local.get $arg1))
                                                            (local.set $phi8 (local.get $var0))
                                                            (local.set $phi9 (local.get $var1))
                                                            (local.set $phi10 (local.get $var2))
                                                            (local.set $phi11 (local.get $var4))
                                                            (local.set $phi12 (local.get $var3))
                                                            (br $If_32_0)
                                                            ))
                                                    ;; finishIfBlock
                                                    )
                                                ;; finishBlock
                                                ;; startBlock type=NORMAL, label = If_46_0
                                                (block $If_46_0
                                                    ;; writeIfAndStartTrueBlock
                                                    (if $if5 (ref.is_null (local.get $phi12))
                                                        (then
                                                            (br $If_46_0)
                                                            ;; Start else
                                                            )(else
                                                            (local.set $var13 (local.get $phi12))
                                                            (struct.set $java$util$HashMap$Node $next (ref.cast (ref null $java$util$HashMap$Node) (local.get $var13)) (ref.cast (ref null $java$lang$Object) (local.get $phi11)))
                                                            (br $If_46_0)
                                                            ))
                                                    ;; finishIfBlock
                                                    )
                                                ;; finishBlock
                                                ;; startBlock type=NORMAL, label = If_52_0
                                                (block $If_52_0
                                                    ;; writeIfAndStartTrueBlock
                                                    (if $if6 (ref.is_null (local.get $phi10))
                                                        (then
                                                            (br $If_52_0)
                                                            ;; Start else
                                                            )(else
                                                            (local.set $var14 (local.get $phi10))
                                                            (struct.set $java$util$HashMap$TreeNode $prev (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var14)) (ref.cast (ref null $java$lang$Object) (local.get $phi7)))
                                                            (br $If_52_0)
                                                            ))
                                                    ;; finishIfBlock
                                                    )
                                                ;; finishBlock
                                                (local.set $var15 (local.get $phi7))
                                                (struct.set $java$util$HashMap$Node $next (ref.cast (ref null $java$util$HashMap$Node) (local.get $var15)) (ref.cast (ref null $java$lang$Object) (local.get $phi10)))
                                                (local.set $var16 (local.get $phi7))
                                                (struct.set $java$util$HashMap$TreeNode $prev (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var16)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                                (br $If_23_0)
                                                ))
                                        ;; finishIfBlock
                                        )
                                    ;; finishBlock
                                    (drop (call $java$util$HashMap$TreeNode_i))
                                    ;; writeIfAndStartTrueBlock
                                    (if $if7 (i32.ne (struct.get $java$util$HashMap$TreeNode_rtt $$assertionsDisabled (global.get $java$util$HashMap$TreeNode_cls)) (i32.const 0))
                                        (then
                                            (br $If_3_0)
                                            ;; Start else
                                            )(else
                                            (local.set $var17 (local.get $phi7))
                                            (drop (call $java$util$HashMap$TreeNode_i))
                                            ;; writeIfAndStartTrueBlock
                                            (if $if8 (i32.ne (call $java$util$HashMap$TreeNode$Z$checkInvariants$Ljava$util$HashMap$TreeNode$ (call $java$util$HashMap$TreeNode_i) (local.get $var17)) (i32.const 0))
                                                (then
                                                    (br $If_3_0)
                                                    ;; Start else
                                                    )(else
                                                    (local.set $var18 (struct.new $java$lang$AssertionError (struct.get $java$lang$AssertionError_rtt $factoryFor (global.get $java$lang$AssertionError_cls)) (ref.func $java$lang$AssertionError_vt) (ref.null noextern) (struct.get $java$lang$AssertionError_rtt $classImplTypes (global.get $java$lang$AssertionError_cls)) (ref.null none) (ref.null none)))
                                                    (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var18)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                                    (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var18)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                                    (throw $javaexception (local.get $var18))
                                                    ))
                                            ;; finishIfBlock
                                            ))
                                    ;; finishIfBlock
                                    ))
                            ;; finishIfBlock
                            ))
                    ;; finishIfBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return)
        (unreachable))
    (func $java$util$HashMap$TreeNode$Z$checkInvariants$Ljava$util$HashMap$TreeNode$ (type $t554) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $phi5 (ref null $java$lang$Object))
        (local $phi6 (ref null $java$lang$Object))
        (local $phi7 (ref null $java$lang$Object))
        (local $phi8 (ref null $java$lang$Object))
        (local $phi9 (ref null $java$lang$Object))
        (local $phi10 (ref null $java$lang$Object))
        (local $var11 (ref null $java$lang$Object))
        (local $var12 (ref null $java$lang$Object))
        (local.set $var0 (struct.get $java$util$HashMap$TreeNode $parent (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $arg0))))
        (local.set $var1 (struct.get $java$util$HashMap$TreeNode $left (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $arg0))))
        (local.set $var2 (struct.get $java$util$HashMap$TreeNode $right (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $arg0))))
        (local.set $var3 (struct.get $java$util$HashMap$TreeNode $prev (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $arg0))))
        (local.set $var4 (ref.cast (ref null $java$lang$Object) (struct.get $java$util$HashMap$Node $next (ref.cast (ref null $java$util$HashMap$Node) (local.get $arg0)))))
        ;; startBlock type=NORMAL, label = If_18_0
        (block $If_18_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (ref.is_null (local.get $var3))
                (then
                    (local.set $phi5 (local.get $arg0))
                    (local.set $phi6 (local.get $var0))
                    (local.set $phi7 (local.get $var1))
                    (local.set $phi8 (local.get $var2))
                    (local.set $phi9 (local.get $var3))
                    (local.set $phi10 (local.get $var4))
                    (br $If_18_0)
                    ;; Start else
                    )(else
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (ref.eq (struct.get $java$util$HashMap$Node $next (ref.cast (ref null $java$util$HashMap$Node) (local.get $var3))) (local.get $arg0))
                        (then
                            (local.set $phi5 (local.get $arg0))
                            (local.set $phi6 (local.get $var0))
                            (local.set $phi7 (local.get $var1))
                            (local.set $phi8 (local.get $var2))
                            (local.set $phi9 (local.get $var3))
                            (local.set $phi10 (local.get $var4))
                            (br $If_18_0)
                            ;; Start else
                            )(else
                            (return (i32.const 0))
                            ))
                    ;; finishIfBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        ;; startBlock type=NORMAL, label = If_32_0
        (block $If_32_0
            ;; writeIfAndStartTrueBlock
            (if $if2 (ref.is_null (local.get $phi10))
                (then
                    (br $If_32_0)
                    ;; Start else
                    )(else
                    ;; writeIfAndStartTrueBlock
                    (if $if3 (ref.eq (struct.get $java$util$HashMap$TreeNode $prev (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $phi10))) (local.get $phi5))
                        (then
                            (br $If_32_0)
                            ;; Start else
                            )(else
                            (return (i32.const 0))
                            ))
                    ;; finishIfBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        ;; startBlock type=NORMAL, label = If_40_0
        (block $If_40_0
            ;; writeIfAndStartTrueBlock
            (if $if4 (ref.is_null (local.get $phi6))
                (then
                    (br $If_40_0)
                    ;; Start else
                    )(else
                    ;; writeIfAndStartTrueBlock
                    (if $if5 (ref.eq (local.get $phi5) (struct.get $java$util$HashMap$TreeNode $left (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $phi6))))
                        (then
                            (br $If_40_0)
                            ;; Start else
                            )(else
                            ;; writeIfAndStartTrueBlock
                            (if $if6 (ref.eq (local.get $phi5) (struct.get $java$util$HashMap$TreeNode $right (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $phi6))))
                                (then
                                    (br $If_40_0)
                                    ;; Start else
                                    )(else
                                    (return (i32.const 0))
                                    ))
                            ;; finishIfBlock
                            ))
                    ;; finishIfBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        ;; startBlock type=NORMAL, label = If_51_0
        (block $If_51_0
            ;; writeIfAndStartTrueBlock
            (if $if7 (ref.is_null (local.get $phi7))
                (then
                    (br $If_51_0)
                    ;; Start else
                    )(else
                    ;; startBlock type=NORMAL, label = If_54_0
                    (block $If_54_0
                        ;; writeIfAndStartTrueBlock
                        (if $if8 (select (i32.const 0) (i32.const 1) (ref.eq (struct.get $java$util$HashMap$TreeNode $parent (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $phi7))) (local.get $phi5)))
                            (then
                                (br $If_54_0)
                                ;; Start else
                                )(else
                                ;; writeIfAndStartTrueBlock
                                (if $if9 (i32.le_s (struct.get $java$util$HashMap$Node $hash (ref.cast (ref null $java$util$HashMap$Node) (local.get $phi7))) (struct.get $java$util$HashMap$Node $hash (ref.cast (ref null $java$util$HashMap$Node) (local.get $phi5))))
                                    (then
                                        (br $If_51_0)
                                        ;; Start else
                                        )(else
                                        (br $If_54_0)
                                        ))
                                ;; finishIfBlock
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    (return (i32.const 0))
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        ;; startBlock type=NORMAL, label = If_64_0
        (block $If_64_0
            ;; writeIfAndStartTrueBlock
            (if $if10 (ref.is_null (local.get $phi8))
                (then
                    (br $If_64_0)
                    ;; Start else
                    )(else
                    ;; startBlock type=NORMAL, label = If_67_0
                    (block $If_67_0
                        ;; writeIfAndStartTrueBlock
                        (if $if11 (select (i32.const 0) (i32.const 1) (ref.eq (struct.get $java$util$HashMap$TreeNode $parent (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $phi8))) (local.get $phi5)))
                            (then
                                (br $If_67_0)
                                ;; Start else
                                )(else
                                ;; writeIfAndStartTrueBlock
                                (if $if12 (i32.ge_s (struct.get $java$util$HashMap$Node $hash (ref.cast (ref null $java$util$HashMap$Node) (local.get $phi8))) (struct.get $java$util$HashMap$Node $hash (ref.cast (ref null $java$util$HashMap$Node) (local.get $phi5))))
                                    (then
                                        (br $If_64_0)
                                        ;; Start else
                                        )(else
                                        (br $If_67_0)
                                        ))
                                ;; finishIfBlock
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    (return (i32.const 0))
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        ;; startBlock type=NORMAL, label = If_78_0
        (block $If_78_0
            ;; writeIfAndStartTrueBlock
            (if $if13 (i32.eq (struct.get $java$util$HashMap$TreeNode $red (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $phi5))) (i32.const 0))
                (then
                    (br $If_78_0)
                    ;; Start else
                    )(else
                    ;; writeIfAndStartTrueBlock
                    (if $if14 (ref.is_null (local.get $phi7))
                        (then
                            (br $If_78_0)
                            ;; Start else
                            )(else
                            ;; writeIfAndStartTrueBlock
                            (if $if15 (i32.eq (struct.get $java$util$HashMap$TreeNode $red (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $phi7))) (i32.const 0))
                                (then
                                    (br $If_78_0)
                                    ;; Start else
                                    )(else
                                    ;; writeIfAndStartTrueBlock
                                    (if $if16 (ref.is_null (local.get $phi8))
                                        (then
                                            (br $If_78_0)
                                            ;; Start else
                                            )(else
                                            ;; writeIfAndStartTrueBlock
                                            (if $if17 (i32.eq (struct.get $java$util$HashMap$TreeNode $red (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $phi8))) (i32.const 0))
                                                (then
                                                    (br $If_78_0)
                                                    ;; Start else
                                                    )(else
                                                    (return (i32.const 0))
                                                    ))
                                            ;; finishIfBlock
                                            ))
                                    ;; finishIfBlock
                                    ))
                            ;; finishIfBlock
                            ))
                    ;; finishIfBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        ;; startBlock type=NORMAL, label = If_96_0
        (block $If_96_0
            ;; writeIfAndStartTrueBlock
            (if $if18 (ref.is_null (local.get $phi7))
                (then
                    (br $If_96_0)
                    ;; Start else
                    )(else
                    (local.set $var11 (local.get $phi7))
                    (drop (call $java$util$HashMap$TreeNode_i))
                    ;; writeIfAndStartTrueBlock
                    (if $if19 (i32.ne (call $java$util$HashMap$TreeNode$Z$checkInvariants$Ljava$util$HashMap$TreeNode$ (call $java$util$HashMap$TreeNode_i) (local.get $var11)) (i32.const 0))
                        (then
                            (br $If_96_0)
                            ;; Start else
                            )(else
                            (return (i32.const 0))
                            ))
                    ;; finishIfBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        ;; startBlock type=NORMAL, label = If_109_0
        (block $If_109_0
            ;; writeIfAndStartTrueBlock
            (if $if20 (ref.is_null (local.get $phi8))
                (then
                    (br $If_109_0)
                    ;; Start else
                    )(else
                    (local.set $var12 (local.get $phi8))
                    (drop (call $java$util$HashMap$TreeNode_i))
                    ;; writeIfAndStartTrueBlock
                    (if $if21 (i32.ne (call $java$util$HashMap$TreeNode$Z$checkInvariants$Ljava$util$HashMap$TreeNode$ (call $java$util$HashMap$TreeNode_i) (local.get $var12)) (i32.const 0))
                        (then
                            (br $If_109_0)
                            ;; Start else
                            )(else
                            (return (i32.const 0))
                            ))
                    ;; finishIfBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (i32.const 1))
        (unreachable))
    (func $java$util$HashMap$TreeNode$Ljava$util$HashMap$TreeNode$$getTreeNode$I$Ljava$lang$Object$ (type $t625) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (param $arg1 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 i32)
        (local $phi4 (ref null $java$lang$Object))
        (local $phi5 (ref null $java$lang$Object))
        (local $var6 i32)
        (local $var7 (ref null $java$lang$Object))
        (local $phi8 (ref null $java$lang$Object))
        (local $var9 (ref null $java$lang$Object))
        (local $phi10 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = If_7_0
        (block $If_7_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (ref.is_null (struct.get $java$util$HashMap$TreeNode $parent (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var0))))
                (then
                    (local.set $phi2 (local.get $var0))
                    (local.set $phi3 (local.get $arg0))
                    (local.set $phi4 (local.get $arg1))
                    (local.set $phi5 (local.get $var0))
                    (br $If_7_0)
                    ;; Start else
                    )(else
                    (local.set $phi8 (local.get $var0))
                    ;; startBlock type=LOOP, label = L1246055868_1
                    (loop $L1246055868_1
                        (local.set $var9 (struct.get $java$util$HashMap$TreeNode $parent (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $phi8))))
                        ;; writeIfAndStartTrueBlock
                        (if $if1 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var9)))
                            (then
                                ;; Here was a goto statement
                                (local.set $phi8 (local.get $var9))
                                (br $L1246055868_1)
                                ;; Start else
                                )(else
                                (local.set $phi10 (local.get $phi8))
                                (local.set $var1 (local.get $phi10))
                                ;; Here was a goto statement
                                (local.set $phi2 (local.get $var0))
                                (local.set $phi3 (local.get $arg0))
                                (local.set $phi4 (local.get $arg1))
                                (local.set $phi5 (local.get $var1))
                                (br $If_7_0)
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (local.set $var6 (local.get $phi3))
        (local.set $var7 (local.get $phi4))
        (return (call $java$util$HashMap$TreeNode$Ljava$util$HashMap$TreeNode$$find$I$Ljava$lang$Object$$Ljava$lang$Class$ (local.get $phi5) (local.get $var6) (local.get $var7) (ref.null none)))
        (unreachable))
    (func $java$util$HashMap$TreeNode$Ljava$util$HashMap$TreeNode$$root$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $phi0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $phi0 (local.get $thisref))
        ;; startBlock type=LOOP, label = L1246055868
        (loop $L1246055868
            (local.set $var1 (struct.get $java$util$HashMap$TreeNode $parent (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $phi0))))
            ;; writeIfAndStartTrueBlock
            (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var1)))
                (then
                    ;; Here was a goto statement
                    (local.set $phi0 (local.get $var1))
                    (br $L1246055868)
                    ;; Start else
                    )(else
                    (return (local.get $phi0))
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (unreachable))
    (func $java$util$HashMap$TreeNode$Ljava$util$HashMap$TreeNode$$find$I$Ljava$lang$Object$$Ljava$lang$Class$ (type $t626) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (param $arg1 (ref null $java$lang$Object)) (param $arg2 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $var5 i32)
        (local $phi6 (ref null $java$lang$Object))
        (local $phi7 i32)
        (local $phi8 (ref null $java$lang$Object))
        (local $phi9 (ref null $java$lang$Object))
        (local $var10 (ref null $java$lang$Object))
        (local $phi11 i32)
        (local $phi12 (ref null $java$lang$Object))
        (local $phi13 (ref null $java$lang$Object))
        (local $phi14 (ref null $java$lang$Object))
        (local $phi15 i32)
        (local $phi16 (ref null $java$lang$Object))
        (local $phi17 (ref null $java$lang$Object))
        (local $phi18 (ref null $java$lang$Object))
        (local $var19 (ref null $java$lang$Object))
        (local $var20 (ref null $java$lang$Object))
        (local $var21 (ref null $java$lang$Object))
        (local $phi22 (ref null $java$lang$Object))
        (local $var23 (ref null $java$lang$Object))
        (local $var24 (ref null $java$lang$Object))
        (local $var25 i32)
        (local $var26 (ref null $java$lang$Object))
        (local $phi27 i32)
        (local $phi28 (ref null $java$lang$Object))
        (local $var29 (ref null $java$lang$Object))
        (local $var30 (ref null $java$lang$Object))
        (local $phi31 i32)
        (local $var32 (ref null $java$lang$Object))
        (local $var33 (ref null $java$lang$Object))
        (local $var34 (ref null $java$lang$Object))
        (local $var35 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $phi1 (local.get $arg2))
        (local.set $phi2 (local.get $var0))
        ;; startBlock type=LOOP, label = L1212746467
        (loop $L1212746467
            (local.set $var3 (struct.get $java$util$HashMap$TreeNode $left (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $phi2))))
            (local.set $var4 (struct.get $java$util$HashMap$TreeNode $right (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $phi2))))
            (local.set $var5 (struct.get $java$util$HashMap$Node $hash (ref.cast (ref null $java$util$HashMap$Node) (local.get $phi2))))
            ;; startBlock type=NORMAL, label = If_19_0
            (block $If_19_0
                ;; writeIfAndStartTrueBlock
                (if $if0 (i32.le_s (local.get $var5) (local.get $arg0))
                    (then
                        ;; writeIfAndStartTrueBlock
                        (if $if1 (i32.ge_s (local.get $var5) (local.get $arg0))
                            (then
                                (local.set $var10 (struct.get $java$util$HashMap$Node $key (ref.cast (ref null $java$util$HashMap$Node) (local.get $phi2))))
                                ;; startBlock type=NORMAL, label = If_37_0
                                (block $If_37_0
                                    ;; writeIfAndStartTrueBlock
                                    (if $if2 (ref.eq (local.get $var10) (local.get $arg1))
                                        (then
                                            (local.set $phi11 (local.get $var5))
                                            (local.set $phi12 (local.get $var10))
                                            (local.set $phi13 (local.get $var3))
                                            (local.set $phi14 (local.get $var4))
                                            (br $If_37_0)
                                            ;; Start else
                                            )(else
                                            ;; startBlock type=NORMAL, label = If_39_0
                                            (block $If_39_0
                                                ;; writeIfAndStartTrueBlock
                                                (if $if3 (ref.is_null (local.get $arg1))
                                                    (then
                                                        (local.set $phi15 (local.get $var5))
                                                        (local.set $phi16 (local.get $var10))
                                                        (local.set $phi17 (local.get $var3))
                                                        (local.set $phi18 (local.get $var4))
                                                        (br $If_39_0)
                                                        ;; Start else
                                                        )(else
                                                        ;; writeIfAndStartTrueBlock
                                                        (if $if4 (i32.eq (call_indirect (type $t554) (local.get $arg1) (local.get $var10) (call_ref $t0 (i32.const 1) (struct.get $java$lang$Object $vt_resolver (local.get $arg1)))) (i32.const 0))
                                                            (then
                                                                (local.set $phi15 (local.get $var5))
                                                                (local.set $phi16 (local.get $var10))
                                                                (local.set $phi17 (local.get $var3))
                                                                (local.set $phi18 (local.get $var4))
                                                                (br $If_39_0)
                                                                ;; Start else
                                                                )(else
                                                                (local.set $phi11 (local.get $var5))
                                                                (local.set $phi12 (local.get $var10))
                                                                (local.set $phi13 (local.get $var3))
                                                                (local.set $phi14 (local.get $var4))
                                                                (br $If_37_0)
                                                                ))
                                                        ;; finishIfBlock
                                                        ))
                                                ;; finishIfBlock
                                                )
                                            ;; finishBlock
                                            ;; writeIfAndStartTrueBlock
                                            (if $if5 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $phi17)))
                                                (then
                                                    ;; writeIfAndStartTrueBlock
                                                    (if $if6 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $phi18)))
                                                        (then
                                                            ;; startBlock type=NORMAL, label = If_66_0
                                                            (block $If_66_0
                                                                ;; startBlock type=NORMAL, label = If_66_1
                                                                (block $If_66_1
                                                                    ;; writeIfAndStartTrueBlock
                                                                    (if $if7 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $phi1)))
                                                                        (then
                                                                            (local.set $phi22 (local.get $phi1))
                                                                            (br $If_66_1)
                                                                            ;; Start else
                                                                            )(else
                                                                            (local.set $var21 (call $java$util$HashMap$Ljava$lang$Class$$comparableClassFor$Ljava$lang$Object$ (global.get $java$util$HashMap_cls) (local.get $arg1)))
                                                                            ;; writeIfAndStartTrueBlock
                                                                            (if $if8 (ref.is_null (local.get $var21))
                                                                                (then
                                                                                    (local.set $phi22 (local.get $var21))
                                                                                    (br $If_66_0)
                                                                                    ;; Start else
                                                                                    )(else
                                                                                    (local.set $phi22 (local.get $var21))
                                                                                    (br $If_66_1)
                                                                                    ))
                                                                            ;; finishIfBlock
                                                                            ))
                                                                    ;; finishIfBlock
                                                                    )
                                                                ;; finishBlock
                                                                (local.set $var23 (local.get $phi22))
                                                                (local.set $var24 (local.get $phi16))
                                                                (local.set $var25 (call $java$util$HashMap$I$compareComparables$Ljava$lang$Class$$Ljava$lang$Object$$Ljava$lang$Object$ (global.get $java$util$HashMap_cls) (local.get $var23) (local.get $arg1) (local.get $var24)))
                                                                ;; writeIfAndStartTrueBlock
                                                                (if $if9 (i32.eq (local.get $var25) (i32.const 0))
                                                                    (then
                                                                        (local.set $phi31 (local.get $var25))
                                                                        (br $If_66_0)
                                                                        ;; Start else
                                                                        )(else
                                                                        ;; startBlock type=NORMAL, label = If_86_0
                                                                        (block $If_86_0
                                                                            ;; writeIfAndStartTrueBlock
                                                                            (if $if10 (i32.ge_s (local.get $var25) (i32.const 0))
                                                                                (then
                                                                                    (local.set $var30 (local.get $phi18))
                                                                                    (local.set $phi27 (local.get $var25))
                                                                                    (local.set $phi28 (local.get $var30))
                                                                                    (br $If_86_0)
                                                                                    ;; Start else
                                                                                    )(else
                                                                                    (local.set $var26 (local.get $phi17))
                                                                                    ;; Here was a goto statement
                                                                                    (local.set $phi27 (local.get $var25))
                                                                                    (local.set $phi28 (local.get $var26))
                                                                                    (br $If_86_0)
                                                                                    ))
                                                                            ;; finishIfBlock
                                                                            )
                                                                        ;; finishBlock
                                                                        (local.set $var29 (local.get $phi28))
                                                                        ;; Here was a goto statement
                                                                        (local.set $phi1 (local.get $phi22))
                                                                        (local.set $phi6 (local.get $var29))
                                                                        (local.set $phi7 (local.get $phi15))
                                                                        (local.set $phi8 (local.get $phi17))
                                                                        (local.set $phi9 (local.get $phi18))
                                                                        (br $If_19_0)
                                                                        ))
                                                                ;; finishIfBlock
                                                                )
                                                            ;; finishBlock
                                                            (local.set $var32 (local.get $phi18))
                                                            (local.set $var33 (local.get $phi22))
                                                            (local.set $var34 (call $java$util$HashMap$TreeNode$Ljava$util$HashMap$TreeNode$$find$I$Ljava$lang$Object$$Ljava$lang$Class$ (local.get $var32) (local.get $arg0) (local.get $arg1) (local.get $var33)))
                                                            ;; writeIfAndStartTrueBlock
                                                            (if $if11 (ref.is_null (local.get $var34))
                                                                (then
                                                                    (local.set $var35 (local.get $phi17))
                                                                    (local.set $phi1 (local.get $phi22))
                                                                    (local.set $phi6 (local.get $var35))
                                                                    (local.set $phi7 (local.get $phi15))
                                                                    (local.set $phi8 (local.get $phi17))
                                                                    (local.set $phi9 (local.get $phi18))
                                                                    (br $If_19_0)
                                                                    ;; Start else
                                                                    )(else
                                                                    (return (local.get $var34))
                                                                    ))
                                                            ;; finishIfBlock
                                                            ;; Start else
                                                            )(else
                                                            (local.set $var20 (local.get $phi17))
                                                            ;; Here was a goto statement
                                                            (local.set $phi6 (local.get $var20))
                                                            (local.set $phi7 (local.get $phi15))
                                                            (local.set $phi8 (local.get $phi17))
                                                            (local.set $phi9 (local.get $phi18))
                                                            (br $If_19_0)
                                                            ))
                                                    ;; finishIfBlock
                                                    ;; Start else
                                                    )(else
                                                    (local.set $var19 (local.get $phi18))
                                                    ;; Here was a goto statement
                                                    (local.set $phi6 (local.get $var19))
                                                    (local.set $phi7 (local.get $phi15))
                                                    (local.set $phi8 (local.get $phi17))
                                                    (local.set $phi9 (local.get $phi18))
                                                    (br $If_19_0)
                                                    ))
                                            ;; finishIfBlock
                                            ))
                                    ;; finishIfBlock
                                    )
                                ;; finishBlock
                                (return (local.get $phi2))
                                ;; Start else
                                )(else
                                ;; Here was a goto statement
                                (local.set $phi6 (local.get $var4))
                                (local.set $phi7 (local.get $var5))
                                (local.set $phi8 (local.get $var3))
                                (local.set $phi9 (local.get $var4))
                                (br $If_19_0)
                                ))
                        ;; finishIfBlock
                        ;; Start else
                        )(else
                        ;; Here was a goto statement
                        (local.set $phi6 (local.get $var3))
                        (local.set $phi7 (local.get $var5))
                        (local.set $phi8 (local.get $var3))
                        (local.set $phi9 (local.get $var4))
                        (br $If_19_0)
                        ))
                ;; finishIfBlock
                )
            ;; finishBlock
            ;; writeIfAndStartTrueBlock
            (if $if12 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $phi6)))
                (then
                    (local.set $phi2 (local.get $phi6))
                    (br $L1212746467)
                    ;; Start else
                    )(else
                    (return (ref.null none))
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (unreachable))
    (func $java$util$HashMap$TreeNode$Ljava$util$HashMap$TreeNode$$putTreeVal$Ljava$util$HashMap$$$Ljava$util$HashMap$Node$$I$Ljava$lang$Object$$Ljava$lang$Object$ (type $t627) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object)) (param $arg2 i32) (param $arg3 (ref null $java$lang$Object)) (param $arg4 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 (ref null $java$lang$Object))
        (local $phi4 (ref null $java$lang$Object))
        (local $phi5 i32)
        (local $phi6 (ref null $java$lang$Object))
        (local $phi7 (ref null $java$lang$Object))
        (local $phi8 (ref null $java$lang$Object))
        (local $phi9 i32)
        (local $phi10 (ref null $java$lang$Object))
        (local $var11 (ref null $java$lang$Object))
        (local $phi12 (ref null $java$lang$Object))
        (local $phi13 (ref null $java$lang$Object))
        (local $var14 i32)
        (local $phi15 i32)
        (local $phi16 i32)
        (local $var17 (ref null $java$lang$Object))
        (local $var18 (ref null $java$lang$Object))
        (local $phi19 (ref null $java$lang$Object))
        (local $phi20 (ref null $java$lang$Object))
        (local $var21 (ref null $java$lang$Object))
        (local $var22 (ref null $java$lang$Object))
        (local $var23 i32)
        (local $var24 (ref null $java$lang$Object))
        (local $var25 (ref null $java$lang$Object))
        (local $var26 (ref null $java$lang$Object))
        (local $var27 (ref null $java$lang$Object))
        (local $phi28 (ref null $java$lang$Object))
        (local $phi29 (ref null $java$lang$Object))
        (local $phi30 (ref null $java$lang$Object))
        (local $var31 (ref null $java$lang$Object))
        (local $var32 (ref null $java$lang$Object))
        (local $var33 (ref null $java$lang$Object))
        (local $var34 (ref null $java$lang$Object))
        (local $var35 (ref null $java$lang$Object))
        (local $var36 (ref null $java$lang$Object))
        (local $var37 (ref null $java$lang$Object))
        (local $var38 (ref null $java$lang$Object))
        (local $var39 (ref null $java$lang$Object))
        (local $var40 (ref null $java$lang$Object))
        (local $var41 (ref null $java$lang$Object))
        (local $var42 (ref null $java$lang$Object))
        (local $phi43 i32)
        (local $phi44 (ref null $java$lang$Object))
        (local $phi45 i32)
        (local $phi46 (ref null $java$lang$Object))
        (local $var47 (ref null $java$lang$Object))
        (local $var48 (ref null $java$lang$Object))
        (local $phi49 (ref null $java$lang$Object))
        (local $var50 (ref null $java$lang$Object))
        (local $var51 (ref null $java$lang$Object))
        (local $var52 (ref null $java$lang$Object))
        (local $var53 i32)
        (local $phi54 i32)
        (local $var55 (ref null $java$lang$Object))
        (local $var56 i32)
        (local $var57 (ref null $java$lang$Object))
        (local $var58 (ref null $java$lang$Object))
        (local $var59 (ref null $java$lang$Object))
        (local $phi60 i32)
        (local $phi61 (ref null $java$lang$Object))
        (local $phi62 (ref null $java$lang$Object))
        (local $var63 (ref null $java$lang$Object))
        (local $var64 i32)
        (local $var65 (ref null $java$lang$Object))
        (local $var66 (ref null $java$lang$Object))
        (local $var67 (ref null $java$lang$Object))
        (local $phi68 (ref null $java$lang$Object))
        (local $phi69 (ref null $java$lang$Object))
        (local $phi70 (ref null $java$lang$Object))
        (local $phi71 (ref null $java$lang$Object))
        (local $var72 (ref null $java$lang$Object))
        (local $var73 (ref null $java$lang$Object))
        (local $var74 i32)
        (local $var75 (ref null $java$lang$Object))
        (local $phi76 (ref null $java$lang$Object))
        (local $phi77 (ref null $java$lang$Object))
        (local $var78 (ref null $java$lang$Object))
        (local $phi79 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = If_12_0
        (block $If_12_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (ref.is_null (struct.get $java$util$HashMap$TreeNode $parent (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var0))))
                (then
                    (local.set $phi2 (local.get $var0))
                    (local.set $phi3 (local.get $arg0))
                    (local.set $phi4 (local.get $arg1))
                    (local.set $phi5 (local.get $arg2))
                    (local.set $phi6 (local.get $arg3))
                    (local.set $phi7 (local.get $arg4))
                    (local.set $phi8 (ref.null none))
                    (local.set $phi9 (i32.const 0))
                    (local.set $phi10 (local.get $var0))
                    (br $If_12_0)
                    ;; Start else
                    )(else
                    (local.set $phi77 (local.get $var0))
                    ;; startBlock type=LOOP, label = L1246055868_2
                    (loop $L1246055868_2
                        (local.set $var78 (struct.get $java$util$HashMap$TreeNode $parent (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $phi77))))
                        ;; writeIfAndStartTrueBlock
                        (if $if1 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var78)))
                            (then
                                ;; Here was a goto statement
                                (local.set $phi77 (local.get $var78))
                                (br $L1246055868_2)
                                ;; Start else
                                )(else
                                (local.set $phi79 (local.get $phi77))
                                (local.set $var1 (local.get $phi79))
                                ;; Here was a goto statement
                                (local.set $phi2 (local.get $var0))
                                (local.set $phi3 (local.get $arg0))
                                (local.set $phi4 (local.get $arg1))
                                (local.set $phi5 (local.get $arg2))
                                (local.set $phi6 (local.get $arg3))
                                (local.set $phi7 (local.get $arg4))
                                (local.set $phi8 (ref.null none))
                                (local.set $phi9 (i32.const 0))
                                (local.set $phi10 (local.get $var1))
                                (br $If_12_0)
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (local.set $var11 (local.get $phi10))
        (local.set $phi12 (local.get $var11))
        (local.set $phi13 (local.get $var11))
        ;; startBlock type=LOOP, label = L2072814167
        (loop $L2072814167
            (local.set $var14 (struct.get $java$util$HashMap$Node $hash (ref.cast (ref null $java$util$HashMap$Node) (local.get $phi13))))
            ;; startBlock type=NORMAL, label = If_35_0
            (block $If_35_0
                ;; writeIfAndStartTrueBlock
                (if $if2 (i32.le_s (local.get $var14) (local.get $phi5))
                    (then
                        ;; writeIfAndStartTrueBlock
                        (if $if3 (i32.ge_s (local.get $var14) (local.get $phi5))
                            (then
                                (local.set $var41 (struct.get $java$util$HashMap$Node $key (ref.cast (ref null $java$util$HashMap$Node) (local.get $phi13))))
                                ;; startBlock type=NORMAL, label = If_123_0
                                (block $If_123_0
                                    ;; writeIfAndStartTrueBlock
                                    (if $if4 (ref.eq (local.get $var41) (local.get $phi6))
                                        (then
                                            (local.set $phi43 (local.get $var14))
                                            (local.set $phi44 (local.get $var41))
                                            (br $If_123_0)
                                            ;; Start else
                                            )(else
                                            ;; startBlock type=NORMAL, label = If_125_0
                                            (block $If_125_0
                                                ;; writeIfAndStartTrueBlock
                                                (if $if5 (ref.is_null (local.get $phi6))
                                                    (then
                                                        (local.set $phi45 (local.get $var14))
                                                        (local.set $phi46 (local.get $var41))
                                                        (br $If_125_0)
                                                        ;; Start else
                                                        )(else
                                                        (local.set $var42 (local.get $phi6))
                                                        ;; writeIfAndStartTrueBlock
                                                        (if $if6 (i32.eq (call_indirect (type $t554) (local.get $var42) (local.get $var41) (call_ref $t0 (i32.const 1) (struct.get $java$lang$Object $vt_resolver (local.get $var42)))) (i32.const 0))
                                                            (then
                                                                (local.set $phi45 (local.get $var14))
                                                                (local.set $phi46 (local.get $var41))
                                                                (br $If_125_0)
                                                                ;; Start else
                                                                )(else
                                                                (local.set $phi43 (local.get $var14))
                                                                (local.set $phi44 (local.get $var41))
                                                                (br $If_123_0)
                                                                ))
                                                        ;; finishIfBlock
                                                        ))
                                                ;; finishIfBlock
                                                )
                                            ;; finishBlock
                                            ;; startBlock type=NORMAL, label = If_140_0
                                            (block $If_140_0
                                                ;; startBlock type=NORMAL, label = If_140_1
                                                (block $If_140_1
                                                    ;; writeIfAndStartTrueBlock
                                                    (if $if7 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $phi8)))
                                                        (then
                                                            (local.set $phi49 (local.get $phi8))
                                                            (br $If_140_1)
                                                            ;; Start else
                                                            )(else
                                                            (local.set $var47 (local.get $phi6))
                                                            (local.set $var48 (call $java$util$HashMap$Ljava$lang$Class$$comparableClassFor$Ljava$lang$Object$ (global.get $java$util$HashMap_cls) (local.get $var47)))
                                                            ;; writeIfAndStartTrueBlock
                                                            (if $if8 (ref.is_null (local.get $var48))
                                                                (then
                                                                    (local.set $phi49 (local.get $var48))
                                                                    (br $If_140_0)
                                                                    ;; Start else
                                                                    )(else
                                                                    (local.set $phi49 (local.get $var48))
                                                                    (br $If_140_1)
                                                                    ))
                                                            ;; finishIfBlock
                                                            ))
                                                    ;; finishIfBlock
                                                    )
                                                ;; finishBlock
                                                (local.set $var50 (local.get $phi49))
                                                (local.set $var51 (local.get $phi6))
                                                (local.set $var52 (local.get $phi46))
                                                (local.set $var53 (call $java$util$HashMap$I$compareComparables$Ljava$lang$Class$$Ljava$lang$Object$$Ljava$lang$Object$ (global.get $java$util$HashMap_cls) (local.get $var50) (local.get $var51) (local.get $var52)))
                                                ;; writeIfAndStartTrueBlock
                                                (if $if9 (i32.ne (local.get $var53) (i32.const 0))
                                                    (then
                                                        (local.set $phi8 (local.get $phi49))
                                                        (local.set $phi15 (local.get $var53))
                                                        (local.set $phi16 (local.get $phi45))
                                                        (br $If_35_0)
                                                        ;; Start else
                                                        )(else
                                                        (local.set $phi54 (local.get $var53))
                                                        (br $If_140_0)
                                                        ))
                                                ;; finishIfBlock
                                                )
                                            ;; finishBlock
                                            ;; startBlock type=NORMAL, label = If_166_0
                                            (block $If_166_0
                                                ;; writeIfAndStartTrueBlock
                                                (if $if10 (i32.ne (local.get $phi9) (i32.const 0))
                                                    (then
                                                        (local.set $phi60 (local.get $phi9))
                                                        (br $If_166_0)
                                                        ;; Start else
                                                        )(else
                                                        (local.set $var55 (struct.get $java$util$HashMap$TreeNode $left (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $phi13))))
                                                        ;; startBlock type=NORMAL, label = If_173_0
                                                        (block $If_173_0
                                                            ;; startBlock type=NORMAL, label = If_173_1
                                                            (block $If_173_1
                                                                ;; writeIfAndStartTrueBlock
                                                                (if $if11 (ref.is_null (local.get $var55))
                                                                    (then
                                                                        (local.set $phi60 (i32.const 1))
                                                                        (local.set $phi62 (local.get $var55))
                                                                        (br $If_173_1)
                                                                        ;; Start else
                                                                        )(else
                                                                        (local.set $var56 (local.get $phi5))
                                                                        (local.set $var57 (local.get $phi6))
                                                                        (local.set $var58 (local.get $phi49))
                                                                        (local.set $var59 (call $java$util$HashMap$TreeNode$Ljava$util$HashMap$TreeNode$$find$I$Ljava$lang$Object$$Ljava$lang$Class$ (local.get $var55) (local.get $var56) (local.get $var57) (local.get $var58)))
                                                                        ;; writeIfAndStartTrueBlock
                                                                        (if $if12 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var59)))
                                                                            (then
                                                                                (local.set $phi60 (i32.const 1))
                                                                                (local.set $phi68 (local.get $var59))
                                                                                (local.set $phi69 (local.get $var55))
                                                                                (br $If_173_0)
                                                                                ;; Start else
                                                                                )(else
                                                                                (local.set $phi60 (i32.const 1))
                                                                                (local.set $phi61 (local.get $var59))
                                                                                (local.set $phi62 (local.get $var55))
                                                                                (br $If_173_1)
                                                                                ))
                                                                        ;; finishIfBlock
                                                                        ))
                                                                ;; finishIfBlock
                                                                )
                                                            ;; finishBlock
                                                            (local.set $var63 (struct.get $java$util$HashMap$TreeNode $right (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $phi13))))
                                                            ;; writeIfAndStartTrueBlock
                                                            (if $if13 (ref.is_null (local.get $var63))
                                                                (then
                                                                    (local.set $phi70 (local.get $phi61))
                                                                    (local.set $phi71 (local.get $var63))
                                                                    (br $If_166_0)
                                                                    ;; Start else
                                                                    )(else
                                                                    (local.set $var64 (local.get $phi5))
                                                                    (local.set $var65 (local.get $phi6))
                                                                    (local.set $var66 (local.get $phi49))
                                                                    (local.set $var67 (call $java$util$HashMap$TreeNode$Ljava$util$HashMap$TreeNode$$find$I$Ljava$lang$Object$$Ljava$lang$Class$ (local.get $var63) (local.get $var64) (local.get $var65) (local.get $var66)))
                                                                    ;; writeIfAndStartTrueBlock
                                                                    (if $if14 (ref.is_null (local.get $var67))
                                                                        (then
                                                                            (local.set $phi70 (local.get $var67))
                                                                            (local.set $phi71 (local.get $var63))
                                                                            (br $If_166_0)
                                                                            ;; Start else
                                                                            )(else
                                                                            (local.set $phi68 (local.get $var67))
                                                                            (local.set $phi69 (local.get $var63))
                                                                            (br $If_173_0)
                                                                            ))
                                                                    ;; finishIfBlock
                                                                    ))
                                                            ;; finishIfBlock
                                                            )
                                                        ;; finishBlock
                                                        (return (local.get $phi68))
                                                        ))
                                                ;; finishIfBlock
                                                )
                                            ;; finishBlock
                                            (local.set $var72 (local.get $phi6))
                                            (local.set $var73 (local.get $phi46))
                                            (drop (call $java$util$HashMap$TreeNode_i))
                                            (local.set $var74 (call $java$util$HashMap$TreeNode$I$tieBreakOrder$Ljava$lang$Object$$Ljava$lang$Object$ (call $java$util$HashMap$TreeNode_i) (local.get $var72) (local.get $var73)))
                                            (local.set $phi8 (local.get $phi49))
                                            (local.set $phi9 (local.get $phi60))
                                            (local.set $phi15 (local.get $var74))
                                            (local.set $phi16 (local.get $phi45))
                                            (br $If_35_0)
                                            ))
                                    ;; finishIfBlock
                                    )
                                ;; finishBlock
                                (return (local.get $phi13))
                                ;; Start else
                                )(else
                                ;; Here was a goto statement
                                (local.set $phi15 (i32.const 1))
                                (local.set $phi16 (local.get $var14))
                                (br $If_35_0)
                                ))
                        ;; finishIfBlock
                        ;; Start else
                        )(else
                        ;; Here was a goto statement
                        (local.set $phi15 (i32.const -1))
                        (local.set $phi16 (local.get $var14))
                        (br $If_35_0)
                        ))
                ;; finishIfBlock
                )
            ;; finishBlock
            (local.set $var17 (local.get $phi13))
            ;; startBlock type=NORMAL, label = If_44_0
            (block $If_44_0
                ;; writeIfAndStartTrueBlock
                (if $if15 (i32.gt_s (local.get $phi15) (i32.const 0))
                    (then
                        (local.set $var40 (struct.get $java$util$HashMap$TreeNode $right (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $phi13))))
                        (local.set $phi19 (local.get $var17))
                        (local.set $phi20 (local.get $var40))
                        (br $If_44_0)
                        ;; Start else
                        )(else
                        (local.set $var18 (struct.get $java$util$HashMap$TreeNode $left (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $phi13))))
                        ;; Here was a goto statement
                        (local.set $phi19 (local.get $var17))
                        (local.set $phi20 (local.get $var18))
                        (br $If_44_0)
                        ))
                ;; finishIfBlock
                )
            ;; finishBlock
            (local.set $var21 (local.get $phi20))
            ;; writeIfAndStartTrueBlock
            (if $if16 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $phi20)))
                (then
                    ;; Here was a goto statement
                    (local.set $phi13 (local.get $var21))
                    (br $L2072814167)
                    ;; Start else
                    )(else
                    (local.set $var22 (struct.get $java$util$HashMap$Node $next (ref.cast (ref null $java$util$HashMap$Node) (local.get $phi19))))
                    (local.set $var23 (local.get $phi5))
                    (local.set $var24 (local.get $phi6))
                    (local.set $var25 (local.get $phi7))
                    (drop (call $java$util$HashMap$TreeNode_i))
                    (local.set $var75 (struct.new $java$util$HashMap$TreeNode (struct.get $java$util$HashMap$TreeNode_rtt $factoryFor (global.get $java$util$HashMap$TreeNode_cls)) (ref.func $java$util$HashMap$TreeNode_vt) (ref.null noextern) (struct.get $java$util$HashMap$TreeNode_rtt $classImplTypes (global.get $java$util$HashMap$TreeNode_cls)) (ref.null none) (i32.const 0) (ref.null none) (ref.null none) (ref.null none) (ref.null none) (ref.null none) (ref.null none) (i32.const 0)))
                    (struct.set $java$util$HashMap$Node $hash (ref.cast (ref null $java$util$HashMap$Node) (local.get $var75)) (local.get $var23))
                    (struct.set $java$util$HashMap$Node $key (ref.cast (ref null $java$util$HashMap$Node) (local.get $var75)) (ref.cast (ref null $java$lang$Object) (local.get $var24)))
                    (struct.set $java$util$HashMap$Node $value (ref.cast (ref null $java$util$HashMap$Node) (local.get $var75)) (ref.cast (ref null $java$lang$Object) (local.get $var25)))
                    (struct.set $java$util$HashMap$Node $next (ref.cast (ref null $java$util$HashMap$Node) (local.get $var75)) (ref.cast (ref null $java$lang$Object) (local.get $var22)))
                    (local.set $phi76 (local.get $var75))
                    (local.set $var26 (local.get $phi76))
                    ;; startBlock type=NORMAL, label = If_69_0
                    (block $If_69_0
                        ;; writeIfAndStartTrueBlock
                        (if $if17 (i32.gt_s (local.get $phi15) (i32.const 0))
                            (then
                                (local.set $var39 (local.get $phi19))
                                (struct.set $java$util$HashMap$TreeNode $right (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var39)) (ref.cast (ref null $java$lang$Object) (local.get $var26)))
                                (local.set $phi28 (local.get $var21))
                                (local.set $phi29 (local.get $var22))
                                (local.set $phi30 (local.get $var26))
                                (br $If_69_0)
                                ;; Start else
                                )(else
                                (local.set $var27 (local.get $phi19))
                                (struct.set $java$util$HashMap$TreeNode $left (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var27)) (ref.cast (ref null $java$lang$Object) (local.get $var26)))
                                ;; Here was a goto statement
                                (local.set $phi28 (local.get $var21))
                                (local.set $phi29 (local.get $var22))
                                (local.set $phi30 (local.get $var26))
                                (br $If_69_0)
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    (local.set $var31 (local.get $phi19))
                    (struct.set $java$util$HashMap$Node $next (ref.cast (ref null $java$util$HashMap$Node) (local.get $var31)) (ref.cast (ref null $java$lang$Object) (local.get $phi30)))
                    (local.set $var32 (local.get $phi30))
                    (local.set $var33 (local.get $phi30))
                    (local.set $var34 (local.get $phi19))
                    (struct.set $java$util$HashMap$TreeNode $prev (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var33)) (ref.cast (ref null $java$lang$Object) (local.get $var34)))
                    (struct.set $java$util$HashMap$TreeNode $parent (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var32)) (ref.cast (ref null $java$lang$Object) (local.get $var34)))
                    ;; startBlock type=NORMAL, label = If_91_0
                    (block $If_91_0
                        ;; writeIfAndStartTrueBlock
                        (if $if18 (ref.is_null (local.get $phi29))
                            (then
                                (br $If_91_0)
                                ;; Start else
                                )(else
                                (local.set $var35 (ref.cast (ref null $java$lang$Object) (local.get $phi29)))
                                (struct.set $java$util$HashMap$TreeNode $prev (ref.cast (ref null $java$util$HashMap$TreeNode) (local.get $var35)) (ref.cast (ref null $java$lang$Object) (local.get $phi30)))
                                (br $If_91_0)
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    (local.set $var36 (local.get $phi4))
                    (local.set $var37 (local.get $phi12))
                    (local.set $var38 (local.get $phi30))
                    (call $java$util$HashMap$TreeNode$V$moveRootToFront$$Ljava$util$HashMap$Node$$Ljava$util$HashMap$TreeNode$ (call $java$util$HashMap$TreeNode_i) (local.get $var36) (call $java$util$HashMap$TreeNode$Ljava$util$HashMap$TreeNode$$balanceInsertion$Ljava$util$HashMap$TreeNode$$Ljava$util$HashMap$TreeNode$ (call $java$util$HashMap$TreeNode_i) (local.get $var37) (local.get $var38)))
                    (return (ref.null none))
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (unreachable))
    (func $java$util$HashMap$TreeNode$V$$init$$I$Ljava$lang$Object$$Ljava$lang$Object$$Ljava$util$HashMap$Node$ (type $t598) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (param $arg1 (ref null $java$lang$Object)) (param $arg2 (ref null $java$lang$Object)) (param $arg3 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$util$HashMap$Node $hash (ref.cast (ref null $java$util$HashMap$Node) (local.get $var0)) (local.get $arg0))
        (struct.set $java$util$HashMap$Node $key (ref.cast (ref null $java$util$HashMap$Node) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg1)))
        (struct.set $java$util$HashMap$Node $value (ref.cast (ref null $java$util$HashMap$Node) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg2)))
        (struct.set $java$util$HashMap$Node $next (ref.cast (ref null $java$util$HashMap$Node) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg3)))
        (return)
        (unreachable))
    (func $java$util$Properties$EntrySet$V$$init$$Ljava$util$Set$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$util$Properties$EntrySet $entrySet (ref.cast (ref null $java$util$Properties$EntrySet) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (return)
        (unreachable))
    (func $java$util$Properties$EntrySet$Ljava$util$Iterator$$iterator$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (struct.get $java$util$Properties$EntrySet $entrySet (ref.cast (ref null $java$util$Properties$EntrySet) (local.get $thisref))))
        (return (call_indirect (type $t553) (local.get $var0) (call_ref $t0 (i32.const 146) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var0))))))
        (unreachable))
    (func $java$util$Properties$EntrySet$I$size$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (struct.get $java$util$Properties$EntrySet $entrySet (ref.cast (ref null $java$util$Properties$EntrySet) (local.get $thisref))))
        (return (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 100) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var0))))))
        (unreachable))
    (func $java$util$Properties$EntrySet$Z$isEmpty$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (struct.get $java$util$Properties$EntrySet $entrySet (ref.cast (ref null $java$util$Properties$EntrySet) (local.get $thisref))))
        (return (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 38) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var0))))))
        (unreachable))
    (func $java$util$Properties$EntrySet$Ljava$lang$String$$toString$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (struct.get $java$util$Properties$EntrySet $entrySet (ref.cast (ref null $java$util$Properties$EntrySet) (local.get $thisref))))
        (return (call_indirect (type $t553) (local.get $var0) (call_ref $t0 (i32.const 0) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var0))))))
        (unreachable))
    (func $java$util$Properties$EntrySet$Z$equals$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 (ref null $java$lang$Object))
        (local $phi4 i32)
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = If_5_0
        (block $If_5_0
            ;; startBlock type=NORMAL, label = If_5_1
            (block $If_5_1
                ;; writeIfAndStartTrueBlock
                (if $if0 (ref.eq (local.get $arg0) (local.get $var0))
                    (then
                        (local.set $phi2 (local.get $var0))
                        (local.set $phi3 (local.get $arg0))
                        (br $If_5_1)
                        ;; Start else
                        )(else
                        (local.set $var1 (struct.get $java$util$Properties$EntrySet $entrySet (ref.cast (ref null $java$util$Properties$EntrySet) (local.get $var0))))
                        ;; writeIfAndStartTrueBlock
                        (if $if1 (i32.eq (call_indirect (type $t554) (local.get $var1) (local.get $arg0) (call_ref $t0 (i32.const 1) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var1))))) (i32.const 0))
                            (then
                                (local.set $phi2 (local.get $var0))
                                (local.set $phi3 (local.get $arg0))
                                (local.set $phi4 (i32.const 0))
                                (br $If_5_0)
                                ;; Start else
                                )(else
                                (local.set $phi2 (local.get $var0))
                                (local.set $phi3 (local.get $arg0))
                                (br $If_5_1)
                                ))
                        ;; finishIfBlock
                        ))
                ;; finishIfBlock
                )
            ;; finishBlock
            ;; Here was a goto statement
            (local.set $phi4 (i32.const 1))
            (br $If_5_0)
            )
        ;; finishBlock
        (return (local.get $phi4))
        (unreachable))
    (func $java$util$Properties$EntrySet$I$hashCode$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (struct.get $java$util$Properties$EntrySet $entrySet (ref.cast (ref null $java$util$Properties$EntrySet) (local.get $thisref))))
        (return (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 2) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var0))))))
        (unreachable))
    (func $java$util$ImmutableCollections$MapN$V$$init$$$Ljava$lang$Object$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 i32)
        (local $var4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $var6 (ref null $java$lang$Object))
        (local $var7 (ref null $java$lang$Object))
        (local $var8 (ref null $java$lang$Object))
        (local $var9 i32)
        (local $var10 (ref null $java$lang$Object))
        (local $var11 (ref null $java$lang$Object))
        (local $var12 (ref null $java$lang$Object))
        (local $var13 (ref null $java$lang$Object))
        (local $var14 i32)
        (local $var15 (ref null $java$lang$Object))
        (local $var16 (ref null $java$lang$Object))
        (local $var17 i32)
        (local $var18 (ref null $java$lang$Object))
        (local $phi19 (ref null $java$lang$Object))
        (local $var20 (ref null $java$lang$Object))
        (local $phi21 (ref null $java$lang$Object))
        (local $var22 (ref null $java$lang$Object))
        (local $phi23 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (i32.eq (i32.and (array.len $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $arg0)))) (i32.const 1)) (i32.const 0))
            (then
                (struct.set $java$util$ImmutableCollections$MapN $size (ref.cast (ref null $java$util$ImmutableCollections$MapN) (local.get $var0)) (i32.shr_s (array.len $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $arg0)))) (i32.const 1)))
                (struct.set $java$util$ImmutableCollections$MapN $table (ref.cast (ref null $java$util$ImmutableCollections$MapN) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (struct.new $obj_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t549 (i32.and (i32.add (i32.mul (i32.const 2) (array.len $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $arg0))))) (i32.const 1)) (i32.const -2))))))
                (local.set $phi2 (local.get $var0))
                (local.set $phi3 (i32.const 0))
                ;; startBlock type=LOOP, label = L27097248
                (loop $L27097248
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (i32.ge_s (local.get $phi3) (array.len $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $arg0)))))
                        (then
                            (return)
                            ;; Start else
                            )(else
                            (local.set $var4 (array.get $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $arg0))) (local.get $phi3)))
                            ;; writeIfAndStartTrueBlock
                            (if $if2 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var4)))
                                (then
                                    (local.set $phi21 (local.get $var4))
                                    (local.set $var5 (local.get $phi21))
                                    (local.set $var6 (array.get $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $arg0))) (i32.add (local.get $phi3) (i32.const 1))))
                                    ;; writeIfAndStartTrueBlock
                                    (if $if3 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var6)))
                                        (then
                                            (local.set $phi19 (local.get $var6))
                                            (local.set $var7 (local.get $phi19))
                                            (local.set $var8 (local.get $phi2))
                                            (local.set $var9 (call $java$util$ImmutableCollections$MapN$I$probe$Ljava$lang$Object$ (local.get $var8) (local.get $var5)))
                                            ;; writeIfAndStartTrueBlock
                                            (if $if4 (i32.lt_s (local.get $var9) (i32.const 0))
                                                (then
                                                    (local.set $var14 (i32.sub (i32.const 0) (i32.add (local.get $var9) (i32.const 1))))
                                                    (local.set $var15 (struct.get $java$util$ImmutableCollections$MapN $table (ref.cast (ref null $java$util$ImmutableCollections$MapN) (local.get $phi2))))
                                                    (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var15))) (local.get $var14) (local.get $var5))
                                                    (local.set $var16 (struct.get $java$util$ImmutableCollections$MapN $table (ref.cast (ref null $java$util$ImmutableCollections$MapN) (local.get $phi2))))
                                                    (local.set $var17 (i32.add (local.get $var14) (i32.const 1)))
                                                    (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var16))) (local.get $var17) (local.get $var7))
                                                    (local.set $phi3 (i32.add (local.get $phi3) (i32.const 2)))
                                                    ;; Here was a goto statement
                                                    (br $L27097248)
                                                    ;; Start else
                                                    )(else
                                                    (local.set $var10 (struct.new $java$lang$IllegalArgumentException (struct.get $java$lang$IllegalArgumentException_rtt $factoryFor (global.get $java$lang$IllegalArgumentException_cls)) (ref.func $java$lang$IllegalArgumentException_vt) (ref.null noextern) (struct.get $java$lang$IllegalArgumentException_rtt $classImplTypes (global.get $java$lang$IllegalArgumentException_cls)) (ref.null none) (ref.null none)))
                                                    (local.set $var11 (struct.new $java$lang$StringBuilder (struct.get $java$lang$StringBuilder_rtt $factoryFor (global.get $java$lang$StringBuilder_cls)) (ref.func $java$lang$StringBuilder_vt) (ref.null noextern) (struct.get $java$lang$StringBuilder_rtt $classImplTypes (global.get $java$lang$StringBuilder_cls))))
                                                    (call $java$lang$StringBuilder$V$initializeWith$I (local.get $var11) (i32.const 10))
                                                    (local.set $var12 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var11) (global.get $stringpool_73)))
                                                    ;; startBlock type=NORMAL, label = If_130_0
                                                    (block $If_130_0
                                                        ;; writeIfAndStartTrueBlock
                                                        (if $if5 (ref.is_null (local.get $var5))
                                                            (then
                                                                (local.set $phi23 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var12) (global.get $stringpool_0)))
                                                                (br $If_130_0)
                                                                ;; Start else
                                                                )(else
                                                                (local.set $var22 (call_indirect (type $t553) (local.get $var5) (call_ref $t0 (i32.const 0) (struct.get $java$lang$Object $vt_resolver (local.get $var5)))))
                                                                (local.set $phi23 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var12) (local.get $var22)))
                                                                (br $If_130_0)
                                                                ))
                                                        ;; finishIfBlock
                                                        )
                                                    ;; finishBlock
                                                    (local.set $var13 (local.get $phi23))
                                                    (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var10)) (ref.cast (ref null $java$lang$Object) (call $java$lang$StringBuilder$Ljava$lang$String$$toString$$ (local.get $var13))))
                                                    (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var10)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                                    (throw $javaexception (local.get $var10))
                                                    ))
                                            ;; finishIfBlock
                                            ;; Start else
                                            )(else
                                            (local.set $var18 (struct.new $java$lang$NullPointerException (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)) (ref.func $java$lang$NullPointerException_vt) (ref.null noextern) (struct.get $java$lang$NullPointerException_rtt $classImplTypes (global.get $java$lang$NullPointerException_cls)) (ref.null none) (ref.null none) (i32.const 0) (ref.null none)))
                                            (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var18)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                            (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var18)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                            (throw $javaexception (local.get $var18))
                                            ))
                                    ;; finishIfBlock
                                    ;; Start else
                                    )(else
                                    (local.set $var20 (struct.new $java$lang$NullPointerException (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)) (ref.func $java$lang$NullPointerException_vt) (ref.null noextern) (struct.get $java$lang$NullPointerException_rtt $classImplTypes (global.get $java$lang$NullPointerException_cls)) (ref.null none) (ref.null none) (i32.const 0) (ref.null none)))
                                    (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var20)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                    (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var20)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                    (throw $javaexception (local.get $var20))
                                    ))
                            ;; finishIfBlock
                            ))
                    ;; finishIfBlock
                    )
                ;; finishBlock
                ;; Start else
                )(else
                (local.set $var1 (struct.new $java$lang$InternalError (struct.get $java$lang$InternalError_rtt $factoryFor (global.get $java$lang$InternalError_cls)) (ref.func $java$lang$InternalError_vt) (ref.null noextern) (struct.get $java$lang$InternalError_rtt $classImplTypes (global.get $java$lang$InternalError_cls)) (ref.null none) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_72)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var1))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$util$ImmutableCollections$MapN$I$probe$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 i32)
        (local $var2 i32)
        (local $var3 i32)
        (local $phi4 (ref null $java$lang$Object))
        (local $phi5 i32)
        (local $var6 (ref null $java$lang$Object))
        (local $phi7 i32)
        (local $phi8 (ref null $java$lang$Object))
        (local $phi9 i32)
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (call_indirect (type $t555) (local.get $arg0) (call_ref $t0 (i32.const 2) (struct.get $java$lang$Object $vt_resolver (local.get $arg0)))))
        (local.set $var2 (i32.shr_s (array.len $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (struct.get $java$util$ImmutableCollections$MapN $table (ref.cast (ref null $java$util$ImmutableCollections$MapN) (local.get $var0)))))) (i32.const 1)))
        (drop (call $java$lang$Math_i))
        (drop (call $java$lang$Math_i))
        (local.set $phi9 (i32.sub (local.get $var1) (i32.mul (call $java$lang$Math$I$floorDiv$I$I (call $java$lang$Math_i) (local.get $var1) (local.get $var2)) (local.get $var2))))
        (local.set $var3 (i32.shl (local.get $phi9) (i32.const 1)))
        (local.set $phi4 (local.get $var0))
        (local.set $phi5 (local.get $var3))
        ;; startBlock type=LOOP, label = L1636049142
        (loop $L1636049142
            (local.set $var6 (array.get $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (struct.get $java$util$ImmutableCollections$MapN $table (ref.cast (ref null $java$util$ImmutableCollections$MapN) (local.get $phi4))))) (local.get $phi5)))
            ;; writeIfAndStartTrueBlock
            (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var6)))
                (then
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (i32.eq (call_indirect (type $t554) (local.get $arg0) (local.get $var6) (call_ref $t0 (i32.const 1) (struct.get $java$lang$Object $vt_resolver (local.get $arg0)))) (i32.const 0))
                        (then
                            (local.set $phi5 (i32.add (local.get $phi5) (i32.const 2)))
                            ;; startBlock type=NORMAL, label = If_43_0
                            (block $If_43_0
                                ;; writeIfAndStartTrueBlock
                                (if $if2 (i32.ne (local.get $phi5) (array.len $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (struct.get $java$util$ImmutableCollections$MapN $table (ref.cast (ref null $java$util$ImmutableCollections$MapN) (local.get $phi4)))))))
                                    (then
                                        (local.set $phi7 (local.get $phi5))
                                        (local.set $phi8 (local.get $var6))
                                        (br $If_43_0)
                                        ;; Start else
                                        )(else
                                        (local.set $phi7 (i32.const 0))
                                        (local.set $phi8 (local.get $var6))
                                        (br $If_43_0)
                                        ))
                                ;; finishIfBlock
                                )
                            ;; finishBlock
                            ;; Here was a goto statement
                            (local.set $phi5 (local.get $phi7))
                            (br $L1636049142)
                            ;; Start else
                            )(else
                            (return (local.get $phi5))
                            ))
                    ;; finishIfBlock
                    ;; Start else
                    )(else
                    (return (i32.sub (i32.sub (i32.const 0) (local.get $phi5)) (i32.const 1)))
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (unreachable))
    (func $java$util$ImmutableCollections$MapN$Ljava$lang$Object$$get$Ljava$lang$Object$ (type $t559) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 i32)
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (i32.ne (struct.get $java$util$ImmutableCollections$MapN $size (ref.cast (ref null $java$util$ImmutableCollections$MapN) (local.get $var0))) (i32.const 0))
            (then
                (local.set $var1 (call $java$util$ImmutableCollections$MapN$I$probe$Ljava$lang$Object$ (local.get $var0) (local.get $arg0)))
                ;; writeIfAndStartTrueBlock
                (if $if1 (i32.lt_s (local.get $var1) (i32.const 0))
                    (then
                        (return (ref.null none))
                        ;; Start else
                        )(else
                        (local.set $var2 (struct.get $java$util$ImmutableCollections$MapN $table (ref.cast (ref null $java$util$ImmutableCollections$MapN) (local.get $var0))))
                        (return (array.get $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var2))) (i32.add (local.get $var1) (i32.const 1))))
                        ))
                ;; finishIfBlock
                ;; Start else
                )(else
                ;; writeIfAndStartTrueBlock
                (if $if2 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg0)))
                    (then
                        (return (ref.null none))
                        ;; Start else
                        )(else
                        (local.set $var3 (struct.new $java$lang$NullPointerException (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)) (ref.func $java$lang$NullPointerException_vt) (ref.null noextern) (struct.get $java$lang$NullPointerException_rtt $classImplTypes (global.get $java$lang$NullPointerException_cls)) (ref.null none) (ref.null none) (i32.const 0) (ref.null none)))
                        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var3)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var3)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                        (throw $javaexception (local.get $var3))
                        ))
                ;; finishIfBlock
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$util$ImmutableCollections$MapN$I$hashCode$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $phi0 (ref null $java$lang$Object))
        (local $phi1 i32)
        (local $phi2 i32)
        (local $var3 (ref null $java$lang$Object))
        (local $var4 i32)
        (local $var5 i32)
        (local $var6 (ref null $java$lang$Object))
        (local $phi7 i32)
        (local $phi8 (ref null $java$lang$Object))
        (local.set $phi0 (local.get $thisref))
        (local.set $phi1 (i32.const 0))
        (local.set $phi2 (i32.const 0))
        ;; startBlock type=LOOP, label = L303473893
        (loop $L303473893
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ge_s (local.get $phi2) (array.len $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (struct.get $java$util$ImmutableCollections$MapN $table (ref.cast (ref null $java$util$ImmutableCollections$MapN) (local.get $phi0)))))))
                (then
                    (return (local.get $phi1))
                    ;; Start else
                    )(else
                    (local.set $var3 (array.get $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (struct.get $java$util$ImmutableCollections$MapN $table (ref.cast (ref null $java$util$ImmutableCollections$MapN) (local.get $phi0))))) (local.get $phi2)))
                    ;; startBlock type=NORMAL, label = If_16_0
                    (block $If_16_0
                        ;; writeIfAndStartTrueBlock
                        (if $if1 (ref.is_null (local.get $var3))
                            (then
                                (local.set $phi7 (local.get $phi1))
                                (local.set $phi8 (local.get $var3))
                                (br $If_16_0)
                                ;; Start else
                                )(else
                                (local.set $var4 (local.get $phi1))
                                (local.set $var5 (call_indirect (type $t555) (local.get $var3) (call_ref $t0 (i32.const 2) (struct.get $java$lang$Object $vt_resolver (local.get $var3)))))
                                (local.set $var6 (array.get $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (struct.get $java$util$ImmutableCollections$MapN $table (ref.cast (ref null $java$util$ImmutableCollections$MapN) (local.get $phi0))))) (i32.add (local.get $phi2) (i32.const 1))))
                                (local.set $phi7 (i32.add (local.get $var4) (i32.xor (local.get $var5) (call_indirect (type $t555) (local.get $var6) (call_ref $t0 (i32.const 2) (struct.get $java$lang$Object $vt_resolver (local.get $var6)))))))
                                (local.set $phi8 (local.get $var3))
                                (br $If_16_0)
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    (local.set $phi2 (i32.add (local.get $phi2) (i32.const 2)))
                    ;; Here was a goto statement
                    (local.set $phi1 (local.get $phi7))
                    (br $L303473893)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (unreachable))
    (func $java$util$ImmutableCollections$MapN$I$size$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (return (struct.get $java$util$ImmutableCollections$MapN $size (ref.cast (ref null $java$util$ImmutableCollections$MapN) (local.get $thisref))))
        (unreachable))
    (func $java$util$ImmutableCollections$MapN$Z$containsKey$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 i32)
        (local $phi4 (ref null $java$lang$Object))
        (local $phi5 (ref null $java$lang$Object))
        (local $var6 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg0)))
            (then
                ;; startBlock type=NORMAL, label = If_6_0
                (block $If_6_0
                    ;; startBlock type=NORMAL, label = If_6_1
                    (block $If_6_1
                        ;; writeIfAndStartTrueBlock
                        (if $if1 (i32.le_s (struct.get $java$util$ImmutableCollections$MapN $size (ref.cast (ref null $java$util$ImmutableCollections$MapN) (local.get $var0))) (i32.const 0))
                            (then
                                (local.set $phi4 (local.get $var0))
                                (local.set $phi5 (local.get $arg0))
                                (br $If_6_1)
                                ;; Start else
                                )(else
                                ;; writeIfAndStartTrueBlock
                                (if $if2 (i32.lt_s (call $java$util$ImmutableCollections$MapN$I$probe$Ljava$lang$Object$ (local.get $var0) (local.get $arg0)) (i32.const 0))
                                    (then
                                        (local.set $phi4 (local.get $var0))
                                        (local.set $phi5 (local.get $arg0))
                                        (br $If_6_1)
                                        ;; Start else
                                        )(else
                                        ;; Here was a goto statement
                                        (local.set $phi1 (local.get $var0))
                                        (local.set $phi2 (local.get $arg0))
                                        (local.set $phi3 (i32.const 1))
                                        (br $If_6_0)
                                        ))
                                ;; finishIfBlock
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    (local.set $phi1 (local.get $phi4))
                    (local.set $phi2 (local.get $phi5))
                    (local.set $phi3 (i32.const 0))
                    (br $If_6_0)
                    )
                ;; finishBlock
                (return (local.get $phi3))
                ;; Start else
                )(else
                (local.set $var6 (struct.new $java$lang$NullPointerException (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)) (ref.func $java$lang$NullPointerException_vt) (ref.null noextern) (struct.get $java$lang$NullPointerException_rtt $classImplTypes (global.get $java$lang$NullPointerException_cls)) (ref.null none) (ref.null none) (i32.const 0) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var6)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var6)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var6))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$util$ImmutableCollections$MapN$Ljava$util$Set$$entrySet$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (struct.new $java$util$ImmutableCollections$MapN$1 (struct.get $java$util$ImmutableCollections$MapN$1_rtt $factoryFor (global.get $java$util$ImmutableCollections$MapN$1_cls)) (ref.func $java$util$ImmutableCollections$MapN$1_vt) (ref.null noextern) (struct.get $java$util$ImmutableCollections$MapN$1_rtt $classImplTypes (global.get $java$util$ImmutableCollections$MapN$1_cls)) (ref.null none)))
        (struct.set $java$util$ImmutableCollections$MapN$1 $this$0 (ref.cast (ref null $java$util$ImmutableCollections$MapN$1) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (local.get $var0)))
        (return (local.get $var1))
        (unreachable))
    (func $java$util$ImmutableCollections$MapN$Z$isEmpty$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 i32)
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = If_5_0
        (block $If_5_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ne (struct.get $java$util$ImmutableCollections$MapN $size (ref.cast (ref null $java$util$ImmutableCollections$MapN) (local.get $var0))) (i32.const 0))
                (then
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (i32.const 0))
                    (br $If_5_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (i32.const 1))
                    (br $If_5_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi2))
        (unreachable))
    (func $java$lang$InternalError$V$$init$$Ljava$lang$String$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return)
        (unreachable))
    (func $java$lang$InternalError$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return)
        (unreachable))
    (func $java$lang$InternalError$V$$init$$Ljava$lang$Throwable$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (return)
        (unreachable))
    (func $java$lang$NullPointerException$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return)
        (unreachable))
    (func $java$lang$NullPointerException$V$$init$$Ljava$lang$String$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return)
        (unreachable))
    (func $java$lang$NullPointerException$Ljava$lang$String$$getMessage$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $var6 (ref null $java$lang$Object))
        (local $var7 (ref null $java$lang$Object))
        (local $var8 (ref null $java$lang$Object))
        (local $phi9 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $phi9 (struct.get $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0))))
        (local.set $var1 (local.get $phi9))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var1)))
            (then
                (return (local.get $var1))
                ;; Start else
                )(else
                ;; Monitor enter on de.mirkosertic.bytecoder.core.ir.Variable@4966d232
                (local.set $phi2 (local.get $var0))
                (local.set $phi3 (local.get $var0))
                ;; startBlock type=NORMAL, label = TryCatch_11_0
                (block $TryCatch_11_0
                    ;; startTryCatch
                    (try $trycatch_0 (do
                            ;; startBlock type=NORMAL, label = If_21_0
                            (block $If_21_0
                                ;; writeIfAndStartTrueBlock
                                (if $if1 (i32.ne (struct.get $java$lang$NullPointerException $extendedMessageState (ref.cast (ref null $java$lang$NullPointerException) (local.get $phi2))) (i32.const 1))
                                    (then
                                        (br $If_21_0)
                                        ;; Start else
                                        )(else
                                        (local.set $var5 (local.get $phi2))
                                        (local.set $var6 (local.get $phi2))
                                        (struct.set $java$lang$NullPointerException $extendedMessage (ref.cast (ref null $java$lang$NullPointerException) (local.get $var5)) (ref.cast (ref null $java$lang$Object) (call $java$lang$NullPointerException$Ljava$lang$String$$getExtendedNPEMessage$$ (local.get $var6))))
                                        (local.set $var7 (local.get $phi2))
                                        (struct.set $java$lang$NullPointerException $extendedMessageState (ref.cast (ref null $java$lang$NullPointerException) (local.get $var7)) (i32.const 2))
                                        (br $If_21_0)
                                        ))
                                ;; finishIfBlock
                                )
                            ;; finishBlock
                            (local.set $var8 (struct.get $java$lang$NullPointerException $extendedMessage (ref.cast (ref null $java$lang$NullPointerException) (local.get $phi2))))
                            ;; Monitor exit on de.mirkosertic.bytecoder.core.ir.PHI@57bd8849
                            (br $TryCatch_11_0)
                            )
                        (catch $javaexception
                            ;; startCatchBlock
                            (global.set $lastcaughtexception (pop (ref null $java$lang$Object)))
                            (if $catchcheck_0 (call $instanceOf (global.get $lastcaughtexception) (struct.get $java$lang$Throwable_rtt $factoryFor (global.get $java$lang$Throwable_cls)))
                                (then
                                    ;; startBlock type=NORMAL, label = TryCatch_12_0
                                    (block $TryCatch_12_0
                                        (local.set $var4 (global.get $lastcaughtexception))
                                        ;; Monitor exit on de.mirkosertic.bytecoder.core.ir.PHI@57bd8849
                                        (br $TryCatch_12_0)
                                        )
                                    ;; finishBlock
                                    (throw $javaexception (local.get $var4))
                                    ))
                            (rethrow $trycatch_0)
                            )
                        )
                    ;; finishTryCatch
                    )
                ;; finishBlock
                (return (local.get $var8))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$io$BufferedWriter$V$$init$$Ljava$io$Writer$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $phi2 i32)
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $phi6 (ref null $java$lang$Object))
        (local $var7 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (drop (call $jdk$internal$misc$VM_i))
        ;; startBlock type=NORMAL, label = If_10_0
        (block $If_10_0
            ;; startBlock type=NORMAL, label = If_10_1
            (block $If_10_1
                ;; writeIfAndStartTrueBlock
                (if $if0 (i32.eq (call $jdk$internal$misc$VM$Z$isBooted$$ (call $jdk$internal$misc$VM_i)) (i32.const 0))
                    (then
                        (br $If_10_1)
                        ;; Start else
                        )(else
                        ;; startBlock type=NORMAL, label = If_27_0
                        (block $If_27_0
                            ;; writeIfAndStartTrueBlock
                            (if $if1 (select (i32.const 0) (i32.const 1) (ref.is_null (struct.get $java$lang$Thread_rtt $MAIN_THREAD (global.get $java$lang$Thread_cls))))
                                (then
                                    (br $If_27_0)
                                    ;; Start else
                                    )(else
                                    (drop (call $java$lang$ThreadGroup_i))
                                    (local.set $var3 (struct.new $java$lang$ThreadGroup (struct.get $java$lang$ThreadGroup_rtt $factoryFor (global.get $java$lang$ThreadGroup_cls)) (ref.func $java$lang$ThreadGroup_vt) (ref.null noextern) (struct.get $java$lang$ThreadGroup_rtt $classImplTypes (global.get $java$lang$ThreadGroup_cls)) (ref.null none) (ref.null none)))
                                    (drop (call $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup_i))
                                    (local.set $var5 (ref.cast (ref null $java$lang$Object) (struct.get $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup_rtt $SYSTEM (global.get $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup_cls))))
                                    (struct.set $java$lang$ThreadGroup $name (ref.cast (ref null $java$lang$ThreadGroup) (local.get $var3)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_68)))
                                    (struct.set $java$lang$ThreadGroup $parent (ref.cast (ref null $java$lang$ThreadGroup) (local.get $var3)) (ref.cast (ref null $java$lang$Object) (local.get $var5)))
                                    (local.set $var4 (struct.new $java$lang$Thread (struct.get $java$lang$Thread_rtt $factoryFor (global.get $java$lang$Thread_cls)) (ref.func $java$lang$Thread_vt) (ref.null noextern) (struct.get $java$lang$Thread_rtt $classImplTypes (global.get $java$lang$Thread_cls)) (ref.null none) (ref.null none) (ref.null none)))
                                    (struct.set $java$lang$Thread $threadGroup (ref.cast (ref null $java$lang$Thread) (local.get $var4)) (ref.cast (ref null $java$lang$Object) (local.get $var3)))
                                    (struct.set $java$lang$Thread $runnable (ref.cast (ref null $java$lang$Thread) (local.get $var4)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                    (struct.set $java$lang$Thread $name (ref.cast (ref null $java$lang$Thread) (local.get $var4)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_68)))
                                    (struct.set $java$lang$Thread_rtt $MAIN_THREAD (ref.cast (ref null $java$lang$Thread_rtt) (global.get $java$lang$Thread_cls)) (ref.cast (ref null $java$lang$Object) (local.get $var4)))
                                    (br $If_27_0)
                                    ))
                            ;; finishIfBlock
                            )
                        ;; finishBlock
                        (local.set $phi6 (struct.get $java$lang$Thread_rtt $MAIN_THREAD (global.get $java$lang$Thread_cls)))
                        (local.set $var1 (local.get $phi6))
                        ;; writeIfAndStartTrueBlock
                        (if $if2 (i32.eq (call $java$lang$Thread$Z$isVirtual$$ (local.get $var1)) (i32.const 0))
                            (then
                                (br $If_10_1)
                                ;; Start else
                                )(else
                                (local.set $phi2 (i32.const 512))
                                (br $If_10_0)
                                ))
                        ;; finishIfBlock
                        ))
                ;; finishIfBlock
                )
            ;; finishBlock
            (local.set $phi2 (i32.const 8192))
            (br $If_10_0)
            )
        ;; finishBlock
        (call $java$io$Writer$V$$init$$Ljava$io$Writer$ (local.get $var0) (local.get $arg0))
        ;; writeIfAndStartTrueBlock
        (if $if3 (i32.gt_s (local.get $phi2) (i32.const 0))
            (then
                (struct.set $java$io$BufferedWriter $out (ref.cast (ref null $java$io$BufferedWriter) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
                (struct.set $java$io$BufferedWriter $cb (ref.cast (ref null $java$io$BufferedWriter) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (struct.new $i32_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t7 (local.get $phi2)))))
                (struct.set $java$io$BufferedWriter $nChars (ref.cast (ref null $java$io$BufferedWriter) (local.get $var0)) (local.get $phi2))
                (struct.set $java$io$BufferedWriter $maxChars (ref.cast (ref null $java$io$BufferedWriter) (local.get $var0)) (i32.const 8192))
                (return)
                ;; Start else
                )(else
                (local.set $var7 (struct.new $java$lang$IllegalArgumentException (struct.get $java$lang$IllegalArgumentException_rtt $factoryFor (global.get $java$lang$IllegalArgumentException_cls)) (ref.func $java$lang$IllegalArgumentException_vt) (ref.null noextern) (struct.get $java$lang$IllegalArgumentException_rtt $classImplTypes (global.get $java$lang$IllegalArgumentException_cls)) (ref.null none) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var7)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_69)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var7)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var7))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$io$BufferedWriter$I$initialBufferSize$$ (type $t555) (param $unused (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 i32)
        (local $phi2 i32)
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $phi6 (ref null $java$lang$Object))
        (drop (call $jdk$internal$misc$VM_i))
        (drop (call $jdk$internal$misc$VM_i))
        ;; startBlock type=NORMAL, label = If_21_0
        (block $If_21_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.lt_s (struct.get $jdk$internal$misc$VM_rtt $initLevel (global.get $jdk$internal$misc$VM_cls)) (i32.const 4))
                (then
                    (local.set $phi1 (i32.const 0))
                    (br $If_21_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi1 (i32.const 1))
                    (br $If_21_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (local.set $phi2 (local.get $phi1))
        ;; startBlock type=NORMAL, label = If_3_0
        (block $If_3_0
            ;; writeIfAndStartTrueBlock
            (if $if1 (i32.eq (local.get $phi2) (i32.const 0))
                (then
                    (br $If_3_0)
                    ;; Start else
                    )(else
                    ;; startBlock type=NORMAL, label = If_33_0
                    (block $If_33_0
                        ;; writeIfAndStartTrueBlock
                        (if $if2 (select (i32.const 0) (i32.const 1) (ref.is_null (struct.get $java$lang$Thread_rtt $MAIN_THREAD (global.get $java$lang$Thread_cls))))
                            (then
                                (br $If_33_0)
                                ;; Start else
                                )(else
                                (drop (call $java$lang$ThreadGroup_i))
                                (local.set $var3 (struct.new $java$lang$ThreadGroup (struct.get $java$lang$ThreadGroup_rtt $factoryFor (global.get $java$lang$ThreadGroup_cls)) (ref.func $java$lang$ThreadGroup_vt) (ref.null noextern) (struct.get $java$lang$ThreadGroup_rtt $classImplTypes (global.get $java$lang$ThreadGroup_cls)) (ref.null none) (ref.null none)))
                                (drop (call $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup_i))
                                (local.set $var5 (ref.cast (ref null $java$lang$Object) (struct.get $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup_rtt $SYSTEM (global.get $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup_cls))))
                                (struct.set $java$lang$ThreadGroup $name (ref.cast (ref null $java$lang$ThreadGroup) (local.get $var3)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_68)))
                                (struct.set $java$lang$ThreadGroup $parent (ref.cast (ref null $java$lang$ThreadGroup) (local.get $var3)) (ref.cast (ref null $java$lang$Object) (local.get $var5)))
                                (local.set $var4 (struct.new $java$lang$Thread (struct.get $java$lang$Thread_rtt $factoryFor (global.get $java$lang$Thread_cls)) (ref.func $java$lang$Thread_vt) (ref.null noextern) (struct.get $java$lang$Thread_rtt $classImplTypes (global.get $java$lang$Thread_cls)) (ref.null none) (ref.null none) (ref.null none)))
                                (struct.set $java$lang$Thread $threadGroup (ref.cast (ref null $java$lang$Thread) (local.get $var4)) (ref.cast (ref null $java$lang$Object) (local.get $var3)))
                                (struct.set $java$lang$Thread $runnable (ref.cast (ref null $java$lang$Thread) (local.get $var4)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                (struct.set $java$lang$Thread $name (ref.cast (ref null $java$lang$Thread) (local.get $var4)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_68)))
                                (struct.set $java$lang$Thread_rtt $MAIN_THREAD (ref.cast (ref null $java$lang$Thread_rtt) (global.get $java$lang$Thread_cls)) (ref.cast (ref null $java$lang$Object) (local.get $var4)))
                                (br $If_33_0)
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    (local.set $phi6 (struct.get $java$lang$Thread_rtt $MAIN_THREAD (global.get $java$lang$Thread_cls)))
                    (local.set $var0 (local.get $phi6))
                    ;; writeIfAndStartTrueBlock
                    (if $if3 (i32.eq (call $java$lang$Thread$Z$isVirtual$$ (local.get $var0)) (i32.const 0))
                        (then
                            (br $If_3_0)
                            ;; Start else
                            )(else
                            (return (i32.const 512))
                            ))
                    ;; finishIfBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (i32.const 8192))
        (unreachable))
    (func $java$io$BufferedWriter$V$$init$$Ljava$io$Writer$$I$I (type $t585) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 i32) (param $arg2 i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (call $java$io$Writer$V$$init$$Ljava$io$Writer$ (local.get $var0) (local.get $arg0))
        ;; writeIfAndStartTrueBlock
        (if $if0 (i32.gt_s (local.get $arg1) (i32.const 0))
            (then
                (struct.set $java$io$BufferedWriter $out (ref.cast (ref null $java$io$BufferedWriter) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
                (struct.set $java$io$BufferedWriter $cb (ref.cast (ref null $java$io$BufferedWriter) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (struct.new $i32_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t7 (local.get $arg1)))))
                (struct.set $java$io$BufferedWriter $nChars (ref.cast (ref null $java$io$BufferedWriter) (local.get $var0)) (local.get $arg1))
                (struct.set $java$io$BufferedWriter $maxChars (ref.cast (ref null $java$io$BufferedWriter) (local.get $var0)) (local.get $arg2))
                (return)
                ;; Start else
                )(else
                (local.set $var1 (struct.new $java$lang$IllegalArgumentException (struct.get $java$lang$IllegalArgumentException_rtt $factoryFor (global.get $java$lang$IllegalArgumentException_cls)) (ref.func $java$lang$IllegalArgumentException_vt) (ref.null noextern) (struct.get $java$lang$IllegalArgumentException_rtt $classImplTypes (global.get $java$lang$IllegalArgumentException_cls)) (ref.null none) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_69)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var1))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$io$FileOutputStream$V$$init$$Ljava$io$FileDescriptor$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$io$FileOutputStream $fd (ref.cast (ref null $java$io$FileOutputStream) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (struct.set $java$io$FileOutputStream $path (ref.cast (ref null $java$io$FileOutputStream) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return)
        (unreachable))
    (func $java$util$AbstractSet$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$util$AbstractSet$Z$equals$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 i32)
        (local $phi3 (ref null $java$lang$Object))
        (local $phi4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $var6 (ref null $java$lang$Object))
        (local $var7 i32)
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.eq (local.get $arg0) (local.get $var0)))
            (then
                ;; writeIfAndStartTrueBlock
                (if $if1 (i32.ne (call $instanceOf (local.get $arg0) (i32.const 109)) (i32.const 0))
                    (then
                        (local.set $var1 (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
                        (local.set $var2 (call_indirect (type $t555) (local.get $var1) (call_ref $t0 (i32.const 100) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var1))))))
                        ;; writeIfAndStartTrueBlock
                        (if $if2 (i32.eq (local.get $var2) (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 100) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
                            (then
                                (local.set $phi3 (local.get $var0))
                                (local.set $phi4 (local.get $var1))
                                ;; startBlock type=NORMAL, label = TryCatch_29_0
                                (block $TryCatch_29_0
                                    ;; startTryCatch
                                    (try $trycatch_0 (do
                                            (local.set $var5 (local.get $phi3))
                                            (local.set $var6 (local.get $phi4))
                                            (local.set $var7 (call_indirect (type $t554) (local.get $var5) (local.get $var6) (call_ref $t0 (i32.const 127) (struct.get $java$lang$Object $vt_resolver (local.get $var5)))))
                                            (br $TryCatch_29_0)
                                            )
                                        (catch $javaexception
                                            ;; startCatchBlock
                                            (global.set $lastcaughtexception (pop (ref null $java$lang$Object)))
                                            (if $catchcheck_0 (call $instanceOf (global.get $lastcaughtexception) (struct.get $java$lang$ClassCastException_rtt $factoryFor (global.get $java$lang$ClassCastException_cls)))
                                                (then
                                                    (return (i32.const 0))
                                                    ))
                                            (if $catchcheck_1 (call $instanceOf (global.get $lastcaughtexception) (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)))
                                                (then
                                                    (return (i32.const 0))
                                                    ))
                                            (rethrow $trycatch_0)
                                            )
                                        )
                                    ;; finishTryCatch
                                    )
                                ;; finishBlock
                                (return (local.get $var7))
                                ;; Start else
                                )(else
                                (return (i32.const 0))
                                ))
                        ;; finishIfBlock
                        ;; Start else
                        )(else
                        (return (i32.const 0))
                        ))
                ;; finishIfBlock
                ;; Start else
                )(else
                (return (i32.const 1))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$util$AbstractSet$I$hashCode$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $phi2 i32)
        (local $phi3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $var6 (ref null $java$lang$Object))
        (local $var7 i32)
        (local $phi8 i32)
        (local $phi9 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (call_indirect (type $t553) (local.get $var0) (call_ref $t0 (i32.const 146) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
        (local.set $phi2 (i32.const 0))
        (local.set $phi3 (local.get $var1))
        ;; startBlock type=LOOP, label = L600273800
        (loop $L600273800
            (local.set $var4 (local.get $phi3))
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.eq (call_indirect (type $t555) (local.get $var4) (call_ref $t0 (i32.const 48) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var4))))) (i32.const 0))
                (then
                    (return (local.get $phi2))
                    ;; Start else
                    )(else
                    (local.set $var5 (local.get $phi3))
                    (local.set $var6 (call_indirect (type $t553) (local.get $var5) (call_ref $t0 (i32.const 80) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var5))))))
                    ;; startBlock type=NORMAL, label = If_22_0
                    (block $If_22_0
                        ;; writeIfAndStartTrueBlock
                        (if $if1 (ref.is_null (local.get $var6))
                            (then
                                (local.set $phi8 (local.get $phi2))
                                (local.set $phi9 (local.get $var6))
                                (br $If_22_0)
                                ;; Start else
                                )(else
                                (local.set $var7 (local.get $phi2))
                                (local.set $phi8 (i32.add (local.get $var7) (call_indirect (type $t555) (local.get $var6) (call_ref $t0 (i32.const 2) (struct.get $java$lang$Object $vt_resolver (local.get $var6))))))
                                (local.set $phi9 (local.get $var6))
                                (br $If_22_0)
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    ;; Here was a goto statement
                    (local.set $phi2 (local.get $phi8))
                    (br $L600273800)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (unreachable))
    (func $java$util$Collections$SynchronizedSet$V$$init$$Ljava$util$Set$$Ljava$lang$Object$ (type $t560) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg0)))
            (then
                (struct.set $java$util$Collections$SynchronizedCollection $c (ref.cast (ref null $java$util$Collections$SynchronizedCollection) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.cast (ref null $java$lang$Object) (local.get $arg0))))
                ;; writeIfAndStartTrueBlock
                (if $if1 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg1)))
                    (then
                        (struct.set $java$util$Collections$SynchronizedCollection $mutex (ref.cast (ref null $java$util$Collections$SynchronizedCollection) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg1)))
                        (return)
                        ;; Start else
                        )(else
                        (local.set $var1 (struct.new $java$lang$NullPointerException (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)) (ref.func $java$lang$NullPointerException_vt) (ref.null noextern) (struct.get $java$lang$NullPointerException_rtt $classImplTypes (global.get $java$lang$NullPointerException_cls)) (ref.null none) (ref.null none) (i32.const 0) (ref.null none)))
                        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                        (throw $javaexception (local.get $var1))
                        ))
                ;; finishIfBlock
                ;; Start else
                )(else
                (local.set $var2 (struct.new $java$lang$NullPointerException (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)) (ref.func $java$lang$NullPointerException_vt) (ref.null noextern) (struct.get $java$lang$NullPointerException_rtt $classImplTypes (global.get $java$lang$NullPointerException_cls)) (ref.null none) (ref.null none) (i32.const 0) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var2)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var2)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var2))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$util$Collections$SynchronizedSet$Z$equals$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $var6 i32)
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.eq (local.get $var0) (local.get $arg0)))
            (then
                (local.set $var1 (struct.get $java$util$Collections$SynchronizedCollection $mutex (ref.cast (ref null $java$util$Collections$SynchronizedCollection) (local.get $var0))))
                ;; Monitor enter on de.mirkosertic.bytecoder.core.ir.Variable@44d8ff99
                (local.set $phi2 (local.get $var0))
                (local.set $phi3 (local.get $var1))
                ;; startBlock type=NORMAL, label = TryCatch_15_0
                (block $TryCatch_15_0
                    ;; startTryCatch
                    (try $trycatch_0 (do
                            (local.set $var5 (struct.get $java$util$Collections$SynchronizedCollection $c (ref.cast (ref null $java$util$Collections$SynchronizedCollection) (local.get $phi2))))
                            (local.set $var6 (call_indirect (type $t554) (local.get $var5) (local.get $arg0) (call_ref $t0 (i32.const 1) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var5))))))
                            ;; Monitor exit on de.mirkosertic.bytecoder.core.ir.PHI@1599d95d
                            (br $TryCatch_15_0)
                            )
                        (catch $javaexception
                            ;; startCatchBlock
                            (global.set $lastcaughtexception (pop (ref null $java$lang$Object)))
                            (if $catchcheck_0 (call $instanceOf (global.get $lastcaughtexception) (struct.get $java$lang$Throwable_rtt $factoryFor (global.get $java$lang$Throwable_cls)))
                                (then
                                    ;; startBlock type=NORMAL, label = TryCatch_16_0
                                    (block $TryCatch_16_0
                                        (local.set $var4 (global.get $lastcaughtexception))
                                        ;; Monitor exit on de.mirkosertic.bytecoder.core.ir.PHI@1599d95d
                                        (br $TryCatch_16_0)
                                        )
                                    ;; finishBlock
                                    (throw $javaexception (local.get $var4))
                                    ))
                            (rethrow $trycatch_0)
                            )
                        )
                    ;; finishTryCatch
                    )
                ;; finishBlock
                (return (local.get $var6))
                ;; Start else
                )(else
                (return (i32.const 1))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$util$Collections$SynchronizedSet$I$hashCode$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $var6 i32)
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (struct.get $java$util$Collections$SynchronizedCollection $mutex (ref.cast (ref null $java$util$Collections$SynchronizedCollection) (local.get $var0))))
        ;; Monitor enter on de.mirkosertic.bytecoder.core.ir.Variable@65944e8d
        (local.set $phi2 (local.get $var0))
        (local.set $phi3 (local.get $var1))
        ;; startBlock type=NORMAL, label = TryCatch_10_0
        (block $TryCatch_10_0
            ;; startTryCatch
            (try $trycatch_0 (do
                    (local.set $var5 (struct.get $java$util$Collections$SynchronizedCollection $c (ref.cast (ref null $java$util$Collections$SynchronizedCollection) (local.get $phi2))))
                    (local.set $var6 (call_indirect (type $t555) (local.get $var5) (call_ref $t0 (i32.const 2) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var5))))))
                    ;; Monitor exit on de.mirkosertic.bytecoder.core.ir.PHI@26e61ab
                    (br $TryCatch_10_0)
                    )
                (catch $javaexception
                    ;; startCatchBlock
                    (global.set $lastcaughtexception (pop (ref null $java$lang$Object)))
                    (if $catchcheck_0 (call $instanceOf (global.get $lastcaughtexception) (struct.get $java$lang$Throwable_rtt $factoryFor (global.get $java$lang$Throwable_cls)))
                        (then
                            ;; startBlock type=NORMAL, label = TryCatch_11_0
                            (block $TryCatch_11_0
                                (local.set $var4 (global.get $lastcaughtexception))
                                ;; Monitor exit on de.mirkosertic.bytecoder.core.ir.PHI@26e61ab
                                (br $TryCatch_11_0)
                                )
                            ;; finishBlock
                            (throw $javaexception (local.get $var4))
                            ))
                    (rethrow $trycatch_0)
                    )
                )
            ;; finishTryCatch
            )
        ;; finishBlock
        (return (local.get $var6))
        (unreachable))
    (func $java$io$FilterOutputStream$V$$init$$Ljava$io$OutputStream$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$io$FilterOutputStream $closeLock (ref.cast (ref null $java$io$FilterOutputStream) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (struct.new $java$lang$Object (struct.get $java$lang$Object_rtt $factoryFor (global.get $java$lang$Object_cls)) (ref.func $java$lang$Object_vt) (ref.null noextern) (struct.get $java$lang$Object_rtt $classImplTypes (global.get $java$lang$Object_cls)))))
        (struct.set $java$io$FilterOutputStream $out (ref.cast (ref null $java$io$FilterOutputStream) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (return)
        (unreachable))
    (func $java$lang$IndexOutOfBoundsException$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return)
        (unreachable))
    (func $java$lang$IndexOutOfBoundsException$V$$init$$Ljava$lang$String$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return)
        (unreachable))
    (func $java$util$ImmutableCollections$AbstractImmutableSet$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$util$ImmutableCollections$AbstractImmutableSet$Z$equals$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 i32)
        (local $var3 (ref null $java$lang$Object))
        (local $phi4 (ref null $java$lang$Object))
        (local $phi5 (ref null $java$lang$Object))
        (local $var6 (ref null $java$lang$Object))
        (local $var7 (ref null $java$lang$Object))
        (local $var8 (ref null $java$lang$Object))
        (local $var9 (ref null $java$lang$Object))
        (local $phi10 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.eq (local.get $arg0) (local.get $var0)))
            (then
                ;; writeIfAndStartTrueBlock
                (if $if1 (i32.ne (call $instanceOf (local.get $arg0) (i32.const 109)) (i32.const 0))
                    (then
                        (local.set $var1 (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
                        (local.set $var2 (call_indirect (type $t555) (local.get $var1) (call_ref $t0 (i32.const 100) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var1))))))
                        ;; writeIfAndStartTrueBlock
                        (if $if2 (i32.eq (local.get $var2) (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 100) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
                            (then
                                (local.set $var3 (call_indirect (type $t553) (local.get $var1) (call_ref $t0 (i32.const 146) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var1))))))
                                (local.set $phi4 (local.get $var0))
                                (local.set $phi5 (local.get $var3))
                                ;; startBlock type=LOOP, label = L720132330
                                (loop $L720132330
                                    (local.set $var6 (local.get $phi5))
                                    ;; writeIfAndStartTrueBlock
                                    (if $if3 (i32.eq (call_indirect (type $t555) (local.get $var6) (call_ref $t0 (i32.const 48) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var6))))) (i32.const 0))
                                        (then
                                            (return (i32.const 1))
                                            ;; Start else
                                            )(else
                                            (local.set $var7 (local.get $phi5))
                                            (local.set $var8 (call_indirect (type $t553) (local.get $var7) (call_ref $t0 (i32.const 80) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var7))))))
                                            ;; startBlock type=NORMAL, label = If_44_0
                                            (block $If_44_0
                                                ;; writeIfAndStartTrueBlock
                                                (if $if4 (ref.is_null (local.get $var8))
                                                    (then
                                                        (local.set $phi10 (local.get $var8))
                                                        (br $If_44_0)
                                                        ;; Start else
                                                        )(else
                                                        (local.set $var9 (local.get $phi4))
                                                        ;; writeIfAndStartTrueBlock
                                                        (if $if5 (i32.ne (call_indirect (type $t554) (local.get $var9) (local.get $var8) (call_ref $t0 (i32.const 126) (struct.get $java$lang$Object $vt_resolver (local.get $var9)))) (i32.const 0))
                                                            (then
                                                                ;; Here was a goto statement
                                                                (br $L720132330)
                                                                ;; Start else
                                                                )(else
                                                                (local.set $phi10 (local.get $var8))
                                                                (br $If_44_0)
                                                                ))
                                                        ;; finishIfBlock
                                                        ))
                                                ;; finishIfBlock
                                                )
                                            ;; finishBlock
                                            (return (i32.const 0))
                                            ))
                                    ;; finishIfBlock
                                    )
                                ;; finishBlock
                                ;; Start else
                                )(else
                                (return (i32.const 0))
                                ))
                        ;; finishIfBlock
                        ;; Start else
                        )(else
                        (return (i32.const 0))
                        ))
                ;; finishIfBlock
                ;; Start else
                )(else
                (return (i32.const 1))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$lang$StringIndexOutOfBoundsException$V$$init$$Ljava$lang$String$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return)
        (unreachable))
    (func $java$lang$StringIndexOutOfBoundsException$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return)
        (unreachable))
    (func $java$util$ImmutableCollections$MapN$1$V$$init$$Ljava$util$ImmutableCollections$MapN$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$util$ImmutableCollections$MapN$1 $this$0 (ref.cast (ref null $java$util$ImmutableCollections$MapN$1) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (return)
        (unreachable))
    (func $java$util$ImmutableCollections$MapN$1$Ljava$util$Iterator$$iterator$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (struct.new $java$util$ImmutableCollections$MapN$MapNIterator (struct.get $java$util$ImmutableCollections$MapN$MapNIterator_rtt $factoryFor (global.get $java$util$ImmutableCollections$MapN$MapNIterator_cls)) (ref.func $java$util$ImmutableCollections$MapN$MapNIterator_vt) (ref.null noextern) (struct.get $java$util$ImmutableCollections$MapN$MapNIterator_rtt $classImplTypes (global.get $java$util$ImmutableCollections$MapN$MapNIterator_cls)) (ref.null none) (i32.const 0) (i32.const 0)))
        (local.set $var2 (struct.get $java$util$ImmutableCollections$MapN$1 $this$0 (ref.cast (ref null $java$util$ImmutableCollections$MapN$1) (local.get $var0))))
        (struct.set $java$util$ImmutableCollections$MapN$MapNIterator $this$0 (ref.cast (ref null $java$util$ImmutableCollections$MapN$MapNIterator) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (local.get $var2)))
        (struct.set $java$util$ImmutableCollections$MapN$MapNIterator $remaining (ref.cast (ref null $java$util$ImmutableCollections$MapN$MapNIterator) (local.get $var1)) (struct.get $java$util$ImmutableCollections$MapN $size (ref.cast (ref null $java$util$ImmutableCollections$MapN) (local.get $var2))))
        (drop (call $java$util$ImmutableCollections_i))
        (struct.set $java$util$ImmutableCollections$MapN$MapNIterator $idx (ref.cast (ref null $java$util$ImmutableCollections$MapN$MapNIterator) (local.get $var1)) (i32.shl (i32.wrap_i64 (i64.shr_u (i64.mul (struct.get $java$util$ImmutableCollections_rtt $SALT32L (global.get $java$util$ImmutableCollections_cls)) (i64.extend_i32_s (i32.shr_s (array.len $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (struct.get $java$util$ImmutableCollections$MapN $table (ref.cast (ref null $java$util$ImmutableCollections$MapN) (local.get $var2)))))) (i32.const 1)))) (i64.extend_i32_s (i32.const 32)))) (i32.const 1)))
        (return (local.get $var1))
        (unreachable))
    (func $java$util$ImmutableCollections$MapN$1$I$size$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (return (struct.get $java$util$ImmutableCollections$MapN $size (ref.cast (ref null $java$util$ImmutableCollections$MapN) (struct.get $java$util$ImmutableCollections$MapN$1 $this$0 (ref.cast (ref null $java$util$ImmutableCollections$MapN$1) (local.get $thisref))))))
        (unreachable))
    (func $java$util$HashMap$EntrySet$V$$init$$Ljava$util$HashMap$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$util$HashMap$EntrySet $this$0 (ref.cast (ref null $java$util$HashMap$EntrySet) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (return)
        (unreachable))
    (func $java$util$HashMap$EntrySet$Ljava$util$Iterator$$iterator$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (struct.new $java$util$HashMap$EntryIterator (struct.get $java$util$HashMap$EntryIterator_rtt $factoryFor (global.get $java$util$HashMap$EntryIterator_cls)) (ref.func $java$util$HashMap$EntryIterator_vt) (ref.null noextern) (struct.get $java$util$HashMap$EntryIterator_rtt $classImplTypes (global.get $java$util$HashMap$EntryIterator_cls)) (ref.null none) (i32.const 0) (ref.null none) (ref.null none) (i32.const 0)))
        (call $java$util$HashMap$HashIterator$V$$init$$Ljava$util$HashMap$ (local.get $var1) (struct.get $java$util$HashMap$EntrySet $this$0 (ref.cast (ref null $java$util$HashMap$EntrySet) (local.get $var0))))
        (return (local.get $var1))
        (unreachable))
    (func $java$util$HashMap$EntrySet$I$size$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (return (struct.get $java$util$HashMap $size (ref.cast (ref null $java$util$HashMap) (struct.get $java$util$HashMap$EntrySet $this$0 (ref.cast (ref null $java$util$HashMap$EntrySet) (local.get $thisref))))))
        (unreachable))
    (func $java$util$HashMap$EntrySet$Z$contains$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $phi5 (ref null $java$lang$Object))
        (local $phi6 (ref null $java$lang$Object))
        (local $phi7 (ref null $java$lang$Object))
        (local $phi8 (ref null $java$lang$Object))
        (local $phi9 (ref null $java$lang$Object))
        (local $phi10 i32)
        (local $phi11 (ref null $java$lang$Object))
        (local $phi12 (ref null $java$lang$Object))
        (local $phi13 (ref null $java$lang$Object))
        (local $phi14 (ref null $java$lang$Object))
        (local $phi15 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (i32.eq (call $instanceOf (local.get $arg0) (i32.const 57)) (i32.const 0))
            (then
                (return (i32.const 0))
                ;; Start else
                )(else
                (local.set $var1 (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
                ;; Here was a goto statement
                (local.set $var2 (call_indirect (type $t553) (local.get $var1) (call_ref $t0 (i32.const 92) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var1))))))
                (local.set $var3 (struct.get $java$util$HashMap$EntrySet $this$0 (ref.cast (ref null $java$util$HashMap$EntrySet) (local.get $var0))))
                (local.set $var4 (call $java$util$HashMap$Ljava$util$HashMap$Node$$getNode$Ljava$lang$Object$ (local.get $var3) (local.get $var2)))
                ;; startBlock type=NORMAL, label = If_23_0
                (block $If_23_0
                    ;; startBlock type=NORMAL, label = If_23_1
                    (block $If_23_1
                        ;; writeIfAndStartTrueBlock
                        (if $if1 (ref.is_null (local.get $var4))
                            (then
                                (local.set $phi11 (local.get $var0))
                                (local.set $phi12 (local.get $arg0))
                                (local.set $phi13 (local.get $var1))
                                (local.set $phi14 (local.get $var2))
                                (local.set $phi15 (local.get $var4))
                                (br $If_23_1)
                                ;; Start else
                                )(else
                                ;; writeIfAndStartTrueBlock
                                (if $if2 (i32.eq (call $java$util$HashMap$Node$Z$equals$Ljava$lang$Object$ (local.get $var4) (local.get $var1)) (i32.const 0))
                                    (then
                                        (local.set $phi11 (local.get $var0))
                                        (local.set $phi12 (local.get $arg0))
                                        (local.set $phi13 (local.get $var1))
                                        (local.set $phi14 (local.get $var2))
                                        (local.set $phi15 (local.get $var4))
                                        (br $If_23_1)
                                        ;; Start else
                                        )(else
                                        ;; Here was a goto statement
                                        (local.set $phi5 (local.get $var0))
                                        (local.set $phi6 (local.get $arg0))
                                        (local.set $phi7 (local.get $var1))
                                        (local.set $phi8 (local.get $var2))
                                        (local.set $phi9 (local.get $var4))
                                        (local.set $phi10 (i32.const 1))
                                        (br $If_23_0)
                                        ))
                                ;; finishIfBlock
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    (local.set $phi5 (local.get $phi11))
                    (local.set $phi6 (local.get $phi12))
                    (local.set $phi7 (local.get $phi13))
                    (local.set $phi8 (local.get $phi14))
                    (local.set $phi9 (local.get $phi15))
                    (local.set $phi10 (i32.const 0))
                    (br $If_23_0)
                    )
                ;; finishBlock
                (return (local.get $phi10))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$lang$ArrayIndexOutOfBoundsException$V$$init$$Ljava$lang$String$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return)
        (unreachable))
    (func $java$lang$ArrayIndexOutOfBoundsException$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return)
        (unreachable))
    (func $java$io$PrintStream$V$$clinit$$$ (type $t541) (param $unused (ref null $java$lang$Object))
        (struct.set $jdk$internal$access$SharedSecrets_rtt $javaIOPrintStreamAccess (ref.cast (ref null $jdk$internal$access$SharedSecrets_rtt) (global.get $jdk$internal$access$SharedSecrets_cls)) (ref.cast (ref null $java$lang$Object) (struct.new $java$io$PrintStream$1 (struct.get $java$io$PrintStream$1_rtt $factoryFor (global.get $java$io$PrintStream$1_cls)) (ref.func $java$io$PrintStream$1_vt) (ref.null noextern) (struct.get $java$io$PrintStream$1_rtt $classImplTypes (global.get $java$io$PrintStream$1_cls)))))
        (return)
        (unreachable))
    (func $java$io$PrintStream$V$$init$$Ljava$io$OutputStream$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (drop (call $java$io$PrintStream_i))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg0)))
            (then
                (call $java$io$PrintStream$V$$init$$Z$Ljava$io$OutputStream$ (local.get $var0) (i32.const 0) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
                (return)
                ;; Start else
                )(else
                (local.set $var1 (struct.new $java$lang$NullPointerException (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)) (ref.func $java$lang$NullPointerException_vt) (ref.null noextern) (struct.get $java$lang$NullPointerException_rtt $classImplTypes (global.get $java$lang$NullPointerException_cls)) (ref.null none) (ref.null none) (i32.const 0) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_62)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var1))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$io$PrintStream$V$$init$$Ljava$io$OutputStream$$Z (type $t606) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (drop (call $java$io$PrintStream_i))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg0)))
            (then
                (call $java$io$PrintStream$V$$init$$Z$Ljava$io$OutputStream$ (local.get $var0) (local.get $arg1) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
                (return)
                ;; Start else
                )(else
                (local.set $var1 (struct.new $java$lang$NullPointerException (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)) (ref.func $java$lang$NullPointerException_vt) (ref.null noextern) (struct.get $java$lang$NullPointerException_rtt $classImplTypes (global.get $java$lang$NullPointerException_cls)) (ref.null none) (ref.null none) (i32.const 0) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_62)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var1))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$io$PrintStream$Ljava$lang$Object$$requireNonNull$Ljava$lang$Object$$Ljava$lang$String$ (type $t561) (param $unused (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg0)))
            (then
                (return (local.get $arg0))
                ;; Start else
                )(else
                (local.set $var0 (struct.new $java$lang$NullPointerException (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)) (ref.func $java$lang$NullPointerException_vt) (ref.null noextern) (struct.get $java$lang$NullPointerException_rtt $classImplTypes (global.get $java$lang$NullPointerException_cls)) (ref.null none) (ref.null none) (i32.const 0) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg1)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var0))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$io$PrintStream$V$$init$$Z$Ljava$io$OutputStream$ (type $t628) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (param $arg1 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 i32)
        (local $phi4 (ref null $java$lang$Object))
        (local $phi5 (ref null $java$lang$Object))
        (local $phi6 (ref null $java$lang$Object))
        (local $var7 (ref null $java$lang$Object))
        (local $var8 (ref null $java$lang$Object))
        (local $var9 (ref null $java$lang$Object))
        (local $var10 (ref null $java$lang$Object))
        (local $var11 (ref null $java$lang$Object))
        (local $var12 (ref null $java$lang$Object))
        (local $var13 (ref null $java$lang$Object))
        (local $var14 (ref null $java$lang$Object))
        (local $var15 (ref null $java$lang$Object))
        (local $phi16 (ref null $java$lang$Object))
        (local $var17 (ref null $java$lang$Object))
        (local $phi18 (ref null $java$lang$Object))
        (local $phi19 (ref null $java$lang$Object))
        (local $var20 (ref null $java$lang$Object))
        (local $var21 (ref null $java$lang$Object))
        (local $phi22 i32)
        (local $phi23 (ref null $java$lang$Object))
        (local $var24 (ref null $java$lang$Object))
        (local $var25 (ref null $java$lang$Object))
        (local $var26 (ref null $java$lang$Object))
        (local $phi27 (ref null $java$lang$Object))
        (local $var28 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$io$FilterOutputStream $closeLock (ref.cast (ref null $java$io$FilterOutputStream) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (struct.new $java$lang$Object (struct.get $java$lang$Object_rtt $factoryFor (global.get $java$lang$Object_cls)) (ref.func $java$lang$Object_vt) (ref.null noextern) (struct.get $java$lang$Object_rtt $classImplTypes (global.get $java$lang$Object_cls)))))
        (struct.set $java$io$FilterOutputStream $out (ref.cast (ref null $java$io$FilterOutputStream) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg1)))
        (struct.set $java$io$PrintStream $trouble (ref.cast (ref null $java$io$PrintStream) (local.get $var0)) (i32.const 0))
        (struct.set $java$io$PrintStream $closing (ref.cast (ref null $java$io$PrintStream) (local.get $var0)) (i32.const 0))
        (struct.set $java$io$PrintStream $autoFlush (ref.cast (ref null $java$io$PrintStream) (local.get $var0)) (local.get $arg0))
        ;; startBlock type=NORMAL, label = If_13_0
        (block $If_13_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.eq (call $instanceOf (local.get $arg1) (i32.const 168)) (i32.const 0))
                (then
                    ;; startBlock type=NORMAL, label = If_74_0
                    (block $If_74_0
                        ;; writeIfAndStartTrueBlock
                        (if $if1 (select (i32.const 0) (i32.const 1) (ref.is_null (struct.get $java$nio$charset$Charset_rtt $defaultCharset (global.get $java$nio$charset$Charset_cls))))
                            (then
                                (br $If_74_0)
                                ;; Start else
                                )(else
                                (local.set $var14 (struct.new $de$mirkosertic$bytecoder$classlib$BytecoderCharset (struct.get $de$mirkosertic$bytecoder$classlib$BytecoderCharset_rtt $factoryFor (global.get $de$mirkosertic$bytecoder$classlib$BytecoderCharset_cls)) (ref.func $de$mirkosertic$bytecoder$classlib$BytecoderCharset_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$BytecoderCharset_rtt $classImplTypes (global.get $de$mirkosertic$bytecoder$classlib$BytecoderCharset_cls)) (ref.null none) (ref.null none)))
                                (local.set $var15 (struct.new $obj_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t549 (i32.const 0))))
                                (struct.set $java$nio$charset$Charset $canonicalName (ref.cast (ref null $java$nio$charset$Charset) (local.get $var14)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_70)))
                                (struct.set $java$nio$charset$Charset $aliases (ref.cast (ref null $java$nio$charset$Charset) (local.get $var14)) (ref.cast (ref null $java$lang$Object) (local.get $var15)))
                                (struct.set $java$nio$charset$Charset_rtt $defaultCharset (ref.cast (ref null $java$nio$charset$Charset_rtt) (global.get $java$nio$charset$Charset_cls)) (ref.cast (ref null $java$lang$Object) (local.get $var14)))
                                (br $If_74_0)
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    (local.set $phi16 (struct.get $java$nio$charset$Charset_rtt $defaultCharset (global.get $java$nio$charset$Charset_cls)))
                    (local.set $var13 (local.get $phi16))
                    (local.set $phi2 (local.get $var0))
                    (local.set $phi3 (local.get $arg0))
                    (local.set $phi4 (local.get $arg1))
                    (local.set $phi5 (local.get $var0))
                    (local.set $phi6 (local.get $var13))
                    (br $If_13_0)
                    ;; Start else
                    )(else
                    (local.set $phi23 (struct.get $java$io$PrintStream $charset (ref.cast (ref null $java$io$PrintStream) (ref.cast (ref null $java$lang$Object) (local.get $arg1)))))
                    (local.set $var1 (local.get $phi23))
                    ;; Here was a goto statement
                    (local.set $phi2 (local.get $var0))
                    (local.set $phi3 (local.get $arg0))
                    (local.set $phi4 (local.get $arg1))
                    (local.set $phi5 (local.get $var0))
                    (local.set $phi6 (local.get $var1))
                    (br $If_13_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (struct.set $java$io$PrintStream $charset (ref.cast (ref null $java$io$PrintStream) (local.get $phi5)) (ref.cast (ref null $java$lang$Object) (local.get $phi6)))
        (local.set $var7 (local.get $phi2))
        (local.set $var8 (struct.new $java$io$OutputStreamWriter (struct.get $java$io$OutputStreamWriter_rtt $factoryFor (global.get $java$io$OutputStreamWriter_cls)) (ref.func $java$io$OutputStreamWriter_vt) (ref.null noextern) (struct.get $java$io$OutputStreamWriter_rtt $classImplTypes (global.get $java$io$OutputStreamWriter_cls)) (ref.null none) (ref.null none)))
        (call $java$io$OutputStreamWriter$V$$init$$Ljava$io$OutputStream$$Ljava$nio$charset$Charset$ (local.get $var8) (local.get $phi2) (struct.get $java$io$PrintStream $charset (ref.cast (ref null $java$io$PrintStream) (local.get $phi2))))
        (struct.set $java$io$PrintStream $charOut (ref.cast (ref null $java$io$PrintStream) (local.get $var7)) (ref.cast (ref null $java$lang$Object) (local.get $var8)))
        (local.set $var9 (local.get $phi2))
        (local.set $var10 (struct.new $java$io$BufferedWriter (struct.get $java$io$BufferedWriter_rtt $factoryFor (global.get $java$io$BufferedWriter_cls)) (ref.func $java$io$BufferedWriter_vt) (ref.null noextern) (struct.get $java$io$BufferedWriter_rtt $classImplTypes (global.get $java$io$BufferedWriter_cls)) (ref.null none) (ref.null none) (ref.null none) (i32.const 0) (i32.const 0)))
        (local.set $var20 (struct.get $java$io$PrintStream $charOut (ref.cast (ref null $java$io$PrintStream) (local.get $phi2))))
        (drop (call $jdk$internal$misc$VM_i))
        ;; startBlock type=NORMAL, label = If_122_0
        (block $If_122_0
            ;; startBlock type=NORMAL, label = If_122_1
            (block $If_122_1
                ;; writeIfAndStartTrueBlock
                (if $if2 (i32.eq (call $jdk$internal$misc$VM$Z$isBooted$$ (call $jdk$internal$misc$VM_i)) (i32.const 0))
                    (then
                        (br $If_122_1)
                        ;; Start else
                        )(else
                        ;; startBlock type=NORMAL, label = If_142_0
                        (block $If_142_0
                            ;; writeIfAndStartTrueBlock
                            (if $if3 (select (i32.const 0) (i32.const 1) (ref.is_null (struct.get $java$lang$Thread_rtt $MAIN_THREAD (global.get $java$lang$Thread_cls))))
                                (then
                                    (br $If_142_0)
                                    ;; Start else
                                    )(else
                                    (drop (call $java$lang$ThreadGroup_i))
                                    (local.set $var24 (struct.new $java$lang$ThreadGroup (struct.get $java$lang$ThreadGroup_rtt $factoryFor (global.get $java$lang$ThreadGroup_cls)) (ref.func $java$lang$ThreadGroup_vt) (ref.null noextern) (struct.get $java$lang$ThreadGroup_rtt $classImplTypes (global.get $java$lang$ThreadGroup_cls)) (ref.null none) (ref.null none)))
                                    (drop (call $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup_i))
                                    (local.set $var26 (ref.cast (ref null $java$lang$Object) (struct.get $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup_rtt $SYSTEM (global.get $de$mirkosertic$bytecoder$classlib$java$lang$TThreadGroup_cls))))
                                    (struct.set $java$lang$ThreadGroup $name (ref.cast (ref null $java$lang$ThreadGroup) (local.get $var24)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_68)))
                                    (struct.set $java$lang$ThreadGroup $parent (ref.cast (ref null $java$lang$ThreadGroup) (local.get $var24)) (ref.cast (ref null $java$lang$Object) (local.get $var26)))
                                    (local.set $var25 (struct.new $java$lang$Thread (struct.get $java$lang$Thread_rtt $factoryFor (global.get $java$lang$Thread_cls)) (ref.func $java$lang$Thread_vt) (ref.null noextern) (struct.get $java$lang$Thread_rtt $classImplTypes (global.get $java$lang$Thread_cls)) (ref.null none) (ref.null none) (ref.null none)))
                                    (struct.set $java$lang$Thread $threadGroup (ref.cast (ref null $java$lang$Thread) (local.get $var25)) (ref.cast (ref null $java$lang$Object) (local.get $var24)))
                                    (struct.set $java$lang$Thread $runnable (ref.cast (ref null $java$lang$Thread) (local.get $var25)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                                    (struct.set $java$lang$Thread $name (ref.cast (ref null $java$lang$Thread) (local.get $var25)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_68)))
                                    (struct.set $java$lang$Thread_rtt $MAIN_THREAD (ref.cast (ref null $java$lang$Thread_rtt) (global.get $java$lang$Thread_cls)) (ref.cast (ref null $java$lang$Object) (local.get $var25)))
                                    (br $If_142_0)
                                    ))
                            ;; finishIfBlock
                            )
                        ;; finishBlock
                        (local.set $phi27 (struct.get $java$lang$Thread_rtt $MAIN_THREAD (global.get $java$lang$Thread_cls)))
                        (local.set $var21 (local.get $phi27))
                        ;; writeIfAndStartTrueBlock
                        (if $if4 (i32.eq (call $java$lang$Thread$Z$isVirtual$$ (local.get $var21)) (i32.const 0))
                            (then
                                (br $If_122_1)
                                ;; Start else
                                )(else
                                (local.set $phi22 (i32.const 512))
                                (br $If_122_0)
                                ))
                        ;; finishIfBlock
                        ))
                ;; finishIfBlock
                )
            ;; finishBlock
            (local.set $phi22 (i32.const 8192))
            (br $If_122_0)
            )
        ;; finishBlock
        (call $java$io$Writer$V$$init$$Ljava$io$Writer$ (local.get $var10) (local.get $var20))
        ;; writeIfAndStartTrueBlock
        (if $if5 (i32.gt_s (local.get $phi22) (i32.const 0))
            (then
                (struct.set $java$io$BufferedWriter $out (ref.cast (ref null $java$io$BufferedWriter) (local.get $var10)) (ref.cast (ref null $java$lang$Object) (local.get $var20)))
                (struct.set $java$io$BufferedWriter $cb (ref.cast (ref null $java$io$BufferedWriter) (local.get $var10)) (ref.cast (ref null $java$lang$Object) (struct.new $i32_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t7 (local.get $phi22)))))
                (struct.set $java$io$BufferedWriter $nChars (ref.cast (ref null $java$io$BufferedWriter) (local.get $var10)) (local.get $phi22))
                (struct.set $java$io$BufferedWriter $maxChars (ref.cast (ref null $java$io$BufferedWriter) (local.get $var10)) (i32.const 8192))
                (struct.set $java$io$PrintStream $textOut (ref.cast (ref null $java$io$PrintStream) (local.get $var9)) (ref.cast (ref null $java$lang$Object) (local.get $var10)))
                ;; startBlock type=NORMAL, label = If_46_0
                (block $If_46_0
                    ;; writeIfAndStartTrueBlock
                    (if $if6 (select (i32.const 0) (i32.const 1) (ref.eq (call $runtimetypeof (local.get $phi2)) (call $java$io$PrintStream_i)))
                        (then
                            (local.set $var12 (local.get $phi2))
                            (struct.set $java$io$PrintStream $lock (ref.cast (ref null $java$io$PrintStream) (local.get $var12)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                            (br $If_46_0)
                            ;; Start else
                            )(else
                            (local.set $var11 (local.get $phi2))
                            (drop (call $jdk$internal$misc$InternalLock_i))
                            (drop (call $jdk$internal$misc$InternalLock_i))
                            ;; startBlock type=NORMAL, label = If_94_0
                            (block $If_94_0
                                ;; writeIfAndStartTrueBlock
                                (if $if7 (i32.eq (struct.get $jdk$internal$misc$InternalLock_rtt $CAN_USE_INTERNAL_LOCK (global.get $jdk$internal$misc$InternalLock_cls)) (i32.const 0))
                                    (then
                                        (local.set $phi18 (ref.null none))
                                        (br $If_94_0)
                                        ;; Start else
                                        )(else
                                        (drop (call $jdk$internal$misc$InternalLock_i))
                                        (local.set $var17 (struct.new $jdk$internal$misc$InternalLock (struct.get $jdk$internal$misc$InternalLock_rtt $factoryFor (global.get $jdk$internal$misc$InternalLock_cls)) (ref.func $jdk$internal$misc$InternalLock_vt) (ref.null noextern) (struct.get $jdk$internal$misc$InternalLock_rtt $classImplTypes (global.get $jdk$internal$misc$InternalLock_cls)) (ref.null none)))
                                        (struct.set $jdk$internal$misc$InternalLock $lock (ref.cast (ref null $jdk$internal$misc$InternalLock) (local.get $var17)) (ref.cast (ref null $java$lang$Object) (struct.new $java$util$concurrent$locks$ReentrantLock (struct.get $java$util$concurrent$locks$ReentrantLock_rtt $factoryFor (global.get $java$util$concurrent$locks$ReentrantLock_cls)) (ref.func $java$util$concurrent$locks$ReentrantLock_vt) (ref.null noextern) (struct.get $java$util$concurrent$locks$ReentrantLock_rtt $classImplTypes (global.get $java$util$concurrent$locks$ReentrantLock_cls)))))
                                        ;; Here was a goto statement
                                        (local.set $phi18 (local.get $var17))
                                        (br $If_94_0)
                                        ))
                                ;; finishIfBlock
                                )
                            ;; finishBlock
                            (local.set $phi19 (local.get $phi18))
                            (struct.set $java$io$PrintStream $lock (ref.cast (ref null $java$io$PrintStream) (local.get $var11)) (ref.cast (ref null $java$lang$Object) (local.get $phi19)))
                            ;; Here was a goto statement
                            (br $If_46_0)
                            ))
                    ;; finishIfBlock
                    )
                ;; finishBlock
                (return)
                ;; Start else
                )(else
                (local.set $var28 (struct.new $java$lang$IllegalArgumentException (struct.get $java$lang$IllegalArgumentException_rtt $factoryFor (global.get $java$lang$IllegalArgumentException_cls)) (ref.func $java$lang$IllegalArgumentException_vt) (ref.null noextern) (struct.get $java$lang$IllegalArgumentException_rtt $classImplTypes (global.get $java$lang$IllegalArgumentException_cls)) (ref.null none) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var28)) (ref.cast (ref null $java$lang$Object) (global.get $stringpool_69)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var28)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var28))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$io$PrintStream$Ljava$nio$charset$Charset$$charset$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (return (struct.get $java$io$PrintStream $charset (ref.cast (ref null $java$io$PrintStream) (local.get $thisref))))
        (unreachable))
    (func $java$util$ImmutableCollections$AbstractImmutableList$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$util$ImmutableCollections$AbstractImmutableList$Ljava$lang$IndexOutOfBoundsException$$outOfBounds$I (type $t565) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $var5 (ref null $java$lang$Object))
        (local $var6 i32)
        (local $var7 (ref null $java$lang$Object))
        (local $var8 (ref null $java$lang$Object))
        (local $phi9 (ref null $java$lang$Object))
        (local $phi10 (ref null $java$lang$Object))
        (local $var11 (ref null $java$lang$Object))
        (local $phi12 (ref null $java$lang$Object))
        (local $phi13 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (struct.new $java$lang$IndexOutOfBoundsException (struct.get $java$lang$IndexOutOfBoundsException_rtt $factoryFor (global.get $java$lang$IndexOutOfBoundsException_cls)) (ref.func $java$lang$IndexOutOfBoundsException_vt) (ref.null noextern) (struct.get $java$lang$IndexOutOfBoundsException_rtt $classImplTypes (global.get $java$lang$IndexOutOfBoundsException_cls)) (ref.null none) (ref.null none)))
        (local.set $var2 (struct.new $java$lang$StringBuilder (struct.get $java$lang$StringBuilder_rtt $factoryFor (global.get $java$lang$StringBuilder_cls)) (ref.func $java$lang$StringBuilder_vt) (ref.null noextern) (struct.get $java$lang$StringBuilder_rtt $classImplTypes (global.get $java$lang$StringBuilder_cls))))
        (call $java$lang$StringBuilder$V$initializeWith$I (local.get $var2) (i32.const 10))
        (local.set $var3 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var2) (global.get $stringpool_89)))
        (drop (call $java$lang$Integer_i))
        (drop (call $java$lang$Integer_i))
        (local.set $phi12 (call $java$lang$Integer$Ljava$lang$String$$toString$I$I (call $java$lang$Integer_i) (local.get $arg0) (i32.const 10)))
        (local.set $var11 (local.get $phi12))
        (local.set $phi13 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var3) (local.get $var11)))
        (local.set $var4 (local.get $phi13))
        (local.set $var5 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var4) (global.get $stringpool_90)))
        (local.set $var6 (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 100) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
        (local.set $phi9 (call $java$lang$Integer$Ljava$lang$String$$toString$I$I (call $java$lang$Integer_i) (local.get $var6) (i32.const 10)))
        (local.set $var8 (local.get $phi9))
        (local.set $phi10 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var5) (local.get $var8)))
        (local.set $var7 (local.get $phi10))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (call $java$lang$StringBuilder$Ljava$lang$String$$toString$$ (local.get $var7))))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return (local.get $var1))
        (unreachable))
    (func $java$util$ImmutableCollections$AbstractImmutableList$Z$equals$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $var3 i32)
        (local $phi4 (ref null $java$lang$Object))
        (local $phi5 (ref null $java$lang$Object))
        (local $phi6 i32)
        (local $phi7 i32)
        (local $var8 (ref null $java$lang$Object))
        (local $var9 (ref null $java$lang$Object))
        (local $var10 i32)
        (local $var11 (ref null $java$lang$Object))
        (local $var12 (ref null $java$lang$Object))
        (local $var13 (ref null $java$lang$Object))
        (local $var14 (ref null $java$lang$Object))
        (local $phi15 i32)
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.eq (local.get $arg0) (local.get $var0)))
            (then
                ;; writeIfAndStartTrueBlock
                (if $if1 (i32.ne (call $instanceOf (local.get $arg0) (i32.const 132)) (i32.const 0))
                    (then
                        (local.set $var1 (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
                        (local.set $var2 (call_indirect (type $t553) (local.get $var1) (call_ref $t0 (i32.const 146) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var1))))))
                        (local.set $var3 (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 100) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
                        (local.set $phi4 (local.get $var0))
                        (local.set $phi5 (local.get $var2))
                        (local.set $phi6 (i32.const 0))
                        (local.set $phi7 (local.get $var3))
                        ;; startBlock type=LOOP, label = L1305873611
                        (loop $L1305873611
                            ;; writeIfAndStartTrueBlock
                            (if $if2 (i32.ge_s (local.get $phi6) (local.get $phi7))
                                (then
                                    (local.set $var14 (local.get $phi5))
                                    ;; startBlock type=NORMAL, label = If_66_0
                                    (block $If_66_0
                                        ;; writeIfAndStartTrueBlock
                                        (if $if3 (i32.ne (call_indirect (type $t555) (local.get $var14) (call_ref $t0 (i32.const 48) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var14))))) (i32.const 0))
                                            (then
                                                (local.set $phi15 (i32.const 0))
                                                (br $If_66_0)
                                                ;; Start else
                                                )(else
                                                ;; Here was a goto statement
                                                (local.set $phi15 (i32.const 1))
                                                (br $If_66_0)
                                                ))
                                        ;; finishIfBlock
                                        )
                                    ;; finishBlock
                                    (return (local.get $phi15))
                                    ;; Start else
                                    )(else
                                    (local.set $var8 (local.get $phi5))
                                    ;; startBlock type=NORMAL, label = If_36_0
                                    (block $If_36_0
                                        ;; writeIfAndStartTrueBlock
                                        (if $if4 (i32.eq (call_indirect (type $t555) (local.get $var8) (call_ref $t0 (i32.const 48) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var8))))) (i32.const 0))
                                            (then
                                                (br $If_36_0)
                                                ;; Start else
                                                )(else
                                                (local.set $var9 (local.get $phi4))
                                                (local.set $var10 (local.get $phi6))
                                                (local.set $var11 (call_indirect (type $t565) (local.get $var9) (local.get $var10) (call_ref $t0 (i32.const 179) (struct.get $java$lang$Object $vt_resolver (local.get $var9)))))
                                                (local.set $var12 (local.get $phi5))
                                                (local.set $var13 (call_indirect (type $t553) (local.get $var12) (call_ref $t0 (i32.const 80) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var12))))))
                                                ;; writeIfAndStartTrueBlock
                                                (if $if5 (i32.ne (call $java$util$Objects$Z$equals$Ljava$lang$Object$$Ljava$lang$Object$ (global.get $java$util$Objects_cls) (local.get $var11) (local.get $var13)) (i32.const 0))
                                                    (then
                                                        (local.set $phi6 (i32.add (local.get $phi6) (i32.const 1)))
                                                        ;; Here was a goto statement
                                                        (br $L1305873611)
                                                        ;; Start else
                                                        )(else
                                                        (br $If_36_0)
                                                        ))
                                                ;; finishIfBlock
                                                ))
                                        ;; finishIfBlock
                                        )
                                    ;; finishBlock
                                    (return (i32.const 0))
                                    ))
                            ;; finishIfBlock
                            )
                        ;; finishBlock
                        ;; Start else
                        )(else
                        (return (i32.const 0))
                        ))
                ;; finishIfBlock
                ;; Start else
                )(else
                (return (i32.const 1))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$util$ImmutableCollections$AbstractImmutableList$I$hashCode$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 i32)
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 i32)
        (local $phi4 i32)
        (local $phi5 i32)
        (local $var6 i32)
        (local $var7 (ref null $java$lang$Object))
        (local $var8 i32)
        (local $var9 (ref null $java$lang$Object))
        (local $var10 i32)
        (local $var11 i32)
        (local $phi12 (ref null $java$lang$Object))
        (local $phi13 i32)
        (local $phi14 i32)
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 100) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
        (local.set $phi2 (local.get $var0))
        (local.set $phi3 (i32.const 1))
        (local.set $phi4 (i32.const 0))
        (local.set $phi5 (local.get $var1))
        ;; startBlock type=LOOP, label = L1424415761
        (loop $L1424415761
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ge_s (local.get $phi4) (local.get $phi5))
                (then
                    (return (local.get $phi3))
                    ;; Start else
                    )(else
                    (local.set $var6 (i32.mul (i32.const 31) (local.get $phi3)))
                    (local.set $var7 (local.get $phi2))
                    (local.set $var8 (local.get $phi4))
                    (local.set $var9 (call_indirect (type $t565) (local.get $var7) (local.get $var8) (call_ref $t0 (i32.const 179) (struct.get $java$lang$Object $vt_resolver (local.get $var7)))))
                    ;; startBlock type=NORMAL, label = If_40_0
                    (block $If_40_0
                        ;; writeIfAndStartTrueBlock
                        (if $if1 (ref.is_null (local.get $var9))
                            (then
                                (local.set $phi12 (local.get $var9))
                                (local.set $phi13 (i32.const 0))
                                (br $If_40_0)
                                ;; Start else
                                )(else
                                (local.set $var11 (call_indirect (type $t555) (local.get $var9) (call_ref $t0 (i32.const 2) (struct.get $java$lang$Object $vt_resolver (local.get $var9)))))
                                ;; Here was a goto statement
                                (local.set $phi12 (local.get $var9))
                                (local.set $phi13 (local.get $var11))
                                (br $If_40_0)
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    (local.set $phi14 (local.get $phi13))
                    (local.set $var10 (i32.add (local.get $var6) (local.get $phi14)))
                    (local.set $phi4 (i32.add (local.get $phi4) (i32.const 1)))
                    ;; Here was a goto statement
                    (local.set $phi3 (local.get $var10))
                    (br $L1424415761)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (unreachable))
    (func $java$util$ImmutableCollections$AbstractImmutableList$Ljava$util$Iterator$$iterator$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 i32)
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (struct.new $java$util$ImmutableCollections$ListItr (struct.get $java$util$ImmutableCollections$ListItr_rtt $factoryFor (global.get $java$util$ImmutableCollections$ListItr_cls)) (ref.func $java$util$ImmutableCollections$ListItr_vt) (ref.null noextern) (struct.get $java$util$ImmutableCollections$ListItr_rtt $classImplTypes (global.get $java$util$ImmutableCollections$ListItr_cls)) (ref.null none) (i32.const 0) (i32.const 0) (i32.const 0)))
        (local.set $var2 (call_indirect (type $t555) (local.get $var0) (call_ref $t0 (i32.const 100) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))))
        (struct.set $java$util$ImmutableCollections$ListItr $list (ref.cast (ref null $java$util$ImmutableCollections$ListItr) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (local.get $var0)))
        (struct.set $java$util$ImmutableCollections$ListItr $size (ref.cast (ref null $java$util$ImmutableCollections$ListItr) (local.get $var1)) (local.get $var2))
        (struct.set $java$util$ImmutableCollections$ListItr $cursor (ref.cast (ref null $java$util$ImmutableCollections$ListItr) (local.get $var1)) (i32.const 0))
        (struct.set $java$util$ImmutableCollections$ListItr $isListIterator (ref.cast (ref null $java$util$ImmutableCollections$ListItr) (local.get $var1)) (i32.const 0))
        (return (local.get $var1))
        (unreachable))
    (func $java$util$ImmutableCollections$AbstractImmutableList$Z$contains$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 i32)
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = If_6_0
        (block $If_6_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.lt_s (call_indirect (type $t554) (local.get $var0) (local.get $arg0) (call_ref $t0 (i32.const 163) (struct.get $java$lang$Object $vt_resolver (local.get $var0)))) (i32.const 0))
                (then
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (local.get $arg0))
                    (local.set $phi3 (i32.const 0))
                    (br $If_6_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (local.get $arg0))
                    (local.set $phi3 (i32.const 1))
                    (br $If_6_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi3))
        (unreachable))
    (func $java$nio$ReadOnlyBufferException$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (return)
        (unreachable))
    (func $java$util$Collections$EmptyList$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$util$AbstractList $modCount (ref.cast (ref null $java$util$AbstractList) (local.get $var0)) (i32.const 0))
        (return)
        (unreachable))
    (func $java$util$Collections$EmptyList$I$size$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (return (i32.const 0))
        (unreachable))
    (func $java$util$Collections$EmptyList$Ljava$util$Iterator$$iterator$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $phi0 (ref null $java$lang$Object))
        (drop (call $java$util$Collections_i))
        (drop (call $java$util$Collections$EmptyIterator_i))
        (local.set $phi0 (struct.get $java$util$Collections$EmptyIterator_rtt $EMPTY_ITERATOR (global.get $java$util$Collections$EmptyIterator_cls)))
        (return (local.get $phi0))
        (unreachable))
    (func $java$util$Collections$EmptyList$Z$contains$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (return (i32.const 0))
        (unreachable))
    (func $java$util$Collections$EmptyList$Z$containsAll$Ljava$util$Collection$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (return (call_indirect (type $t555) (local.get $arg0) (call_ref $t0 (i32.const 38) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $arg0))))))
        (unreachable))
    (func $java$util$Collections$EmptyList$Ljava$lang$Object$$get$I (type $t565) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $phi5 (ref null $java$lang$Object))
        (local $phi6 (ref null $java$lang$Object))
        (local.set $var0 (struct.new $java$lang$IndexOutOfBoundsException (struct.get $java$lang$IndexOutOfBoundsException_rtt $factoryFor (global.get $java$lang$IndexOutOfBoundsException_cls)) (ref.func $java$lang$IndexOutOfBoundsException_vt) (ref.null noextern) (struct.get $java$lang$IndexOutOfBoundsException_rtt $classImplTypes (global.get $java$lang$IndexOutOfBoundsException_cls)) (ref.null none) (ref.null none)))
        (local.set $var1 (struct.new $java$lang$StringBuilder (struct.get $java$lang$StringBuilder_rtt $factoryFor (global.get $java$lang$StringBuilder_cls)) (ref.func $java$lang$StringBuilder_vt) (ref.null noextern) (struct.get $java$lang$StringBuilder_rtt $classImplTypes (global.get $java$lang$StringBuilder_cls))))
        (call $java$lang$StringBuilder$V$initializeWith$I (local.get $var1) (i32.const 10))
        (local.set $var2 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var1) (global.get $stringpool_89)))
        (drop (call $java$lang$Integer_i))
        (drop (call $java$lang$Integer_i))
        (local.set $phi5 (call $java$lang$Integer$Ljava$lang$String$$toString$I$I (call $java$lang$Integer_i) (local.get $arg0) (i32.const 10)))
        (local.set $var4 (local.get $phi5))
        (local.set $phi6 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var2) (local.get $var4)))
        (local.set $var3 (local.get $phi6))
        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (call $java$lang$StringBuilder$Ljava$lang$String$$toString$$ (local.get $var3))))
        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
        (throw $javaexception (local.get $var0))
        (unreachable))
    (func $java$util$Collections$EmptyList$Z$isEmpty$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (return (i32.const 1))
        (unreachable))
    (func $java$util$Collections$EmptyList$Z$equals$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 (ref null $java$lang$Object))
        (local $phi4 i32)
        (local $phi5 (ref null $java$lang$Object))
        (local $phi6 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = If_7_0
        (block $If_7_0
            ;; startBlock type=NORMAL, label = If_7_1
            (block $If_7_1
                ;; writeIfAndStartTrueBlock
                (if $if0 (i32.eq (call $instanceOf (local.get $arg0) (i32.const 132)) (i32.const 0))
                    (then
                        (local.set $phi5 (local.get $var0))
                        (local.set $phi6 (local.get $arg0))
                        (br $If_7_1)
                        ;; Start else
                        )(else
                        (local.set $var1 (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
                        ;; writeIfAndStartTrueBlock
                        (if $if1 (i32.eq (call_indirect (type $t555) (local.get $var1) (call_ref $t0 (i32.const 38) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $var1))))) (i32.const 0))
                            (then
                                (local.set $phi5 (local.get $var0))
                                (local.set $phi6 (local.get $arg0))
                                (br $If_7_1)
                                ;; Start else
                                )(else
                                ;; Here was a goto statement
                                (local.set $phi2 (local.get $var0))
                                (local.set $phi3 (local.get $arg0))
                                (local.set $phi4 (i32.const 1))
                                (br $If_7_0)
                                ))
                        ;; finishIfBlock
                        ))
                ;; finishIfBlock
                )
            ;; finishBlock
            (local.set $phi2 (local.get $phi5))
            (local.set $phi3 (local.get $phi6))
            (local.set $phi4 (i32.const 0))
            (br $If_7_0)
            )
        ;; finishBlock
        (return (local.get $phi4))
        (unreachable))
    (func $java$util$Collections$EmptyList$I$hashCode$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (return (i32.const 1))
        (unreachable))
    (func $java$util$Collections$EmptyList$Ljava$util$ListIterator$$listIterator$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $phi0 (ref null $java$lang$Object))
        (drop (call $java$util$Collections_i))
        (drop (call $java$util$Collections$EmptyListIterator_i))
        (local.set $phi0 (struct.get $java$util$Collections$EmptyListIterator_rtt $EMPTY_ITERATOR (global.get $java$util$Collections$EmptyListIterator_cls)))
        (return (local.get $phi0))
        (unreachable))
    (func $java$util$Collections$EmptySet$V$$init$$$ (type $t541) (param $thisref (ref null $java$lang$Object))
        (return)
        (unreachable))
    (func $java$util$Collections$EmptySet$Ljava$util$Iterator$$iterator$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $phi0 (ref null $java$lang$Object))
        (drop (call $java$util$Collections_i))
        (drop (call $java$util$Collections$EmptyIterator_i))
        (local.set $phi0 (struct.get $java$util$Collections$EmptyIterator_rtt $EMPTY_ITERATOR (global.get $java$util$Collections$EmptyIterator_cls)))
        (return (local.get $phi0))
        (unreachable))
    (func $java$util$Collections$EmptySet$I$size$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (return (i32.const 0))
        (unreachable))
    (func $java$util$Collections$EmptySet$Z$contains$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (return (i32.const 0))
        (unreachable))
    (func $java$util$Collections$EmptySet$Z$containsAll$Ljava$util$Collection$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (return (call_indirect (type $t555) (local.get $arg0) (call_ref $t0 (i32.const 38) (struct.get $java$lang$Object $vt_resolver (ref.cast (ref null $java$lang$Object) (local.get $arg0))))))
        (unreachable))
    (func $java$util$Collections$EmptySet$Z$isEmpty$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (return (i32.const 1))
        (unreachable))
    (func $java$util$Collections$EmptySet$I$hashCode$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (return (i32.const 0))
        (unreachable))
    (func $java$util$ImmutableCollections$SetN$V$$init$$$Ljava$lang$Object$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 i32)
        (local $var3 (ref null $java$lang$Object))
        (local $var4 (ref null $java$lang$Object))
        (local $var5 i32)
        (local $var6 (ref null $java$lang$Object))
        (local $var7 (ref null $java$lang$Object))
        (local $var8 (ref null $java$lang$Object))
        (local $var9 (ref null $java$lang$Object))
        (local $var10 (ref null $java$lang$Object))
        (local $var11 i32)
        (local $var12 (ref null $java$lang$Object))
        (local $phi13 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$util$ImmutableCollections$SetN $size (ref.cast (ref null $java$util$ImmutableCollections$SetN) (local.get $var0)) (array.len $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $arg0)))))
        (struct.set $java$util$ImmutableCollections$SetN $elements (ref.cast (ref null $java$util$ImmutableCollections$SetN) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (struct.new $obj_array (i32.const 49) (ref.func $de$mirkosertic$bytecoder$classlib$Array_vt) (ref.null noextern) (struct.get $de$mirkosertic$bytecoder$classlib$Array_rtt $implTypes (global.get $de$mirkosertic$bytecoder$classlib$Array_cls)) (array.new_default $t549 (i32.mul (i32.const 2) (array.len $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $arg0)))))))))
        (local.set $phi1 (local.get $var0))
        (local.set $phi2 (i32.const 0))
        ;; startBlock type=LOOP, label = L1384799433
        (loop $L1384799433
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ge_s (local.get $phi2) (array.len $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $arg0)))))
                (then
                    (return)
                    ;; Start else
                    )(else
                    (local.set $var3 (array.get $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $arg0))) (local.get $phi2)))
                    (local.set $var4 (local.get $phi1))
                    (local.set $var5 (call $java$util$ImmutableCollections$SetN$I$probe$Ljava$lang$Object$ (local.get $var4) (local.get $var3)))
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (i32.lt_s (local.get $var5) (i32.const 0))
                        (then
                            (local.set $var10 (struct.get $java$util$ImmutableCollections$SetN $elements (ref.cast (ref null $java$util$ImmutableCollections$SetN) (local.get $phi1))))
                            (local.set $var11 (i32.sub (i32.const 0) (i32.add (local.get $var5) (i32.const 1))))
                            (array.set $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var10))) (local.get $var11) (local.get $var3))
                            (local.set $phi2 (i32.add (local.get $phi2) (i32.const 1)))
                            ;; Here was a goto statement
                            (br $L1384799433)
                            ;; Start else
                            )(else
                            (local.set $var6 (struct.new $java$lang$IllegalArgumentException (struct.get $java$lang$IllegalArgumentException_rtt $factoryFor (global.get $java$lang$IllegalArgumentException_cls)) (ref.func $java$lang$IllegalArgumentException_vt) (ref.null noextern) (struct.get $java$lang$IllegalArgumentException_rtt $classImplTypes (global.get $java$lang$IllegalArgumentException_cls)) (ref.null none) (ref.null none)))
                            (local.set $var7 (struct.new $java$lang$StringBuilder (struct.get $java$lang$StringBuilder_rtt $factoryFor (global.get $java$lang$StringBuilder_cls)) (ref.func $java$lang$StringBuilder_vt) (ref.null noextern) (struct.get $java$lang$StringBuilder_rtt $classImplTypes (global.get $java$lang$StringBuilder_cls))))
                            (call $java$lang$StringBuilder$V$initializeWith$I (local.get $var7) (i32.const 10))
                            (local.set $var8 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var7) (global.get $stringpool_71)))
                            ;; startBlock type=NORMAL, label = If_64_0
                            (block $If_64_0
                                ;; writeIfAndStartTrueBlock
                                (if $if2 (ref.is_null (local.get $var3))
                                    (then
                                        (local.set $phi13 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var8) (global.get $stringpool_0)))
                                        (br $If_64_0)
                                        ;; Start else
                                        )(else
                                        (local.set $var12 (call_indirect (type $t553) (local.get $var3) (call_ref $t0 (i32.const 0) (struct.get $java$lang$Object $vt_resolver (local.get $var3)))))
                                        (local.set $phi13 (call $java$lang$StringBuilder$Ljava$lang$StringBuilder$$append$Ljava$lang$String$ (local.get $var8) (local.get $var12)))
                                        (br $If_64_0)
                                        ))
                                ;; finishIfBlock
                                )
                            ;; finishBlock
                            (local.set $var9 (local.get $phi13))
                            (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var6)) (ref.cast (ref null $java$lang$Object) (call $java$lang$StringBuilder$Ljava$lang$String$$toString$$ (local.get $var9))))
                            (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var6)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                            (throw $javaexception (local.get $var6))
                            ))
                    ;; finishIfBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (unreachable))
    (func $java$util$ImmutableCollections$SetN$I$probe$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 i32)
        (local $var2 i32)
        (local $var3 i32)
        (local $phi4 (ref null $java$lang$Object))
        (local $phi5 i32)
        (local $var6 (ref null $java$lang$Object))
        (local $phi7 i32)
        (local $phi8 (ref null $java$lang$Object))
        (local $phi9 i32)
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (call_indirect (type $t555) (local.get $arg0) (call_ref $t0 (i32.const 2) (struct.get $java$lang$Object $vt_resolver (local.get $arg0)))))
        (local.set $var2 (array.len $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (struct.get $java$util$ImmutableCollections$SetN $elements (ref.cast (ref null $java$util$ImmutableCollections$SetN) (local.get $var0)))))))
        (drop (call $java$lang$Math_i))
        (drop (call $java$lang$Math_i))
        (local.set $phi9 (i32.sub (local.get $var1) (i32.mul (call $java$lang$Math$I$floorDiv$I$I (call $java$lang$Math_i) (local.get $var1) (local.get $var2)) (local.get $var2))))
        (local.set $var3 (local.get $phi9))
        (local.set $phi4 (local.get $var0))
        (local.set $phi5 (local.get $var3))
        ;; startBlock type=LOOP, label = L1783526333
        (loop $L1783526333
            (local.set $var6 (array.get $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (struct.get $java$util$ImmutableCollections$SetN $elements (ref.cast (ref null $java$util$ImmutableCollections$SetN) (local.get $phi4))))) (local.get $phi5)))
            ;; writeIfAndStartTrueBlock
            (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $var6)))
                (then
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (i32.eq (call_indirect (type $t554) (local.get $arg0) (local.get $var6) (call_ref $t0 (i32.const 1) (struct.get $java$lang$Object $vt_resolver (local.get $arg0)))) (i32.const 0))
                        (then
                            (local.set $phi5 (i32.add (local.get $phi5) (i32.const 1)))
                            ;; startBlock type=NORMAL, label = If_39_0
                            (block $If_39_0
                                ;; writeIfAndStartTrueBlock
                                (if $if2 (i32.ne (local.get $phi5) (array.len $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (struct.get $java$util$ImmutableCollections$SetN $elements (ref.cast (ref null $java$util$ImmutableCollections$SetN) (local.get $phi4)))))))
                                    (then
                                        (local.set $phi7 (local.get $phi5))
                                        (local.set $phi8 (local.get $var6))
                                        (br $If_39_0)
                                        ;; Start else
                                        )(else
                                        (local.set $phi7 (i32.const 0))
                                        (local.set $phi8 (local.get $var6))
                                        (br $If_39_0)
                                        ))
                                ;; finishIfBlock
                                )
                            ;; finishBlock
                            ;; Here was a goto statement
                            (local.set $phi5 (local.get $phi7))
                            (br $L1783526333)
                            ;; Start else
                            )(else
                            (return (local.get $phi5))
                            ))
                    ;; finishIfBlock
                    ;; Start else
                    )(else
                    (return (i32.sub (i32.sub (i32.const 0) (local.get $phi5)) (i32.const 1)))
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (unreachable))
    (func $java$util$ImmutableCollections$SetN$I$hashCode$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 i32)
        (local $phi2 i32)
        (local $phi3 (ref null $java$lang$Object))
        (local $phi4 i32)
        (local $phi5 i32)
        (local $var6 (ref null $java$lang$Object))
        (local $var7 i32)
        (local $phi8 i32)
        (local $phi9 (ref null $java$lang$Object))
        (local.set $var0 (struct.get $java$util$ImmutableCollections$SetN $elements (ref.cast (ref null $java$util$ImmutableCollections$SetN) (local.get $thisref))))
        (local.set $var1 (array.len $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $var0)))))
        (local.set $phi2 (i32.const 0))
        (local.set $phi3 (local.get $var0))
        (local.set $phi4 (local.get $var1))
        (local.set $phi5 (i32.const 0))
        ;; startBlock type=LOOP, label = L2050556076
        (loop $L2050556076
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ge_s (local.get $phi5) (local.get $phi4))
                (then
                    (return (local.get $phi2))
                    ;; Start else
                    )(else
                    (local.set $var6 (array.get $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $phi3))) (local.get $phi5)))
                    ;; startBlock type=NORMAL, label = If_20_0
                    (block $If_20_0
                        ;; writeIfAndStartTrueBlock
                        (if $if1 (ref.is_null (local.get $var6))
                            (then
                                (local.set $phi8 (local.get $phi2))
                                (local.set $phi9 (local.get $var6))
                                (br $If_20_0)
                                ;; Start else
                                )(else
                                (local.set $var7 (local.get $phi2))
                                (local.set $phi8 (i32.add (local.get $var7) (call_indirect (type $t555) (local.get $var6) (call_ref $t0 (i32.const 2) (struct.get $java$lang$Object $vt_resolver (local.get $var6))))))
                                (local.set $phi9 (local.get $var6))
                                (br $If_20_0)
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    (local.set $phi5 (i32.add (local.get $phi5) (i32.const 1)))
                    ;; Here was a goto statement
                    (local.set $phi2 (local.get $phi8))
                    (br $L2050556076)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (unreachable))
    (func $java$util$ImmutableCollections$SetN$Ljava$util$Iterator$$iterator$$ (type $t553) (param $thisref (ref null $java$lang$Object)) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (struct.new $java$util$ImmutableCollections$SetN$SetNIterator (struct.get $java$util$ImmutableCollections$SetN$SetNIterator_rtt $factoryFor (global.get $java$util$ImmutableCollections$SetN$SetNIterator_cls)) (ref.func $java$util$ImmutableCollections$SetN$SetNIterator_vt) (ref.null noextern) (struct.get $java$util$ImmutableCollections$SetN$SetNIterator_rtt $classImplTypes (global.get $java$util$ImmutableCollections$SetN$SetNIterator_cls)) (ref.null none) (i32.const 0) (i32.const 0)))
        (struct.set $java$util$ImmutableCollections$SetN$SetNIterator $this$0 (ref.cast (ref null $java$util$ImmutableCollections$SetN$SetNIterator) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (local.get $var0)))
        (struct.set $java$util$ImmutableCollections$SetN$SetNIterator $remaining (ref.cast (ref null $java$util$ImmutableCollections$SetN$SetNIterator) (local.get $var1)) (struct.get $java$util$ImmutableCollections$SetN $size (ref.cast (ref null $java$util$ImmutableCollections$SetN) (local.get $var0))))
        (drop (call $java$util$ImmutableCollections_i))
        (struct.set $java$util$ImmutableCollections$SetN$SetNIterator $idx (ref.cast (ref null $java$util$ImmutableCollections$SetN$SetNIterator) (local.get $var1)) (i32.wrap_i64 (i64.shr_u (i64.mul (struct.get $java$util$ImmutableCollections_rtt $SALT32L (global.get $java$util$ImmutableCollections_cls)) (i64.extend_i32_s (array.len $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (struct.get $java$util$ImmutableCollections$SetN $elements (ref.cast (ref null $java$util$ImmutableCollections$SetN) (local.get $var0)))))))) (i64.extend_i32_s (i32.const 32)))))
        (return (local.get $var1))
        (unreachable))
    (func $java$util$ImmutableCollections$SetN$I$size$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (return (struct.get $java$util$ImmutableCollections$SetN $size (ref.cast (ref null $java$util$ImmutableCollections$SetN) (local.get $thisref))))
        (unreachable))
    (func $java$util$ImmutableCollections$SetN$Z$contains$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 i32)
        (local $phi4 (ref null $java$lang$Object))
        (local $phi5 (ref null $java$lang$Object))
        (local $var6 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg0)))
            (then
                ;; startBlock type=NORMAL, label = If_6_0
                (block $If_6_0
                    ;; startBlock type=NORMAL, label = If_6_1
                    (block $If_6_1
                        ;; writeIfAndStartTrueBlock
                        (if $if1 (i32.le_s (struct.get $java$util$ImmutableCollections$SetN $size (ref.cast (ref null $java$util$ImmutableCollections$SetN) (local.get $var0))) (i32.const 0))
                            (then
                                (local.set $phi4 (local.get $var0))
                                (local.set $phi5 (local.get $arg0))
                                (br $If_6_1)
                                ;; Start else
                                )(else
                                ;; writeIfAndStartTrueBlock
                                (if $if2 (i32.lt_s (call $java$util$ImmutableCollections$SetN$I$probe$Ljava$lang$Object$ (local.get $var0) (local.get $arg0)) (i32.const 0))
                                    (then
                                        (local.set $phi4 (local.get $var0))
                                        (local.set $phi5 (local.get $arg0))
                                        (br $If_6_1)
                                        ;; Start else
                                        )(else
                                        ;; Here was a goto statement
                                        (local.set $phi1 (local.get $var0))
                                        (local.set $phi2 (local.get $arg0))
                                        (local.set $phi3 (i32.const 1))
                                        (br $If_6_0)
                                        ))
                                ;; finishIfBlock
                                ))
                        ;; finishIfBlock
                        )
                    ;; finishBlock
                    (local.set $phi1 (local.get $phi4))
                    (local.set $phi2 (local.get $phi5))
                    (local.set $phi3 (i32.const 0))
                    (br $If_6_0)
                    )
                ;; finishBlock
                (return (local.get $phi3))
                ;; Start else
                )(else
                (local.set $var6 (struct.new $java$lang$NullPointerException (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)) (ref.func $java$lang$NullPointerException_vt) (ref.null noextern) (struct.get $java$lang$NullPointerException_rtt $classImplTypes (global.get $java$lang$NullPointerException_cls)) (ref.null none) (ref.null none) (i32.const 0) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var6)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var6)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var6))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$util$ImmutableCollections$SetN$Z$isEmpty$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 i32)
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = If_5_0
        (block $If_5_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ne (struct.get $java$util$ImmutableCollections$SetN $size (ref.cast (ref null $java$util$ImmutableCollections$SetN) (local.get $var0))) (i32.const 0))
                (then
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (i32.const 0))
                    (br $If_5_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (i32.const 1))
                    (br $If_5_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi2))
        (unreachable))
    (func $java$util$ImmutableCollections$ListN$V$$init$$$Ljava$lang$Object$$Z (type $t606) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 i32)
        (local $var0 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        (struct.set $java$util$ImmutableCollections$ListN $elements (ref.cast (ref null $java$util$ImmutableCollections$ListN) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
        (struct.set $java$util$ImmutableCollections$ListN $allowNulls (ref.cast (ref null $java$util$ImmutableCollections$ListN) (local.get $var0)) (local.get $arg1))
        (return)
        (unreachable))
    (func $java$util$ImmutableCollections$ListN$I$size$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (return (array.len $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (struct.get $java$util$ImmutableCollections$ListN $elements (ref.cast (ref null $java$util$ImmutableCollections$ListN) (local.get $thisref)))))))
        (unreachable))
    (func $java$util$ImmutableCollections$ListN$Ljava$lang$Object$$get$I (type $t565) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (result (ref null $java$lang$Object))
        (return (array.get $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (struct.get $java$util$ImmutableCollections$ListN $elements (ref.cast (ref null $java$util$ImmutableCollections$ListN) (local.get $thisref))))) (local.get $arg0)))
        (unreachable))
    (func $java$util$ImmutableCollections$ListN$I$indexOf$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 (ref null $java$lang$Object))
        (local $phi4 (ref null $java$lang$Object))
        (local $phi5 i32)
        (local $var6 (ref null $java$lang$Object))
        (local $var7 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = If_6_0
        (block $If_6_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ne (struct.get $java$util$ImmutableCollections$ListN $allowNulls (ref.cast (ref null $java$util$ImmutableCollections$ListN) (local.get $var0))) (i32.const 0))
                (then
                    (local.set $phi2 (local.get $var0))
                    (local.set $phi3 (local.get $arg0))
                    (br $If_6_0)
                    ;; Start else
                    )(else
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg0)))
                        (then
                            (local.set $phi2 (local.get $var0))
                            (local.set $phi3 (local.get $arg0))
                            (br $If_6_0)
                            ;; Start else
                            )(else
                            (local.set $var1 (struct.new $java$lang$NullPointerException (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)) (ref.func $java$lang$NullPointerException_vt) (ref.null noextern) (struct.get $java$lang$NullPointerException_rtt $classImplTypes (global.get $java$lang$NullPointerException_cls)) (ref.null none) (ref.null none) (i32.const 0) (ref.null none)))
                            (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                            (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                            (throw $javaexception (local.get $var1))
                            ))
                    ;; finishIfBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (local.set $phi4 (struct.get $java$util$ImmutableCollections$ListN $elements (ref.cast (ref null $java$util$ImmutableCollections$ListN) (local.get $phi2))))
        (local.set $phi5 (i32.const 0))
        ;; startBlock type=LOOP, label = L1225151082
        (loop $L1225151082
            ;; writeIfAndStartTrueBlock
            (if $if2 (i32.ge_s (local.get $phi5) (array.len $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $phi4)))))
                (then
                    (return (i32.const -1))
                    ;; Start else
                    )(else
                    (local.set $var6 (local.get $phi3))
                    (local.set $var7 (array.get $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (local.get $phi4))) (local.get $phi5)))
                    ;; writeIfAndStartTrueBlock
                    (if $if3 (i32.eq (call $java$util$Objects$Z$equals$Ljava$lang$Object$$Ljava$lang$Object$ (global.get $java$util$Objects_cls) (local.get $var6) (local.get $var7)) (i32.const 0))
                        (then
                            (local.set $phi5 (i32.add (local.get $phi5) (i32.const 1)))
                            ;; Here was a goto statement
                            (br $L1225151082)
                            ;; Start else
                            )(else
                            (return (local.get $phi5))
                            ))
                    ;; finishIfBlock
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (unreachable))
    (func $java$util$ImmutableCollections$ListN$Z$isEmpty$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $phi1 (ref null $java$lang$Object))
        (local $phi2 i32)
        (local.set $var0 (local.get $thisref))
        ;; startBlock type=NORMAL, label = If_6_0
        (block $If_6_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (i32.ne (array.len $t549 (struct.get $obj_array $data (ref.cast (ref null $obj_array) (struct.get $java$util$ImmutableCollections$ListN $elements (ref.cast (ref null $java$util$ImmutableCollections$ListN) (local.get $var0)))))) (i32.const 0))
                (then
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (i32.const 0))
                    (br $If_6_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi1 (local.get $var0))
                    (local.set $phi2 (i32.const 1))
                    (br $If_6_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi2))
        (unreachable))
    (func $java$util$ImmutableCollections$List12$V$$init$$Ljava$lang$Object$$Ljava$lang$Object$ (type $t560) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (param $arg1 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg0)))
            (then
                (struct.set $java$util$ImmutableCollections$List12 $e0 (ref.cast (ref null $java$util$ImmutableCollections$List12) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
                ;; writeIfAndStartTrueBlock
                (if $if1 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg1)))
                    (then
                        (struct.set $java$util$ImmutableCollections$List12 $e1 (ref.cast (ref null $java$util$ImmutableCollections$List12) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg1)))
                        (return)
                        ;; Start else
                        )(else
                        (local.set $var1 (struct.new $java$lang$NullPointerException (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)) (ref.func $java$lang$NullPointerException_vt) (ref.null noextern) (struct.get $java$lang$NullPointerException_rtt $classImplTypes (global.get $java$lang$NullPointerException_cls)) (ref.null none) (ref.null none) (i32.const 0) (ref.null none)))
                        (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                        (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                        (throw $javaexception (local.get $var1))
                        ))
                ;; finishIfBlock
                ;; Start else
                )(else
                (local.set $var2 (struct.new $java$lang$NullPointerException (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)) (ref.func $java$lang$NullPointerException_vt) (ref.null noextern) (struct.get $java$lang$NullPointerException_rtt $classImplTypes (global.get $java$lang$NullPointerException_cls)) (ref.null none) (ref.null none) (i32.const 0) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var2)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var2)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var2))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$util$ImmutableCollections$List12$V$$init$$Ljava$lang$Object$ (type $t556) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg0)))
            (then
                (struct.set $java$util$ImmutableCollections$List12 $e0 (ref.cast (ref null $java$util$ImmutableCollections$List12) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (local.get $arg0)))
                (drop (call $java$util$ImmutableCollections_i))
                (struct.set $java$util$ImmutableCollections$List12 $e1 (ref.cast (ref null $java$util$ImmutableCollections$List12) (local.get $var0)) (ref.cast (ref null $java$lang$Object) (struct.get $java$util$ImmutableCollections_rtt $EMPTY (global.get $java$util$ImmutableCollections_cls))))
                (return)
                ;; Start else
                )(else
                (local.set $var1 (struct.new $java$lang$NullPointerException (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)) (ref.func $java$lang$NullPointerException_vt) (ref.null noextern) (struct.get $java$lang$NullPointerException_rtt $classImplTypes (global.get $java$lang$NullPointerException_cls)) (ref.null none) (ref.null none) (i32.const 0) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var1)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var1))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$util$ImmutableCollections$List12$I$size$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 i32)
        (local.set $var0 (local.get $thisref))
        (local.set $var1 (struct.get $java$util$ImmutableCollections$List12 $e1 (ref.cast (ref null $java$util$ImmutableCollections$List12) (local.get $var0))))
        (drop (call $java$util$ImmutableCollections_i))
        ;; startBlock type=NORMAL, label = If_10_0
        (block $If_10_0
            ;; writeIfAndStartTrueBlock
            (if $if0 (ref.eq (local.get $var1) (struct.get $java$util$ImmutableCollections_rtt $EMPTY (global.get $java$util$ImmutableCollections_cls)))
                (then
                    (local.set $phi2 (local.get $var0))
                    (local.set $phi3 (i32.const 1))
                    (br $If_10_0)
                    ;; Start else
                    )(else
                    ;; Here was a goto statement
                    (local.set $phi2 (local.get $var0))
                    (local.set $phi3 (i32.const 2))
                    (br $If_10_0)
                    ))
            ;; finishIfBlock
            )
        ;; finishBlock
        (return (local.get $phi3))
        (unreachable))
    (func $java$util$ImmutableCollections$List12$Ljava$lang$Object$$get$I (type $t565) (param $thisref (ref null $java$lang$Object)) (param $arg0 i32) (result (ref null $java$lang$Object))
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $phi2 (ref null $java$lang$Object))
        (local $phi3 i32)
        (local $var4 (ref null $java$lang$Object))
        (local $var5 i32)
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (i32.ne (local.get $arg0) (i32.const 0))
            (then
                ;; startBlock type=NORMAL, label = If_11_0
                (block $If_11_0
                    ;; writeIfAndStartTrueBlock
                    (if $if1 (i32.ne (local.get $arg0) (i32.const 1))
                        (then
                            (local.set $phi2 (local.get $var0))
                            (local.set $phi3 (local.get $arg0))
                            (br $If_11_0)
                            ;; Start else
                            )(else
                            (local.set $var1 (struct.get $java$util$ImmutableCollections$List12 $e1 (ref.cast (ref null $java$util$ImmutableCollections$List12) (local.get $var0))))
                            (drop (call $java$util$ImmutableCollections_i))
                            ;; writeIfAndStartTrueBlock
                            (if $if2 (ref.eq (local.get $var1) (struct.get $java$util$ImmutableCollections_rtt $EMPTY (global.get $java$util$ImmutableCollections_cls)))
                                (then
                                    (local.set $phi2 (local.get $var0))
                                    (local.set $phi3 (local.get $arg0))
                                    (br $If_11_0)
                                    ;; Start else
                                    )(else
                                    (return (struct.get $java$util$ImmutableCollections$List12 $e1 (ref.cast (ref null $java$util$ImmutableCollections$List12) (local.get $var0))))
                                    ))
                            ;; finishIfBlock
                            ))
                    ;; finishIfBlock
                    )
                ;; finishBlock
                (local.set $var4 (local.get $phi2))
                (local.set $var5 (local.get $phi3))
                (throw $javaexception (call_indirect (type $t565) (local.get $var4) (local.get $var5) (call_ref $t0 (i32.const 178) (struct.get $java$lang$Object $vt_resolver (local.get $var4)))))
                ;; Start else
                )(else
                (return (struct.get $java$util$ImmutableCollections$List12 $e0 (ref.cast (ref null $java$util$ImmutableCollections$List12) (local.get $var0))))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$util$ImmutableCollections$List12$I$indexOf$Ljava$lang$Object$ (type $t554) (param $thisref (ref null $java$lang$Object)) (param $arg0 (ref null $java$lang$Object)) (result i32)
        (local $var0 (ref null $java$lang$Object))
        (local $var1 (ref null $java$lang$Object))
        (local $var2 (ref null $java$lang$Object))
        (local $var3 (ref null $java$lang$Object))
        (local $phi4 (ref null $java$lang$Object))
        (local $phi5 (ref null $java$lang$Object))
        (local $var6 (ref null $java$lang$Object))
        (local.set $var0 (local.get $thisref))
        ;; writeIfAndStartTrueBlock
        (if $if0 (select (i32.const 0) (i32.const 1) (ref.is_null (local.get $arg0)))
            (then
                (local.set $var1 (struct.get $java$util$ImmutableCollections$List12 $e0 (ref.cast (ref null $java$util$ImmutableCollections$List12) (local.get $var0))))
                ;; writeIfAndStartTrueBlock
                (if $if1 (i32.eq (call_indirect (type $t554) (local.get $arg0) (local.get $var1) (call_ref $t0 (i32.const 1) (struct.get $java$lang$Object $vt_resolver (local.get $arg0)))) (i32.const 0))
                    (then
                        (local.set $var2 (struct.get $java$util$ImmutableCollections$List12 $e1 (ref.cast (ref null $java$util$ImmutableCollections$List12) (local.get $var0))))
                        (drop (call $java$util$ImmutableCollections_i))
                        ;; startBlock type=NORMAL, label = If_20_0
                        (block $If_20_0
                            ;; writeIfAndStartTrueBlock
                            (if $if2 (ref.eq (local.get $var2) (struct.get $java$util$ImmutableCollections_rtt $EMPTY (global.get $java$util$ImmutableCollections_cls)))
                                (then
                                    (local.set $phi4 (local.get $var0))
                                    (local.set $phi5 (local.get $arg0))
                                    (br $If_20_0)
                                    ;; Start else
                                    )(else
                                    (local.set $var3 (struct.get $java$util$ImmutableCollections$List12 $e1 (ref.cast (ref null $java$util$ImmutableCollections$List12) (local.get $var0))))
                                    ;; writeIfAndStartTrueBlock
                                    (if $if3 (i32.eq (call_indirect (type $t554) (local.get $arg0) (local.get $var3) (call_ref $t0 (i32.const 1) (struct.get $java$lang$Object $vt_resolver (local.get $arg0)))) (i32.const 0))
                                        (then
                                            (local.set $phi4 (local.get $var0))
                                            (local.set $phi5 (local.get $arg0))
                                            (br $If_20_0)
                                            ;; Start else
                                            )(else
                                            (return (i32.const 1))
                                            ))
                                    ;; finishIfBlock
                                    ))
                            ;; finishIfBlock
                            )
                        ;; finishBlock
                        (return (i32.const -1))
                        ;; Start else
                        )(else
                        (return (i32.const 0))
                        ))
                ;; finishIfBlock
                ;; Start else
                )(else
                (local.set $var6 (struct.new $java$lang$NullPointerException (struct.get $java$lang$NullPointerException_rtt $factoryFor (global.get $java$lang$NullPointerException_cls)) (ref.func $java$lang$NullPointerException_vt) (ref.null noextern) (struct.get $java$lang$NullPointerException_rtt $classImplTypes (global.get $java$lang$NullPointerException_cls)) (ref.null none) (ref.null none) (i32.const 0) (ref.null none)))
                (struct.set $java$lang$Throwable $message (ref.cast (ref null $java$lang$Throwable) (local.get $var6)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (struct.set $java$lang$Throwable $cause (ref.cast (ref null $java$lang$Throwable) (local.get $var6)) (ref.cast (ref null $java$lang$Object) (ref.null none)))
                (throw $javaexception (local.get $var6))
                ))
        ;; finishIfBlock
        (unreachable))
    (func $java$util$ImmutableCollections$List12$Z$isEmpty$$ (type $t555) (param $thisref (ref null $java$lang$Object)) (result i32)
        (return (i32.const 0))
        (unreachable))
    (func $newStringFromJS (type $t629) (param $str externref) (result (ref $java$lang$Object))
        (return (struct.new $java$lang$String (struct.get $java$lang$String_rtt $typeId (call $java$lang$String_i)) (ref.func $java$lang$String_vt) (local.get $str) (struct.get $java$lang$String_rtt $classImplTypes (global.get $java$lang$String_cls))))
        )
    (func $de.mirkosertic.bytecoder.api.vue.VueEventListener_callback (type $t631) (param $receiver (ref null $java$lang$Object)) (param $event externref)
        (local $eventInstance (ref null $java$lang$Object))
        (local.set $eventInstance (struct.new $de$mirkosertic$bytecoder$api$vue$VueInstance (struct.get $de$mirkosertic$bytecoder$api$vue$VueInstance_rtt $factoryFor (global.get $de$mirkosertic$bytecoder$api$vue$VueInstance_cls)) (ref.func $de$mirkosertic$bytecoder$api$vue$VueInstance_vt) (local.get $event) (struct.get $de$mirkosertic$bytecoder$api$vue$VueInstance_rtt $classImplTypes (global.get $de$mirkosertic$bytecoder$api$vue$VueInstance_cls))))
        (call_indirect (type $t560) (local.get $receiver) (local.get $eventInstance) (call_ref $t0 (i32.const 160) (struct.get $java$lang$Object $vt_resolver (local.get $receiver))))
        )
    (export "setCharArrayEntry" (func $de$mirkosertic$bytecoder$classlib$Array$V$setCharArrayEntry$$C$I$C))
    (export "java$lang$Object$getNativeObject" (func $java.lang.Object_getNativeObject))
    (export "java$lang$Object$setNativeObject" (func $java.lang.Object_setNativeObject))
    (export "newCharArray" (func $de$mirkosertic$bytecoder$classlib$Array$$C$newCharArray$I))
    (export "newByteArray" (func $de$mirkosertic$bytecoder$classlib$Array$$B$newByteArray$I))
    (export "main" (func $de$mirkosertic$bytecoder$integrationtest$VueDemo$V$main$$Ljava$lang$String$))
    (export "bootstrap" (func $bootstrap))
    (export "toByte" (func $de$mirkosertic$bytecoder$classlib$VM$Ljava$lang$Byte$$toByte$B))
    (export "toInteger" (func $de$mirkosertic$bytecoder$classlib$VM$Ljava$lang$Integer$$toInteger$I))
    (export "setFileDescriptorHandle" (func $java$io$FileDescriptor$V$setFileDescriptorHandle$I))
    (export "toDouble" (func $de$mirkosertic$bytecoder$classlib$VM$Ljava$lang$Double$$toDouble$F))
    (export "getIntArrayEntry" (func $de$mirkosertic$bytecoder$classlib$Array$I$getIntArrayEntry$$I$I))
    (export "exceptionMessage" (func $de$mirkosertic$bytecoder$classlib$VM$Ljava$lang$String$$exceptionMessage$Ljava$lang$Exception$))
    (export "getCharArrayEntry" (func $de$mirkosertic$bytecoder$classlib$Array$C$getCharArrayEntry$$C$I))
    (export "charArrayLength" (func $de$mirkosertic$bytecoder$classlib$Array$I$charArrayLength$$C))
    (export "toLong" (func $de$mirkosertic$bytecoder$classlib$VM$Ljava$lang$Long$$toLong$J))
    (export "toFloat" (func $de$mirkosertic$bytecoder$classlib$VM$Ljava$lang$Float$$toFloat$F))
    (export "newObjectArray" (func $de$mirkosertic$bytecoder$classlib$Array$$Ljava$lang$Object$$newObjectArray$I))
    (export "byteArrayLength" (func $de$mirkosertic$bytecoder$classlib$Array$I$byteArrayLength$$B))
    (export "nullsafeEquals" (func $de$mirkosertic$bytecoder$classlib$VM$Z$nullsafeEquals$Ljava$lang$Object$$Ljava$lang$Object$))
    (export "getByteArrayEntry" (func $de$mirkosertic$bytecoder$classlib$Array$B$getByteArrayEntry$$B$I))
    (export "newBytecoderString" (func $newStringFromJS))
    (export "de.mirkosertic.bytecoder.api.vue.VueEventListener_callback" (func $de.mirkosertic.bytecoder.api.vue.VueEventListener_callback))
    (export "getFileDescriptorHandle" (func $java$io$FileDescriptor$I$getFileDescriptorHandle$$))
    (export "setByteArrayEntry" (func $de$mirkosertic$bytecoder$classlib$Array$V$setByteArrayEntry$$B$I$B))
    (export "objectToString" (func $de$mirkosertic$bytecoder$classlib$VM$Ljava$lang$String$$objectToString$Ljava$lang$Object$))
    (export "toShort" (func $de$mirkosertic$bytecoder$classlib$VM$Ljava$lang$Short$$toShort$S))
    )
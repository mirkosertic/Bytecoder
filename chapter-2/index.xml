<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Using the OpenCL backend on Bytecoder - JVM to JavaScript, OpenCL and WebAssembly Transpiler</title>
    <link>https://mirkosertic.github.io/Bytecoder/chapter-2/</link>
    <description>Recent content in Using the OpenCL backend on Bytecoder - JVM to JavaScript, OpenCL and WebAssembly Transpiler</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 25 Oct 2019 14:42:16 +0200</lastBuildDate>
    
	<atom:link href="https://mirkosertic.github.io/Bytecoder/chapter-2/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Compiling OpenCL Kernels</title>
      <link>https://mirkosertic.github.io/Bytecoder/chapter-2/page-2-a/</link>
      <pubDate>Fri, 25 Oct 2019 14:49:24 +0200</pubDate>
      
      <guid>https://mirkosertic.github.io/Bytecoder/chapter-2/page-2-a/</guid>
      <description>Compiling JVM Bytecode Kernels to OpenCL OpenCL Integration is highly experimental
 First of all, make sure to include the following dependencies:
&amp;lt;dependencies&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;de.mirkosertic.bytecoder&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;bytecoder.opencl&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2023-05-19&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;de.mirkosertic.bytecoder&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;bytecoder-core&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2023-05-19&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;/dependency&amp;gt;  Before we can use the OpenCL integration, we have to setup the whole OpenCL environment. An OpenCL environment can be obtained by the following code:
import de.mirkosertic.bytecoder.api.opencl.PlatformFactory; import de.mirkosertic.bytecoder.api.opencl.Platform; PlatformFactory theFactory = PlatformFactory.resolve(); Platform thePlatform = theFactory.</description>
    </item>
    
  </channel>
</rss>